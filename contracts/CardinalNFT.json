{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_marketplaceAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_cardinalTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "membershipPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currTimeStamp",
          "type": "uint256"
        }
      ],
      "name": "memberChargedForMembership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "discountAmount",
          "type": "uint256"
        }
      ],
      "name": "memberDiscountSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "membershipNFTBurnt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "membershipNFTMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMembershipPrice",
          "type": "uint256"
        }
      ],
      "name": "membershipPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        }
      ],
      "name": "tokenURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "typeIdThatWasUpdated",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newTypeId",
          "type": "uint256"
        }
      ],
      "name": "typeIdUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_tokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "memberAddress",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "whiteListAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "addWhiteListToToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressIsAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressIsMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToMemberNFTCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToMembershipDiscount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burnMembershiptNFTManually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cardinalToken",
      "outputs": [
        {
          "internalType": "contract CardinalToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currTimeStamp",
          "type": "uint256"
        }
      ],
      "name": "chargeMemberForMembership",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "typeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "listingFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currTimeStamp",
          "type": "uint256"
        }
      ],
      "name": "createToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembershipTokenIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOriginalCardinalTokenIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserMembershipTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserOriginalCardinalTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserServiceTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketplaceAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "membershipNFTToLastPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "membershipPriceInCardinalTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "membershipTokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "membershipTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "membershipTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintMembershipNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "originalCardinalTokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "originalCardinalTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "memberAddress",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "serviceTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adminAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAdmin",
          "type": "bool"
        }
      ],
      "name": "setAdminUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "cardinalTokenAddress",
          "type": "address"
        }
      ],
      "name": "setCardinalToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "memberAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "discountAmount",
          "type": "uint256"
        }
      ],
      "name": "setMemberDiscount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToListingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToWhitelistAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastPaidTimestamp",
          "type": "uint256"
        }
      ],
      "name": "updateMembershipNFTLastPaid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMembershipPrice",
          "type": "uint256"
        }
      ],
      "name": "updateMembershipPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newMembershipTokenURI",
          "type": "string"
        }
      ],
      "name": "updateMembershipTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMembershipTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateMembershipTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newOriginalCardinalTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateOriginalCardinalTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newServiceTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateServiceTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newListingFee",
          "type": "uint256"
        }
      ],
      "name": "updateTokenListingFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateTokenTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawMembershipNFTFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "11": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "12": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
    "14": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
    "15": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "19": "contracts/CardinalNFT.sol",
    "20": "contracts/CardinalToken.sol",
    "3": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "39": "interfaces/Uniswap.sol",
    "5": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
    "6": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "8": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
    "9": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/CardinalNFT.sol",
    "exportedSymbols": {
      "Address": [
        12041
      ],
      "CardinalNFT": [
        3352
      ],
      "CardinalToken": [
        4441
      ],
      "Context": [
        11585
      ],
      "Counters": [
        10036
      ],
      "ERC165": [
        12065
      ],
      "ERC20": [
        10955
      ],
      "ERC721": [
        9962
      ],
      "ERC721URIStorage": [
        10367
      ],
      "IERC165": [
        12488
      ],
      "IERC20": [
        12143
      ],
      "IERC20Metadata": [
        12168
      ],
      "IERC721": [
        11701
      ],
      "IERC721Metadata": [
        11746
      ],
      "IERC721Receiver": [
        11719
      ],
      "IUniswapV2Factory": [
        10967
      ],
      "IUniswapV2Pair": [
        10971
      ],
      "IUniswapV2Router01": [
        11028
      ],
      "IUniswapV2Router02": [
        11088
      ],
      "Ownable": [
        9056
      ],
      "Strings": [
        10239
      ]
    },
    "id": 3353,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1902,
        "literals": [
          "solidity",
          "0.8",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:19"
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 1903,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3353,
        "sourceUnit": 10037,
        "src": "56:52:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 1904,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3353,
        "sourceUnit": 10368,
        "src": "109:78:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 1905,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3353,
        "sourceUnit": 9963,
        "src": "188:57:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1906,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3353,
        "sourceUnit": 9057,
        "src": "246:52:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CardinalToken.sol",
        "file": "./CardinalToken.sol",
        "id": 1907,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3353,
        "sourceUnit": 4442,
        "src": "299:29:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1909,
              "name": "ERC721URIStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10367,
              "src": "469:16:19"
            },
            "id": 1910,
            "nodeType": "InheritanceSpecifier",
            "src": "469:16:19"
          },
          {
            "baseName": {
              "id": 1911,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9056,
              "src": "487:7:19"
            },
            "id": 1912,
            "nodeType": "InheritanceSpecifier",
            "src": "487:7:19"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1908,
          "nodeType": "StructuredDocumentation",
          "src": "330:114:19",
          "text": " @title Cardinal House NFT Contract\n @dev NFT contract that will be used with the marketplace contract"
        },
        "fullyImplemented": true,
        "id": 3352,
        "linearizedBaseContracts": [
          3352,
          9056,
          10367,
          9962,
          11746,
          11701,
          12065,
          12488,
          11585
        ],
        "name": "CardinalNFT",
        "nameLocation": "454:11:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1916,
            "libraryName": {
              "id": 1913,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10036,
              "src": "507:8:19"
            },
            "nodeType": "UsingForDirective",
            "src": "501:36:19",
            "typeName": {
              "id": 1915,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1914,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9968,
                "src": "520:16:19"
              },
              "referencedDeclaration": 9968,
              "src": "520:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9968_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "aa46a400",
            "id": 1919,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "612:9:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "588:33:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$9968_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 1918,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1917,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9968,
                "src": "588:16:19"
              },
              "referencedDeclaration": 9968,
              "src": "588:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9968_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "daa17f49",
            "id": 1921,
            "mutability": "mutable",
            "name": "marketplaceAddress",
            "nameLocation": "691:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "676:33:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1920,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "676:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0e1bac89",
            "id": 1924,
            "mutability": "mutable",
            "name": "cardinalToken",
            "nameLocation": "784:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "763:34:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CardinalToken_$4441",
              "typeString": "contract CardinalToken"
            },
            "typeName": {
              "id": 1923,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1922,
                "name": "CardinalToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4441,
                "src": "763:13:19"
              },
              "referencedDeclaration": 4441,
              "src": "763:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CardinalToken_$4441",
                "typeString": "contract CardinalToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f48853b",
            "id": 1928,
            "mutability": "mutable",
            "name": "tokenIdToTypeId",
            "nameLocation": "1037:15:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "1002:50:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1927,
              "keyType": {
                "id": 1925,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1010:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1002:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1926,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1021:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b063c954",
            "id": 1932,
            "mutability": "mutable",
            "name": "tokenIdToListingFee",
            "nameLocation": "1180:19:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "1145:54:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1931,
              "keyType": {
                "id": 1929,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1153:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1145:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1930,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1164:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c23a67a",
            "id": 1936,
            "mutability": "mutable",
            "name": "tokenIdToWhitelistAddress",
            "nameLocation": "1304:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "1269:60:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1935,
              "keyType": {
                "id": 1933,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1277:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1269:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1934,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1288:7:19",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "28da575b",
            "id": 1940,
            "mutability": "mutable",
            "name": "addressIsMember",
            "nameLocation": "1476:15:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "1444:47:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1939,
              "keyType": {
                "id": 1937,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1452:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1444:24:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1938,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1463:4:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dca8bc47",
            "id": 1944,
            "mutability": "mutable",
            "name": "addressToMemberNFTCount",
            "nameLocation": "1673:23:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "1638:58:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1943,
              "keyType": {
                "id": 1941,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1646:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1638:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1942,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1657:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "11ab8df5",
            "id": 1948,
            "mutability": "mutable",
            "name": "membershipNFTToLastPaid",
            "nameLocation": "1835:23:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "1800:58:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1947,
              "keyType": {
                "id": 1945,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1808:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1800:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1946,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1819:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b5c4b23d",
            "id": 1952,
            "mutability": "mutable",
            "name": "addressIsAdmin",
            "nameLocation": "2002:14:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "1969:47:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1951,
              "keyType": {
                "id": 1949,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1978:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1969:25:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1950,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1989:4:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2517fc07",
            "id": 1956,
            "mutability": "mutable",
            "name": "addressToMembershipDiscount",
            "nameLocation": "2122:27:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "2086:63:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1955,
              "keyType": {
                "id": 1953,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2095:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2086:28:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1954,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2106:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46d36230",
            "id": 1959,
            "mutability": "mutable",
            "name": "originalCardinalTypeId",
            "nameLocation": "2222:22:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "2207:41:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1957,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2207:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 1958,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2247:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17550165",
            "id": 1962,
            "mutability": "mutable",
            "name": "membershipTypeId",
            "nameLocation": "2314:16:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "2299:35:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1960,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2299:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 1961,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2333:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "71af8374",
            "id": 1965,
            "mutability": "mutable",
            "name": "serviceTypeId",
            "nameLocation": "2397:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "2382:32:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1963,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2382:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 1964,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2413:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b43affda",
            "id": 1968,
            "mutability": "mutable",
            "name": "originalCardinalTokenIds",
            "nameLocation": "2487:24:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "2470:41:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 1966,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2470:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1967,
              "nodeType": "ArrayTypeName",
              "src": "2470:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b15d8d5f",
            "id": 1971,
            "mutability": "mutable",
            "name": "membershipTokenIds",
            "nameLocation": "2577:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "2560:35:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 1969,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2560:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1970,
              "nodeType": "ArrayTypeName",
              "src": "2560:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95914875",
            "id": 1973,
            "mutability": "mutable",
            "name": "membershipTokenURI",
            "nameLocation": "2661:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "2647:32:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1972,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2647:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fe0596f2",
            "id": 1975,
            "mutability": "mutable",
            "name": "membershipPriceInCardinalTokens",
            "nameLocation": "2767:31:19",
            "nodeType": "VariableDeclaration",
            "scope": 3352,
            "src": "2752:46:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1974,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2752:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1981,
            "name": "membershipNFTMinted",
            "nameLocation": "2811:19:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1977,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2847:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1981,
                  "src": "2831:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1979,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2870:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1981,
                  "src": "2854:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2854:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2830:48:19"
            },
            "src": "2805:74:19"
          },
          {
            "anonymous": false,
            "id": 1991,
            "name": "memberChargedForMembership",
            "nameLocation": "2890:26:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1983,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "2933:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "2917:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2917:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1985,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2957:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "2941:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2941:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "membershipPrice",
                  "nameLocation": "2974:15:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "2966:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2966:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1989,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currTimeStamp",
                  "nameLocation": "2999:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "2991:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2991:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2916:97:19"
            },
            "src": "2884:130:19"
          },
          {
            "anonymous": false,
            "id": 1997,
            "name": "membershipNFTBurnt",
            "nameLocation": "3025:18:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1993,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3060:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1997,
                  "src": "3044:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3044:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1995,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3083:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1997,
                  "src": "3067:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3067:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3043:48:19"
            },
            "src": "3019:73:19"
          },
          {
            "anonymous": false,
            "id": 2003,
            "name": "tokenURIUpdated",
            "nameLocation": "3103:15:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1999,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3135:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "3119:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3119:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2001,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newTokenURI",
                  "nameLocation": "3151:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "3144:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2000,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3118:45:19"
            },
            "src": "3097:67:19"
          },
          {
            "anonymous": false,
            "id": 2007,
            "name": "membershipPriceUpdated",
            "nameLocation": "3175:22:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2005,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newMembershipPrice",
                  "nameLocation": "3214:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "3198:34:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3198:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3197:36:19"
            },
            "src": "3169:65:19"
          },
          {
            "anonymous": false,
            "id": 2013,
            "name": "typeIdUpdated",
            "nameLocation": "3245:13:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2009,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "typeIdThatWasUpdated",
                  "nameLocation": "3274:20:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "3259:35:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2008,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3259:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2011,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newTypeId",
                  "nameLocation": "3312:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "3296:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3296:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3258:64:19"
            },
            "src": "3239:84:19"
          },
          {
            "anonymous": false,
            "id": 2019,
            "name": "memberDiscountSet",
            "nameLocation": "3334:17:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2015,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "3368:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2019,
                  "src": "3352:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3352:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2017,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "discountAmount",
                  "nameLocation": "3392:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2019,
                  "src": "3376:30:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3351:56:19"
            },
            "src": "3328:80:19"
          },
          {
            "body": {
              "id": 2040,
              "nodeType": "Block",
              "src": "3532:119:19",
              "statements": [
                {
                  "expression": {
                    "id": 2032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2030,
                      "name": "marketplaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1921,
                      "src": "3542:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2031,
                      "name": "_marketplaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2021,
                      "src": "3563:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3542:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2033,
                  "nodeType": "ExpressionStatement",
                  "src": "3542:40:19"
                },
                {
                  "expression": {
                    "id": 2038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2034,
                      "name": "cardinalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1924,
                      "src": "3592:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CardinalToken_$4441",
                        "typeString": "contract CardinalToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2036,
                          "name": "_cardinalTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2023,
                          "src": "3622:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 2035,
                        "name": "CardinalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4441,
                        "src": "3608:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CardinalToken_$4441_$",
                          "typeString": "type(contract CardinalToken)"
                        }
                      },
                      "id": 2037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3608:36:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CardinalToken_$4441",
                        "typeString": "contract CardinalToken"
                      }
                    },
                    "src": "3592:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CardinalToken_$4441",
                      "typeString": "contract CardinalToken"
                    }
                  },
                  "id": 2039,
                  "nodeType": "ExpressionStatement",
                  "src": "3592:52:19"
                }
              ]
            },
            "id": 2041,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "43617264696e616c486f7573654e4654",
                    "id": 2026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3501:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6ee88678998c54718817266dc4a98fb48d8777ef8dc15d90449d31aedae09c52",
                      "typeString": "literal_string \"CardinalHouseNFT\""
                    },
                    "value": "CardinalHouseNFT"
                  },
                  {
                    "hexValue": "43524e4c4e4654",
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3521:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_837df6b24b44e841af94bf28f10c6aad119ef15fb5f6eaccbd21edaaec5c8586",
                      "typeString": "literal_string \"CRNLNFT\""
                    },
                    "value": "CRNLNFT"
                  }
                ],
                "id": 2028,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2025,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9962,
                  "src": "3494:6:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "3494:37:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "_marketplaceAddress",
                  "nameLocation": "3434:19:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "3426:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3426:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2023,
                  "mutability": "mutable",
                  "name": "_cardinalTokenAddress",
                  "nameLocation": "3471:21:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "3455:37:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:15:19",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3425:68:19"
            },
            "returnParameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3532:0:19"
            },
            "scope": 3352,
            "src": "3414:237:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2107,
              "nodeType": "Block",
              "src": "3844:481:19",
              "statements": [
                {
                  "body": {
                    "id": 2105,
                    "nodeType": "Block",
                    "src": "3907:412:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 2058,
                              "name": "membershipTokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1971,
                              "src": "3925:18:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2060,
                            "indexExpression": {
                              "id": 2059,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2048,
                              "src": "3944:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3925:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2061,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "3950:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3925:32:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2104,
                        "nodeType": "IfStatement",
                        "src": "3921:388:19",
                        "trueBody": {
                          "id": 2103,
                          "nodeType": "Block",
                          "src": "3959:350:19",
                          "statements": [
                            {
                              "assignments": [
                                2064
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2064,
                                  "mutability": "mutable",
                                  "name": "NFTOwner",
                                  "nameLocation": "3985:8:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2103,
                                  "src": "3977:16:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 2063,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3977:7:19",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2070,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2066,
                                      "name": "membershipTokenIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1971,
                                      "src": "4004:18:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 2068,
                                    "indexExpression": {
                                      "id": 2067,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2048,
                                      "src": "4023:1:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4004:21:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2065,
                                  "name": "ownerOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9242,
                                  "src": "3996:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view returns (address)"
                                  }
                                },
                                "id": 2069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3996:30:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3977:49:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2072,
                                    "name": "NFTOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2064,
                                    "src": "4054:8:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2075,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "4072:4:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                                          "typeString": "contract CardinalNFT"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                                          "typeString": "contract CardinalNFT"
                                        }
                                      ],
                                      "id": 2074,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4064:7:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2073,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4064:7:19",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2076,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4064:13:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 2077,
                                      "name": "membershipTokenIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1971,
                                      "src": "4079:18:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 2079,
                                    "indexExpression": {
                                      "id": 2078,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2048,
                                      "src": "4098:1:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4079:21:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2071,
                                  "name": "_transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9821,
                                  "src": "4044:9:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 2080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4044:57:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2081,
                              "nodeType": "ExpressionStatement",
                              "src": "4044:57:19"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2083,
                                    "name": "NFTOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2064,
                                    "src": "4144:8:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2084,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2044,
                                    "src": "4154:7:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2082,
                                  "name": "membershipNFTBurnt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1997,
                                  "src": "4125:18:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 2085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4125:37:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2086,
                              "nodeType": "EmitStatement",
                              "src": "4120:42:19"
                            },
                            {
                              "expression": {
                                "id": 2096,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2087,
                                    "name": "membershipTokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1971,
                                    "src": "4181:18:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 2089,
                                  "indexExpression": {
                                    "id": 2088,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2048,
                                    "src": "4200:1:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4181:21:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2090,
                                    "name": "membershipTokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1971,
                                    "src": "4205:18:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 2095,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2094,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2091,
                                        "name": "membershipTokenIds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1971,
                                        "src": "4224:18:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 2092,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "4224:25:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 2093,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4250:1:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4224:27:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4205:47:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4181:71:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2097,
                              "nodeType": "ExpressionStatement",
                              "src": "4181:71:19"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2098,
                                    "name": "membershipTokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1971,
                                    "src": "4270:18:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 2100,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "src": "4270:22:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                    "typeString": "function (uint256[] storage pointer)"
                                  }
                                },
                                "id": 2101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4270:24:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2102,
                              "nodeType": "ExpressionStatement",
                              "src": "4270:24:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2051,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "3871:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2052,
                        "name": "membershipTokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1971,
                        "src": "3875:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 2053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3875:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3871:29:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2106,
                  "initializationExpression": {
                    "assignments": [
                      2048
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2048,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3864:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2106,
                        "src": "3859:6:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2047,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3859:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2050,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3868:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3859:10:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3902:3:19",
                      "subExpression": {
                        "id": 2055,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "3902:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2057,
                    "nodeType": "ExpressionStatement",
                    "src": "3902:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "3854:465:19"
                }
              ]
            },
            "documentation": {
              "id": 2042,
              "nodeType": "StructuredDocumentation",
              "src": "3657:130:19",
              "text": " @dev Only owner function to burn a membership NFT\n @param tokenId the tokenId of the membership NFT to burn"
            },
            "id": 2108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnMembershipNFT",
            "nameLocation": "3801:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2044,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3827:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2108,
                  "src": "3819:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3819:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3818:17:19"
            },
            "returnParameters": {
              "id": 2046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3844:0:19"
            },
            "scope": 3352,
            "src": "3792:533:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2120,
              "nodeType": "Block",
              "src": "4538:43:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2117,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2111,
                        "src": "4566:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2116,
                      "name": "burnMembershipNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2108,
                      "src": "4548:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4548:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2119,
                  "nodeType": "ExpressionStatement",
                  "src": "4548:26:19"
                }
              ]
            },
            "documentation": {
              "id": 2109,
              "nodeType": "StructuredDocumentation",
              "src": "4331:130:19",
              "text": " @dev Only owner function to burn a membership NFT\n @param tokenId the tokenId of the membership NFT to burn"
            },
            "functionSelector": "eecbbec4",
            "id": 2121,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2114,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2113,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "4528:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "4528:9:19"
              }
            ],
            "name": "burnMembershiptNFTManually",
            "nameLocation": "4475:26:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2111,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4510:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2121,
                  "src": "4502:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4502:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4501:17:19"
            },
            "returnParameters": {
              "id": 2115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4538:0:19"
            },
            "scope": 3352,
            "src": "4466:115:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9961
            ],
            "body": {
              "id": 2223,
              "nodeType": "Block",
              "src": "4961:795:19",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2132,
                          "name": "tokenIdToTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1928,
                          "src": "4975:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 2134,
                        "indexExpression": {
                          "id": 2133,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2128,
                          "src": "4991:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4975:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 2135,
                        "name": "membershipTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1962,
                        "src": "5003:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4975:44:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2137,
                          "name": "tokenIdToTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1928,
                          "src": "5023:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 2139,
                        "indexExpression": {
                          "id": 2138,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2128,
                          "src": "5039:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5023:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 2140,
                        "name": "originalCardinalTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1959,
                        "src": "5051:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5023:50:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4975:98:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2214,
                  "nodeType": "IfStatement",
                  "src": "4971:724:19",
                  "trueBody": {
                    "id": 2213,
                    "nodeType": "Block",
                    "src": "5075:620:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2143,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2124,
                                "src": "5093:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2144,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8984,
                                  "src": "5101:5:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 2145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5101:7:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5093:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2147,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2124,
                                "src": "5112:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 2148,
                                "name": "marketplaceAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1921,
                                "src": "5120:18:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5112:26:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5093:45:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2151,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2124,
                              "src": "5142:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2154,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5158:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5150:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2152,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5150:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5150:10:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5142:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5093:67:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2196,
                        "nodeType": "IfStatement",
                        "src": "5089:481:19",
                        "trueBody": {
                          "id": 2195,
                          "nodeType": "Block",
                          "src": "5162:408:19",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2158,
                                    "name": "addressToMemberNFTCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1944,
                                    "src": "5184:23:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2160,
                                  "indexExpression": {
                                    "id": 2159,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2124,
                                    "src": "5208:4:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5184:29:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2161,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5216:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5184:33:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2193,
                                "nodeType": "Block",
                                "src": "5486:70:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2191,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2187,
                                          "name": "addressIsMember",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1940,
                                          "src": "5508:15:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                            "typeString": "mapping(address => bool)"
                                          }
                                        },
                                        "id": 2189,
                                        "indexExpression": {
                                          "id": 2188,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2124,
                                          "src": "5524:4:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "5508:21:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "66616c7365",
                                        "id": 2190,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5532:5:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      "src": "5508:29:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2192,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5508:29:19"
                                  }
                                ]
                              },
                              "id": 2194,
                              "nodeType": "IfStatement",
                              "src": "5180:376:19",
                              "trueBody": {
                                "id": 2186,
                                "nodeType": "Block",
                                "src": "5219:245:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2171,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2163,
                                          "name": "addressToMemberNFTCount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1944,
                                          "src": "5241:23:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 2165,
                                        "indexExpression": {
                                          "id": 2164,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2124,
                                          "src": "5265:4:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "5241:29:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2170,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "baseExpression": {
                                            "id": 2166,
                                            "name": "addressToMemberNFTCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1944,
                                            "src": "5273:23:19",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 2168,
                                          "indexExpression": {
                                            "id": 2167,
                                            "name": "from",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2124,
                                            "src": "5297:4:19",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5273:29:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2169,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5305:1:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "5273:33:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5241:65:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2172,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5241:65:19"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2177,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 2173,
                                          "name": "addressToMemberNFTCount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1944,
                                          "src": "5332:23:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 2175,
                                        "indexExpression": {
                                          "id": 2174,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2124,
                                          "src": "5356:4:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5332:29:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 2176,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5365:1:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5332:34:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2185,
                                    "nodeType": "IfStatement",
                                    "src": "5328:118:19",
                                    "trueBody": {
                                      "id": 2184,
                                      "nodeType": "Block",
                                      "src": "5368:78:19",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2182,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "id": 2178,
                                                "name": "addressIsMember",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1940,
                                                "src": "5394:15:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                  "typeString": "mapping(address => bool)"
                                                }
                                              },
                                              "id": 2180,
                                              "indexExpression": {
                                                "id": 2179,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2124,
                                                "src": "5410:4:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "5394:21:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "hexValue": "66616c7365",
                                              "id": 2181,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "bool",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5418:5:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "value": "false"
                                            },
                                            "src": "5394:29:19",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 2183,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5394:29:19"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2197,
                              "name": "addressIsMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1940,
                              "src": "5583:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2199,
                            "indexExpression": {
                              "id": 2198,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2126,
                              "src": "5599:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5583:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5605:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5583:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2202,
                        "nodeType": "ExpressionStatement",
                        "src": "5583:26:19"
                      },
                      {
                        "expression": {
                          "id": 2211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2203,
                              "name": "addressToMemberNFTCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1944,
                              "src": "5623:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2205,
                            "indexExpression": {
                              "id": 2204,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2126,
                              "src": "5647:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5623:27:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 2206,
                                "name": "addressToMemberNFTCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1944,
                                "src": "5653:23:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2208,
                              "indexExpression": {
                                "id": 2207,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2126,
                                "src": "5677:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5653:27:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5683:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5653:31:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5623:61:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2212,
                        "nodeType": "ExpressionStatement",
                        "src": "5623:61:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2218,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2124,
                        "src": "5731:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2219,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2126,
                        "src": "5737:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2220,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2128,
                        "src": "5741:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2215,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5705:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CardinalNFT_$3352_$",
                          "typeString": "type(contract super CardinalNFT)"
                        }
                      },
                      "id": 2217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9961,
                      "src": "5705:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5705:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2222,
                  "nodeType": "ExpressionStatement",
                  "src": "5705:44:19"
                }
              ]
            },
            "documentation": {
              "id": 2122,
              "nodeType": "StructuredDocumentation",
              "src": "4587:271:19",
              "text": " @dev After a token transfer, update the addressToMember mapping if the NFT is an Original Cardinal or membership NFT\n @param from the sender's address\n @param to the recipient's address\n @param tokenId the tokenId that was transferred"
            },
            "id": 2224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "4872:19:19",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2130,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4952:8:19"
            },
            "parameters": {
              "id": 2129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2124,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4900:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2224,
                  "src": "4892:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4892:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2126,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4914:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2224,
                  "src": "4906:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4906:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2128,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4926:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2224,
                  "src": "4918:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4918:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4891:43:19"
            },
            "returnParameters": {
              "id": 2131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4961:0:19"
            },
            "scope": 3352,
            "src": "4863:893:19",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2366,
              "nodeType": "Block",
              "src": "5964:1400:19",
              "statements": [
                {
                  "assignments": [
                    2231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2231,
                      "mutability": "mutable",
                      "name": "currMembershipPriceInCardinalTokens",
                      "nameLocation": "5982:35:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2366,
                      "src": "5974:43:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2230,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5974:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2233,
                  "initialValue": {
                    "id": 2232,
                    "name": "membershipPriceInCardinalTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1975,
                    "src": "6020:31:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5974:77:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2234,
                        "name": "addressToMembershipDiscount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1956,
                        "src": "6066:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2237,
                      "indexExpression": {
                        "expression": {
                          "id": 2235,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6094:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6094:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6066:39:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6108:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6066:43:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2252,
                  "nodeType": "IfStatement",
                  "src": "6062:191:19",
                  "trueBody": {
                    "id": 2251,
                    "nodeType": "Block",
                    "src": "6111:142:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 2249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2240,
                            "name": "currMembershipPriceInCardinalTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2231,
                            "src": "6125:35:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2241,
                                "name": "membershipPriceInCardinalTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1975,
                                "src": "6163:31:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 2242,
                                  "name": "addressToMembershipDiscount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1956,
                                  "src": "6197:27:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 2245,
                                "indexExpression": {
                                  "expression": {
                                    "id": 2243,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6225:3:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2244,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6225:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6197:39:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6163:73:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 2247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6239:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "6163:79:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6125:117:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2250,
                        "nodeType": "ExpressionStatement",
                        "src": "6125:117:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2256,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6295:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6295:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2254,
                              "name": "cardinalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1924,
                              "src": "6271:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                "typeString": "contract CardinalToken"
                              }
                            },
                            "id": 2255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10466,
                            "src": "6271:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6271:35:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2259,
                          "name": "currMembershipPriceInCardinalTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2231,
                          "src": "6310:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6271:74:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f7567682043617264696e616c20546f6b656e7320746f2070617920666f7220746865206d656d62657273686970204e46542e",
                        "id": 2261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6347:70:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52966867b18a9bacf4bdca1586d2adc25583518f6f88b89cdea879d446a3df3e",
                          "typeString": "literal_string \"You don't have enough Cardinal Tokens to pay for the membership NFT.\""
                        },
                        "value": "You don't have enough Cardinal Tokens to pay for the membership NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_52966867b18a9bacf4bdca1586d2adc25583518f6f88b89cdea879d446a3df3e",
                          "typeString": "literal_string \"You don't have enough Cardinal Tokens to pay for the membership NFT.\""
                        }
                      ],
                      "id": 2253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6263:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6263:155:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2263,
                  "nodeType": "ExpressionStatement",
                  "src": "6263:155:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2267,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6460:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6460:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2271,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6480:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                                    "typeString": "contract CardinalNFT"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                                    "typeString": "contract CardinalNFT"
                                  }
                                ],
                                "id": 2270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6472:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2269,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6472:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6472:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2265,
                              "name": "cardinalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1924,
                              "src": "6436:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                "typeString": "contract CardinalToken"
                              }
                            },
                            "id": 2266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10509,
                            "src": "6436:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6436:50:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2274,
                          "name": "currMembershipPriceInCardinalTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2231,
                          "src": "6490:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6436:89:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520686176656e277420617070726f766564207468697320636f6e747261637420746f207370656e6420656e6f756768206f6620796f75722043617264696e616c20546f6b656e7320746f2070617920666f7220746865206d656d62657273686970204e46542e",
                        "id": 2276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6527:107:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fed4261beeece14029a200acfec51152f371bab0a973bb948b1332e077f75a9",
                          "typeString": "literal_string \"You haven't approved this contract to spend enough of your Cardinal Tokens to pay for the membership NFT.\""
                        },
                        "value": "You haven't approved this contract to spend enough of your Cardinal Tokens to pay for the membership NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fed4261beeece14029a200acfec51152f371bab0a973bb948b1332e077f75a9",
                          "typeString": "literal_string \"You haven't approved this contract to spend enough of your Cardinal Tokens to pay for the membership NFT.\""
                        }
                      ],
                      "id": 2264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6428:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6428:207:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2278,
                  "nodeType": "ExpressionStatement",
                  "src": "6428:207:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2282,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6681:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6681:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2286,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6701:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 2285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6693:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2284,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6693:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6693:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2288,
                        "name": "currMembershipPriceInCardinalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2231,
                        "src": "6708:35:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2279,
                        "name": "cardinalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1924,
                        "src": "6654:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CardinalToken_$4441",
                          "typeString": "contract CardinalToken"
                        }
                      },
                      "id": 2281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4053,
                      "src": "6654:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6654:90:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2290,
                  "nodeType": "ExpressionStatement",
                  "src": "6654:90:19"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2291,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "6755:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9968_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2293,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9994,
                      "src": "6755:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$9968_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$9968_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6755:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2295,
                  "nodeType": "ExpressionStatement",
                  "src": "6755:21:19"
                },
                {
                  "assignments": [
                    2297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2297,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "6794:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2366,
                      "src": "6786:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2296,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6786:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2301,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2298,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "6806:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9968_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2299,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9980,
                      "src": "6806:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9968_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9968_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6806:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6786:39:19"
                },
                {
                  "expression": {
                    "id": 2306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2302,
                        "name": "tokenIdToTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1928,
                        "src": "6836:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2304,
                      "indexExpression": {
                        "id": 2303,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2297,
                        "src": "6852:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6836:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2305,
                      "name": "membershipTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1962,
                      "src": "6865:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6836:45:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2307,
                  "nodeType": "ExpressionStatement",
                  "src": "6836:45:19"
                },
                {
                  "expression": {
                    "id": 2312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2308,
                        "name": "tokenIdToListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "6891:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2310,
                      "indexExpression": {
                        "id": 2309,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2297,
                        "src": "6911:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6891:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6924:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6891:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2313,
                  "nodeType": "ExpressionStatement",
                  "src": "6891:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2315,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6941:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6941:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2317,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2297,
                        "src": "6953:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2314,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9686,
                      "src": "6935:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6935:28:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2319,
                  "nodeType": "ExpressionStatement",
                  "src": "6935:28:19"
                },
                {
                  "expression": {
                    "id": 2325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2320,
                        "name": "membershipNFTToLastPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1948,
                        "src": "6973:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2322,
                      "indexExpression": {
                        "id": 2321,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2297,
                        "src": "6997:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6973:34:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2323,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7010:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7010:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6973:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2326,
                  "nodeType": "ExpressionStatement",
                  "src": "6973:52:19"
                },
                {
                  "expression": {
                    "id": 2332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2327,
                        "name": "addressToMembershipDiscount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1956,
                        "src": "7035:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2330,
                      "indexExpression": {
                        "expression": {
                          "id": 2328,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7063:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7063:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7035:39:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7077:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7035:43:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2333,
                  "nodeType": "ExpressionStatement",
                  "src": "7035:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2335,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2297,
                        "src": "7101:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2336,
                        "name": "membershipTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1973,
                        "src": "7112:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 2334,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10336,
                      "src": "7088:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7088:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2338,
                  "nodeType": "ExpressionStatement",
                  "src": "7088:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2342,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7157:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 2341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7149:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2340,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7149:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7149:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2344,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2297,
                        "src": "7164:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2339,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9356,
                      "src": "7141:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7141:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2346,
                  "nodeType": "ExpressionStatement",
                  "src": "7141:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2348,
                        "name": "marketplaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1921,
                        "src": "7202:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7222:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2347,
                      "name": "setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9394,
                      "src": "7184:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 2350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7184:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2351,
                  "nodeType": "ExpressionStatement",
                  "src": "7184:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2355,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2297,
                        "src": "7262:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2352,
                        "name": "membershipTokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1971,
                        "src": "7238:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 2354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7238:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 2356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7238:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2357,
                  "nodeType": "ExpressionStatement",
                  "src": "7238:34:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2359,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7308:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7308:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2361,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2297,
                        "src": "7320:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2358,
                      "name": "membershipNFTMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1981,
                      "src": "7288:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7288:42:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2363,
                  "nodeType": "EmitStatement",
                  "src": "7283:47:19"
                },
                {
                  "expression": {
                    "id": 2364,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2297,
                    "src": "7348:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2229,
                  "id": 2365,
                  "nodeType": "Return",
                  "src": "7341:16:19"
                }
              ]
            },
            "documentation": {
              "id": 2225,
              "nodeType": "StructuredDocumentation",
              "src": "5762:144:19",
              "text": " @dev Allows someone to mint a membership NFT by paying Cardinal Tokens\n @return the ID of the newly minted membership NFT"
            },
            "functionSelector": "7498d280",
            "id": 2367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintMembershipNFT",
            "nameLocation": "5920:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5937:2:19"
            },
            "returnParameters": {
              "id": 2229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2228,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "5958:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2227,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5958:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5957:6:19"
            },
            "scope": 3352,
            "src": "5911:1453:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2383,
              "nodeType": "Block",
              "src": "7793:69:19",
              "statements": [
                {
                  "expression": {
                    "id": 2381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2377,
                        "name": "membershipNFTToLastPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1948,
                        "src": "7803:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2379,
                      "indexExpression": {
                        "id": 2378,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2370,
                        "src": "7827:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7803:32:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2380,
                      "name": "lastPaidTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2372,
                      "src": "7838:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7803:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2382,
                  "nodeType": "ExpressionStatement",
                  "src": "7803:52:19"
                }
              ]
            },
            "documentation": {
              "id": 2368,
              "nodeType": "StructuredDocumentation",
              "src": "7370:318:19",
              "text": " @dev Only owner function to update the timestamp for a membership NFT after it has been paid for for a month.\n @param tokenId the ID of the membership NFT to have the timestamp updated for\n @param lastPaidTimestamp the timestamp to update the membership NFT to for when it was last paid for"
            },
            "functionSelector": "1c652fb5",
            "id": 2384,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2375,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2374,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "7783:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "7783:9:19"
              }
            ],
            "name": "updateMembershipNFTLastPaid",
            "nameLocation": "7702:27:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2370,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7738:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2384,
                  "src": "7730:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7730:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2372,
                  "mutability": "mutable",
                  "name": "lastPaidTimestamp",
                  "nameLocation": "7755:17:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2384,
                  "src": "7747:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7747:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7729:44:19"
            },
            "returnParameters": {
              "id": 2376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7793:0:19"
            },
            "scope": 3352,
            "src": "7693:169:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2514,
              "nodeType": "Block",
              "src": "8443:1247:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2400,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2389,
                              "src": "8469:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2399,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9242,
                            "src": "8461:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 2401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8461:16:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2402,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2387,
                          "src": "8481:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8461:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206164647265737320646f65736e2774206f776e20746865204e4654207370656369666965642e",
                        "id": 2404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8489:45:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_655a88e2cd124c545f32cef045bc3f8aca7e11950295592b0824fb0a1e8e26dc",
                          "typeString": "literal_string \"This address doesn't own the NFT specified.\""
                        },
                        "value": "This address doesn't own the NFT specified."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_655a88e2cd124c545f32cef045bc3f8aca7e11950295592b0824fb0a1e8e26dc",
                          "typeString": "literal_string \"This address doesn't own the NFT specified.\""
                        }
                      ],
                      "id": 2398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8453:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8453:82:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2406,
                  "nodeType": "ExpressionStatement",
                  "src": "8453:82:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2409,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2389,
                                "src": "8561:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2408,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9242,
                              "src": "8553:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 2410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8553:16:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2411,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8984,
                              "src": "8573:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8573:7:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8553:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2415,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2389,
                                "src": "8592:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2414,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9242,
                              "src": "8584:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 2416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8584:16:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2417,
                            "name": "marketplaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1921,
                            "src": "8604:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8584:38:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8553:69:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e27742063686172676520746865206f776e6572206f72206d61726b6574706c61636520666f7220746865206d656d626572736869702e",
                        "id": 2420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8624:59:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69025aa7d9144b4895576b86225b0f405885f990436c7832db0d661450aeb25e",
                          "typeString": "literal_string \"Can't charge the owner or marketplace for the membership.\""
                        },
                        "value": "Can't charge the owner or marketplace for the membership."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69025aa7d9144b4895576b86225b0f405885f990436c7832db0d661450aeb25e",
                          "typeString": "literal_string \"Can't charge the owner or marketplace for the membership.\""
                        }
                      ],
                      "id": 2407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8545:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8545:139:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2422,
                  "nodeType": "ExpressionStatement",
                  "src": "8545:139:19"
                },
                {
                  "assignments": [
                    2424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2424,
                      "mutability": "mutable",
                      "name": "currMembershipPriceInCardinalTokens",
                      "nameLocation": "8703:35:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2514,
                      "src": "8695:43:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2423,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8695:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2426,
                  "initialValue": {
                    "id": 2425,
                    "name": "membershipPriceInCardinalTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1975,
                    "src": "8741:31:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8695:77:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2427,
                        "name": "addressToMembershipDiscount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1956,
                        "src": "8787:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2429,
                      "indexExpression": {
                        "id": 2428,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "8815:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8787:35:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8825:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8787:39:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2443,
                  "nodeType": "IfStatement",
                  "src": "8783:183:19",
                  "trueBody": {
                    "id": 2442,
                    "nodeType": "Block",
                    "src": "8828:138:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 2440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2432,
                            "name": "currMembershipPriceInCardinalTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2424,
                            "src": "8842:35:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2433,
                                "name": "membershipPriceInCardinalTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1975,
                                "src": "8880:31:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 2434,
                                  "name": "addressToMembershipDiscount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1956,
                                  "src": "8914:27:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 2436,
                                "indexExpression": {
                                  "id": 2435,
                                  "name": "member",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2387,
                                  "src": "8942:6:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8914:35:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8880:69:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 2438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8952:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "8880:75:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8842:113:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2441,
                        "nodeType": "ExpressionStatement",
                        "src": "8842:113:19"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 2446,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2387,
                            "src": "9004:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2444,
                            "name": "cardinalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1924,
                            "src": "8980:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          },
                          "id": 2445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10466,
                          "src": "8980:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8980:31:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 2448,
                        "name": "currMembershipPriceInCardinalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2424,
                        "src": "9014:35:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8980:69:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 2452,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2387,
                            "src": "9077:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2455,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9093:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                                  "typeString": "contract CardinalNFT"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                                  "typeString": "contract CardinalNFT"
                                }
                              ],
                              "id": 2454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9085:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2453,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9085:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9085:13:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2450,
                            "name": "cardinalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1924,
                            "src": "9053:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          },
                          "id": 2451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10509,
                          "src": "9053:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 2457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9053:46:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 2458,
                        "name": "currMembershipPriceInCardinalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2424,
                        "src": "9102:35:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9053:84:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8980:157:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2468,
                  "nodeType": "IfStatement",
                  "src": "8976:236:19",
                  "trueBody": {
                    "id": 2467,
                    "nodeType": "Block",
                    "src": "9139:73:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2462,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2389,
                              "src": "9171:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2461,
                            "name": "burnMembershipNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2108,
                            "src": "9153:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9153:26:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2464,
                        "nodeType": "ExpressionStatement",
                        "src": "9153:26:19"
                      },
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 2465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9200:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 2397,
                        "id": 2466,
                        "nodeType": "Return",
                        "src": "9193:8:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2472,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "9249:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2475,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9265:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 2474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9257:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2473,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9257:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9257:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2477,
                        "name": "currMembershipPriceInCardinalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2424,
                        "src": "9272:35:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2469,
                        "name": "cardinalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1924,
                        "src": "9222:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CardinalToken_$4441",
                          "typeString": "contract CardinalToken"
                        }
                      },
                      "id": 2471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4053,
                      "src": "9222:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9222:86:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2479,
                  "nodeType": "ExpressionStatement",
                  "src": "9222:86:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2480,
                      "name": "currTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2391,
                      "src": "9323:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9339:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9323:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2497,
                    "nodeType": "Block",
                    "src": "9429:75:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 2495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2490,
                              "name": "membershipNFTToLastPaid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1948,
                              "src": "9443:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 2492,
                            "indexExpression": {
                              "id": 2491,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2389,
                              "src": "9467:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9443:32:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2493,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9478:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "9478:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9443:50:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2496,
                        "nodeType": "ExpressionStatement",
                        "src": "9443:50:19"
                      }
                    ]
                  },
                  "id": 2498,
                  "nodeType": "IfStatement",
                  "src": "9319:185:19",
                  "trueBody": {
                    "id": 2489,
                    "nodeType": "Block",
                    "src": "9342:73:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 2487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2483,
                              "name": "membershipNFTToLastPaid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1948,
                              "src": "9356:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 2485,
                            "indexExpression": {
                              "id": 2484,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2389,
                              "src": "9380:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9356:32:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2486,
                            "name": "currTimeStamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2391,
                            "src": "9391:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9356:48:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2488,
                        "nodeType": "ExpressionStatement",
                        "src": "9356:48:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2499,
                        "name": "addressToMembershipDiscount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1956,
                        "src": "9514:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2501,
                      "indexExpression": {
                        "id": 2500,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "9542:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9514:35:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9552:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9514:39:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2504,
                  "nodeType": "ExpressionStatement",
                  "src": "9514:39:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2506,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "9596:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2507,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2389,
                        "src": "9604:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2508,
                        "name": "currMembershipPriceInCardinalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2424,
                        "src": "9613:35:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2509,
                        "name": "currTimeStamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2391,
                        "src": "9650:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2505,
                      "name": "memberChargedForMembership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "9569:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 2510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9569:95:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2511,
                  "nodeType": "EmitStatement",
                  "src": "9564:100:19"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9682:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 2397,
                  "id": 2513,
                  "nodeType": "Return",
                  "src": "9675:8:19"
                }
              ]
            },
            "documentation": {
              "id": 2385,
              "nodeType": "StructuredDocumentation",
              "src": "7868:445:19",
              "text": " @dev Only owner function to take funds from an address to pay for the next month of a membership\n @param member the address of the member that is being charged for the next month of a membership\n @param tokenId the token ID that the member is being charged\n @param currTimeStamp the current timestamp for the transaction to avoid relying on block.timestamp\n @return 0 for success, 1 for failure and NFT burn"
            },
            "functionSelector": "bb3b407b",
            "id": 2515,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2394,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2393,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "8418:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "8418:9:19"
              }
            ],
            "name": "chargeMemberForMembership",
            "nameLocation": "8327:25:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2387,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "8361:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2515,
                  "src": "8353:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8353:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2389,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8377:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2515,
                  "src": "8369:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8369:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2391,
                  "mutability": "mutable",
                  "name": "currTimeStamp",
                  "nameLocation": "8394:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2515,
                  "src": "8386:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8386:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8352:56:19"
            },
            "returnParameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2396,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2515,
                  "src": "8437:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2395,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8437:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8436:6:19"
            },
            "scope": 3352,
            "src": "8318:1372:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2535,
              "nodeType": "Block",
              "src": "9888:88:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2524,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8984,
                          "src": "9921:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9921:7:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2530,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9962:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                                  "typeString": "contract CardinalNFT"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                                  "typeString": "contract CardinalNFT"
                                }
                              ],
                              "id": 2529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9954:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2528,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9954:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9954:13:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2526,
                            "name": "cardinalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1924,
                            "src": "9930:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          },
                          "id": 2527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10466,
                          "src": "9930:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9930:38:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2521,
                        "name": "cardinalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1924,
                        "src": "9898:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CardinalToken_$4441",
                          "typeString": "contract CardinalToken"
                        }
                      },
                      "id": 2523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3863,
                      "src": "9898:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9898:71:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2534,
                  "nodeType": "ExpressionStatement",
                  "src": "9898:71:19"
                }
              ]
            },
            "documentation": {
              "id": 2516,
              "nodeType": "StructuredDocumentation",
              "src": "9696:130:19",
              "text": " @dev Only owner function to withdraw the Cardinal Tokens that are paid to this contract for the Membership NFTs."
            },
            "functionSelector": "beb48326",
            "id": 2536,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2519,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2518,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "9878:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "9878:9:19"
              }
            ],
            "name": "withdrawMembershipNFTFunds",
            "nameLocation": "9840:26:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9866:2:19"
            },
            "returnParameters": {
              "id": 2520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9888:0:19"
            },
            "scope": 3352,
            "src": "9831:145:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2642,
              "nodeType": "Block",
              "src": "10624:834:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2552,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "10634:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9968_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2554,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9994,
                      "src": "10634:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$9968_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$9968_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10634:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2556,
                  "nodeType": "ExpressionStatement",
                  "src": "10634:21:19"
                },
                {
                  "assignments": [
                    2558
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2558,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "10673:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2642,
                      "src": "10665:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2557,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10665:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2562,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2559,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "10685:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9968_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2560,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9980,
                      "src": "10685:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9968_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9968_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10685:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10665:39:19"
                },
                {
                  "expression": {
                    "id": 2567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2563,
                        "name": "tokenIdToTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1928,
                        "src": "10715:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2565,
                      "indexExpression": {
                        "id": 2564,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "10731:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10715:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2566,
                      "name": "typeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2541,
                      "src": "10744:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10715:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2568,
                  "nodeType": "ExpressionStatement",
                  "src": "10715:35:19"
                },
                {
                  "expression": {
                    "id": 2573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2569,
                        "name": "tokenIdToListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "10760:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2571,
                      "indexExpression": {
                        "id": 2570,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "10780:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10760:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2572,
                      "name": "listingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2543,
                      "src": "10793:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10760:43:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2574,
                  "nodeType": "ExpressionStatement",
                  "src": "10760:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2576,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10819:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10819:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2578,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "10831:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2575,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9686,
                      "src": "10813:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10813:28:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2580,
                  "nodeType": "ExpressionStatement",
                  "src": "10813:28:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2582,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "10864:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2583,
                        "name": "newTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2539,
                        "src": "10875:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2581,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10336,
                      "src": "10851:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10851:36:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2585,
                  "nodeType": "ExpressionStatement",
                  "src": "10851:36:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2589,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10913:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$3352",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 2588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10905:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2587,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10905:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10905:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2591,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "10920:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2586,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9356,
                      "src": "10897:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10897:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2593,
                  "nodeType": "ExpressionStatement",
                  "src": "10897:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2595,
                        "name": "marketplaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1921,
                        "src": "10958:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10978:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2594,
                      "name": "setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9394,
                      "src": "10940:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 2597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10940:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2598,
                  "nodeType": "ExpressionStatement",
                  "src": "10940:43:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2599,
                      "name": "typeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2541,
                      "src": "10998:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2600,
                      "name": "originalCardinalTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "11008:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10998:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2609,
                        "name": "typeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2541,
                        "src": "11115:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 2610,
                        "name": "membershipTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1962,
                        "src": "11125:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11115:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2638,
                    "nodeType": "IfStatement",
                    "src": "11111:314:19",
                    "trueBody": {
                      "id": 2637,
                      "nodeType": "Block",
                      "src": "11143:282:19",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2615,
                                "name": "newItemId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2558,
                                "src": "11181:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2612,
                                "name": "membershipTokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1971,
                                "src": "11157:18:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 2614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "push",
                              "nodeType": "MemberAccess",
                              "src": "11157:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                "typeString": "function (uint256[] storage pointer,uint256)"
                              }
                            },
                            "id": 2616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11157:34:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2617,
                          "nodeType": "ExpressionStatement",
                          "src": "11157:34:19"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2618,
                              "name": "currTimeStamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2545,
                              "src": "11210:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11226:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11210:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 2635,
                            "nodeType": "Block",
                            "src": "11330:85:19",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2633,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 2628,
                                      "name": "membershipNFTToLastPaid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1948,
                                      "src": "11348:23:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 2630,
                                    "indexExpression": {
                                      "id": 2629,
                                      "name": "newItemId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2558,
                                      "src": "11372:9:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "11348:34:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 2631,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "11385:5:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2632,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "11385:15:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11348:52:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2634,
                                "nodeType": "ExpressionStatement",
                                "src": "11348:52:19"
                              }
                            ]
                          },
                          "id": 2636,
                          "nodeType": "IfStatement",
                          "src": "11206:209:19",
                          "trueBody": {
                            "id": 2627,
                            "nodeType": "Block",
                            "src": "11229:83:19",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2625,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 2621,
                                      "name": "membershipNFTToLastPaid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1948,
                                      "src": "11247:23:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 2623,
                                    "indexExpression": {
                                      "id": 2622,
                                      "name": "newItemId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2558,
                                      "src": "11271:9:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "11247:34:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 2624,
                                    "name": "currTimeStamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2545,
                                    "src": "11284:13:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11247:50:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2626,
                                "nodeType": "ExpressionStatement",
                                "src": "11247:50:19"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "id": 2639,
                  "nodeType": "IfStatement",
                  "src": "10994:431:19",
                  "trueBody": {
                    "id": 2608,
                    "nodeType": "Block",
                    "src": "11032:65:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2605,
                              "name": "newItemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2558,
                              "src": "11076:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2602,
                              "name": "originalCardinalTokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1968,
                              "src": "11046:24:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "11046:29:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 2606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11046:40:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2607,
                        "nodeType": "ExpressionStatement",
                        "src": "11046:40:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2640,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2558,
                    "src": "11442:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2551,
                  "id": 2641,
                  "nodeType": "Return",
                  "src": "11435:16:19"
                }
              ]
            },
            "documentation": {
              "id": 2537,
              "nodeType": "StructuredDocumentation",
              "src": "9982:496:19",
              "text": " @dev Only owner function to mint a new NFT.\n @param newTokenURI the token URI on IPFS for the NFT metadata\n @param typeId the type ID of the NFT to distinguish what type of NFT it is (Original Cardinal, membership, service)\n @param listingFee the fee the user pays when putting the NFT for sale on the marketplace\n @param currTimeStamp the current timestamp for the transaction to avoid relying on block.timestamp\n @return the ID of the newly minted NFT"
            },
            "functionSelector": "4623c740",
            "id": 2643,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2547,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "10599:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "10599:9:19"
              }
            ],
            "name": "createToken",
            "nameLocation": "10492:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2539,
                  "mutability": "mutable",
                  "name": "newTokenURI",
                  "nameLocation": "10518:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2643,
                  "src": "10504:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2538,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10504:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2541,
                  "mutability": "mutable",
                  "name": "typeId",
                  "nameLocation": "10539:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2643,
                  "src": "10531:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10531:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2543,
                  "mutability": "mutable",
                  "name": "listingFee",
                  "nameLocation": "10555:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2643,
                  "src": "10547:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10547:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2545,
                  "mutability": "mutable",
                  "name": "currTimeStamp",
                  "nameLocation": "10575:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2643,
                  "src": "10567:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10567:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10503:86:19"
            },
            "returnParameters": {
              "id": 2551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2550,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2643,
                  "src": "10618:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2549,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10618:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10617:6:19"
            },
            "scope": 3352,
            "src": "10483:975:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2663,
              "nodeType": "Block",
              "src": "11748:103:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2654,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2646,
                        "src": "11771:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2655,
                        "name": "newTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2648,
                        "src": "11780:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2653,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10336,
                      "src": "11758:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11758:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2657,
                  "nodeType": "ExpressionStatement",
                  "src": "11758:34:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2659,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2646,
                        "src": "11823:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2660,
                        "name": "newTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2648,
                        "src": "11832:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2658,
                      "name": "tokenURIUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2003,
                      "src": "11807:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11807:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2662,
                  "nodeType": "EmitStatement",
                  "src": "11802:42:19"
                }
              ]
            },
            "documentation": {
              "id": 2644,
              "nodeType": "StructuredDocumentation",
              "src": "11464:195:19",
              "text": " @dev Setter function for the token URI of an NFT.\n @param tokenId the ID of the NFT to update the token URI of\n @param newTokenURI the token URI to update the NFT with"
            },
            "functionSelector": "162094c4",
            "id": 2664,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2650,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "11738:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "11738:9:19"
              }
            ],
            "name": "setTokenURI",
            "nameLocation": "11673:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2646,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11693:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "11685:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11685:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2648,
                  "mutability": "mutable",
                  "name": "newTokenURI",
                  "nameLocation": "11716:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "11702:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2647,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11702:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11684:44:19"
            },
            "returnParameters": {
              "id": 2652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11748:0:19"
            },
            "scope": 3352,
            "src": "11664:187:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2758,
              "nodeType": "Block",
              "src": "12153:658:19",
              "statements": [
                {
                  "assignments": [
                    2674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2674,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "12168:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2758,
                      "src": "12163:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2673,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12163:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2678,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2675,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "12179:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9968_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9980,
                      "src": "12179:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9968_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9968_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12179:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12163:35:19"
                },
                {
                  "assignments": [
                    2680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2680,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "12213:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2758,
                      "src": "12208:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2679,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12208:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2682,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12228:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12208:21:19"
                },
                {
                  "assignments": [
                    2684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2684,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "12244:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2758,
                      "src": "12239:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2683,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12239:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2686,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12259:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12239:21:19"
                },
                {
                  "body": {
                    "id": 2708,
                    "nodeType": "Block",
                    "src": "12311:106:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2698,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2688,
                                "src": "12337:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2697,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9242,
                              "src": "12329:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 2699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12329:11:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2700,
                            "name": "userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2667,
                            "src": "12344:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12329:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2707,
                        "nodeType": "IfStatement",
                        "src": "12325:82:19",
                        "trueBody": {
                          "id": 2706,
                          "nodeType": "Block",
                          "src": "12357:50:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 2704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2702,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2680,
                                  "src": "12375:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12391:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "12375:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2705,
                              "nodeType": "ExpressionStatement",
                              "src": "12375:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2691,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2688,
                      "src": "12289:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2692,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2674,
                      "src": "12295:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12289:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2709,
                  "initializationExpression": {
                    "assignments": [
                      2688
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2688,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "12281:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2709,
                        "src": "12276:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2687,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12276:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2690,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12286:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12276:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12305:4:19",
                      "subExpression": {
                        "id": 2694,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2688,
                        "src": "12305:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2696,
                    "nodeType": "ExpressionStatement",
                    "src": "12305:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "12271:146:19"
                },
                {
                  "assignments": [
                    2714
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2714,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "12443:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2758,
                      "src": "12427:32:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2712,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12427:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2713,
                        "nodeType": "ArrayTypeName",
                        "src": "12427:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2720,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2718,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2680,
                        "src": "12475:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "12462:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2715,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12466:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2716,
                        "nodeType": "ArrayTypeName",
                        "src": "12466:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 2719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12462:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12427:61:19"
                },
                {
                  "body": {
                    "id": 2754,
                    "nodeType": "Block",
                    "src": "12539:224:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2732,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2722,
                                "src": "12565:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2731,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9242,
                              "src": "12557:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 2733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12557:11:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2734,
                            "name": "userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2667,
                            "src": "12572:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12557:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2753,
                        "nodeType": "IfStatement",
                        "src": "12553:200:19",
                        "trueBody": {
                          "id": 2752,
                          "nodeType": "Block",
                          "src": "12585:168:19",
                          "statements": [
                            {
                              "assignments": [
                                2737
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2737,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "12617:10:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2752,
                                  "src": "12603:24:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 2736,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12603:6:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2741,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2739,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2722,
                                    "src": "12639:2:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2738,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    10314
                                  ],
                                  "referencedDeclaration": 10314,
                                  "src": "12630:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 2740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12630:12:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "12603:39:19"
                            },
                            {
                              "expression": {
                                "id": 2746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2742,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2714,
                                    "src": "12660:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 2744,
                                  "indexExpression": {
                                    "id": 2743,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2684,
                                    "src": "12677:12:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12660:30:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2745,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2737,
                                  "src": "12693:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "12660:43:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 2747,
                              "nodeType": "ExpressionStatement",
                              "src": "12660:43:19"
                            },
                            {
                              "expression": {
                                "id": 2750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2748,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2684,
                                  "src": "12721:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2749,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12737:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "12721:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2751,
                              "nodeType": "ExpressionStatement",
                              "src": "12721:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2725,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2722,
                      "src": "12517:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2726,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2674,
                      "src": "12523:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12517:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2755,
                  "initializationExpression": {
                    "assignments": [
                      2722
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2722,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "12509:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2755,
                        "src": "12504:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2721,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12504:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2724,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12514:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12504:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12533:4:19",
                      "subExpression": {
                        "id": 2728,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2722,
                        "src": "12533:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2730,
                    "nodeType": "ExpressionStatement",
                    "src": "12533:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "12499:264:19"
                },
                {
                  "expression": {
                    "id": 2756,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2714,
                    "src": "12788:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2672,
                  "id": 2757,
                  "nodeType": "Return",
                  "src": "12781:23:19"
                }
              ]
            },
            "documentation": {
              "id": 2665,
              "nodeType": "StructuredDocumentation",
              "src": "11857:204:19",
              "text": " @dev Function to get all token URIs for tokens that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's NFTs"
            },
            "functionSelector": "8f01785d",
            "id": 2759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTokenURIs",
            "nameLocation": "12075:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2667,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "12100:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2759,
                  "src": "12092:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12092:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12091:21:19"
            },
            "returnParameters": {
              "id": 2672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2671,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2759,
                  "src": "12136:15:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2669,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "12136:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2670,
                    "nodeType": "ArrayTypeName",
                    "src": "12136:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12135:17:19"
            },
            "scope": 3352,
            "src": "12066:745:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2865,
              "nodeType": "Block",
              "src": "13163:756:19",
              "statements": [
                {
                  "assignments": [
                    2769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2769,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "13178:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2865,
                      "src": "13173:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2768,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13173:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2773,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2770,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "13189:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9968_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2771,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9980,
                      "src": "13189:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9968_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9968_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13189:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13173:35:19"
                },
                {
                  "assignments": [
                    2775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2775,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "13223:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2865,
                      "src": "13218:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2774,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13218:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2777,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13238:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13218:21:19"
                },
                {
                  "assignments": [
                    2779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2779,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "13254:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2865,
                      "src": "13249:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2778,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13249:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2781,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13269:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13249:21:19"
                },
                {
                  "body": {
                    "id": 2809,
                    "nodeType": "Block",
                    "src": "13321:155:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2793,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2783,
                                  "src": "13347:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2792,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9242,
                                "src": "13339:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13339:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2795,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2762,
                              "src": "13354:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "13339:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 2797,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1928,
                                "src": "13369:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 2799,
                              "indexExpression": {
                                "id": 2798,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2783,
                                "src": "13385:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13369:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2800,
                              "name": "originalCardinalTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "13392:22:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13369:45:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13339:75:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2808,
                        "nodeType": "IfStatement",
                        "src": "13335:131:19",
                        "trueBody": {
                          "id": 2807,
                          "nodeType": "Block",
                          "src": "13416:50:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 2805,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2803,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2775,
                                  "src": "13434:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2804,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13450:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "13434:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2806,
                              "nodeType": "ExpressionStatement",
                              "src": "13434:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2786,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2783,
                      "src": "13299:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2787,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2769,
                      "src": "13305:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13299:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2810,
                  "initializationExpression": {
                    "assignments": [
                      2783
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2783,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "13291:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2810,
                        "src": "13286:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2782,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13286:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2785,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13296:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13286:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13315:4:19",
                      "subExpression": {
                        "id": 2789,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2783,
                        "src": "13315:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2791,
                    "nodeType": "ExpressionStatement",
                    "src": "13315:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "13281:195:19"
                },
                {
                  "assignments": [
                    2815
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2815,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "13502:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2865,
                      "src": "13486:32:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2813,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "13486:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2814,
                        "nodeType": "ArrayTypeName",
                        "src": "13486:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2821,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2819,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2775,
                        "src": "13534:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13521:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2816,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "13525:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2817,
                        "nodeType": "ArrayTypeName",
                        "src": "13525:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 2820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13521:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13486:61:19"
                },
                {
                  "body": {
                    "id": 2861,
                    "nodeType": "Block",
                    "src": "13598:273:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2833,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2823,
                                  "src": "13624:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2832,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9242,
                                "src": "13616:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13616:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2835,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2762,
                              "src": "13631:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "13616:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 2837,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1928,
                                "src": "13646:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 2839,
                              "indexExpression": {
                                "id": 2838,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2823,
                                "src": "13662:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13646:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2840,
                              "name": "originalCardinalTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "13669:22:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13646:45:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13616:75:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2860,
                        "nodeType": "IfStatement",
                        "src": "13612:249:19",
                        "trueBody": {
                          "id": 2859,
                          "nodeType": "Block",
                          "src": "13693:168:19",
                          "statements": [
                            {
                              "assignments": [
                                2844
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2844,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "13725:10:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2859,
                                  "src": "13711:24:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 2843,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13711:6:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2848,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2846,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2823,
                                    "src": "13747:2:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2845,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    10314
                                  ],
                                  "referencedDeclaration": 10314,
                                  "src": "13738:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 2847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13738:12:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "13711:39:19"
                            },
                            {
                              "expression": {
                                "id": 2853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2849,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2815,
                                    "src": "13768:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 2851,
                                  "indexExpression": {
                                    "id": 2850,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2779,
                                    "src": "13785:12:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13768:30:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2852,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2844,
                                  "src": "13801:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "13768:43:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 2854,
                              "nodeType": "ExpressionStatement",
                              "src": "13768:43:19"
                            },
                            {
                              "expression": {
                                "id": 2857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2855,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2779,
                                  "src": "13829:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13845:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "13829:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2858,
                              "nodeType": "ExpressionStatement",
                              "src": "13829:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2826,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2823,
                      "src": "13576:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2827,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2769,
                      "src": "13582:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13576:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2862,
                  "initializationExpression": {
                    "assignments": [
                      2823
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2823,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "13568:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2862,
                        "src": "13563:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2822,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13563:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2825,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13573:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13563:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13592:4:19",
                      "subExpression": {
                        "id": 2829,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2823,
                        "src": "13592:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2831,
                    "nodeType": "ExpressionStatement",
                    "src": "13592:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "13558:313:19"
                },
                {
                  "expression": {
                    "id": 2863,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2815,
                    "src": "13896:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2767,
                  "id": 2864,
                  "nodeType": "Return",
                  "src": "13889:23:19"
                }
              ]
            },
            "documentation": {
              "id": 2760,
              "nodeType": "StructuredDocumentation",
              "src": "12817:238:19",
              "text": " @dev Function to get all token URIs for Original Cardinal NFTs that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's Original Cardinal NFTs"
            },
            "functionSelector": "56060a74",
            "id": 2866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserOriginalCardinalTokenURIs",
            "nameLocation": "13069:32:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2762,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "13110:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2866,
                  "src": "13102:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13102:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13101:21:19"
            },
            "returnParameters": {
              "id": 2767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2766,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2866,
                  "src": "13146:15:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2764,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "13146:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2765,
                    "nodeType": "ArrayTypeName",
                    "src": "13146:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13145:17:19"
            },
            "scope": 3352,
            "src": "13060:859:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2986,
              "nodeType": "Block",
              "src": "14251:846:19",
              "statements": [
                {
                  "assignments": [
                    2876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2876,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "14266:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2986,
                      "src": "14261:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2875,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14261:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2880,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2877,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "14277:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9968_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2878,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9980,
                      "src": "14277:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9968_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9968_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14277:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14261:35:19"
                },
                {
                  "assignments": [
                    2882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2882,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "14311:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2986,
                      "src": "14306:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2881,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14306:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2884,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14326:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14306:21:19"
                },
                {
                  "assignments": [
                    2886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2886,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "14342:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2986,
                      "src": "14337:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2885,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14337:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2888,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14357:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14337:21:19"
                },
                {
                  "body": {
                    "id": 2923,
                    "nodeType": "Block",
                    "src": "14409:200:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2900,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2890,
                                  "src": "14435:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2899,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9242,
                                "src": "14427:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14427:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2902,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2869,
                              "src": "14442:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "14427:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2908,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2904,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1928,
                                      "src": "14458:15:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 2906,
                                    "indexExpression": {
                                      "id": 2905,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2890,
                                      "src": "14474:2:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14458:19:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 2907,
                                    "name": "originalCardinalTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1959,
                                    "src": "14481:22:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14458:45:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2913,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2909,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1928,
                                      "src": "14507:15:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 2911,
                                    "indexExpression": {
                                      "id": 2910,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2890,
                                      "src": "14523:2:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14507:19:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 2912,
                                    "name": "membershipTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1962,
                                    "src": "14530:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14507:39:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "14458:88:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2915,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14457:90:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14427:120:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2922,
                        "nodeType": "IfStatement",
                        "src": "14423:176:19",
                        "trueBody": {
                          "id": 2921,
                          "nodeType": "Block",
                          "src": "14549:50:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 2919,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2917,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2882,
                                  "src": "14567:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2918,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14583:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "14567:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2920,
                              "nodeType": "ExpressionStatement",
                              "src": "14567:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2893,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2890,
                      "src": "14387:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2894,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2876,
                      "src": "14393:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14387:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2924,
                  "initializationExpression": {
                    "assignments": [
                      2890
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2890,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "14379:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2924,
                        "src": "14374:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2889,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14374:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2892,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14384:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14374:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14403:4:19",
                      "subExpression": {
                        "id": 2896,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2890,
                        "src": "14403:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2898,
                    "nodeType": "ExpressionStatement",
                    "src": "14403:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "14369:240:19"
                },
                {
                  "assignments": [
                    2929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2929,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "14635:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2986,
                      "src": "14619:32:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2927,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14619:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2928,
                        "nodeType": "ArrayTypeName",
                        "src": "14619:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2935,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2933,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "14667:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14654:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2930,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14658:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2931,
                        "nodeType": "ArrayTypeName",
                        "src": "14658:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 2934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14654:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14619:61:19"
                },
                {
                  "body": {
                    "id": 2982,
                    "nodeType": "Block",
                    "src": "14731:318:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2947,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2937,
                                  "src": "14757:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2946,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9242,
                                "src": "14749:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14749:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2949,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2869,
                              "src": "14764:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "14749:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2955,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2951,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1928,
                                      "src": "14780:15:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 2953,
                                    "indexExpression": {
                                      "id": 2952,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2937,
                                      "src": "14796:2:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14780:19:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 2954,
                                    "name": "originalCardinalTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1959,
                                    "src": "14803:22:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14780:45:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2960,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2956,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1928,
                                      "src": "14829:15:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 2958,
                                    "indexExpression": {
                                      "id": 2957,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2937,
                                      "src": "14845:2:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14829:19:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 2959,
                                    "name": "membershipTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1962,
                                    "src": "14852:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14829:39:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "14780:88:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2962,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14779:90:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14749:120:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2981,
                        "nodeType": "IfStatement",
                        "src": "14745:294:19",
                        "trueBody": {
                          "id": 2980,
                          "nodeType": "Block",
                          "src": "14871:168:19",
                          "statements": [
                            {
                              "assignments": [
                                2965
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2965,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "14903:10:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2980,
                                  "src": "14889:24:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 2964,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14889:6:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2969,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2967,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2937,
                                    "src": "14925:2:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2966,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    10314
                                  ],
                                  "referencedDeclaration": 10314,
                                  "src": "14916:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 2968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14916:12:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14889:39:19"
                            },
                            {
                              "expression": {
                                "id": 2974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2970,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2929,
                                    "src": "14946:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 2972,
                                  "indexExpression": {
                                    "id": 2971,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2886,
                                    "src": "14963:12:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14946:30:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2973,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2965,
                                  "src": "14979:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "14946:43:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 2975,
                              "nodeType": "ExpressionStatement",
                              "src": "14946:43:19"
                            },
                            {
                              "expression": {
                                "id": 2978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2976,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2886,
                                  "src": "15007:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15023:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "15007:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2979,
                              "nodeType": "ExpressionStatement",
                              "src": "15007:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2940,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2937,
                      "src": "14709:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2941,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2876,
                      "src": "14715:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14709:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2983,
                  "initializationExpression": {
                    "assignments": [
                      2937
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2937,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "14701:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2983,
                        "src": "14696:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2936,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14696:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2939,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14706:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14696:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14725:4:19",
                      "subExpression": {
                        "id": 2943,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2937,
                        "src": "14725:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2945,
                    "nodeType": "ExpressionStatement",
                    "src": "14725:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "14691:358:19"
                },
                {
                  "expression": {
                    "id": 2984,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2929,
                    "src": "15074:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2874,
                  "id": 2985,
                  "nodeType": "Return",
                  "src": "15067:23:19"
                }
              ]
            },
            "documentation": {
              "id": 2867,
              "nodeType": "StructuredDocumentation",
              "src": "13925:224:19",
              "text": " @dev Function to get all token URIs for membership NFTs that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's membership NFTs"
            },
            "functionSelector": "33a41510",
            "id": 2987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserMembershipTokenURIs",
            "nameLocation": "14163:26:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2869,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "14198:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2987,
                  "src": "14190:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14190:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14189:21:19"
            },
            "returnParameters": {
              "id": 2874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2987,
                  "src": "14234:15:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2871,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "14234:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2872,
                    "nodeType": "ArrayTypeName",
                    "src": "14234:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14233:17:19"
            },
            "scope": 3352,
            "src": "14154:943:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3093,
              "nodeType": "Block",
              "src": "15420:738:19",
              "statements": [
                {
                  "assignments": [
                    2997
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2997,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "15435:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 3093,
                      "src": "15430:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2996,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15430:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3001,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2998,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "15446:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9968_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2999,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9980,
                      "src": "15446:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9968_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9968_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 3000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15446:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15430:35:19"
                },
                {
                  "assignments": [
                    3003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3003,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "15480:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 3093,
                      "src": "15475:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3002,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15475:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3005,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15495:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15475:21:19"
                },
                {
                  "assignments": [
                    3007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3007,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "15511:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 3093,
                      "src": "15506:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3006,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15506:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3009,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15526:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15506:21:19"
                },
                {
                  "body": {
                    "id": 3037,
                    "nodeType": "Block",
                    "src": "15578:146:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 3021,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3011,
                                  "src": "15604:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3020,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9242,
                                "src": "15596:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 3022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15596:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3023,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2990,
                              "src": "15611:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "15596:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 3025,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1928,
                                "src": "15626:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 3027,
                              "indexExpression": {
                                "id": 3026,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3011,
                                "src": "15642:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15626:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3028,
                              "name": "serviceTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1965,
                              "src": "15649:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15626:36:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15596:66:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3036,
                        "nodeType": "IfStatement",
                        "src": "15592:122:19",
                        "trueBody": {
                          "id": 3035,
                          "nodeType": "Block",
                          "src": "15664:50:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 3033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3031,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3003,
                                  "src": "15682:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 3032,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15698:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "15682:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3034,
                              "nodeType": "ExpressionStatement",
                              "src": "15682:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3014,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3011,
                      "src": "15556:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 3015,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2997,
                      "src": "15562:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15556:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3038,
                  "initializationExpression": {
                    "assignments": [
                      3011
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3011,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "15548:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3038,
                        "src": "15543:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3010,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15543:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3013,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 3012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15553:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15543:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15572:4:19",
                      "subExpression": {
                        "id": 3017,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3011,
                        "src": "15572:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3019,
                    "nodeType": "ExpressionStatement",
                    "src": "15572:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "15538:186:19"
                },
                {
                  "assignments": [
                    3043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3043,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "15750:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 3093,
                      "src": "15734:32:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3041,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "15734:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 3042,
                        "nodeType": "ArrayTypeName",
                        "src": "15734:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3049,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3047,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3003,
                        "src": "15782:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15769:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3044,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "15773:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 3045,
                        "nodeType": "ArrayTypeName",
                        "src": "15773:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 3048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15769:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15734:61:19"
                },
                {
                  "body": {
                    "id": 3089,
                    "nodeType": "Block",
                    "src": "15846:264:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 3061,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3051,
                                  "src": "15872:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3060,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9242,
                                "src": "15864:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 3062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15864:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3063,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2990,
                              "src": "15879:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "15864:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 3065,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1928,
                                "src": "15894:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 3067,
                              "indexExpression": {
                                "id": 3066,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3051,
                                "src": "15910:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15894:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3068,
                              "name": "serviceTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1965,
                              "src": "15917:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15894:36:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15864:66:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3088,
                        "nodeType": "IfStatement",
                        "src": "15860:240:19",
                        "trueBody": {
                          "id": 3087,
                          "nodeType": "Block",
                          "src": "15932:168:19",
                          "statements": [
                            {
                              "assignments": [
                                3072
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3072,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "15964:10:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3087,
                                  "src": "15950:24:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 3071,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15950:6:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3076,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3074,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3051,
                                    "src": "15986:2:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3073,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    10314
                                  ],
                                  "referencedDeclaration": 10314,
                                  "src": "15977:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 3075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15977:12:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15950:39:19"
                            },
                            {
                              "expression": {
                                "id": 3081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3077,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3043,
                                    "src": "16007:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 3079,
                                  "indexExpression": {
                                    "id": 3078,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3007,
                                    "src": "16024:12:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16007:30:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3080,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3072,
                                  "src": "16040:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "16007:43:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 3082,
                              "nodeType": "ExpressionStatement",
                              "src": "16007:43:19"
                            },
                            {
                              "expression": {
                                "id": 3085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3083,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3007,
                                  "src": "16068:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 3084,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16084:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "16068:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3086,
                              "nodeType": "ExpressionStatement",
                              "src": "16068:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3054,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3051,
                      "src": "15824:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 3055,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2997,
                      "src": "15830:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15824:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3090,
                  "initializationExpression": {
                    "assignments": [
                      3051
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3051,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "15816:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3090,
                        "src": "15811:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3050,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15811:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3053,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 3052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15821:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15811:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15840:4:19",
                      "subExpression": {
                        "id": 3057,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3051,
                        "src": "15840:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3059,
                    "nodeType": "ExpressionStatement",
                    "src": "15840:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "15806:304:19"
                },
                {
                  "expression": {
                    "id": 3091,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3043,
                    "src": "16135:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2995,
                  "id": 3092,
                  "nodeType": "Return",
                  "src": "16128:23:19"
                }
              ]
            },
            "documentation": {
              "id": 2988,
              "nodeType": "StructuredDocumentation",
              "src": "15103:218:19",
              "text": " @dev Function to get all token URIs for service NFTs that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's service NFTs"
            },
            "functionSelector": "c34e3782",
            "id": 3094,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserServiceTokenURIs",
            "nameLocation": "15335:23:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2990,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "15367:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "15359:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15359:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15358:21:19"
            },
            "returnParameters": {
              "id": 2995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2994,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "15403:15:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2992,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "15403:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2993,
                    "nodeType": "ArrayTypeName",
                    "src": "15403:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15402:17:19"
            },
            "scope": 3352,
            "src": "15326:832:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3103,
              "nodeType": "Block",
              "src": "16384:48:19",
              "statements": [
                {
                  "expression": {
                    "id": 3101,
                    "name": "originalCardinalTokenIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1968,
                    "src": "16401:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3100,
                  "id": 3102,
                  "nodeType": "Return",
                  "src": "16394:31:19"
                }
              ]
            },
            "documentation": {
              "id": 3095,
              "nodeType": "StructuredDocumentation",
              "src": "16164:135:19",
              "text": " @dev Function to get a list of all the Original Cardinal NFT IDs.\n @return list of the Original Cardinal NFT IDs"
            },
            "functionSelector": "e4e0a931",
            "id": 3104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOriginalCardinalTokenIds",
            "nameLocation": "16313:27:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16340:2:19"
            },
            "returnParameters": {
              "id": 3100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3099,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3104,
                  "src": "16366:16:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3097,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16366:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3098,
                    "nodeType": "ArrayTypeName",
                    "src": "16366:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16365:18:19"
            },
            "scope": 3352,
            "src": "16304:128:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3113,
              "nodeType": "Block",
              "src": "16638:42:19",
              "statements": [
                {
                  "expression": {
                    "id": 3111,
                    "name": "membershipTokenIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1971,
                    "src": "16655:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3110,
                  "id": 3112,
                  "nodeType": "Return",
                  "src": "16648:25:19"
                }
              ]
            },
            "documentation": {
              "id": 3105,
              "nodeType": "StructuredDocumentation",
              "src": "16438:121:19",
              "text": " @dev Function to get a list of all the membership NFT IDs.\n @return list of the membership NFT IDs"
            },
            "functionSelector": "d473dab1",
            "id": 3114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipTokenIds",
            "nameLocation": "16573:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16594:2:19"
            },
            "returnParameters": {
              "id": 3110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3114,
                  "src": "16620:16:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3107,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16620:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3108,
                    "nodeType": "ArrayTypeName",
                    "src": "16620:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16619:18:19"
            },
            "scope": 3352,
            "src": "16564:116:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3130,
              "nodeType": "Block",
              "src": "17053:70:19",
              "statements": [
                {
                  "expression": {
                    "id": 3128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3124,
                        "name": "tokenIdToWhitelistAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1936,
                        "src": "17063:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3126,
                      "indexExpression": {
                        "id": 3125,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3119,
                        "src": "17089:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17063:34:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3127,
                      "name": "whiteListAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3117,
                      "src": "17100:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17063:53:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3129,
                  "nodeType": "ExpressionStatement",
                  "src": "17063:53:19"
                }
              ]
            },
            "documentation": {
              "id": 3115,
              "nodeType": "StructuredDocumentation",
              "src": "16686:271:19",
              "text": " @dev Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.\n @param whiteListAddress the address of the user who will be able to purchase the NFT\n @param tokenId the ID of the NFT that the whitelist spot is for"
            },
            "functionSelector": "7417353f",
            "id": 3131,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3122,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3121,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "17043:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "17043:9:19"
              }
            ],
            "name": "addWhiteListToToken",
            "nameLocation": "16971:19:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3117,
                  "mutability": "mutable",
                  "name": "whiteListAddress",
                  "nameLocation": "16999:16:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "16991:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16991:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3119,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "17025:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "17017:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17017:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16990:43:19"
            },
            "returnParameters": {
              "id": 3123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17053:0:19"
            },
            "scope": 3352,
            "src": "16962:161:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3147,
              "nodeType": "Block",
              "src": "17410:61:19",
              "statements": [
                {
                  "expression": {
                    "id": 3145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3141,
                        "name": "tokenIdToListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "17420:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 3143,
                      "indexExpression": {
                        "id": 3142,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3134,
                        "src": "17440:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17420:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3144,
                      "name": "newListingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3136,
                      "src": "17451:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17420:44:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3146,
                  "nodeType": "ExpressionStatement",
                  "src": "17420:44:19"
                }
              ]
            },
            "documentation": {
              "id": 3132,
              "nodeType": "StructuredDocumentation",
              "src": "17129:186:19",
              "text": " @dev updates the listing fee of an NFT.\n @param tokenId the ID of the NFT to update the listing fee of\n @param newListingFee the listing fee value for the NFT"
            },
            "functionSelector": "7867ccd1",
            "id": 3148,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3139,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3138,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "17400:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "17400:9:19"
              }
            ],
            "name": "updateTokenListingFee",
            "nameLocation": "17329:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3134,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "17359:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "17351:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17351:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3136,
                  "mutability": "mutable",
                  "name": "newListingFee",
                  "nameLocation": "17376:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "17368:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17368:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17350:40:19"
            },
            "returnParameters": {
              "id": 3140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17410:0:19"
            },
            "scope": 3352,
            "src": "17320:151:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3164,
              "nodeType": "Block",
              "src": "17734:53:19",
              "statements": [
                {
                  "expression": {
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3158,
                        "name": "tokenIdToTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1928,
                        "src": "17744:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 3160,
                      "indexExpression": {
                        "id": 3159,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3151,
                        "src": "17760:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17744:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3161,
                      "name": "newTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3153,
                      "src": "17771:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17744:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3163,
                  "nodeType": "ExpressionStatement",
                  "src": "17744:36:19"
                }
              ]
            },
            "documentation": {
              "id": 3149,
              "nodeType": "StructuredDocumentation",
              "src": "17477:170:19",
              "text": " @dev updates the type ID of an NFT.\n @param tokenId the ID of the NFT to update the type ID of\n @param newTypeId the type ID value for the NFT"
            },
            "functionSelector": "c79ba39c",
            "id": 3165,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3155,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "17724:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "17724:9:19"
              }
            ],
            "name": "updateTokenTypeId",
            "nameLocation": "17661:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3151,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "17687:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3165,
                  "src": "17679:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17679:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3153,
                  "mutability": "mutable",
                  "name": "newTypeId",
                  "nameLocation": "17704:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3165,
                  "src": "17696:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17696:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17678:36:19"
            },
            "returnParameters": {
              "id": 3157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17734:0:19"
            },
            "scope": 3352,
            "src": "17652:135:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3182,
              "nodeType": "Block",
              "src": "18060:148:19",
              "statements": [
                {
                  "expression": {
                    "id": 3175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3173,
                      "name": "originalCardinalTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "18070:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3174,
                      "name": "newOriginalCardinalTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3168,
                      "src": "18095:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18070:50:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3176,
                  "nodeType": "ExpressionStatement",
                  "src": "18070:50:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6f726967696e616c43617264696e616c547970654964",
                        "id": 3178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18149:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8edf162dc3544f87029d9e513f737889806b84fd1e554b0a8797c5cb644469",
                          "typeString": "literal_string \"originalCardinalTypeId\""
                        },
                        "value": "originalCardinalTypeId"
                      },
                      {
                        "id": 3179,
                        "name": "newOriginalCardinalTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3168,
                        "src": "18175:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9c8edf162dc3544f87029d9e513f737889806b84fd1e554b0a8797c5cb644469",
                          "typeString": "literal_string \"originalCardinalTypeId\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3177,
                      "name": "typeIdUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "18135:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 3180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18135:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3181,
                  "nodeType": "EmitStatement",
                  "src": "18130:71:19"
                }
              ]
            },
            "documentation": {
              "id": 3166,
              "nodeType": "StructuredDocumentation",
              "src": "17793:170:19",
              "text": " @dev updates the type ID that represents the Original Cardinal NFTs\n @param newOriginalCardinalTypeId the new type ID of the Original Cardinal NFTs"
            },
            "functionSelector": "66a98ea3",
            "id": 3183,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3171,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3170,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "18050:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "18050:9:19"
              }
            ],
            "name": "updateOriginalCardinalTypeId",
            "nameLocation": "17977:28:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3168,
                  "mutability": "mutable",
                  "name": "newOriginalCardinalTypeId",
                  "nameLocation": "18014:25:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3183,
                  "src": "18006:33:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18006:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18005:35:19"
            },
            "returnParameters": {
              "id": 3172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18060:0:19"
            },
            "scope": 3352,
            "src": "17968:240:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3200,
              "nodeType": "Block",
              "src": "18449:124:19",
              "statements": [
                {
                  "expression": {
                    "id": 3193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3191,
                      "name": "membershipTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1962,
                      "src": "18459:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3192,
                      "name": "newMembershipTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3186,
                      "src": "18478:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18459:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3194,
                  "nodeType": "ExpressionStatement",
                  "src": "18459:38:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6d656d62657273686970547970654964",
                        "id": 3196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18526:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a92a1f69e7ee067d3ecb64b21d801262daa7d1ac496602a457fa1c6f02434d6",
                          "typeString": "literal_string \"membershipTypeId\""
                        },
                        "value": "membershipTypeId"
                      },
                      {
                        "id": 3197,
                        "name": "newMembershipTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3186,
                        "src": "18546:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5a92a1f69e7ee067d3ecb64b21d801262daa7d1ac496602a457fa1c6f02434d6",
                          "typeString": "literal_string \"membershipTypeId\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3195,
                      "name": "typeIdUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "18512:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 3198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18512:54:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3199,
                  "nodeType": "EmitStatement",
                  "src": "18507:59:19"
                }
              ]
            },
            "documentation": {
              "id": 3184,
              "nodeType": "StructuredDocumentation",
              "src": "18214:150:19",
              "text": " @dev updates the type ID that represents the membership NFTs\n @param newMembershipTypeId the new type ID of the membership NFTs"
            },
            "functionSelector": "ffeab8a4",
            "id": 3201,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3188,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "18439:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "18439:9:19"
              }
            ],
            "name": "updateMembershipTypeId",
            "nameLocation": "18378:22:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3186,
                  "mutability": "mutable",
                  "name": "newMembershipTypeId",
                  "nameLocation": "18409:19:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3201,
                  "src": "18401:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18401:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18400:29:19"
            },
            "returnParameters": {
              "id": 3190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18449:0:19"
            },
            "scope": 3352,
            "src": "18369:204:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3218,
              "nodeType": "Block",
              "src": "18799:112:19",
              "statements": [
                {
                  "expression": {
                    "id": 3211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3209,
                      "name": "serviceTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1965,
                      "src": "18809:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3210,
                      "name": "newServiceTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3204,
                      "src": "18825:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18809:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3212,
                  "nodeType": "ExpressionStatement",
                  "src": "18809:32:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "73657276696365547970654964",
                        "id": 3214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18870:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6677363f62fb8d164a2ecd73cb1ca3e466c93136888b7ac0c89692d526e12fd4",
                          "typeString": "literal_string \"serviceTypeId\""
                        },
                        "value": "serviceTypeId"
                      },
                      {
                        "id": 3215,
                        "name": "newServiceTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3204,
                        "src": "18887:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6677363f62fb8d164a2ecd73cb1ca3e466c93136888b7ac0c89692d526e12fd4",
                          "typeString": "literal_string \"serviceTypeId\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3213,
                      "name": "typeIdUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "18856:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 3216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18856:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3217,
                  "nodeType": "EmitStatement",
                  "src": "18851:53:19"
                }
              ]
            },
            "documentation": {
              "id": 3202,
              "nodeType": "StructuredDocumentation",
              "src": "18579:141:19",
              "text": " @dev updates the type ID that represents the service NFTs\n @param newServiceTypeId the new type ID of the service NFTs"
            },
            "functionSelector": "86794f66",
            "id": 3219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3207,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3206,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "18789:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "18789:9:19"
              }
            ],
            "name": "updateServiceTypeId",
            "nameLocation": "18734:19:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3204,
                  "mutability": "mutable",
                  "name": "newServiceTypeId",
                  "nameLocation": "18762:16:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3219,
                  "src": "18754:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18754:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18753:26:19"
            },
            "returnParameters": {
              "id": 3208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18799:0:19"
            },
            "scope": 3352,
            "src": "18725:186:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3231,
              "nodeType": "Block",
              "src": "19142:59:19",
              "statements": [
                {
                  "expression": {
                    "id": 3229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3227,
                      "name": "membershipTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1973,
                      "src": "19152:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3228,
                      "name": "newMembershipTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3222,
                      "src": "19173:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "19152:42:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3230,
                  "nodeType": "ExpressionStatement",
                  "src": "19152:42:19"
                }
              ]
            },
            "documentation": {
              "id": 3220,
              "nodeType": "StructuredDocumentation",
              "src": "18917:130:19",
              "text": " @dev updates the membership NFT token URI\n @param newMembershipTokenURI the new type ID of the service NFTs"
            },
            "functionSelector": "96291db6",
            "id": 3232,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3225,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3224,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "19132:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "19132:9:19"
              }
            ],
            "name": "updateMembershipTokenURI",
            "nameLocation": "19061:24:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3222,
                  "mutability": "mutable",
                  "name": "newMembershipTokenURI",
                  "nameLocation": "19100:21:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3232,
                  "src": "19086:35:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3221,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19086:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19085:37:19"
            },
            "returnParameters": {
              "id": 3226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19142:0:19"
            },
            "scope": 3352,
            "src": "19052:149:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3248,
              "nodeType": "Block",
              "src": "19457:126:19",
              "statements": [
                {
                  "expression": {
                    "id": 3242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3240,
                      "name": "membershipPriceInCardinalTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1975,
                      "src": "19467:31:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3241,
                      "name": "newMembershipPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3235,
                      "src": "19501:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19467:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3243,
                  "nodeType": "ExpressionStatement",
                  "src": "19467:52:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3245,
                        "name": "newMembershipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3235,
                        "src": "19557:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3244,
                      "name": "membershipPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2007,
                      "src": "19534:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19534:42:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3247,
                  "nodeType": "EmitStatement",
                  "src": "19529:47:19"
                }
              ]
            },
            "documentation": {
              "id": 3233,
              "nodeType": "StructuredDocumentation",
              "src": "19207:167:19",
              "text": " @dev sets the price of the membership NFTs in Cardinal Tokens\n @param newMembershipPrice the new price of the membership NFTs in Cardinal Tokens"
            },
            "functionSelector": "ebaa42ed",
            "id": 3249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3237,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "19447:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "19447:9:19"
              }
            ],
            "name": "updateMembershipPrice",
            "nameLocation": "19388:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3235,
                  "mutability": "mutable",
                  "name": "newMembershipPrice",
                  "nameLocation": "19418:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3249,
                  "src": "19410:26:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19410:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19409:28:19"
            },
            "returnParameters": {
              "id": 3239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19457:0:19"
            },
            "scope": 3352,
            "src": "19379:204:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3263,
              "nodeType": "Block",
              "src": "19848:68:19",
              "statements": [
                {
                  "expression": {
                    "id": 3261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3257,
                      "name": "cardinalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1924,
                      "src": "19858:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CardinalToken_$4441",
                        "typeString": "contract CardinalToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3259,
                          "name": "cardinalTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3252,
                          "src": "19888:20:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 3258,
                        "name": "CardinalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4441,
                        "src": "19874:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CardinalToken_$4441_$",
                          "typeString": "type(contract CardinalToken)"
                        }
                      },
                      "id": 3260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19874:35:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CardinalToken_$4441",
                        "typeString": "contract CardinalToken"
                      }
                    },
                    "src": "19858:51:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CardinalToken_$4441",
                      "typeString": "contract CardinalToken"
                    }
                  },
                  "id": 3262,
                  "nodeType": "ExpressionStatement",
                  "src": "19858:51:19"
                }
              ]
            },
            "documentation": {
              "id": 3250,
              "nodeType": "StructuredDocumentation",
              "src": "19589:171:19",
              "text": " @dev Only owner function to set the reference to the Cardinal Token contract\n @param cardinalTokenAddress the address for the Cardinal Token contract"
            },
            "functionSelector": "d2793d4a",
            "id": 3264,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3255,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3254,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "19838:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "19838:9:19"
              }
            ],
            "name": "setCardinalToken",
            "nameLocation": "19774:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3252,
                  "mutability": "mutable",
                  "name": "cardinalTokenAddress",
                  "nameLocation": "19807:20:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3264,
                  "src": "19791:36:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19791:15:19",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19790:38:19"
            },
            "returnParameters": {
              "id": 3256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19848:0:19"
            },
            "scope": 3352,
            "src": "19765:151:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3280,
              "nodeType": "Block",
              "src": "20208:55:19",
              "statements": [
                {
                  "expression": {
                    "id": 3278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3274,
                        "name": "addressIsAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1952,
                        "src": "20218:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3276,
                      "indexExpression": {
                        "id": 3275,
                        "name": "adminAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3267,
                        "src": "20233:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20218:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3277,
                      "name": "isAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3269,
                      "src": "20249:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "20218:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3279,
                  "nodeType": "ExpressionStatement",
                  "src": "20218:38:19"
                }
              ]
            },
            "documentation": {
              "id": 3265,
              "nodeType": "StructuredDocumentation",
              "src": "19922:204:19",
              "text": " @dev Only owner function to update the admin mapping.\n @param adminAddress the address to admin rights for\n @param isAdmin boolean to determine if the address is an admin or not"
            },
            "functionSelector": "b27a5f98",
            "id": 3281,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3272,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3271,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "20198:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "20198:9:19"
              }
            ],
            "name": "setAdminUser",
            "nameLocation": "20140:12:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3267,
                  "mutability": "mutable",
                  "name": "adminAddress",
                  "nameLocation": "20161:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "20153:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20153:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3269,
                  "mutability": "mutable",
                  "name": "isAdmin",
                  "nameLocation": "20180:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "20175:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3268,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20175:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20152:36:19"
            },
            "returnParameters": {
              "id": 3273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20208:0:19"
            },
            "scope": 3352,
            "src": "20131:132:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3301,
              "nodeType": "Block",
              "src": "20527:141:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3288,
                          "name": "addressIsAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1952,
                          "src": "20545:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3291,
                        "indexExpression": {
                          "expression": {
                            "id": 3289,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "20560:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "20560:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20545:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636f6e74726163742061646d696e732063616e20616464206d656d626572732e",
                        "id": 3292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20573:39:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c99673b3896704eaa0040a0e8341612a84579e000526d3991de9dc17f40ca9d",
                          "typeString": "literal_string \"Only contract admins can add members.\""
                        },
                        "value": "Only contract admins can add members."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c99673b3896704eaa0040a0e8341612a84579e000526d3991de9dc17f40ca9d",
                          "typeString": "literal_string \"Only contract admins can add members.\""
                        }
                      ],
                      "id": 3287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20537:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20537:76:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3294,
                  "nodeType": "ExpressionStatement",
                  "src": "20537:76:19"
                },
                {
                  "expression": {
                    "id": 3299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3295,
                        "name": "addressIsMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "20624:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3297,
                      "indexExpression": {
                        "id": 3296,
                        "name": "memberAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3284,
                        "src": "20640:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20624:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20657:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "20624:37:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3300,
                  "nodeType": "ExpressionStatement",
                  "src": "20624:37:19"
                }
              ]
            },
            "documentation": {
              "id": 3282,
              "nodeType": "StructuredDocumentation",
              "src": "20269:202:19",
              "text": " @dev Allows contract admins to manually add an address as a member. Necessary for memberships purchased through Patreon.\n @param memberAddress the address of the member being added"
            },
            "functionSelector": "ca6d56dc",
            "id": 3302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMember",
            "nameLocation": "20485:9:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3284,
                  "mutability": "mutable",
                  "name": "memberAddress",
                  "nameLocation": "20503:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3302,
                  "src": "20495:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20495:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20494:23:19"
            },
            "returnParameters": {
              "id": 3286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20527:0:19"
            },
            "scope": 3352,
            "src": "20476:192:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3322,
              "nodeType": "Block",
              "src": "20958:146:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3309,
                          "name": "addressIsAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1952,
                          "src": "20976:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3312,
                        "indexExpression": {
                          "expression": {
                            "id": 3310,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "20991:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "20991:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20976:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636f6e74726163742061646d696e732063616e2072656d6f76652061206d656d6265722e",
                        "id": 3313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21004:43:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd478bf4faee08cef44a28667a6ab1bd4024fd27f181390429cb083cca384a63",
                          "typeString": "literal_string \"Only contract admins can remove a member.\""
                        },
                        "value": "Only contract admins can remove a member."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd478bf4faee08cef44a28667a6ab1bd4024fd27f181390429cb083cca384a63",
                          "typeString": "literal_string \"Only contract admins can remove a member.\""
                        }
                      ],
                      "id": 3308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20968:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20968:80:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3315,
                  "nodeType": "ExpressionStatement",
                  "src": "20968:80:19"
                },
                {
                  "expression": {
                    "id": 3320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3316,
                        "name": "addressIsMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "21059:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3318,
                      "indexExpression": {
                        "id": 3317,
                        "name": "memberAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3305,
                        "src": "21075:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21059:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21092:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "21059:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3321,
                  "nodeType": "ExpressionStatement",
                  "src": "21059:38:19"
                }
              ]
            },
            "documentation": {
              "id": 3303,
              "nodeType": "StructuredDocumentation",
              "src": "20674:225:19",
              "text": " @dev Allows contract admins to manually remove an address as a member. Necessary for when a membership bought through Patreon expires.\n @param memberAddress the address to remove from the membership list"
            },
            "functionSelector": "0b1ca49a",
            "id": 3323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeMember",
            "nameLocation": "20913:12:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3305,
                  "mutability": "mutable",
                  "name": "memberAddress",
                  "nameLocation": "20934:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3323,
                  "src": "20926:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20926:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20925:23:19"
            },
            "returnParameters": {
              "id": 3307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20958:0:19"
            },
            "scope": 3352,
            "src": "20904:200:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3350,
              "nodeType": "Block",
              "src": "21468:239:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3332,
                          "name": "addressIsAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1952,
                          "src": "21486:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3335,
                        "indexExpression": {
                          "expression": {
                            "id": 3333,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "21501:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21501:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21486:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636f6e74726163742061646d696e732063616e207365742061206d656d6265727368697020646973636f756e742e",
                        "id": 3336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21514:53:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aca5c94a0487ae80f034b071c5ff0dea42c0fa34df68867cb930cb7d099f0986",
                          "typeString": "literal_string \"Only contract admins can set a membership discount.\""
                        },
                        "value": "Only contract admins can set a membership discount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aca5c94a0487ae80f034b071c5ff0dea42c0fa34df68867cb930cb7d099f0986",
                          "typeString": "literal_string \"Only contract admins can set a membership discount.\""
                        }
                      ],
                      "id": 3331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21478:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21478:90:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3338,
                  "nodeType": "ExpressionStatement",
                  "src": "21478:90:19"
                },
                {
                  "expression": {
                    "id": 3343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3339,
                        "name": "addressToMembershipDiscount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1956,
                        "src": "21578:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3341,
                      "indexExpression": {
                        "id": 3340,
                        "name": "memberAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3326,
                        "src": "21606:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21578:42:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3342,
                      "name": "discountAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3328,
                      "src": "21623:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21578:59:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3344,
                  "nodeType": "ExpressionStatement",
                  "src": "21578:59:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3346,
                        "name": "memberAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3326,
                        "src": "21670:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3347,
                        "name": "discountAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3328,
                        "src": "21685:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3345,
                      "name": "memberDiscountSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2019,
                      "src": "21652:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21652:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3349,
                  "nodeType": "EmitStatement",
                  "src": "21647:53:19"
                }
              ]
            },
            "documentation": {
              "id": 3324,
              "nodeType": "StructuredDocumentation",
              "src": "21110:270:19",
              "text": " @dev Allows contract admins to set a membership discount for an address.\n @param memberAddress the address to give the discount to\n @param discountAmount the discount amount, 90 for 90% of membership price, 75 for 75% of membership price, etc."
            },
            "functionSelector": "fd18b841",
            "id": 3351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMemberDiscount",
            "nameLocation": "21394:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3326,
                  "mutability": "mutable",
                  "name": "memberAddress",
                  "nameLocation": "21420:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3351,
                  "src": "21412:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21412:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3328,
                  "mutability": "mutable",
                  "name": "discountAmount",
                  "nameLocation": "21443:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3351,
                  "src": "21435:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21435:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21411:47:19"
            },
            "returnParameters": {
              "id": 3330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21468:0:19"
            },
            "scope": 3352,
            "src": "21385:322:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3353,
        "src": "445:21264:19",
        "usedErrors": []
      }
    ],
    "src": "32:21677:19"
  },
  "bytecode": "",
  "bytecodeSha1": "b36e0b7e11d6bb8b74065ffef46ea311013d9099",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.8+commit.dddeac2f"
  },
  "contractName": "CardinalNFT",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "222": [
            2006,
            2028,
            true
          ]
        }
      },
      "11": {},
      "12": {},
      "14": {},
      "15": {},
      "19": {
        "CardinalNFT._afterTokenTransfer": {
          "195": [
            4975,
            5019,
            true
          ],
          "196": [
            5023,
            5073,
            false
          ],
          "197": [
            5093,
            5108,
            false
          ],
          "198": [
            5112,
            5138,
            false
          ],
          "199": [
            5142,
            5160,
            false
          ],
          "200": [
            5184,
            5217,
            false
          ]
        },
        "CardinalNFT.addMember": {
          "192": [
            20545,
            20571,
            true
          ]
        },
        "CardinalNFT.burnMembershipNFT": {
          "194": [
            3925,
            3957,
            false
          ]
        },
        "CardinalNFT.chargeMemberForMembership": {
          "181": [
            8461,
            8487,
            true
          ],
          "182": [
            8553,
            8580,
            false
          ],
          "183": [
            8584,
            8622,
            true
          ],
          "184": [
            8787,
            8826,
            false
          ],
          "185": [
            8980,
            9049,
            true
          ],
          "186": [
            9053,
            9137,
            false
          ],
          "187": [
            9323,
            9340,
            false
          ]
        },
        "CardinalNFT.createToken": {
          "169": [
            10998,
            11030,
            false
          ],
          "170": [
            11115,
            11141,
            false
          ],
          "171": [
            11210,
            11227,
            false
          ]
        },
        "CardinalNFT.getUserMembershipTokenURIs": {
          "163": [
            14427,
            14453,
            false
          ],
          "164": [
            14458,
            14503,
            true
          ],
          "165": [
            14507,
            14546,
            false
          ],
          "166": [
            14749,
            14775,
            false
          ],
          "167": [
            14780,
            14825,
            true
          ],
          "168": [
            14829,
            14868,
            false
          ]
        },
        "CardinalNFT.getUserOriginalCardinalTokenURIs": {
          "172": [
            13339,
            13365,
            false
          ],
          "173": [
            13369,
            13414,
            false
          ],
          "174": [
            13616,
            13642,
            false
          ],
          "175": [
            13646,
            13691,
            false
          ]
        },
        "CardinalNFT.getUserServiceTokenURIs": {
          "188": [
            15596,
            15622,
            false
          ],
          "189": [
            15626,
            15662,
            false
          ],
          "190": [
            15864,
            15890,
            false
          ],
          "191": [
            15894,
            15930,
            false
          ]
        },
        "CardinalNFT.getUserTokenURIs": {
          "179": [
            12329,
            12355,
            false
          ],
          "180": [
            12557,
            12583,
            false
          ]
        },
        "CardinalNFT.mintMembershipNFT": {
          "176": [
            6066,
            6109,
            false
          ],
          "177": [
            6271,
            6345,
            true
          ],
          "178": [
            6436,
            6525,
            true
          ]
        },
        "CardinalNFT.removeMember": {
          "162": [
            20976,
            21002,
            true
          ]
        },
        "CardinalNFT.setMemberDiscount": {
          "193": [
            21486,
            21512,
            true
          ]
        }
      },
      "20": {},
      "3": {},
      "39": {},
      "5": {
        "ERC721._isApprovedOrOwner": {
          "209": [
            7559,
            7575,
            true
          ]
        },
        "ERC721._mint": {
          "212": [
            9157,
            9173,
            true
          ],
          "213": [
            9228,
            9245,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "215": [
            6746,
            6794,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "214": [
            11615,
            11632,
            true
          ]
        },
        "ERC721._transfer": {
          "210": [
            10579,
            10610,
            true
          ],
          "211": [
            10670,
            10686,
            true
          ]
        },
        "ERC721.approve": {
          "202": [
            3674,
            3685,
            true
          ],
          "203": [
            3755,
            3776,
            true
          ],
          "204": [
            3780,
            3817,
            true
          ]
        },
        "ERC721.balanceOf": {
          "207": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.getApproved": {
          "201": [
            4102,
            4118,
            true
          ]
        },
        "ERC721.ownerOf": {
          "206": [
            2332,
            2351,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "208": [
            5536,
            5577,
            true
          ]
        },
        "ERC721.tokenURI": {
          "216": [
            2924,
            2940,
            true
          ],
          "217": [
            3054,
            3079,
            true
          ]
        },
        "ERC721.transferFrom": {
          "205": [
            4915,
            4956,
            true
          ]
        }
      },
      "6": {},
      "8": {
        "ERC721URIStorage._setTokenURI": {
          "221": [
            1376,
            1392,
            true
          ]
        },
        "ERC721URIStorage.tokenURI": {
          "218": [
            573,
            589,
            true
          ],
          "219": [
            813,
            836,
            false
          ],
          "220": [
            981,
            1008,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "140": [
            2378,
            2395
          ],
          "141": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "49": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "112": [
            1998,
            2071
          ],
          "113": [
            2081,
            2109
          ]
        }
      },
      "11": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "12": {
        "Counters.current": {
          "18": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "27": [
            1032,
            1051
          ]
        }
      },
      "14": {
        "ERC165.supportsInterface": {
          "3": [
            930,
            977
          ]
        }
      },
      "15": {},
      "19": {
        "CardinalNFT._afterTokenTransfer": {
          "154": [
            5241,
            5306
          ],
          "155": [
            5394,
            5423
          ],
          "156": [
            5508,
            5537
          ],
          "157": [
            5583,
            5609
          ],
          "158": [
            5623,
            5684
          ]
        },
        "CardinalNFT.addMember": {
          "104": [
            20537,
            20613
          ],
          "105": [
            20624,
            20661
          ]
        },
        "CardinalNFT.addWhiteListToToken": {
          "50": [
            17063,
            17116
          ]
        },
        "CardinalNFT.burnMembershipNFT": {
          "147": [
            4044,
            4101
          ],
          "148": [
            4120,
            4162
          ],
          "149": [
            4181,
            4252
          ],
          "150": [
            4270,
            4294
          ],
          "151": [
            3902,
            3905
          ]
        },
        "CardinalNFT.burnMembershiptNFTManually": {
          "111": [
            4548,
            4574
          ]
        },
        "CardinalNFT.chargeMemberForMembership": {
          "81": [
            8453,
            8535
          ],
          "82": [
            8545,
            8684
          ],
          "83": [
            8842,
            8955
          ],
          "84": [
            9153,
            9179
          ],
          "85": [
            9193,
            9201
          ],
          "86": [
            9222,
            9308
          ],
          "87": [
            9356,
            9404
          ],
          "88": [
            9443,
            9493
          ],
          "89": [
            9514,
            9553
          ],
          "90": [
            9564,
            9664
          ],
          "91": [
            9675,
            9683
          ]
        },
        "CardinalNFT.createToken": {
          "26": [
            10634,
            10655
          ],
          "28": [
            10715,
            10750
          ],
          "29": [
            10760,
            10803
          ],
          "30": [
            10813,
            10841
          ],
          "31": [
            10851,
            10887
          ],
          "32": [
            10897,
            10930
          ],
          "33": [
            10940,
            10983
          ],
          "34": [
            11046,
            11086
          ],
          "35": [
            11157,
            11191
          ],
          "36": [
            11247,
            11297
          ],
          "37": [
            11348,
            11400
          ],
          "38": [
            11435,
            11451
          ]
        },
        "CardinalNFT.getMembershipTokenIds": {
          "107": [
            16648,
            16673
          ]
        },
        "CardinalNFT.getOriginalCardinalTokenIds": {
          "108": [
            16394,
            16425
          ]
        },
        "CardinalNFT.getUserMembershipTokenURIs": {
          "19": [
            14567,
            14584
          ],
          "20": [
            14403,
            14407
          ],
          "21": [
            14946,
            14989
          ],
          "22": [
            15007,
            15024
          ],
          "23": [
            14725,
            14729
          ],
          "24": [
            15067,
            15090
          ]
        },
        "CardinalNFT.getUserOriginalCardinalTokenURIs": {
          "39": [
            13434,
            13451
          ],
          "40": [
            13315,
            13319
          ],
          "41": [
            13768,
            13811
          ],
          "42": [
            13829,
            13846
          ],
          "43": [
            13592,
            13596
          ]
        },
        "CardinalNFT.getUserServiceTokenURIs": {
          "93": [
            15682,
            15699
          ],
          "94": [
            15572,
            15576
          ],
          "95": [
            16007,
            16050
          ],
          "96": [
            16068,
            16085
          ],
          "97": [
            15840,
            15844
          ]
        },
        "CardinalNFT.getUserTokenURIs": {
          "70": [
            12375,
            12392
          ],
          "71": [
            12305,
            12309
          ],
          "72": [
            12660,
            12703
          ],
          "73": [
            12721,
            12738
          ],
          "74": [
            12533,
            12537
          ]
        },
        "CardinalNFT.mintMembershipNFT": {
          "51": [
            6125,
            6242
          ],
          "52": [
            6263,
            6418
          ],
          "53": [
            6428,
            6635
          ],
          "54": [
            6654,
            6744
          ],
          "55": [
            6755,
            6776
          ],
          "56": [
            6836,
            6881
          ],
          "57": [
            6891,
            6925
          ],
          "58": [
            6935,
            6963
          ],
          "59": [
            6973,
            7025
          ],
          "60": [
            7035,
            7078
          ],
          "61": [
            7088,
            7131
          ],
          "62": [
            7141,
            7174
          ],
          "63": [
            7184,
            7227
          ],
          "64": [
            7238,
            7272
          ],
          "65": [
            7283,
            7330
          ],
          "66": [
            7341,
            7357
          ]
        },
        "CardinalNFT.removeMember": {
          "11": [
            20968,
            21048
          ],
          "12": [
            21059,
            21097
          ]
        },
        "CardinalNFT.setAdminUser": {
          "78": [
            20218,
            20256
          ]
        },
        "CardinalNFT.setCardinalToken": {
          "106": [
            19858,
            19909
          ]
        },
        "CardinalNFT.setMemberDiscount": {
          "114": [
            21478,
            21568
          ],
          "115": [
            21578,
            21637
          ],
          "116": [
            21647,
            21700
          ]
        },
        "CardinalNFT.setTokenURI": {
          "13": [
            11758,
            11792
          ],
          "14": [
            11802,
            11844
          ]
        },
        "CardinalNFT.updateMembershipNFTLastPaid": {
          "15": [
            7803,
            7855
          ]
        },
        "CardinalNFT.updateMembershipPrice": {
          "109": [
            19467,
            19519
          ],
          "110": [
            19529,
            19576
          ]
        },
        "CardinalNFT.updateMembershipTokenURI": {
          "76": [
            19152,
            19194
          ]
        },
        "CardinalNFT.updateMembershipTypeId": {
          "117": [
            18459,
            18497
          ],
          "118": [
            18507,
            18566
          ]
        },
        "CardinalNFT.updateOriginalCardinalTypeId": {
          "45": [
            18070,
            18120
          ],
          "46": [
            18130,
            18201
          ]
        },
        "CardinalNFT.updateServiceTypeId": {
          "68": [
            18809,
            18841
          ],
          "69": [
            18851,
            18904
          ]
        },
        "CardinalNFT.updateTokenListingFee": {
          "67": [
            17420,
            17464
          ]
        },
        "CardinalNFT.updateTokenTypeId": {
          "98": [
            17744,
            17780
          ]
        },
        "CardinalNFT.withdrawMembershipNFTFunds": {
          "92": [
            9898,
            9969
          ]
        }
      },
      "20": {},
      "3": {},
      "39": {},
      "5": {
        "ERC721._approve": {
          "120": [
            11242,
            11271
          ],
          "121": [
            11281,
            11332
          ]
        },
        "ERC721._baseURI": {
          "100": [
            3464,
            3473
          ]
        },
        "ERC721._checkOnERC721Received": {
          "159": [
            12820,
            12880
          ],
          "160": [
            12654,
            12712
          ],
          "161": [
            13084,
            13095
          ]
        },
        "ERC721._exists": {
          "119": [
            7240,
            7277
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "124": [
            7551,
            7624
          ],
          "125": [
            7683,
            7779
          ]
        },
        "ERC721._mint": {
          "134": [
            9149,
            9210
          ],
          "135": [
            9220,
            9278
          ],
          "136": [
            9345,
            9363
          ],
          "137": [
            9373,
            9394
          ],
          "138": [
            9405,
            9443
          ],
          "139": [
            9454,
            9498
          ]
        },
        "ERC721._safeTransfer": {
          "145": [
            6700,
            6728
          ],
          "146": [
            6738,
            6849
          ]
        },
        "ERC721._setApprovalForAll": {
          "142": [
            11607,
            11662
          ],
          "143": [
            11672,
            11718
          ],
          "144": [
            11728,
            11774
          ]
        },
        "ERC721._transfer": {
          "126": [
            10571,
            10652
          ],
          "127": [
            10662,
            10727
          ],
          "128": [
            10839,
            10868
          ],
          "129": [
            10879,
            10899
          ],
          "130": [
            10909,
            10927
          ],
          "131": [
            10937,
            10958
          ],
          "132": [
            10969,
            11001
          ],
          "133": [
            11012,
            11050
          ]
        },
        "ERC721.approve": {
          "7": [
            3666,
            3723
          ],
          "9": [
            3734,
            3899
          ],
          "10": [
            3910,
            3931
          ]
        },
        "ERC721.balanceOf": {
          "47": [
            2020,
            2094
          ],
          "48": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4094,
            4167
          ],
          "6": [
            4178,
            4209
          ]
        },
        "ERC721.isApprovedForAll": {
          "1": [
            4615,
            4657
          ]
        },
        "ERC721.name": {
          "4": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "44": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "25": [
            5255,
            5294
          ],
          "79": [
            5528,
            5631
          ],
          "80": [
            5641,
            5680
          ]
        },
        "ERC721.setApprovalForAll": {
          "77": [
            4377,
            4429
          ]
        },
        "ERC721.supportsInterface": {
          "2": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "75": [
            2731,
            2745
          ]
        },
        "ERC721.tokenURI": {
          "152": [
            2916,
            2992
          ],
          "153": [
            3047,
            3140
          ]
        },
        "ERC721.transferFrom": {
          "16": [
            4907,
            5010
          ],
          "17": [
            5021,
            5049
          ]
        }
      },
      "6": {},
      "8": {
        "ERC721URIStorage._setTokenURI": {
          "122": [
            1368,
            1443
          ],
          "123": [
            1453,
            1484
          ]
        },
        "ERC721URIStorage.tokenURI": {
          "99": [
            565,
            643
          ],
          "101": [
            852,
            868
          ],
          "102": [
            1024,
            1072
          ],
          "103": [
            1093,
            1123
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "CardinalToken",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721URIStorage",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Metadata",
    "IUniswapV2Factory",
    "IUniswapV2Router02",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106103a45760003560e01c80638f01785d116101e9578063c79ba39c1161010f578063e4e0a931116100ad578063f2fde38b1161007c578063f2fde38b14610854578063fd18b84114610867578063fe0596f21461087a578063ffeab8a41461088357600080fd5b8063e4e0a931146107ea578063e985e9c5146107f2578063ebaa42ed1461082e578063eecbbec41461084157600080fd5b8063d2793d4a116100e9578063d2793d4a1461078f578063d473dab1146107a2578063daa17f49146107b7578063dca8bc47146107ca57600080fd5b8063c79ba39c14610756578063c87b56dd14610769578063ca6d56dc1461077c57600080fd5b8063b15d8d5f11610187578063b88d4fde11610156578063b88d4fde14610715578063bb3b407b14610728578063beb483261461073b578063c34e37821461074357600080fd5b8063b15d8d5f146106b9578063b27a5f98146106cc578063b43affda146106df578063b5c4b23d146106f257600080fd5b806396291db6116101c357806396291db614610669578063a22cb4651461067c578063aa46a4001461068f578063b063c9541461069957600080fd5b80638f01785d14610646578063959148751461065957806395d89b411461066157600080fd5b80634623c740116102ce57806370a082311161026c5780637498d2801161023b5780637498d280146106075780637867ccd11461060f57806386794f66146106225780638da5cb5b1461063557600080fd5b806370a08231146105d0578063715018a6146105e357806371af8374146105eb5780637417353f146105f457600080fd5b80635c23a67a116102a85780635c23a67a146105615780636352211e1461058a57806366a98ea31461059d5780636f48853b146105b057600080fd5b80634623c7401461053257806346d362301461054557806356060a741461054e57600080fd5b8063162094c4116103465780632517fc07116103155780632517fc07146104bc57806328da575b146104dc57806333a41510146104ff57806342842e0e1461051f57600080fd5b8063162094c41461047a578063175501651461048d5780631c652fb51461049657806323b872dd146104a957600080fd5b8063095ea7b311610382578063095ea7b3146104115780630b1ca49a146104265780630e1bac891461043957806311ab8df51461044c57600080fd5b806301ffc9a7146103a957806306fdde03146103d1578063081812fc146103e6575b600080fd5b6103bc6103b7366004613365565b610896565b60405190151581526020015b60405180910390f35b6103d96108e8565b6040516103c891906133da565b6103f96103f43660046133ed565b61097a565b6040516001600160a01b0390911681526020016103c8565b61042461041f36600461341b565b610a07565b005b610424610434366004613447565b610b1d565b600a546103f9906001600160a01b031681565b61046c61045a3660046133ed565b60106020526000908152604090205481565b6040519081526020016103c8565b610424610488366004613510565b610baf565b61046c60145481565b6104246104a4366004613557565b610c1f565b6104246104b7366004613579565b610c5b565b61046c6104ca366004613447565b60126020526000908152604090205481565b6103bc6104ea366004613447565b600e6020526000908152604090205460ff1681565b61051261050d366004613447565b610c8c565b6040516103c891906135ba565b61042461052d366004613579565b610e26565b61046c61054036600461361c565b610e41565b61046c60135481565b61051261055c366004613447565b610f98565b6103f961056f3660046133ed565b600d602052600090815260409020546001600160a01b031681565b6103f96105983660046133ed565b6110f6565b6104246105ab3660046133ed565b61116d565b61046c6105be3660046133ed565b600b6020526000908152604090205481565b61046c6105de366004613447565b6111f4565b61042461127b565b61046c60155481565b61042461060236600461341b565b6112b1565b61046c611309565b61042461061d366004613557565b611785565b6104246106303660046133ed565b6117c1565b6007546001600160a01b03166103f9565b610512610654366004613447565b611810565b6103d9611938565b6103d96119c6565b610424610677366004613670565b6119d5565b61042461068a3660046136b3565b611a16565b60085461046c9081565b61046c6106a73660046133ed565b600c6020526000908152604090205481565b61046c6106c73660046133ed565b611a21565b6104246106da3660046136b3565b611a42565b61046c6106ed3660046133ed565b611a97565b6103bc610700366004613447565b60116020526000908152604090205460ff1681565b6104246107233660046136ec565b611aa7565b61046c61073636600461376c565b611adf565b610424611eda565b610512610751366004613447565b612023565b610424610764366004613557565b612181565b6103d96107773660046133ed565b6121bd565b61042461078a366004613447565b61232c565b61042461079d366004613447565b6123bd565b6107aa612409565b6040516103c891906137a1565b6009546103f9906001600160a01b031681565b61046c6107d8366004613447565b600f6020526000908152604090205481565b6107aa612460565b6103bc6108003660046137e5565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61042461083c3660046133ed565b6124b6565b61042461084f3660046133ed565b612513565b610424610862366004613447565b612546565b61042461087536600461341b565b6125de565b61046c60195481565b6104246108913660046133ed565b6126a0565b60006001600160e01b031982166380ac58cd60e01b14806108c757506001600160e01b03198216635b5e139f60e01b145b806108e257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546108f790613813565b80601f016020809104026020016040519081016040528092919081815260200182805461092390613813565b80156109705780601f1061094557610100808354040283529160200191610970565b820191906000526020600020905b81548152906001019060200180831161095357829003601f168201915b5050505050905090565b6000610985826126f2565b6109eb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610a12826110f6565b9050806001600160a01b0316836001600160a01b03161415610a805760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016109e2565b336001600160a01b0382161480610a9c5750610a9c8133610800565b610b0e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016109e2565b610b18838361270f565b505050565b3360009081526011602052604090205460ff16610b8e5760405162461bcd60e51b815260206004820152602960248201527f4f6e6c7920636f6e74726163742061646d696e732063616e2072656d6f766520604482015268309036b2b6b132b91760b91b60648201526084016109e2565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b6007546001600160a01b03163314610bd95760405162461bcd60e51b81526004016109e29061384e565b610be3828261277d565b817fc794e2271b51f209d8a645eec85692351ad1adc857ab2e06f9c5af7961cf07d582604051610c1391906133da565b60405180910390a25050565b6007546001600160a01b03163314610c495760405162461bcd60e51b81526004016109e29061384e565b60009182526010602052604090912055565b610c653382612808565b610c815760405162461bcd60e51b81526004016109e290613883565b610b188383836128ee565b60606000610c9960085490565b905060008060015b838111610d1e57856001600160a01b0316610cbb826110f6565b6001600160a01b0316148015610cf957506013546000828152600b60205260409020541480610cf957506014546000828152600b6020526040902054145b15610d0c57610d096001846138ea565b92505b80610d1681613902565b915050610ca1565b5060008267ffffffffffffffff811115610d3a57610d3a613464565b604051908082528060200260200182016040528015610d6d57816020015b6060815260200190600190039081610d585790505b50905060015b848111610e1c57866001600160a01b0316610d8d826110f6565b6001600160a01b0316148015610dcb57506013546000828152600b60205260409020541480610dcb57506014546000828152600b6020526040902054145b15610e0a576000610ddb826121bd565b905080838581518110610df057610df061391d565b6020908102919091010152610e066001856138ea565b9350505b80610e1481613902565b915050610d73565b5095945050505050565b610b1883838360405180602001604052806000815250611aa7565b6007546000906001600160a01b03163314610e6e5760405162461bcd60e51b81526004016109e29061384e565b610e7c600880546001019055565b6000610e8760085490565b6000818152600b60209081526040808320899055600c90915290208590559050610eb13382612a90565b610ebb818761277d565b610ec53082610a07565b600954610edc906001600160a01b03166001611a16565b601354851415610f2057601680546001810182556000919091527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428901819055610f8d565b601454851415610f8d57601780546001810182556000919091527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15018190558215610f7b576000818152601060205260409020839055610f8d565b60008181526010602052604090204290555b90505b949350505050565b60606000610fa560085490565b905060008060015b83811161101157856001600160a01b0316610fc7826110f6565b6001600160a01b0316148015610fec57506013546000828152600b6020526040902054145b15610fff57610ffc6001846138ea565b92505b8061100981613902565b915050610fad565b5060008267ffffffffffffffff81111561102d5761102d613464565b60405190808252806020026020018201604052801561106057816020015b606081526020019060019003908161104b5790505b50905060015b848111610e1c57866001600160a01b0316611080826110f6565b6001600160a01b03161480156110a557506013546000828152600b6020526040902054145b156110e45760006110b5826121bd565b9050808385815181106110ca576110ca61391d565b60209081029190910101526110e06001856138ea565b9350505b806110ee81613902565b915050611066565b6000818152600260205260408120546001600160a01b0316806108e25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016109e2565b6007546001600160a01b031633146111975760405162461bcd60e51b81526004016109e29061384e565b6013819055604051751bdc9a59da5b985b10d85c991a5b985b151e5c19525960521b815281906016015b604051908190038120907fa611ba47a2a0887b794d3e097d5cfb33522f6ed26df589ccd12c01d5c584800a90600090a350565b60006001600160a01b03821661125f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016109e2565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146112a55760405162461bcd60e51b81526004016109e29061384e565b6112af6000612bcb565b565b6007546001600160a01b031633146112db5760405162461bcd60e51b81526004016109e29061384e565b6000908152600d6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6019543360009081526012602052604081205490919015611350573360009081526012602052604090205460195460649161134391613933565b61134d9190613968565b90505b600a546040516370a0823160e01b815233600482015282916001600160a01b0316906370a082319060240160206040518083038186803b15801561139357600080fd5b505afa1580156113a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cb919061397c565b101561144d5760405162461bcd60e51b8152602060048201526044602482018190527f596f7520646f6e2774206861766520656e6f7567682043617264696e616c2054908201527f6f6b656e7320746f2070617920666f7220746865206d656d626572736869702060648201526327232a1760e11b608482015260a4016109e2565b600a54604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e9060440160206040518083038186803b15801561149657600080fd5b505afa1580156114aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ce919061397c565b101561157a5760405162461bcd60e51b815260206004820152606960248201527f596f7520686176656e277420617070726f766564207468697320636f6e74726160448201527f637420746f207370656e6420656e6f756768206f6620796f757220436172646960648201527f6e616c20546f6b656e7320746f2070617920666f7220746865206d656d62657260848201526839b434b81027232a1760b91b60a482015260c4016109e2565b600a546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156115cc57600080fd5b505af11580156115e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116049190613995565b50611613600880546001019055565b600061161e60085490565b6014546000828152600b6020908152604080832093909355600c905290812055905061164a3382612a90565b60008181526010602090815260408083204290553383526012909152812055601880546116ff91839161167c90613813565b80601f01602080910402602001604051908101604052809291908181526020018280546116a890613813565b80156116f55780601f106116ca576101008083540402835291602001916116f5565b820191906000526020600020905b8154815290600101906020018083116116d857829003601f168201915b505050505061277d565b6117093082610a07565b600954611720906001600160a01b03166001611a16565b6017805460018101825560009182527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1501829055604051829133917f7430cefc529011c1b720a4803c3a12db2bfdf282e089e2d26ff4929ef11a703c9190a392915050565b6007546001600160a01b031633146117af5760405162461bcd60e51b81526004016109e29061384e565b6000918252600c602052604090912055565b6007546001600160a01b031633146117eb5760405162461bcd60e51b81526004016109e29061384e565b60158190556040516c1cd95c9d9a58d9551e5c195259609a1b81528190600d016111c1565b6060600061181d60085490565b905060008060015b83811161186e57856001600160a01b031661183f826110f6565b6001600160a01b0316141561185c576118596001846138ea565b92505b8061186681613902565b915050611825565b5060008267ffffffffffffffff81111561188a5761188a613464565b6040519080825280602002602001820160405280156118bd57816020015b60608152602001906001900390816118a85790505b50905060015b848111610e1c57866001600160a01b03166118dd826110f6565b6001600160a01b031614156119265760006118f7826121bd565b90508083858151811061190c5761190c61391d565b60209081029190910101526119226001856138ea565b9350505b8061193081613902565b9150506118c3565b6018805461194590613813565b80601f016020809104026020016040519081016040528092919081815260200182805461197190613813565b80156119be5780601f10611993576101008083540402835291602001916119be565b820191906000526020600020905b8154815290600101906020018083116119a157829003601f168201915b505050505081565b6060600180546108f790613813565b6007546001600160a01b031633146119ff5760405162461bcd60e51b81526004016109e29061384e565b8051611a129060189060208401906132b6565b5050565b611a12338383612c1d565b60178181548110611a3157600080fd5b600091825260209091200154905081565b6007546001600160a01b03163314611a6c5760405162461bcd60e51b81526004016109e29061384e565b6001600160a01b03919091166000908152601160205260409020805460ff1916911515919091179055565b60168181548110611a3157600080fd5b611ab13383612808565b611acd5760405162461bcd60e51b81526004016109e290613883565b611ad984848484612cec565b50505050565b6007546000906001600160a01b03163314611b0c5760405162461bcd60e51b81526004016109e29061384e565b836001600160a01b0316611b1f846110f6565b6001600160a01b031614611b895760405162461bcd60e51b815260206004820152602b60248201527f54686973206164647265737320646f65736e2774206f776e20746865204e465460448201526a1039b832b1b4b334b2b21760a91b60648201526084016109e2565b6007546001600160a01b0316611b9e846110f6565b6001600160a01b031614158015611bd157506009546001600160a01b0316611bc5846110f6565b6001600160a01b031614155b611c435760405162461bcd60e51b815260206004820152603960248201527f43616e27742063686172676520746865206f776e6572206f72206d61726b657460448201527f706c61636520666f7220746865206d656d626572736869702e0000000000000060648201526084016109e2565b6019546001600160a01b03851660009081526012602052604090205415611c99576001600160a01b038516600090815260126020526040902054601954606491611c8c91613933565b611c969190613968565b90505b600a546040516370a0823160e01b81526001600160a01b038781166004830152839216906370a082319060240160206040518083038186803b158015611cde57600080fd5b505afa158015611cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d16919061397c565b1080611da25750600a54604051636eb1769f60e11b81526001600160a01b0387811660048301523060248301528392169063dd62ed3e9060440160206040518083038186803b158015611d6857600080fd5b505afa158015611d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da0919061397c565b105b15611dba57611db084612d1f565b6001915050611ed3565b600a546040516323b872dd60e01b81526001600160a01b03878116600483015230602483015260448201849052909116906323b872dd90606401602060405180830381600087803b158015611e0e57600080fd5b505af1158015611e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e469190613995565b508215611e63576000848152601060205260409020839055611e75565b60008481526010602052604090204290555b6001600160a01b03851660008181526012602090815260408083209290925581518481529081018690528692917f9170d37d9d267e1d271f28f3f225ac7e95b00677566675ba1d251944eb3c5924910160405180910390a360009150505b9392505050565b6007546001600160a01b03163314611f045760405162461bcd60e51b81526004016109e29061384e565b600a546001600160a01b031663a9059cbb611f276007546001600160a01b031690565b600a546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015611f6a57600080fd5b505afa158015611f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa2919061397c565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015611fe857600080fd5b505af1158015611ffc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120209190613995565b50565b6060600061203060085490565b905060008060015b83811161209c57856001600160a01b0316612052826110f6565b6001600160a01b031614801561207757506015546000828152600b6020526040902054145b1561208a576120876001846138ea565b92505b8061209481613902565b915050612038565b5060008267ffffffffffffffff8111156120b8576120b8613464565b6040519080825280602002602001820160405280156120eb57816020015b60608152602001906001900390816120d65790505b50905060015b848111610e1c57866001600160a01b031661210b826110f6565b6001600160a01b031614801561213057506015546000828152600b6020526040902054145b1561216f576000612140826121bd565b9050808385815181106121555761215561391d565b602090810291909101015261216b6001856138ea565b9350505b8061217981613902565b9150506120f1565b6007546001600160a01b031633146121ab5760405162461bcd60e51b81526004016109e29061384e565b6000918252600b602052604090912055565b60606121c8826126f2565b61222e5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016109e2565b6000828152600660205260408120805461224790613813565b80601f016020809104026020016040519081016040528092919081815260200182805461227390613813565b80156122c05780601f10612295576101008083540402835291602001916122c0565b820191906000526020600020905b8154815290600101906020018083116122a357829003601f168201915b5050505050905060006122de60408051602081019091526000815290565b90508051600014156122f1575092915050565b81511561232357808260405160200161230b9291906139b2565b60405160208183030381529060405292505050919050565b610f9084612e5e565b3360009081526011602052604090205460ff166123995760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920636f6e74726163742061646d696e732063616e20616464206d656d6044820152643132b9399760d91b60648201526084016109e2565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b6007546001600160a01b031633146123e75760405162461bcd60e51b81526004016109e29061384e565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6060601780548060200260200160405190810160405280929190818152602001828054801561097057602002820191906000526020600020905b815481526020019060010190808311612443575050505050905090565b606060168054806020026020016040519081016040528092919081815260200182805480156109705760200282019190600052602060002090815481526020019060010190808311612443575050505050905090565b6007546001600160a01b031633146124e05760405162461bcd60e51b81526004016109e29061384e565b601981905560405181907f1361f6a741cb766ea2f0be44a0e1686df0e08320be065f6c8df9e4f639ab297a90600090a250565b6007546001600160a01b0316331461253d5760405162461bcd60e51b81526004016109e29061384e565b61202081612d1f565b6007546001600160a01b031633146125705760405162461bcd60e51b81526004016109e29061384e565b6001600160a01b0381166125d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109e2565b61202081612bcb565b3360009081526011602052604090205460ff166126595760405162461bcd60e51b815260206004820152603360248201527f4f6e6c7920636f6e74726163742061646d696e732063616e207365742061206d60448201527232b6b132b939b434b8103234b9b1b7bab73a1760691b60648201526084016109e2565b6001600160a01b038216600081815260126020526040808220849055518392917f874556b552951a64a8a3f7627516f395097b3de40cf93b85e87b03118cc02cf091a35050565b6007546001600160a01b031633146126ca5760405162461bcd60e51b81526004016109e29061384e565b60148190556040516f1b595b58995c9cda1a5c151e5c19525960821b815281906010016111c1565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190612744826110f6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b612786826126f2565b6127e95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016109e2565b60008281526006602090815260409091208251610b18928401906132b6565b6000612813826126f2565b6128745760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016109e2565b600061287f836110f6565b9050806001600160a01b0316846001600160a01b031614806128ba5750836001600160a01b03166128af8461097a565b6001600160a01b0316145b80610f9057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610f90565b826001600160a01b0316612901826110f6565b6001600160a01b0316146129655760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016109e2565b6001600160a01b0382166129c75760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016109e2565b6129d260008261270f565b6001600160a01b03831660009081526003602052604081208054600192906129fb9084906139e1565b90915550506001600160a01b0382166000908152600360205260408120805460019290612a299084906138ea565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4610b18838383612f35565b6001600160a01b038216612ae65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016109e2565b612aef816126f2565b15612b3c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016109e2565b6001600160a01b0382166000908152600360205260408120805460019290612b659084906138ea565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4611a1260008383612f35565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415612c7f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016109e2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612cf78484846128ee565b612d03848484846130ae565b611ad95760405162461bcd60e51b81526004016109e2906139f8565b60005b601754811015611a12578160178281548110612d4057612d4061391d565b90600052602060002001541415612e4c576000612d7960178381548110612d6957612d6961391d565b90600052602060002001546110f6565b9050612da3813060178581548110612d9357612d9361391d565b90600052602060002001546128ee565b60405183906001600160a01b038316907f5ab068fe2788c545757bcb78e3b2d842e34ec21c90f26c60e5ce7686e90b874990600090a360178054612de9906001906139e1565b81548110612df957612df961391d565b906000526020600020015460178381548110612e1757612e1761391d565b6000918252602090912001556017805480612e3457612e34613a4a565b60019003818190600052602060002001600090559055505b80612e5681613902565b915050612d22565b6060612e69826126f2565b612ecd5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016109e2565b6000612ee460408051602081019091526000815290565b90506000815111612f045760405180602001604052806000815250611ed3565b80612f0e846131b8565b604051602001612f1f9291906139b2565b6040516020818303038152906040529392505050565b6014546000828152600b60205260409020541480612f6257506013546000828152600b6020526040902054145b15610b18576007546001600160a01b03848116911614801590612f9357506009546001600160a01b03848116911614155b8015612fa757506001600160a01b03831615155b15613055576001600160a01b0383166000908152600f602052604090205415613034576001600160a01b0383166000908152600f6020526040902054612fef906001906139e1565b6001600160a01b0384166000908152600f6020526040902081905561302f576001600160a01b0383166000908152600e60205260409020805460ff191690555b613055565b6001600160a01b0383166000908152600e60205260409020805460ff191690555b6001600160a01b0382166000908152600e60209081526040808320805460ff19166001908117909155600f90925290912054613090916138ea565b6001600160a01b0383166000908152600f6020526040902055505050565b60006001600160a01b0384163b156131b057604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906130f2903390899088908890600401613a60565b602060405180830381600087803b15801561310c57600080fd5b505af192505050801561313c575060408051601f3d908101601f1916820190925261313991810190613a9d565b60015b613196573d80801561316a576040519150601f19603f3d011682016040523d82523d6000602084013e61316f565b606091505b50805161318e5760405162461bcd60e51b81526004016109e2906139f8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f90565b506001610f90565b6060816131dc5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561320657806131f081613902565b91506131ff9050600a83613968565b91506131e0565b60008167ffffffffffffffff81111561322157613221613464565b6040519080825280601f01601f19166020018201604052801561324b576020820181803683370190505b5090505b8415610f90576132606001836139e1565b915061326d600a86613aba565b6132789060306138ea565b60f81b81838151811061328d5761328d61391d565b60200101906001600160f81b031916908160001a9053506132af600a86613968565b945061324f565b8280546132c290613813565b90600052602060002090601f0160209004810192826132e4576000855561332a565b82601f106132fd57805160ff191683800117855561332a565b8280016001018555821561332a579182015b8281111561332a57825182559160200191906001019061330f565b5061333692915061333a565b5090565b5b80821115613336576000815560010161333b565b6001600160e01b03198116811461202057600080fd5b60006020828403121561337757600080fd5b8135611ed38161334f565b60005b8381101561339d578181015183820152602001613385565b83811115611ad95750506000910152565b600081518084526133c6816020860160208601613382565b601f01601f19169290920160200192915050565b602081526000611ed360208301846133ae565b6000602082840312156133ff57600080fd5b5035919050565b6001600160a01b038116811461202057600080fd5b6000806040838503121561342e57600080fd5b823561343981613406565b946020939093013593505050565b60006020828403121561345957600080fd5b8135611ed381613406565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561349557613495613464565b604051601f8501601f19908116603f011681019082821181831017156134bd576134bd613464565b816040528093508581528686860111156134d657600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261350157600080fd5b611ed38383356020850161347a565b6000806040838503121561352357600080fd5b82359150602083013567ffffffffffffffff81111561354157600080fd5b61354d858286016134f0565b9150509250929050565b6000806040838503121561356a57600080fd5b50508035926020909101359150565b60008060006060848603121561358e57600080fd5b833561359981613406565b925060208401356135a981613406565b929592945050506040919091013590565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561360f57603f198886030184526135fd8583516133ae565b945092850192908501906001016135e1565b5092979650505050505050565b6000806000806080858703121561363257600080fd5b843567ffffffffffffffff81111561364957600080fd5b613655878288016134f0565b97602087013597506040870135966060013595509350505050565b60006020828403121561368257600080fd5b813567ffffffffffffffff81111561369957600080fd5b610f90848285016134f0565b801515811461202057600080fd5b600080604083850312156136c657600080fd5b82356136d181613406565b915060208301356136e1816136a5565b809150509250929050565b6000806000806080858703121561370257600080fd5b843561370d81613406565b9350602085013561371d81613406565b925060408501359150606085013567ffffffffffffffff81111561374057600080fd5b8501601f8101871361375157600080fd5b6137608782356020840161347a565b91505092959194509250565b60008060006060848603121561378157600080fd5b833561378c81613406565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b818110156137d9578351835292840192918401916001016137bd565b50909695505050505050565b600080604083850312156137f857600080fd5b823561380381613406565b915060208301356136e181613406565b600181811c9082168061382757607f821691505b6020821081141561384857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156138fd576138fd6138d4565b500190565b6000600019821415613916576139166138d4565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561394d5761394d6138d4565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261397757613977613952565b500490565b60006020828403121561398e57600080fd5b5051919050565b6000602082840312156139a757600080fd5b8151611ed3816136a5565b600083516139c4818460208801613382565b8351908301906139d8818360208801613382565b01949350505050565b6000828210156139f3576139f36138d4565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613a93908301846133ae565b9695505050505050565b600060208284031215613aaf57600080fd5b8151611ed38161334f565b600082613ac957613ac9613952565b50069056fea2646970667358221220efdd2e9cefb0548bd8968b2f9e281ca0e9e07c3b6915727ea7403d0d6751338864736f6c63430008080033",
  "deployedSourceMap": "445:21264:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:5;;;;;;:::i;:::-;;:::i;:::-;;;565:14:40;;558:22;540:41;;528:2;513:18;1570:300:5;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:40;;;1674:51;;1662:2;1647:18;3999:217:5;1528:203:40;3537:401:5;;;;;;:::i;:::-;;:::i;:::-;;20904:200:19;;;;;;:::i;:::-;;:::i;763:34::-;;;;;-1:-1:-1;;;;;763:34:19;;;1800:58;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2828:25:40;;;2816:2;2801:18;1800:58:19;2682:177:40;11664:187:19;;;;;;:::i;:::-;;:::i;2299:35::-;;;;;;7693:169;;;;;;:::i;:::-;;:::i;4726:330:5:-;;;;;;:::i;:::-;;:::i;2086:63:19:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1444:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14154:943;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5122:179:5:-;;;;;;:::i;:::-;;:::i;10483:975:19:-;;;;;;:::i;:::-;;:::i;2207:41::-;;;;;;13060:859;;;;;;:::i;:::-;;:::i;1269:60::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1269:60:19;;;2191:235:5;;;;;;:::i;:::-;;:::i;17968:240:19:-;;;;;;:::i;:::-;;:::i;1002:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1929:205:5;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;2382:32:19:-;;;;;;16962:161;;;;;;:::i;:::-;;:::i;5911:1453::-;;;:::i;17320:151::-;;;;;;:::i;:::-;;:::i;18725:186::-;;;;;;:::i;:::-;;:::i;1036:85:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;1036:85;;12066:745:19;;;;;;:::i;:::-;;:::i;2647:32::-;;;:::i;2650:102:5:-;;;:::i;19052:149:19:-;;;;;;:::i;:::-;;:::i;4283:153:5:-;;;;;;:::i;:::-;;:::i;588:33:19:-;;;;;;;1145:54;;;;;;:::i;:::-;;;;;;;;;;;;;;2560:35;;;;;;:::i;:::-;;:::i;20131:132::-;;;;;;:::i;:::-;;:::i;2470:41::-;;;;;;:::i;:::-;;:::i;1969:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5367:320:5;;;;;;:::i;:::-;;:::i;8318:1372:19:-;;;;;;:::i;:::-;;:::i;9831:145::-;;;:::i;15326:832::-;;;;;;:::i;:::-;;:::i;17652:135::-;;;;;;:::i;:::-;;:::i;467:663:8:-;;;;;;:::i;:::-;;:::i;20476:192:19:-;;;;;;:::i;:::-;;:::i;19765:151::-;;;;;;:::i;:::-;;:::i;16564:116::-;;;:::i;:::-;;;;;;;:::i;676:33::-;;;;;-1:-1:-1;;;;;676:33:19;;;1638:58;;;;;;:::i;:::-;;;;;;;;;;;;;;16304:128;;;:::i;4502:162:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4622:25:5;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162;19379:204:19;;;;;;:::i;:::-;;:::i;4466:115::-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;21385:322:19:-;;;;;;:::i;:::-;;:::i;2752:46::-;;;;;;18369:204;;;;;;:::i;:::-;;:::i;1570:300:5:-;1672:4;-1:-1:-1;;;;;;1707:40:5;;-1:-1:-1;;;1707:40:5;;:104;;-1:-1:-1;;;;;;;1763:48:5;;-1:-1:-1;;;1763:48:5;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:5;1688:175;1570:300;-1:-1:-1;;1570:300:5:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;4102:16;4110:7;4102;:16::i;:::-;4094:73;;;;-1:-1:-1;;;4094:73:5;;10211:2:40;4094:73:5;;;10193:21:40;10250:2;10230:18;;;10223:30;10289:34;10269:18;;;10262:62;-1:-1:-1;;;10340:18:40;;;10333:42;10392:19;;4094:73:5;;;;;;;;;-1:-1:-1;4185:24:5;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:5;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:5;:2;-1:-1:-1;;;;;3674:11:5;;;3666:57;;;;-1:-1:-1;;;3666:57:5;;10624:2:40;3666:57:5;;;10606:21:40;10663:2;10643:18;;;10636:30;10702:34;10682:18;;;10675:62;-1:-1:-1;;;10753:18:40;;;10746:31;10794:19;;3666:57:5;10422:397:40;3666:57:5;719:10:11;-1:-1:-1;;;;;3755:21:5;;;;:62;;-1:-1:-1;3780:37:5;3797:5;719:10:11;4502:162:5;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:5;;11026:2:40;3734:165:5;;;11008:21:40;11065:2;11045:18;;;11038:30;11104:34;11084:18;;;11077:62;11175:26;11155:18;;;11148:54;11219:19;;3734:165:5;10824:420:40;3734:165:5;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;20904:200:19:-;20991:10;20976:26;;;;:14;:26;;;;;;;;20968:80;;;;-1:-1:-1;;;20968:80:19;;11451:2:40;20968:80:19;;;11433:21:40;11490:2;11470:18;;;11463:30;11529:34;11509:18;;;11502:62;-1:-1:-1;;;11580:18:40;;;11573:39;11629:19;;20968:80:19;11249:405:40;20968:80:19;-1:-1:-1;;;;;21059:30:19;21092:5;21059:30;;;:15;:30;;;;;:38;;-1:-1:-1;;21059:38:19;;;20904:200::o;11664:187::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;11758:34:19::1;11771:7;11780:11;11758:12;:34::i;:::-;11823:7;11807:37;11832:11;11807:37;;;;;;:::i;:::-;;;;;;;;11664:187:::0;;:::o;7693:169::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7803:32:19::1;::::0;;;:23:::1;:32;::::0;;;;;:52;7693:169::o;4726:330:5:-;4915:41;719:10:11;4948:7:5;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:5;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;14154:943:19:-;14234:15;14261:13;14277:19;:9;918:14:12;;827:112;14277:19:19;14261:35;-1:-1:-1;14306:17:19;;14384:1;14369:240;14393:8;14387:2;:14;14369:240;;14442:11;-1:-1:-1;;;;;14427:26:19;:11;14435:2;14427:7;:11::i;:::-;-1:-1:-1;;;;;14427:26:19;;:120;;;;-1:-1:-1;14481:22:19;;14458:19;;;;:15;:19;;;;;;:45;;:88;;-1:-1:-1;14530:16:19;;14507:19;;;;:15;:19;;;;;;:39;14458:88;14423:176;;;14567:17;14583:1;14567:17;;:::i;:::-;;;14423:176;14403:4;;;;:::i;:::-;;;;14369:240;;;;14619:32;14667:12;14654:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14619:61:19;-1:-1:-1;14706:1:19;14691:358;14715:8;14709:2;:14;14691:358;;14764:11;-1:-1:-1;;;;;14749:26:19;:11;14757:2;14749:7;:11::i;:::-;-1:-1:-1;;;;;14749:26:19;;:120;;;;-1:-1:-1;14803:22:19;;14780:19;;;;:15;:19;;;;;;:45;;:88;;-1:-1:-1;14852:16:19;;14829:19;;;;:15;:19;;;;;;:39;14780:88;14745:294;;;14889:24;14916:12;14925:2;14916:8;:12::i;:::-;14889:39;;14979:10;14946:16;14963:12;14946:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;15007:17;15023:1;15007:17;;:::i;:::-;;;14871:168;14745:294;14725:4;;;;:::i;:::-;;;;14691:358;;;-1:-1:-1;15074:16:19;14154:943;-1:-1:-1;;;;;14154:943:19:o;5122:179:5:-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;10483:975:19:-;1108:6:0;;10618:4:19;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;10634:21:19::1;:9;1032:19:12::0;;1050:1;1032:19;;;945:123;10634:21:19::1;10665:17;10685:19;:9;918:14:12::0;;827:112;10685:19:19::1;10715:26;::::0;;;:15:::1;:26;::::0;;;;;;;:35;;;10760:19:::1;:30:::0;;;;;:43;;;10665:39;-1:-1:-1;10813:28:19::1;10819:10;10665:39:::0;10813:5:::1;:28::i;:::-;10851:36;10864:9;10875:11;10851:12;:36::i;:::-;10897:33;10913:4;10920:9;10897:7;:33::i;:::-;10958:18;::::0;10940:43:::1;::::0;-1:-1:-1;;;;;10958:18:19::1;::::0;10940:17:::1;:43::i;:::-;11008:22;;10998:6;:32;10994:431;;;11046:24;:40:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;11046:40:19;;;;;::::1;::::0;;;10994:431:::1;;;11125:16;;11115:6;:26;11111:314;;;11157:18;:34:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;11157:34:19;;;;;::::1;::::0;;;11210:17;;11206:209:::1;;11247:34;::::0;;;:23:::1;:34;::::0;;;;:50;;;11206:209:::1;;;11348:34;::::0;;;:23:::1;:34;::::0;;;;11385:15:::1;11348:52:::0;;11206:209:::1;11442:9:::0;-1:-1:-1;1318:1:0::1;10483:975:19::0;;;;;;:::o;13060:859::-;13146:15;13173:13;13189:19;:9;918:14:12;;827:112;13189:19:19;13173:35;-1:-1:-1;13218:17:19;;13296:1;13281:195;13305:8;13299:2;:14;13281:195;;13354:11;-1:-1:-1;;;;;13339:26:19;:11;13347:2;13339:7;:11::i;:::-;-1:-1:-1;;;;;13339:26:19;;:75;;;;-1:-1:-1;13392:22:19;;13369:19;;;;:15;:19;;;;;;:45;13339:75;13335:131;;;13434:17;13450:1;13434:17;;:::i;:::-;;;13335:131;13315:4;;;;:::i;:::-;;;;13281:195;;;;13486:32;13534:12;13521:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13486:61:19;-1:-1:-1;13573:1:19;13558:313;13582:8;13576:2;:14;13558:313;;13631:11;-1:-1:-1;;;;;13616:26:19;:11;13624:2;13616:7;:11::i;:::-;-1:-1:-1;;;;;13616:26:19;;:75;;;;-1:-1:-1;13669:22:19;;13646:19;;;;:15;:19;;;;;;:45;13616:75;13612:249;;;13711:24;13738:12;13747:2;13738:8;:12::i;:::-;13711:39;;13801:10;13768:16;13785:12;13768:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;13829:17;13845:1;13829:17;;:::i;:::-;;;13693:168;13612:249;13592:4;;;;:::i;:::-;;;;13558:313;;2191:235:5;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:5;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:5;;13177:2:40;2324:73:5;;;13159:21:40;13216:2;13196:18;;;13189:30;13255:34;13235:18;;;13228:62;-1:-1:-1;;;13306:18:40;;;13299:39;13355:19;;2324:73:5;12975:405:40;17968:240:19;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;18070:22:19::1;:50:::0;;;18135:66:::1;::::0;-1:-1:-1;;;13587:37:40;;18070:50:19;;13649:2:40;13640:12;18135:66:19::1;;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;17968:240:::0;:::o;1929:205:5:-;2001:7;-1:-1:-1;;;;;2028:19:5;;2020:74;;;;-1:-1:-1;;;2020:74:5;;13865:2:40;2020:74:5;;;13847:21:40;13904:2;13884:18;;;13877:30;13943:34;13923:18;;;13916:62;-1:-1:-1;;;13994:18:40;;;13987:40;14044:19;;2020:74:5;13663:406:40;2020:74:5;-1:-1:-1;;;;;;2111:16:5;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;16962:161:19:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;17063:34:19::1;::::0;;;:25:::1;:34;::::0;;;;:53;;-1:-1:-1;;;;;;17063:53:19::1;-1:-1:-1::0;;;;;17063:53:19;;;::::1;::::0;;;::::1;::::0;;16962:161::o;5911:1453::-;6020:31;;6094:10;5958:4;6066:39;;;:27;:39;;;;;;5958:4;;6020:31;6066:43;6062:191;;6225:10;6197:39;;;;:27;:39;;;;;;6163:31;;6239:3;;6163:73;;;:::i;:::-;:79;;;;:::i;:::-;6125:117;;6062:191;6271:13;;:35;;-1:-1:-1;;;6271:35:19;;6295:10;6271:35;;;1674:51:40;6310:35:19;;-1:-1:-1;;;;;6271:13:19;;:23;;1647:18:40;;6271:35:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:74;;6263:155;;;;-1:-1:-1;;;6263:155:19;;14895:2:40;6263:155:19;;;14877:21:40;14934:2;14914:18;;;14907:30;;;14973:34;14953:18;;;14946:62;15044:34;15024:18;;;15017:62;-1:-1:-1;;;15095:19:40;;;15088:35;15140:19;;6263:155:19;14693:472:40;6263:155:19;6436:13;;:50;;-1:-1:-1;;;6436:50:19;;6460:10;6436:50;;;15382:34:40;6480:4:19;15432:18:40;;;15425:43;6490:35:19;;-1:-1:-1;;;;;6436:13:19;;:23;;15317:18:40;;6436:50:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:89;;6428:207;;;;-1:-1:-1;;;6428:207:19;;15681:2:40;6428:207:19;;;15663:21:40;15720:3;15700:18;;;15693:31;15760:34;15740:18;;;15733:62;15831:34;15811:18;;;15804:62;15903:34;15882:19;;;15875:63;-1:-1:-1;;;15954:19:40;;;15947:40;16004:19;;6428:207:19;15479:550:40;6428:207:19;6654:13;;:90;;-1:-1:-1;;;6654:90:19;;6681:10;6654:90;;;16274:34:40;6701:4:19;16324:18:40;;;16317:43;16376:18;;;16369:34;;;-1:-1:-1;;;;;6654:13:19;;;;:26;;16209:18:40;;6654:90:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6755:21;:9;1032:19:12;;1050:1;1032:19;;;945:123;6755:21:19;6786:17;6806:19;:9;918:14:12;;827:112;6806:19:19;6865:16;;6836:26;;;;:15;:26;;;;;;;;:45;;;;6891:19;:30;;;;;:34;6786:39;-1:-1:-1;6935:28:19;6941:10;6786:39;6935:5;:28::i;:::-;6973:34;;;;:23;:34;;;;;;;;7010:15;6973:52;;7063:10;7035:39;;:27;:39;;;;;:43;7112:18;7088:43;;;;6997:9;;7088:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:43::i;:::-;7141:33;7157:4;7164:9;7141:7;:33::i;:::-;7202:18;;7184:43;;-1:-1:-1;;;;;7202:18:19;;7184:17;:43::i;:::-;7238:18;:34;;;;;;;-1:-1:-1;7238:34:19;;;;;;;;7288:42;;7262:9;;7308:10;;7288:42;;-1:-1:-1;7288:42:19;7348:9;5911:1453;-1:-1:-1;;5911:1453:19:o;17320:151::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;17420:28:19::1;::::0;;;:19:::1;:28;::::0;;;;;:44;17320:151::o;18725:186::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;18809:13:19::1;:32:::0;;;18856:48:::1;::::0;-1:-1:-1;;;16866:28:40;;18809:32:19;;16919:2:40;16910:12;18856:48:19::1;16664:264:40::0;12066:745:19;12136:15;12163:13;12179:19;:9;918:14:12;;827:112;12179:19:19;12163:35;-1:-1:-1;12208:17:19;;12286:1;12271:146;12295:8;12289:2;:14;12271:146;;12344:11;-1:-1:-1;;;;;12329:26:19;:11;12337:2;12329:7;:11::i;:::-;-1:-1:-1;;;;;12329:26:19;;12325:82;;;12375:17;12391:1;12375:17;;:::i;:::-;;;12325:82;12305:4;;;;:::i;:::-;;;;12271:146;;;;12427:32;12475:12;12462:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12427:61:19;-1:-1:-1;12514:1:19;12499:264;12523:8;12517:2;:14;12499:264;;12572:11;-1:-1:-1;;;;;12557:26:19;:11;12565:2;12557:7;:11::i;:::-;-1:-1:-1;;;;;12557:26:19;;12553:200;;;12603:24;12630:12;12639:2;12630:8;:12::i;:::-;12603:39;;12693:10;12660:16;12677:12;12660:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;12721:17;12737:1;12721:17;;:::i;:::-;;;12585:168;12553:200;12533:4;;;;:::i;:::-;;;;12499:264;;2647:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2650:102:5:-;2706:13;2738:7;2731:14;;;;;:::i;19052:149:19:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;19152:42:19;;::::1;::::0;:18:::1;::::0;:42:::1;::::0;::::1;::::0;::::1;:::i;:::-;;19052:149:::0;:::o;4283:153:5:-;4377:52;719:10:11;4410:8:5;4420;4377:18;:52::i;2560:35:19:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2560:35:19;:::o;20131:132::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;20218:28:19;;;::::1;;::::0;;;:14:::1;:28;::::0;;;;:38;;-1:-1:-1;;20218:38:19::1;::::0;::::1;;::::0;;;::::1;::::0;;20131:132::o;2470:41::-;;;;;;;;;;;;5367:320:5;5536:41;719:10:11;5569:7:5;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:5;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;8318:1372:19:-;1108:6:0;;8437:4:19;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8481:6:19::1;-1:-1:-1::0;;;;;8461:26:19::1;:16;8469:7;8461;:16::i;:::-;-1:-1:-1::0;;;;;8461:26:19::1;;8453:82;;;::::0;-1:-1:-1;;;8453:82:19;;17135:2:40;8453:82:19::1;::::0;::::1;17117:21:40::0;17174:2;17154:18;;;17147:30;17213:34;17193:18;;;17186:62;-1:-1:-1;;;17264:18:40;;;17257:41;17315:19;;8453:82:19::1;16933:407:40::0;8453:82:19::1;1108:6:0::0;;-1:-1:-1;;;;;1108:6:0;8553:16:19::1;8561:7:::0;8553::::1;:16::i;:::-;-1:-1:-1::0;;;;;8553:27:19::1;;;:69;;;;-1:-1:-1::0;8604:18:19::1;::::0;-1:-1:-1;;;;;8604:18:19::1;8584:16;8592:7:::0;8584::::1;:16::i;:::-;-1:-1:-1::0;;;;;8584:38:19::1;;;8553:69;8545:139;;;::::0;-1:-1:-1;;;8545:139:19;;17547:2:40;8545:139:19::1;::::0;::::1;17529:21:40::0;17586:2;17566:18;;;17559:30;17625:34;17605:18;;;17598:62;17696:27;17676:18;;;17669:55;17741:19;;8545:139:19::1;17345:421:40::0;8545:139:19::1;8741:31;::::0;-1:-1:-1;;;;;8787:35:19;::::1;8695:43;8787:35:::0;;;:27:::1;:35;::::0;;;;;:39;8783:183:::1;;-1:-1:-1::0;;;;;8914:35:19;::::1;;::::0;;;:27:::1;:35;::::0;;;;;8880:31:::1;::::0;8952:3:::1;::::0;8880:69:::1;::::0;::::1;:::i;:::-;:75;;;;:::i;:::-;8842:113;;8783:183;8980:13;::::0;:31:::1;::::0;-1:-1:-1;;;8980:31:19;;-1:-1:-1;;;;;1692:32:40;;;8980:31:19::1;::::0;::::1;1674:51:40::0;9014:35:19;;8980:13:::1;::::0;:23:::1;::::0;1647:18:40;;8980:31:19::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;:157;;;-1:-1:-1::0;9053:13:19::1;::::0;:46:::1;::::0;-1:-1:-1;;;9053:46:19;;-1:-1:-1;;;;;15400:15:40;;;9053:46:19::1;::::0;::::1;15382:34:40::0;9093:4:19::1;15432:18:40::0;;;15425:43;9102:35:19;;9053:13:::1;::::0;:23:::1;::::0;15317:18:40;;9053:46:19::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:84;8980:157;8976:236;;;9153:26;9171:7;9153:17;:26::i;:::-;9200:1;9193:8;;;;;8976:236;9222:13;::::0;:86:::1;::::0;-1:-1:-1;;;9222:86:19;;-1:-1:-1;;;;;16292:15:40;;;9222:86:19::1;::::0;::::1;16274:34:40::0;9265:4:19::1;16324:18:40::0;;;16317:43;16376:18;;;16369:34;;;9222:13:19;;::::1;::::0;:26:::1;::::0;16209:18:40;;9222:86:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9323:17:19;;9319:185:::1;;9356:32;::::0;;;:23:::1;:32;::::0;;;;:48;;;9319:185:::1;;;9443:32;::::0;;;:23:::1;:32;::::0;;;;9478:15:::1;9443:50:::0;;9319:185:::1;-1:-1:-1::0;;;;;9514:35:19;::::1;9552:1;9514:35:::0;;;:27:::1;:35;::::0;;;;;;;:39;;;;9569:95;;17945:25:40;;;17986:18;;;17979:34;;;9604:7:19;;9514:35;9569:95:::1;::::0;17918:18:40;9569:95:19::1;;;;;;;9682:1;9675:8;;;1318:1:0;8318:1372:19::0;;;;;:::o;9831:145::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9898:13:19::1;::::0;-1:-1:-1;;;;;9898:13:19::1;:22;9921:7;1108:6:0::0;;-1:-1:-1;;;;;1108:6:0;;1036:85;9921:7:19::1;9930:13;::::0;:38:::1;::::0;-1:-1:-1;;;9930:38:19;;9962:4:::1;9930:38;::::0;::::1;1674:51:40::0;-1:-1:-1;;;;;9930:13:19;;::::1;::::0;:23:::1;::::0;1647:18:40;;9930:38:19::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9898:71;::::0;-1:-1:-1;;;;;;9898:71:19::1;::::0;;;;;;-1:-1:-1;;;;;18216:32:40;;;9898:71:19::1;::::0;::::1;18198:51:40::0;18265:18;;;18258:34;18171:18;;9898:71:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9831:145::o:0;15326:832::-;15403:15;15430:13;15446:19;:9;918:14:12;;827:112;15446:19:19;15430:35;-1:-1:-1;15475:17:19;;15553:1;15538:186;15562:8;15556:2;:14;15538:186;;15611:11;-1:-1:-1;;;;;15596:26:19;:11;15604:2;15596:7;:11::i;:::-;-1:-1:-1;;;;;15596:26:19;;:66;;;;-1:-1:-1;15649:13:19;;15626:19;;;;:15;:19;;;;;;:36;15596:66;15592:122;;;15682:17;15698:1;15682:17;;:::i;:::-;;;15592:122;15572:4;;;;:::i;:::-;;;;15538:186;;;;15734:32;15782:12;15769:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15734:61:19;-1:-1:-1;15821:1:19;15806:304;15830:8;15824:2;:14;15806:304;;15879:11;-1:-1:-1;;;;;15864:26:19;:11;15872:2;15864:7;:11::i;:::-;-1:-1:-1;;;;;15864:26:19;;:66;;;;-1:-1:-1;15917:13:19;;15894:19;;;;:15;:19;;;;;;:36;15864:66;15860:240;;;15950:24;15977:12;15986:2;15977:8;:12::i;:::-;15950:39;;16040:10;16007:16;16024:12;16007:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;16068:17;16084:1;16068:17;;:::i;:::-;;;15932:168;15860:240;15840:4;;;;:::i;:::-;;;;15806:304;;17652:135;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;17744:24:19::1;::::0;;;:15:::1;:24;::::0;;;;;:36;17652:135::o;467:663:8:-;540:13;573:16;581:7;573;:16::i;:::-;565:78;;;;-1:-1:-1;;;565:78:8;;18505:2:40;565:78:8;;;18487:21:40;18544:2;18524:18;;;18517:30;18583:34;18563:18;;;18556:62;-1:-1:-1;;;18634:18:40;;;18627:47;18691:19;;565:78:8;18303:413:40;565:78:8;654:23;680:19;;;:10;:19;;;;;654:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:18;730:10;3464:9:5;;;;;;;;;-1:-1:-1;3464:9:5;;;3388:92;730:10:8;709:31;;819:4;813:18;835:1;813:23;809:70;;;-1:-1:-1;859:9:8;467:663;-1:-1:-1;;467:663:8:o;809:70::-;981:23;;:27;977:106;;1055:4;1061:9;1038:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1024:48;;;;467:663;;;:::o;977:106::-;1100:23;1115:7;1100:14;:23::i;20476:192:19:-;20560:10;20545:26;;;;:14;:26;;;;;;;;20537:76;;;;-1:-1:-1;;;20537:76:19;;19398:2:40;20537:76:19;;;19380:21:40;19437:2;19417:18;;;19410:30;19476:34;19456:18;;;19449:62;-1:-1:-1;;;19527:18:40;;;19520:35;19572:19;;20537:76:19;19196:401:40;20537:76:19;-1:-1:-1;;;;;20624:30:19;;;;;:15;:30;;;;;:37;;-1:-1:-1;;20624:37:19;20657:4;20624:37;;;20476:192::o;19765:151::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;19858:13:19::1;:51:::0;;-1:-1:-1;;;;;;19858:51:19::1;-1:-1:-1::0;;;;;19858:51:19;;;::::1;::::0;;;::::1;::::0;;19765:151::o;16564:116::-;16620:16;16655:18;16648:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16564:116;:::o;16304:128::-;16366:16;16401:24;16394:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16304:128;:::o;19379:204::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;19467:31:19::1;:52:::0;;;19534:42:::1;::::0;19501:18;;19534:42:::1;::::0;;;::::1;19379:204:::0;:::o;4466:115::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4548:26:19::1;4566:7;4548:17;:26::i;1918:198:0:-:0;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;19804:2:40;1998:73:0::1;::::0;::::1;19786:21:40::0;19843:2;19823:18;;;19816:30;19882:34;19862:18;;;19855:62;-1:-1:-1;;;19933:18:40;;;19926:36;19979:19;;1998:73:0::1;19602:402:40::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;21385:322:19:-:0;21501:10;21486:26;;;;:14;:26;;;;;;;;21478:90;;;;-1:-1:-1;;;21478:90:19;;20211:2:40;21478:90:19;;;20193:21:40;20250:2;20230:18;;;20223:30;20289:34;20269:18;;;20262:62;-1:-1:-1;;;20340:18:40;;;20333:49;20399:19;;21478:90:19;20009:415:40;21478:90:19;-1:-1:-1;;;;;21578:42:19;;;;;;:27;:42;;;;;;:59;;;21652:48;21623:14;;21578:42;21652:48;;;21385:322;;:::o;18369:204::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;18459:16:19::1;:38:::0;;;18512:54:::1;::::0;-1:-1:-1;;;20631:31:40;;18459:38:19;;20687:2:40;20678:12;18512:54:19::1;20429:267:40::0;7159:125:5;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:5;:30;;;7159:125::o;11168:171::-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:5;-1:-1:-1;;;;;11242:29:5;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:5;;;;;;;;;;;11168:171;;:::o;1277:214:8:-;1376:16;1384:7;1376;:16::i;:::-;1368:75;;;;-1:-1:-1;;;1368:75:8;;20903:2:40;1368:75:8;;;20885:21:40;20942:2;20922:18;;;20915:30;20981:34;20961:18;;;20954:62;-1:-1:-1;;;21032:18:40;;;21025:44;21086:19;;1368:75:8;20701:410:40;1368:75:8;1453:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;7442:344:5:-;7535:4;7559:16;7567:7;7559;:16::i;:::-;7551:73;;;;-1:-1:-1;;;7551:73:5;;21318:2:40;7551:73:5;;;21300:21:40;21357:2;21337:18;;;21330:30;21396:34;21376:18;;;21369:62;-1:-1:-1;;;21447:18:40;;;21440:42;21499:19;;7551:73:5;21116:408:40;7551:73:5;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:5;:7;-1:-1:-1;;;;;7691:16:5;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:5;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:5;;7691:51;:87;;;-1:-1:-1;;;;;;4622:25:5;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7746:32;4502:162;10452:605;10606:4;-1:-1:-1;;;;;10579:31:5;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:5;;10571:81;;;;-1:-1:-1;;;10571:81:5;;21731:2:40;10571:81:5;;;21713:21:40;21770:2;21750:18;;;21743:30;21809:34;21789:18;;;21782:62;-1:-1:-1;;;21860:18:40;;;21853:35;21905:19;;10571:81:5;21529:401:40;10571:81:5;-1:-1:-1;;;;;10670:16:5;;10662:65;;;;-1:-1:-1;;;10662:65:5;;22137:2:40;10662:65:5;;;22119:21:40;22176:2;22156:18;;;22149:30;22215:34;22195:18;;;22188:62;-1:-1:-1;;;22266:18:40;;;22259:34;22310:19;;10662:65:5;21935:400:40;10662:65:5;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:5;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:5;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:5;-1:-1:-1;;;;;10937:21:5;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;11012:38;11032:4;11038:2;11042:7;11012:19;:38::i;9078:427::-;-1:-1:-1;;;;;9157:16:5;;9149:61;;;;-1:-1:-1;;;9149:61:5;;22672:2:40;9149:61:5;;;22654:21:40;;;22691:18;;;22684:30;22750:34;22730:18;;;22723:62;22802:18;;9149:61:5;22470:356:40;9149:61:5;9229:16;9237:7;9229;:16::i;:::-;9228:17;9220:58;;;;-1:-1:-1;;;9220:58:5;;23033:2:40;9220:58:5;;;23015:21:40;23072:2;23052:18;;;23045:30;23111;23091:18;;;23084:58;23159:18;;9220:58:5;22831:352:40;9220:58:5;-1:-1:-1;;;;;9345:13:5;;;;;;:9;:13;;;;;:18;;9362:1;;9345:13;:18;;9362:1;;9345:18;:::i;:::-;;;;-1:-1:-1;;9373:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9373:21:5;-1:-1:-1;;;;;9373:21:5;;;;;;;;9410:33;;9373:16;;;9410:33;;9373:16;;9410:33;9454:44;9482:1;9486:2;9490:7;9454:19;:44::i;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;11474:307:5:-;11624:8;-1:-1:-1;;;;;11615:17:5;:5;-1:-1:-1;;;;;11615:17:5;;;11607:55;;;;-1:-1:-1;;;11607:55:5;;23390:2:40;11607:55:5;;;23372:21:40;23429:2;23409:18;;;23402:30;23468:27;23448:18;;;23441:55;23513:18;;11607:55:5;23188:349:40;11607:55:5;-1:-1:-1;;;;;11672:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:5;;;;;;;;;;11733:41;;540::40;;;11733::5;;513:18:40;11733:41:5;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:5;;;;;;;:::i;3792:533:19:-;3859:6;3854:465;3875:18;:25;3871:29;;3854:465;;;3950:7;3925:18;3944:1;3925:21;;;;;;;;:::i;:::-;;;;;;;;;:32;3921:388;;;3977:16;3996:30;4004:18;4023:1;4004:21;;;;;;;;:::i;:::-;;;;;;;;;3996:7;:30::i;:::-;3977:49;;4044:57;4054:8;4072:4;4079:18;4098:1;4079:21;;;;;;;;:::i;:::-;;;;;;;;;4044:9;:57::i;:::-;4125:37;;4154:7;;-1:-1:-1;;;;;4125:37:19;;;;;;;;4205:18;4224:25;;:27;;4250:1;;4224:27;:::i;:::-;4205:47;;;;;;;;:::i;:::-;;;;;;;;;4181:18;4200:1;4181:21;;;;;;;;:::i;:::-;;;;;;;;;;:71;4270:18;:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3959:350;3921:388;3902:3;;;;:::i;:::-;;;;3854:465;;2818:329:5;2891:13;2924:16;2932:7;2924;:16::i;:::-;2916:76;;;;-1:-1:-1;;;2916:76:5;;24295:2:40;2916:76:5;;;24277:21:40;24334:2;24314:18;;;24307:30;24373:34;24353:18;;;24346:62;-1:-1:-1;;;24424:18:40;;;24417:45;24479:19;;2916:76:5;24093:411:40;2916:76:5;3003:21;3027:10;3464:9;;;;;;;;;-1:-1:-1;3464:9:5;;;3388:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3047:93;2818:329;-1:-1:-1;;;2818:329:5:o;4863:893:19:-;5003:16;;4975:24;;;;:15;:24;;;;;;:44;;:98;;-1:-1:-1;5051:22:19;;5023:24;;;;:15;:24;;;;;;:50;4975:98;4971:724;;;1108:6:0;;-1:-1:-1;;;;;5093:15:19;;;1108:6:0;;5093:15:19;;;;:45;;-1:-1:-1;5120:18:19;;-1:-1:-1;;;;;5112:26:19;;;5120:18;;5112:26;;5093:45;:67;;;;-1:-1:-1;;;;;;5142:18:19;;;;5093:67;5089:481;;;-1:-1:-1;;;;;5184:29:19;;5216:1;5184:29;;;:23;:29;;;;;;:33;5180:376;;-1:-1:-1;;;;;5273:29:19;;;;;;:23;:29;;;;;;:33;;5305:1;;5273:33;:::i;:::-;-1:-1:-1;;;;;5241:29:19;;;;;;:23;:29;;;;;:65;;;5328:118;;-1:-1:-1;;;;;5394:21:19;;5418:5;5394:21;;;:15;:21;;;;;:29;;-1:-1:-1;;5394:29:19;;;5328:118;5180:376;;;-1:-1:-1;;;;;5508:21:19;;5532:5;5508:21;;;:15;:21;;;;;:29;;-1:-1:-1;;5508:29:19;;;5180:376;-1:-1:-1;;;;;5583:19:19;;;;;;:15;:19;;;;;;;;:26;;-1:-1:-1;;5583:26:19;5605:4;5583:26;;;;;;5653:23;:27;;;;;;;:31;;;:::i;:::-;-1:-1:-1;;;;;5623:27:19;;;;;;:23;:27;;;;;:61;3607:331:5;3537:401;;:::o;12334:778::-;12484:4;-1:-1:-1;;;;;12504:13:5;;1465:19:10;:23;12500:606:5;;12539:72;;-1:-1:-1;;;12539:72:5;;-1:-1:-1;;;;;12539:36:5;;;;;:72;;719:10:11;;12590:4:5;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:5;;;;;;;;-1:-1:-1;;12539:72:5;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:5;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:5;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:5;-1:-1:-1;;;12661:51:5;;-1:-1:-1;12654:58:5;;12500:606;-1:-1:-1;13091:4:5;13084:11;;328:703:13;384:13;601:10;597:51;;-1:-1:-1;;627:10:13;;;;;;;;;;;;-1:-1:-1;;;627:10:13;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:13;;-1:-1:-1;773:2:13;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:13;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:13;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:13;;;;;;;;-1:-1:-1;972:11:13;981:2;972:11;;:::i;:::-;;;844:150;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:40;-1:-1:-1;;;;;;88:32:40;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:40;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:40;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:40:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:40;;1343:180;-1:-1:-1;1343:180:40:o;1736:131::-;-1:-1:-1;;;;;1811:31:40;;1801:42;;1791:70;;1857:1;1854;1847:12;1872:315;1940:6;1948;2001:2;1989:9;1980:7;1976:23;1972:32;1969:52;;;2017:1;2014;2007:12;1969:52;2056:9;2043:23;2075:31;2100:5;2075:31;:::i;:::-;2125:5;2177:2;2162:18;;;;2149:32;;-1:-1:-1;;;1872:315:40:o;2192:247::-;2251:6;2304:2;2292:9;2283:7;2279:23;2275:32;2272:52;;;2320:1;2317;2310:12;2272:52;2359:9;2346:23;2378:31;2403:5;2378:31;:::i;2864:127::-;2925:10;2920:3;2916:20;2913:1;2906:31;2956:4;2953:1;2946:15;2980:4;2977:1;2970:15;2996:632;3061:5;3091:18;3132:2;3124:6;3121:14;3118:40;;;3138:18;;:::i;:::-;3213:2;3207:9;3181:2;3267:15;;-1:-1:-1;;3263:24:40;;;3289:2;3259:33;3255:42;3243:55;;;3313:18;;;3333:22;;;3310:46;3307:72;;;3359:18;;:::i;:::-;3399:10;3395:2;3388:22;3428:6;3419:15;;3458:6;3450;3443:22;3498:3;3489:6;3484:3;3480:16;3477:25;3474:45;;;3515:1;3512;3505:12;3474:45;3565:6;3560:3;3553:4;3545:6;3541:17;3528:44;3620:1;3613:4;3604:6;3596;3592:19;3588:30;3581:41;;;;2996:632;;;;;:::o;3633:222::-;3676:5;3729:3;3722:4;3714:6;3710:17;3706:27;3696:55;;3747:1;3744;3737:12;3696:55;3769:80;3845:3;3836:6;3823:20;3816:4;3808:6;3804:17;3769:80;:::i;3860:390::-;3938:6;3946;3999:2;3987:9;3978:7;3974:23;3970:32;3967:52;;;4015:1;4012;4005:12;3967:52;4051:9;4038:23;4028:33;;4112:2;4101:9;4097:18;4084:32;4139:18;4131:6;4128:30;4125:50;;;4171:1;4168;4161:12;4125:50;4194;4236:7;4227:6;4216:9;4212:22;4194:50;:::i;:::-;4184:60;;;3860:390;;;;;:::o;4255:248::-;4323:6;4331;4384:2;4372:9;4363:7;4359:23;4355:32;4352:52;;;4400:1;4397;4390:12;4352:52;-1:-1:-1;;4423:23:40;;;4493:2;4478:18;;;4465:32;;-1:-1:-1;4255:248:40:o;4508:456::-;4585:6;4593;4601;4654:2;4642:9;4633:7;4629:23;4625:32;4622:52;;;4670:1;4667;4660:12;4622:52;4709:9;4696:23;4728:31;4753:5;4728:31;:::i;:::-;4778:5;-1:-1:-1;4835:2:40;4820:18;;4807:32;4848:33;4807:32;4848:33;:::i;:::-;4508:456;;4900:7;;-1:-1:-1;;;4954:2:40;4939:18;;;;4926:32;;4508:456::o;4969:803::-;5131:4;5160:2;5200;5189:9;5185:18;5230:2;5219:9;5212:21;5253:6;5288;5282:13;5319:6;5311;5304:22;5357:2;5346:9;5342:18;5335:25;;5419:2;5409:6;5406:1;5402:14;5391:9;5387:30;5383:39;5369:53;;5457:2;5449:6;5445:15;5478:1;5488:255;5502:6;5499:1;5496:13;5488:255;;;5595:2;5591:7;5579:9;5571:6;5567:22;5563:36;5558:3;5551:49;5623:40;5656:6;5647;5641:13;5623:40;:::i;:::-;5613:50;-1:-1:-1;5721:12:40;;;;5686:15;;;;5524:1;5517:9;5488:255;;;-1:-1:-1;5760:6:40;;4969:803;-1:-1:-1;;;;;;;4969:803:40:o;5777:527::-;5873:6;5881;5889;5897;5950:3;5938:9;5929:7;5925:23;5921:33;5918:53;;;5967:1;5964;5957:12;5918:53;6007:9;5994:23;6040:18;6032:6;6029:30;6026:50;;;6072:1;6069;6062:12;6026:50;6095;6137:7;6128:6;6117:9;6113:22;6095:50;:::i;:::-;6085:60;6192:2;6177:18;;6164:32;;-1:-1:-1;6243:2:40;6228:18;;6215:32;;6294:2;6279:18;6266:32;;-1:-1:-1;5777:527:40;-1:-1:-1;;;;5777:527:40:o;6309:322::-;6378:6;6431:2;6419:9;6410:7;6406:23;6402:32;6399:52;;;6447:1;6444;6437:12;6399:52;6487:9;6474:23;6520:18;6512:6;6509:30;6506:50;;;6552:1;6549;6542:12;6506:50;6575;6617:7;6608:6;6597:9;6593:22;6575:50;:::i;6636:118::-;6722:5;6715:13;6708:21;6701:5;6698:32;6688:60;;6744:1;6741;6734:12;6759:382;6824:6;6832;6885:2;6873:9;6864:7;6860:23;6856:32;6853:52;;;6901:1;6898;6891:12;6853:52;6940:9;6927:23;6959:31;6984:5;6959:31;:::i;:::-;7009:5;-1:-1:-1;7066:2:40;7051:18;;7038:32;7079:30;7038:32;7079:30;:::i;:::-;7128:7;7118:17;;;6759:382;;;;;:::o;7146:795::-;7241:6;7249;7257;7265;7318:3;7306:9;7297:7;7293:23;7289:33;7286:53;;;7335:1;7332;7325:12;7286:53;7374:9;7361:23;7393:31;7418:5;7393:31;:::i;:::-;7443:5;-1:-1:-1;7500:2:40;7485:18;;7472:32;7513:33;7472:32;7513:33;:::i;:::-;7565:7;-1:-1:-1;7619:2:40;7604:18;;7591:32;;-1:-1:-1;7674:2:40;7659:18;;7646:32;7701:18;7690:30;;7687:50;;;7733:1;7730;7723:12;7687:50;7756:22;;7809:4;7801:13;;7797:27;-1:-1:-1;7787:55:40;;7838:1;7835;7828:12;7787:55;7861:74;7927:7;7922:2;7909:16;7904:2;7900;7896:11;7861:74;:::i;:::-;7851:84;;;7146:795;;;;;;;:::o;7946:383::-;8023:6;8031;8039;8092:2;8080:9;8071:7;8067:23;8063:32;8060:52;;;8108:1;8105;8098:12;8060:52;8147:9;8134:23;8166:31;8191:5;8166:31;:::i;:::-;8216:5;8268:2;8253:18;;8240:32;;-1:-1:-1;8319:2:40;8304:18;;;8291:32;;7946:383;-1:-1:-1;;;7946:383:40:o;8594:632::-;8765:2;8817:21;;;8887:13;;8790:18;;;8909:22;;;8736:4;;8765:2;8988:15;;;;8962:2;8947:18;;;8736:4;9031:169;9045:6;9042:1;9039:13;9031:169;;;9106:13;;9094:26;;9175:15;;;;9140:12;;;;9067:1;9060:9;9031:169;;;-1:-1:-1;9217:3:40;;8594:632;-1:-1:-1;;;;;;8594:632:40:o;9231:388::-;9299:6;9307;9360:2;9348:9;9339:7;9335:23;9331:32;9328:52;;;9376:1;9373;9366:12;9328:52;9415:9;9402:23;9434:31;9459:5;9434:31;:::i;:::-;9484:5;-1:-1:-1;9541:2:40;9526:18;;9513:32;9554:33;9513:32;9554:33;:::i;9624:380::-;9703:1;9699:12;;;;9746;;;9767:61;;9821:4;9813:6;9809:17;9799:27;;9767:61;9874:2;9866:6;9863:14;9843:18;9840:38;9837:161;;;9920:10;9915:3;9911:20;9908:1;9901:31;9955:4;9952:1;9945:15;9983:4;9980:1;9973:15;9837:161;;9624:380;;;:::o;11659:356::-;11861:2;11843:21;;;11880:18;;;11873:30;11939:34;11934:2;11919:18;;11912:62;12006:2;11991:18;;11659:356::o;12020:413::-;12222:2;12204:21;;;12261:2;12241:18;;;12234:30;12300:34;12295:2;12280:18;;12273:62;-1:-1:-1;;;12366:2:40;12351:18;;12344:47;12423:3;12408:19;;12020:413::o;12438:127::-;12499:10;12494:3;12490:20;12487:1;12480:31;12530:4;12527:1;12520:15;12554:4;12551:1;12544:15;12570:128;12610:3;12641:1;12637:6;12634:1;12631:13;12628:39;;;12647:18;;:::i;:::-;-1:-1:-1;12683:9:40;;12570:128::o;12703:135::-;12742:3;-1:-1:-1;;12763:17:40;;12760:43;;;12783:18;;:::i;:::-;-1:-1:-1;12830:1:40;12819:13;;12703:135::o;12843:127::-;12904:10;12899:3;12895:20;12892:1;12885:31;12935:4;12932:1;12925:15;12959:4;12956:1;12949:15;14074:168;14114:7;14180:1;14176;14172:6;14168:14;14165:1;14162:21;14157:1;14150:9;14143:17;14139:45;14136:71;;;14187:18;;:::i;:::-;-1:-1:-1;14227:9:40;;14074:168::o;14247:127::-;14308:10;14303:3;14299:20;14296:1;14289:31;14339:4;14336:1;14329:15;14363:4;14360:1;14353:15;14379:120;14419:1;14445;14435:35;;14450:18;;:::i;:::-;-1:-1:-1;14484:9:40;;14379:120::o;14504:184::-;14574:6;14627:2;14615:9;14606:7;14602:23;14598:32;14595:52;;;14643:1;14640;14633:12;14595:52;-1:-1:-1;14666:16:40;;14504:184;-1:-1:-1;14504:184:40:o;16414:245::-;16481:6;16534:2;16522:9;16513:7;16509:23;16505:32;16502:52;;;16550:1;16547;16540:12;16502:52;16582:9;16576:16;16601:28;16623:5;16601:28;:::i;18721:470::-;18900:3;18938:6;18932:13;18954:53;19000:6;18995:3;18988:4;18980:6;18976:17;18954:53;:::i;:::-;19070:13;;19029:16;;;;19092:57;19070:13;19029:16;19126:4;19114:17;;19092:57;:::i;:::-;19165:20;;18721:470;-1:-1:-1;;;;18721:470:40:o;22340:125::-;22380:4;22408:1;22405;22402:8;22399:34;;;22413:18;;:::i;:::-;-1:-1:-1;22450:9:40;;22340:125::o;23542:414::-;23744:2;23726:21;;;23783:2;23763:18;;;23756:30;23822:34;23817:2;23802:18;;23795:62;-1:-1:-1;;;23888:2:40;23873:18;;23866:48;23946:3;23931:19;;23542:414::o;23961:127::-;24022:10;24017:3;24013:20;24010:1;24003:31;24053:4;24050:1;24043:15;24077:4;24074:1;24067:15;24509:489;-1:-1:-1;;;;;24778:15:40;;;24760:34;;24830:15;;24825:2;24810:18;;24803:43;24877:2;24862:18;;24855:34;;;24925:3;24920:2;24905:18;;24898:31;;;24703:4;;24946:46;;24972:19;;24964:6;24946:46;:::i;:::-;24938:54;24509:489;-1:-1:-1;;;;;;24509:489:40:o;25003:249::-;25072:6;25125:2;25113:9;25104:7;25100:23;25096:32;25093:52;;;25141:1;25138;25131:12;25093:52;25173:9;25167:16;25192:30;25216:5;25192:30;:::i;25257:112::-;25289:1;25315;25305:35;;25320:18;;:::i;:::-;-1:-1:-1;25354:9:40;;25257:112::o",
  "language": "Solidity",
  "natspec": {
    "details": "NFT contract that will be used with the marketplace contract",
    "kind": "dev",
    "methods": {
      "addMember(address)": {
        "details": "Allows contract admins to manually add an address as a member. Necessary for memberships purchased through Patreon.",
        "params": {
          "memberAddress": "the address of the member being added"
        }
      },
      "addWhiteListToToken(address,uint256)": {
        "details": "Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.",
        "params": {
          "tokenId": "the ID of the NFT that the whitelist spot is for",
          "whiteListAddress": "the address of the user who will be able to purchase the NFT"
        }
      },
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "burnMembershiptNFTManually(uint256)": {
        "details": "Only owner function to burn a membership NFT",
        "params": {
          "tokenId": "the tokenId of the membership NFT to burn"
        }
      },
      "chargeMemberForMembership(address,uint256,uint256)": {
        "details": "Only owner function to take funds from an address to pay for the next month of a membership",
        "params": {
          "currTimeStamp": "the current timestamp for the transaction to avoid relying on block.timestamp",
          "member": "the address of the member that is being charged for the next month of a membership",
          "tokenId": "the token ID that the member is being charged"
        },
        "returns": {
          "_0": "0 for success, 1 for failure and NFT burn"
        }
      },
      "createToken(string,uint256,uint256,uint256)": {
        "details": "Only owner function to mint a new NFT.",
        "params": {
          "currTimeStamp": "the current timestamp for the transaction to avoid relying on block.timestamp",
          "listingFee": "the fee the user pays when putting the NFT for sale on the marketplace",
          "newTokenURI": "the token URI on IPFS for the NFT metadata",
          "typeId": "the type ID of the NFT to distinguish what type of NFT it is (Original Cardinal, membership, service)"
        },
        "returns": {
          "_0": "the ID of the newly minted NFT"
        }
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getMembershipTokenIds()": {
        "details": "Function to get a list of all the membership NFT IDs.",
        "returns": {
          "_0": "list of the membership NFT IDs"
        }
      },
      "getOriginalCardinalTokenIds()": {
        "details": "Function to get a list of all the Original Cardinal NFT IDs.",
        "returns": {
          "_0": "list of the Original Cardinal NFT IDs"
        }
      },
      "getUserMembershipTokenURIs(address)": {
        "details": "Function to get all token URIs for membership NFTs that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's membership NFTs"
        }
      },
      "getUserOriginalCardinalTokenURIs(address)": {
        "details": "Function to get all token URIs for Original Cardinal NFTs that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's Original Cardinal NFTs"
        }
      },
      "getUserServiceTokenURIs(address)": {
        "details": "Function to get all token URIs for service NFTs that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's service NFTs"
        }
      },
      "getUserTokenURIs(address)": {
        "details": "Function to get all token URIs for tokens that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's NFTs"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mintMembershipNFT()": {
        "details": "Allows someone to mint a membership NFT by paying Cardinal Tokens",
        "returns": {
          "_0": "the ID of the newly minted membership NFT"
        }
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "removeMember(address)": {
        "details": "Allows contract admins to manually remove an address as a member. Necessary for when a membership bought through Patreon expires.",
        "params": {
          "memberAddress": "the address to remove from the membership list"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setAdminUser(address,bool)": {
        "details": "Only owner function to update the admin mapping.",
        "params": {
          "adminAddress": "the address to admin rights for",
          "isAdmin": "boolean to determine if the address is an admin or not"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "setCardinalToken(address)": {
        "details": "Only owner function to set the reference to the Cardinal Token contract",
        "params": {
          "cardinalTokenAddress": "the address for the Cardinal Token contract"
        }
      },
      "setMemberDiscount(address,uint256)": {
        "details": "Allows contract admins to set a membership discount for an address.",
        "params": {
          "discountAmount": "the discount amount, 90 for 90% of membership price, 75 for 75% of membership price, etc.",
          "memberAddress": "the address to give the discount to"
        }
      },
      "setTokenURI(uint256,string)": {
        "details": "Setter function for the token URI of an NFT.",
        "params": {
          "newTokenURI": "the token URI to update the NFT with",
          "tokenId": "the ID of the NFT to update the token URI of"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateMembershipNFTLastPaid(uint256,uint256)": {
        "details": "Only owner function to update the timestamp for a membership NFT after it has been paid for for a month.",
        "params": {
          "lastPaidTimestamp": "the timestamp to update the membership NFT to for when it was last paid for",
          "tokenId": "the ID of the membership NFT to have the timestamp updated for"
        }
      },
      "updateMembershipPrice(uint256)": {
        "details": "sets the price of the membership NFTs in Cardinal Tokens",
        "params": {
          "newMembershipPrice": "the new price of the membership NFTs in Cardinal Tokens"
        }
      },
      "updateMembershipTokenURI(string)": {
        "details": "updates the membership NFT token URI",
        "params": {
          "newMembershipTokenURI": "the new type ID of the service NFTs"
        }
      },
      "updateMembershipTypeId(uint256)": {
        "details": "updates the type ID that represents the membership NFTs",
        "params": {
          "newMembershipTypeId": "the new type ID of the membership NFTs"
        }
      },
      "updateOriginalCardinalTypeId(uint256)": {
        "details": "updates the type ID that represents the Original Cardinal NFTs",
        "params": {
          "newOriginalCardinalTypeId": "the new type ID of the Original Cardinal NFTs"
        }
      },
      "updateServiceTypeId(uint256)": {
        "details": "updates the type ID that represents the service NFTs",
        "params": {
          "newServiceTypeId": "the new type ID of the service NFTs"
        }
      },
      "updateTokenListingFee(uint256,uint256)": {
        "details": "updates the listing fee of an NFT.",
        "params": {
          "newListingFee": "the listing fee value for the NFT",
          "tokenId": "the ID of the NFT to update the listing fee of"
        }
      },
      "updateTokenTypeId(uint256,uint256)": {
        "details": "updates the type ID of an NFT.",
        "params": {
          "newTypeId": "the type ID value for the NFT",
          "tokenId": "the ID of the NFT to update the type ID of"
        }
      },
      "withdrawMembershipNFTFunds()": {
        "details": "Only owner function to withdraw the Cardinal Tokens that are paid to this contract for the Membership NFTs."
      }
    },
    "title": "Cardinal House NFT Contract",
    "version": 1
  },
  "offset": [
    445,
    21709
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3A4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F01785D GT PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC79BA39C GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xE4E0A931 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x854 JUMPI DUP1 PUSH4 0xFD18B841 EQ PUSH2 0x867 JUMPI DUP1 PUSH4 0xFE0596F2 EQ PUSH2 0x87A JUMPI DUP1 PUSH4 0xFFEAB8A4 EQ PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE4E0A931 EQ PUSH2 0x7EA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0xEBAA42ED EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xEECBBEC4 EQ PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD2793D4A GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xD2793D4A EQ PUSH2 0x78F JUMPI DUP1 PUSH4 0xD473DAB1 EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0xDAA17F49 EQ PUSH2 0x7B7 JUMPI DUP1 PUSH4 0xDCA8BC47 EQ PUSH2 0x7CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC79BA39C EQ PUSH2 0x756 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB15D8D5F GT PUSH2 0x187 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x715 JUMPI DUP1 PUSH4 0xBB3B407B EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xBEB48326 EQ PUSH2 0x73B JUMPI DUP1 PUSH4 0xC34E3782 EQ PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB15D8D5F EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0xB27A5F98 EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xB43AFFDA EQ PUSH2 0x6DF JUMPI DUP1 PUSH4 0xB5C4B23D EQ PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96291DB6 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x96291DB6 EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0xAA46A400 EQ PUSH2 0x68F JUMPI DUP1 PUSH4 0xB063C954 EQ PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F01785D EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x95914875 EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4623C740 GT PUSH2 0x2CE JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x26C JUMPI DUP1 PUSH4 0x7498D280 GT PUSH2 0x23B JUMPI DUP1 PUSH4 0x7498D280 EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0x7867CCD1 EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0x86794F66 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x71AF8374 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0x7417353F EQ PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C23A67A GT PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x5C23A67A EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x66A98EA3 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0x6F48853B EQ PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4623C740 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0x46D36230 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x56060A74 EQ PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x162094C4 GT PUSH2 0x346 JUMPI DUP1 PUSH4 0x2517FC07 GT PUSH2 0x315 JUMPI DUP1 PUSH4 0x2517FC07 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x28DA575B EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x33A41510 EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x162094C4 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x17550165 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x1C652FB5 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x382 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xB1CA49A EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xE1BAC89 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x11AB8DF5 EQ PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x3E6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BC PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3365 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x33DA JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x341B JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x424 PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH2 0xB1D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x3F9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x46C PUSH2 0x45A CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x3510 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST PUSH2 0x46C PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3557 JUMP JUMPDEST PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x424 PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x46C PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x512 PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x424 PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0xE26 JUMP JUMPDEST PUSH2 0x46C PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x361C JUMP JUMPDEST PUSH2 0xE41 JUMP JUMPDEST PUSH2 0x46C PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x512 PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH2 0xF98 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x5AB CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x116D JUMP JUMPDEST PUSH2 0x46C PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x46C PUSH2 0x5DE CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x127B JUMP JUMPDEST PUSH2 0x46C PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x602 CALLDATASIZE PUSH1 0x4 PUSH2 0x341B JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x46C PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x61D CALLDATASIZE PUSH1 0x4 PUSH2 0x3557 JUMP JUMPDEST PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x630 CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x17C1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x512 PUSH2 0x654 CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x19C6 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x677 CALLDATASIZE PUSH1 0x4 PUSH2 0x3670 JUMP JUMPDEST PUSH2 0x19D5 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x68A CALLDATASIZE PUSH1 0x4 PUSH2 0x36B3 JUMP JUMPDEST PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x46C SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x46C PUSH2 0x6A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x46C PUSH2 0x6C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x6DA CALLDATASIZE PUSH1 0x4 PUSH2 0x36B3 JUMP JUMPDEST PUSH2 0x1A42 JUMP JUMPDEST PUSH2 0x46C PUSH2 0x6ED CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x700 CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x723 CALLDATASIZE PUSH1 0x4 PUSH2 0x36EC JUMP JUMPDEST PUSH2 0x1AA7 JUMP JUMPDEST PUSH2 0x46C PUSH2 0x736 CALLDATASIZE PUSH1 0x4 PUSH2 0x376C JUMP JUMPDEST PUSH2 0x1ADF JUMP JUMPDEST PUSH2 0x424 PUSH2 0x1EDA JUMP JUMPDEST PUSH2 0x512 PUSH2 0x751 CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH2 0x2023 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x764 CALLDATASIZE PUSH1 0x4 PUSH2 0x3557 JUMP JUMPDEST PUSH2 0x2181 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x777 CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x21BD JUMP JUMPDEST PUSH2 0x424 PUSH2 0x78A CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH2 0x232C JUMP JUMPDEST PUSH2 0x424 PUSH2 0x79D CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH2 0x23BD JUMP JUMPDEST PUSH2 0x7AA PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x37A1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x3F9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x46C PUSH2 0x7D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7AA PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x800 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x83C CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x84F CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x862 CALLDATASIZE PUSH1 0x4 PUSH2 0x3447 JUMP JUMPDEST PUSH2 0x2546 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x875 CALLDATASIZE PUSH1 0x4 PUSH2 0x341B JUMP JUMPDEST PUSH2 0x25DE JUMP JUMPDEST PUSH2 0x46C PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x891 CALLDATASIZE PUSH1 0x4 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x8C7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x8E2 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x8F7 SWAP1 PUSH2 0x3813 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x923 SWAP1 PUSH2 0x3813 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x970 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x945 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x970 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x953 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x985 DUP3 PUSH2 0x26F2 JUMP JUMPDEST PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA12 DUP3 PUSH2 0x10F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xA9C JUMPI POP PUSH2 0xA9C DUP2 CALLER PUSH2 0x800 JUMP JUMPDEST PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0xB18 DUP4 DUP4 PUSH2 0x270F JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920636F6E74726163742061646D696E732063616E2072656D6F766520 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x309036B2B6B132B917 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH2 0xBE3 DUP3 DUP3 PUSH2 0x277D JUMP JUMPDEST DUP2 PUSH32 0xC794E2271B51F209D8A645EEC85692351AD1ADC857AB2E06F9C5AF7961CF07D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC13 SWAP2 SWAP1 PUSH2 0x33DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0xC65 CALLER DUP3 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x3883 JUMP JUMPDEST PUSH2 0xB18 DUP4 DUP4 DUP4 PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC99 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0xD1E JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCBB DUP3 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xCF9 JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 PUSH2 0xCF9 JUMPI POP PUSH1 0x14 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0xD0C JUMPI PUSH2 0xD09 PUSH1 0x1 DUP5 PUSH2 0x38EA JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0xD16 DUP2 PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCA1 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD3A JUMPI PUSH2 0xD3A PUSH2 0x3464 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD6D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD58 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0xE1C JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD8D DUP3 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xDCB JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 PUSH2 0xDCB JUMPI POP PUSH1 0x14 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0xE0A JUMPI PUSH1 0x0 PUSH2 0xDDB DUP3 PUSH2 0x21BD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xDF0 JUMPI PUSH2 0xDF0 PUSH2 0x391D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0xE06 PUSH1 0x1 DUP6 PUSH2 0x38EA JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0xE14 DUP2 PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD73 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB18 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH2 0xE7C PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 SWAP1 SSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 POP PUSH2 0xEB1 CALLER DUP3 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0xEBB DUP2 DUP8 PUSH2 0x277D JUMP JUMPDEST PUSH2 0xEC5 ADDRESS DUP3 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xEDC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP6 EQ ISZERO PUSH2 0xF20 JUMPI PUSH1 0x16 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD DUP2 SWAP1 SSTORE PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x14 SLOAD DUP6 EQ ISZERO PUSH2 0xF8D JUMPI PUSH1 0x17 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC624B66CC0138B8FABC209247F72D758E1CF3343756D543BADBF24212BED8C15 ADD DUP2 SWAP1 SSTORE DUP3 ISZERO PUSH2 0xF7B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xFA5 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0x1011 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFC7 DUP3 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xFEC JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0xFFF JUMPI PUSH2 0xFFC PUSH1 0x1 DUP5 PUSH2 0x38EA JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x1009 DUP2 PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFAD JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102D JUMPI PUSH2 0x102D PUSH2 0x3464 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1060 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x104B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0xE1C JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1080 DUP3 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x10A5 JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0x10E4 JUMPI PUSH1 0x0 PUSH2 0x10B5 DUP3 PUSH2 0x21BD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x10CA JUMPI PUSH2 0x10CA PUSH2 0x391D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x10E0 PUSH1 0x1 DUP6 PUSH2 0x38EA JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x10EE DUP2 PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1197 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH22 0x1BDC9A59DA5B985B10D85C991A5B985B151E5C195259 PUSH1 0x52 SHL DUP2 MSTORE DUP2 SWAP1 PUSH1 0x16 ADD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0xA611BA47A2A0887B794D3E097D5CFB33522F6ED26DF589CCD12C01D5C584800A SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH2 0x12AF PUSH1 0x0 PUSH2 0x2BCB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x19 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x1350 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x19 SLOAD PUSH1 0x64 SWAP2 PUSH2 0x1343 SWAP2 PUSH2 0x3933 JUMP JUMPDEST PUSH2 0x134D SWAP2 SWAP1 PUSH2 0x3968 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13CB SWAP2 SWAP1 PUSH2 0x397C JUMP JUMPDEST LT ISZERO PUSH2 0x144D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F7567682043617264696E616C2054 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F6B656E7320746F2070617920666F7220746865206D656D6265727368697020 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x27232A17 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14CE SWAP2 SWAP1 PUSH2 0x397C JUMP JUMPDEST LT ISZERO PUSH2 0x157A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x69 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176656E277420617070726F766564207468697320636F6E747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x637420746F207370656E6420656E6F756768206F6620796F7572204361726469 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E616C20546F6B656E7320746F2070617920666F7220746865206D656D626572 PUSH1 0x84 DUP3 ADD MSTORE PUSH9 0x39B434B81027232A17 PUSH1 0xB9 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1604 SWAP2 SWAP1 PUSH2 0x3995 JUMP JUMPDEST POP PUSH2 0x1613 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161E PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xC SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE SWAP1 POP PUSH2 0x164A CALLER DUP3 PUSH2 0x2A90 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE CALLER DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x18 DUP1 SLOAD PUSH2 0x16FF SWAP2 DUP4 SWAP2 PUSH2 0x167C SWAP1 PUSH2 0x3813 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16A8 SWAP1 PUSH2 0x3813 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x277D JUMP JUMPDEST PUSH2 0x1709 ADDRESS DUP3 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1720 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x17 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0xC624B66CC0138B8FABC209247F72D758E1CF3343756D543BADBF24212BED8C15 ADD DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP2 CALLER SWAP2 PUSH32 0x7430CEFC529011C1B720A4803C3A12DB2BFDF282E089E2D26FF4929EF11A703C SWAP2 SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x15 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH13 0x1CD95C9D9A58D9551E5C195259 PUSH1 0x9A SHL DUP2 MSTORE DUP2 SWAP1 PUSH1 0xD ADD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x181D PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0x186E JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x183F DUP3 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x185C JUMPI PUSH2 0x1859 PUSH1 0x1 DUP5 PUSH2 0x38EA JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x1866 DUP2 PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1825 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x188A JUMPI PUSH2 0x188A PUSH2 0x3464 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x18BD JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x18A8 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0xE1C JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18DD DUP3 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1926 JUMPI PUSH1 0x0 PUSH2 0x18F7 DUP3 PUSH2 0x21BD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x190C JUMPI PUSH2 0x190C PUSH2 0x391D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x1922 PUSH1 0x1 DUP6 PUSH2 0x38EA JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x1930 DUP2 PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD PUSH2 0x1945 SWAP1 PUSH2 0x3813 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1971 SWAP1 PUSH2 0x3813 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1993 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8F7 SWAP1 PUSH2 0x3813 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1A12 SWAP1 PUSH1 0x18 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x32B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1A12 CALLER DUP4 DUP4 PUSH2 0x2C1D JUMP JUMPDEST PUSH1 0x17 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x16 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AB1 CALLER DUP4 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x1ACD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x3883 JUMP JUMPDEST PUSH2 0x1AD9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2CEC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B1F DUP5 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1B89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320646F65736E2774206F776E20746865204E4654 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1039B832B1B4B334B2B217 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B9E DUP5 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BD1 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BC5 DUP5 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x1C43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E27742063686172676520746865206F776E6572206F72206D61726B6574 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x706C61636520666F7220746865206D656D626572736869702E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1C99 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x19 SLOAD PUSH1 0x64 SWAP2 PUSH2 0x1C8C SWAP2 PUSH2 0x3933 JUMP JUMPDEST PUSH2 0x1C96 SWAP2 SWAP1 PUSH2 0x3968 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D16 SWAP2 SWAP1 PUSH2 0x397C JUMP JUMPDEST LT DUP1 PUSH2 0x1DA2 JUMPI POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP4 SWAP3 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DA0 SWAP2 SWAP1 PUSH2 0x397C JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x1DBA JUMPI PUSH2 0x1DB0 DUP5 PUSH2 0x2D1F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E46 SWAP2 SWAP1 PUSH2 0x3995 JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x1E63 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE DUP7 SWAP3 SWAP2 PUSH32 0x9170D37D9D267E1D271F28F3F225AC7E95B00677566675BA1D251944EB3C5924 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1F27 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA2 SWAP2 SWAP1 PUSH2 0x397C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2020 SWAP2 SWAP1 PUSH2 0x3995 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2030 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0x209C JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2052 DUP3 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x2077 JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0x208A JUMPI PUSH2 0x2087 PUSH1 0x1 DUP5 PUSH2 0x38EA JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x2094 DUP2 PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2038 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20B8 JUMPI PUSH2 0x20B8 PUSH2 0x3464 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20EB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x20D6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0xE1C JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x210B DUP3 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x2130 JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0x216F JUMPI PUSH1 0x0 PUSH2 0x2140 DUP3 PUSH2 0x21BD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2155 JUMPI PUSH2 0x2155 PUSH2 0x391D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x216B PUSH1 0x1 DUP6 PUSH2 0x38EA JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x2179 DUP2 PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x21AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x21C8 DUP3 PUSH2 0x26F2 JUMP JUMPDEST PUSH2 0x222E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x2247 SWAP1 PUSH2 0x3813 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2273 SWAP1 PUSH2 0x3813 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2295 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x22DE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x22F1 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2323 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x230B SWAP3 SWAP2 SWAP1 PUSH2 0x39B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF90 DUP5 PUSH2 0x2E5E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2399 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920636F6E74726163742061646D696E732063616E20616464206D656D PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3132B93997 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x23E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x17 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x970 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2443 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x16 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x970 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2443 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x19 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x1361F6A741CB766EA2F0BE44A0E1686DF0E08320BE065F6C8DF9E4F639AB297A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x253D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH2 0x2020 DUP2 PUSH2 0x2D1F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x2020 DUP2 PUSH2 0x2BCB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920636F6E74726163742061646D696E732063616E207365742061206D PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x32B6B132B939B434B8103234B9B1B7BAB73A17 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0x874556B552951A64A8A3F7627516F395097B3DE40CF93B85E87B03118CC02CF0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x26CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH16 0x1B595B58995C9CDA1A5C151E5C195259 PUSH1 0x82 SHL DUP2 MSTORE DUP2 SWAP1 PUSH1 0x10 ADD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x2744 DUP3 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x2786 DUP3 PUSH2 0x26F2 JUMP JUMPDEST PUSH2 0x27E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0xB18 SWAP3 DUP5 ADD SWAP1 PUSH2 0x32B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2813 DUP3 PUSH2 0x26F2 JUMP JUMPDEST PUSH2 0x2874 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x287F DUP4 PUSH2 0x10F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x28BA JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28AF DUP5 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xF90 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF90 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2901 DUP3 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x29C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x29D2 PUSH1 0x0 DUP3 PUSH2 0x270F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x29FB SWAP1 DUP5 SWAP1 PUSH2 0x39E1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2A29 SWAP1 DUP5 SWAP1 PUSH2 0x38EA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 PUSH2 0xB18 DUP4 DUP4 DUP4 PUSH2 0x2F35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2AE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x2AEF DUP2 PUSH2 0x26F2 JUMP JUMPDEST ISZERO PUSH2 0x2B3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2B65 SWAP1 DUP5 SWAP1 PUSH2 0x38EA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 PUSH2 0x1A12 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2F35 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2C7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2CF7 DUP5 DUP5 DUP5 PUSH2 0x28EE JUMP JUMPDEST PUSH2 0x2D03 DUP5 DUP5 DUP5 DUP5 PUSH2 0x30AE JUMP JUMPDEST PUSH2 0x1AD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x39F8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x17 SLOAD DUP2 LT ISZERO PUSH2 0x1A12 JUMPI DUP2 PUSH1 0x17 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2D40 JUMPI PUSH2 0x2D40 PUSH2 0x391D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x2E4C JUMPI PUSH1 0x0 PUSH2 0x2D79 PUSH1 0x17 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2D69 JUMPI PUSH2 0x2D69 PUSH2 0x391D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x10F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DA3 DUP2 ADDRESS PUSH1 0x17 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2D93 JUMPI PUSH2 0x2D93 PUSH2 0x391D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x5AB068FE2788C545757BCB78E3B2D842E34EC21C90F26C60E5CE7686E90B8749 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x17 DUP1 SLOAD PUSH2 0x2DE9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x39E1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2DF9 JUMPI PUSH2 0x2DF9 PUSH2 0x391D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x17 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E17 JUMPI PUSH2 0x2E17 PUSH2 0x391D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x17 DUP1 SLOAD DUP1 PUSH2 0x2E34 JUMPI PUSH2 0x2E34 PUSH2 0x3A4A JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP JUMPDEST DUP1 PUSH2 0x2E56 DUP2 PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D22 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E69 DUP3 PUSH2 0x26F2 JUMP JUMPDEST PUSH2 0x2ECD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2F04 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1ED3 JUMP JUMPDEST DUP1 PUSH2 0x2F0E DUP5 PUSH2 0x31B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F1F SWAP3 SWAP2 SWAP1 PUSH2 0x39B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 PUSH2 0x2F62 JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0xB18 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x2F93 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2FA7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x3055 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x3034 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2FEF SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x302F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xF SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x3090 SWAP2 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x31B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x30F2 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x310C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x313C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3139 SWAP2 DUP2 ADD SWAP1 PUSH2 0x3A9D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3196 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x316A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x316F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x318E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x39F8 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xF90 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x31DC JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x3206 JUMPI DUP1 PUSH2 0x31F0 DUP2 PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP PUSH2 0x31FF SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3968 JUMP JUMPDEST SWAP2 POP PUSH2 0x31E0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3221 JUMPI PUSH2 0x3221 PUSH2 0x3464 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x324B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xF90 JUMPI PUSH2 0x3260 PUSH1 0x1 DUP4 PUSH2 0x39E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x326D PUSH1 0xA DUP7 PUSH2 0x3ABA JUMP JUMPDEST PUSH2 0x3278 SWAP1 PUSH1 0x30 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x328D JUMPI PUSH2 0x328D PUSH2 0x391D JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x32AF PUSH1 0xA DUP7 PUSH2 0x3968 JUMP JUMPDEST SWAP5 POP PUSH2 0x324F JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x32C2 SWAP1 PUSH2 0x3813 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x32E4 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x332A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x32FD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x332A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x332A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x332A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x330F JUMP JUMPDEST POP PUSH2 0x3336 SWAP3 SWAP2 POP PUSH2 0x333A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3336 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x333B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1ED3 DUP2 PUSH2 0x334F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x339D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3385 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1AD9 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x33C6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3382 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1ED3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x33AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x342E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3439 DUP2 PUSH2 0x3406 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1ED3 DUP2 PUSH2 0x3406 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x3495 JUMPI PUSH2 0x3495 PUSH2 0x3464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x34BD JUMPI PUSH2 0x34BD PUSH2 0x3464 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x34D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ED3 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x347A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x354D DUP6 DUP3 DUP7 ADD PUSH2 0x34F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x356A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x358E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3599 DUP2 PUSH2 0x3406 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x35A9 DUP2 PUSH2 0x3406 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x360F JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x35FD DUP6 DUP4 MLOAD PUSH2 0x33AE JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x35E1 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3655 DUP8 DUP3 DUP9 ADD PUSH2 0x34F0 JUMP JUMPDEST SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x60 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF90 DUP5 DUP3 DUP6 ADD PUSH2 0x34F0 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x36D1 DUP2 PUSH2 0x3406 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x36E1 DUP2 PUSH2 0x36A5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x370D DUP2 PUSH2 0x3406 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x371D DUP2 PUSH2 0x3406 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x3751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3760 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x347A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x378C DUP2 PUSH2 0x3406 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37D9 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x37BD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3803 DUP2 PUSH2 0x3406 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x36E1 DUP2 PUSH2 0x3406 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3827 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3848 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x38FD JUMPI PUSH2 0x38FD PUSH2 0x38D4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3916 JUMPI PUSH2 0x3916 PUSH2 0x38D4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x394D JUMPI PUSH2 0x394D PUSH2 0x38D4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3977 JUMPI PUSH2 0x3977 PUSH2 0x3952 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x398E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1ED3 DUP2 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x39C4 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x3382 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x39D8 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x3382 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x39F3 JUMPI PUSH2 0x39F3 PUSH2 0x38D4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3A93 SWAP1 DUP4 ADD DUP5 PUSH2 0x33AE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1ED3 DUP2 PUSH2 0x334F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3AC9 JUMPI PUSH2 0x3AC9 PUSH2 0x3952 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xDD 0x2E SWAP13 0xEF 0xB0 SLOAD DUP12 0xD8 SWAP7 DUP12 0x2F SWAP15 0x28 SHR LOG0 0xE9 0xE0 PUSH29 0x3B6915727EA7403D0D6751338864736F6C634300080800330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "6": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "16": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "17": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "POP",
      "path": "19"
    },
    "18": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "21": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "LT",
      "path": "19"
    },
    "22": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A4"
    },
    "25": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "29": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "SHR",
      "path": "19"
    },
    "32": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "33": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8F01785D"
    },
    "38": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "39": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E9"
    },
    "42": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "43": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "44": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC79BA39C"
    },
    "49": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "50": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F"
    },
    "53": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "54": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "55": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE4E0A931"
    },
    "60": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "61": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xAD"
    },
    "64": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "65": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "66": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "72": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "76": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "77": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "83": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x854"
    },
    "86": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "87": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "88": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFD18B841"
    },
    "93": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "94": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x867"
    },
    "97": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "98": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "99": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFE0596F2"
    },
    "104": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "105": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x87A"
    },
    "108": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "109": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "110": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFEAB8A4"
    },
    "115": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "116": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x883"
    },
    "119": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "120": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "123": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "124": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "125": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "126": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE4E0A931"
    },
    "131": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "132": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7EA"
    },
    "135": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "136": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "137": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE985E9C5"
    },
    "142": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "143": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7F2"
    },
    "146": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "147": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "148": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEBAA42ED"
    },
    "153": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "154": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x82E"
    },
    "157": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "158": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "159": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEECBBEC4"
    },
    "164": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "165": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x841"
    },
    "168": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "169": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "172": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "173": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "174": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "175": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD2793D4A"
    },
    "180": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "181": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE9"
    },
    "184": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "185": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "186": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD2793D4A"
    },
    "191": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "192": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x78F"
    },
    "195": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "196": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "197": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD473DAB1"
    },
    "202": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "203": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7A2"
    },
    "206": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "207": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "208": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDAA17F49"
    },
    "213": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "214": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7B7"
    },
    "217": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "218": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "219": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDCA8BC47"
    },
    "224": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "225": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7CA"
    },
    "228": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "229": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "232": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "233": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "234": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "235": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC79BA39C"
    },
    "240": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "241": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x756"
    },
    "244": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "245": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "246": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC87B56DD"
    },
    "251": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "252": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x769"
    },
    "255": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "256": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "257": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xCA6D56DC"
    },
    "262": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "263": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x77C"
    },
    "266": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "267": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "269": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "270": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "271": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "272": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "273": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB15D8D5F"
    },
    "278": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "279": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x187"
    },
    "282": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "283": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "284": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB88D4FDE"
    },
    "289": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "290": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x156"
    },
    "293": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "294": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "295": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB88D4FDE"
    },
    "300": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "301": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x715"
    },
    "304": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "305": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "306": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xBB3B407B"
    },
    "311": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "312": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x728"
    },
    "315": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "316": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "317": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xBEB48326"
    },
    "322": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "323": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x73B"
    },
    "326": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "327": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "328": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC34E3782"
    },
    "333": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "334": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x743"
    },
    "337": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "338": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "340": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "341": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "342": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "343": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "344": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB15D8D5F"
    },
    "349": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "350": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6B9"
    },
    "353": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "354": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "355": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB27A5F98"
    },
    "360": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "361": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6CC"
    },
    "364": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "365": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "366": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB43AFFDA"
    },
    "371": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "372": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6DF"
    },
    "375": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "376": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "377": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB5C4B23D"
    },
    "382": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "383": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6F2"
    },
    "386": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "387": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "389": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "390": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "391": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "392": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "393": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x96291DB6"
    },
    "398": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "399": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C3"
    },
    "402": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "403": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "404": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x96291DB6"
    },
    "409": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "410": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x669"
    },
    "413": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "414": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "415": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA22CB465"
    },
    "420": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "421": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x67C"
    },
    "424": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "425": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "426": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xAA46A400"
    },
    "431": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "432": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x68F"
    },
    "435": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "436": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "437": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB063C954"
    },
    "442": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "443": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x699"
    },
    "446": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "447": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "449": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "450": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "451": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "452": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "453": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8F01785D"
    },
    "458": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "459": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x646"
    },
    "462": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "463": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "464": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95914875"
    },
    "469": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "470": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x659"
    },
    "473": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "474": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "475": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95D89B41"
    },
    "480": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "481": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x661"
    },
    "484": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "485": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "487": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "488": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "489": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "490": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "491": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4623C740"
    },
    "496": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "497": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2CE"
    },
    "500": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "501": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "502": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "507": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "508": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26C"
    },
    "511": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "512": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "513": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7498D280"
    },
    "518": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "519": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23B"
    },
    "522": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "523": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "524": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7498D280"
    },
    "529": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "530": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x607"
    },
    "533": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "534": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "535": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7867CCD1"
    },
    "540": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "541": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x60F"
    },
    "544": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "545": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "546": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x86794F66"
    },
    "551": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "552": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x622"
    },
    "555": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "556": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "557": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8DA5CB5B"
    },
    "562": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "563": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x635"
    },
    "566": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "567": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "569": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "570": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "571": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "572": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "573": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "578": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "579": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5D0"
    },
    "582": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "583": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "584": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x715018A6"
    },
    "589": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "590": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5E3"
    },
    "593": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "594": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "595": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x71AF8374"
    },
    "600": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "601": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5EB"
    },
    "604": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "605": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "606": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7417353F"
    },
    "611": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "612": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5F4"
    },
    "615": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "616": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "618": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "619": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "620": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "621": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "622": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5C23A67A"
    },
    "627": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "628": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A8"
    },
    "631": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "632": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "633": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5C23A67A"
    },
    "638": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "639": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x561"
    },
    "642": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "643": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "644": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6352211E"
    },
    "649": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "650": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x58A"
    },
    "653": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "654": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "655": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x66A98EA3"
    },
    "660": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "661": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x59D"
    },
    "664": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "665": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "666": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6F48853B"
    },
    "671": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "672": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5B0"
    },
    "675": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "676": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "678": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "679": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "680": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "681": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "682": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4623C740"
    },
    "687": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "688": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x532"
    },
    "691": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "692": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "693": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x46D36230"
    },
    "698": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "699": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x545"
    },
    "702": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "703": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "704": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x56060A74"
    },
    "709": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "710": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x54E"
    },
    "713": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "714": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "716": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "717": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "718": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "719": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "720": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x162094C4"
    },
    "725": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "726": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x346"
    },
    "729": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "730": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "731": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2517FC07"
    },
    "736": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "737": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x315"
    },
    "740": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "741": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "742": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2517FC07"
    },
    "747": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "748": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4BC"
    },
    "751": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "752": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "753": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x28DA575B"
    },
    "758": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "759": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4DC"
    },
    "762": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "763": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "764": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x33A41510"
    },
    "769": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "770": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4FF"
    },
    "773": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "774": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "775": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x42842E0E"
    },
    "780": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "781": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x51F"
    },
    "784": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "785": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "787": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "788": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "789": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "790": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "791": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x162094C4"
    },
    "796": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "797": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x47A"
    },
    "800": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "801": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "802": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x17550165"
    },
    "807": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "808": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x48D"
    },
    "811": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "812": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "813": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1C652FB5"
    },
    "818": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "819": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x496"
    },
    "822": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "823": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "824": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23B872DD"
    },
    "829": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "830": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A9"
    },
    "833": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "834": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "836": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "837": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "838": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "839": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "840": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95EA7B3"
    },
    "845": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "GT",
      "path": "19"
    },
    "846": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x382"
    },
    "849": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "850": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "851": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95EA7B3"
    },
    "856": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "857": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x411"
    },
    "860": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "861": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "862": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB1CA49A"
    },
    "867": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "868": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x426"
    },
    "871": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "872": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "873": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE1BAC89"
    },
    "878": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "879": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x439"
    },
    "882": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "883": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "884": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x11AB8DF5"
    },
    "889": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "890": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x44C"
    },
    "893": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "894": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "896": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "897": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "898": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "899": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "900": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1FFC9A7"
    },
    "905": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "906": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A9"
    },
    "909": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "910": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "911": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6FDDE03"
    },
    "916": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "917": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D1"
    },
    "920": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "921": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "922": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x81812FC"
    },
    "927": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "EQ",
      "path": "19"
    },
    "928": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3E6"
    },
    "931": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "932": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "933": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "935": {
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "DUP1",
      "path": "19"
    },
    "936": {
      "first_revert": true,
      "fn": null,
      "offset": [
        445,
        21709
      ],
      "op": "REVERT",
      "path": "19"
    },
    "937": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "938": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BC"
    },
    "941": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B7"
    },
    "944": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "945": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "947": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3365"
    },
    "950": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "5"
    },
    "951": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "952": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x896"
    },
    "955": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "5"
    },
    "956": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "957": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "959": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "960": {
      "op": "SWAP1"
    },
    "961": {
      "op": "ISZERO"
    },
    "962": {
      "op": "ISZERO"
    },
    "963": {
      "op": "DUP2"
    },
    "964": {
      "op": "MSTORE"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "967": {
      "op": "ADD"
    },
    "968": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "969": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "971": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "972": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "5"
    },
    "973": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "974": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SUB",
      "path": "5"
    },
    "975": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "976": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "RETURN",
      "path": "5"
    },
    "977": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "978": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D9"
    },
    "981": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E8"
    },
    "984": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "5"
    },
    "985": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "986": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "988": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "989": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C8"
    },
    "992": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "993": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "994": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33DA"
    },
    "997": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "5"
    },
    "998": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "999": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F9"
    },
    "1002": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F4"
    },
    "1005": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1006": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1008": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33ED"
    },
    "1011": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1012": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1013": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97A"
    },
    "1016": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1017": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1018": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1020": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1027": {
      "op": "SHL"
    },
    "1028": {
      "op": "SUB"
    },
    "1029": {
      "op": "SWAP1"
    },
    "1030": {
      "op": "SWAP2"
    },
    "1031": {
      "op": "AND"
    },
    "1032": {
      "op": "DUP2"
    },
    "1033": {
      "op": "MSTORE"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1036": {
      "op": "ADD"
    },
    "1037": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C8"
    },
    "1040": {
      "op": "JUMP"
    },
    "1041": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1042": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "1045": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x41F"
    },
    "1048": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1049": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1051": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x341B"
    },
    "1054": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1055": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1056": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA07"
    },
    "1059": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1060": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1061": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "STOP",
      "path": "5"
    },
    "1062": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20904,
        21104
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1063": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20904,
        21104
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1066": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20904,
        21104
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x434"
    },
    "1069": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20904,
        21104
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1070": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20904,
        21104
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1072": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20904,
        21104
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3447"
    },
    "1075": {
      "fn": "CardinalNFT.removeMember",
      "jump": "i",
      "offset": [
        20904,
        21104
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1076": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20904,
        21104
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1077": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20904,
        21104
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB1D"
    },
    "1080": {
      "fn": "CardinalNFT.removeMember",
      "jump": "i",
      "offset": [
        20904,
        21104
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1081": {
      "offset": [
        763,
        797
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1082": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        763,
        797
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "1084": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        763,
        797
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1085": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        763,
        797
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3F9"
    },
    "1088": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        763,
        797
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1095": {
      "op": "SHL"
    },
    "1096": {
      "op": "SUB"
    },
    "1097": {
      "offset": [
        763,
        797
      ],
      "op": "AND",
      "path": "19"
    },
    "1098": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        763,
        797
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1099": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        763,
        797
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1100": {
      "offset": [
        1800,
        1858
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1101": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1104": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x45A"
    },
    "1107": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1108": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1110": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33ED"
    },
    "1113": {
      "fn": "CardinalNFT.removeMember",
      "jump": "i",
      "offset": [
        1800,
        1858
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1114": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1115": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "1117": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1119": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1120": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1122": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1123": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1124": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1125": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1127": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1128": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1129": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1130": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1131": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1132": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1133": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1135": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1800,
        1858
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1136": {
      "op": "SWAP1"
    },
    "1137": {
      "op": "DUP2"
    },
    "1138": {
      "op": "MSTORE"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1141": {
      "op": "ADD"
    },
    "1142": {
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C8"
    },
    "1145": {
      "op": "JUMP"
    },
    "1146": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11664,
        11851
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1147": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11664,
        11851
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1150": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11664,
        11851
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x488"
    },
    "1153": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11664,
        11851
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1154": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11664,
        11851
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1156": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11664,
        11851
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3510"
    },
    "1159": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "i",
      "offset": [
        11664,
        11851
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1160": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11664,
        11851
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1161": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11664,
        11851
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBAF"
    },
    "1164": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "i",
      "offset": [
        11664,
        11851
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1165": {
      "offset": [
        2299,
        2334
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1166": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2299,
        2334
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1169": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2299,
        2334
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x14"
    },
    "1171": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2299,
        2334
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1172": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2299,
        2334
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1173": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2299,
        2334
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1174": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7693,
        7862
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1175": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7693,
        7862
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1178": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7693,
        7862
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A4"
    },
    "1181": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7693,
        7862
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1182": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7693,
        7862
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1184": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7693,
        7862
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3557"
    },
    "1187": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "jump": "i",
      "offset": [
        7693,
        7862
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1188": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7693,
        7862
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1189": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7693,
        7862
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC1F"
    },
    "1192": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "jump": "i",
      "offset": [
        7693,
        7862
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1193": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1194": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "1197": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B7"
    },
    "1200": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1201": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1203": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3579"
    },
    "1206": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1207": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1208": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC5B"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1212": {
      "offset": [
        2086,
        2149
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1216": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4CA"
    },
    "1219": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1220": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1222": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3447"
    },
    "1225": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        2086,
        2149
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1226": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1227": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "1229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1231": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1232": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1234": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1235": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1236": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1240": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1243": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2086,
        2149
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1244": {
      "offset": [
        1444,
        1491
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3BC"
    },
    "1248": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4EA"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1252": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3447"
    },
    "1257": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        1444,
        1491
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1258": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1259": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "1261": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1263": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1264": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1266": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1267": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1268": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1269": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1271": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1272": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1273": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1274": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "1276": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "AND",
      "path": "19"
    },
    "1277": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1278": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1444,
        1491
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1279": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1280": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x512"
    },
    "1283": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x50D"
    },
    "1286": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1287": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1289": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3447"
    },
    "1292": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14154,
        15097
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1293": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1294": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC8C"
    },
    "1297": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14154,
        15097
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1298": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1299": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1301": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1302": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C8"
    },
    "1305": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1306": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1307": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35BA"
    },
    "1310": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14154,
        15097
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1311": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1312": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "1315": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x52D"
    },
    "1318": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1319": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1321": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3579"
    },
    "1324": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1325": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1326": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE26"
    },
    "1329": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1330": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1331": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1334": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x540"
    },
    "1337": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1338": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1340": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x361C"
    },
    "1343": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10483,
        11458
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1344": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1345": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE41"
    },
    "1348": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10483,
        11458
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1349": {
      "offset": [
        2207,
        2248
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1350": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        2207,
        2248
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1353": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        2207,
        2248
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "1355": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        2207,
        2248
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1356": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        2207,
        2248
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1357": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        2207,
        2248
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1358": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13060,
        13919
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1359": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13060,
        13919
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x512"
    },
    "1362": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13060,
        13919
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x55C"
    },
    "1365": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13060,
        13919
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1366": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13060,
        13919
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1368": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13060,
        13919
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3447"
    },
    "1371": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13060,
        13919
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1372": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13060,
        13919
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1373": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13060,
        13919
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF98"
    },
    "1376": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13060,
        13919
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1377": {
      "offset": [
        1269,
        1329
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1378": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3F9"
    },
    "1381": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x56F"
    },
    "1384": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1385": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1387": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33ED"
    },
    "1390": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        1269,
        1329
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1391": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1392": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "1394": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1396": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1397": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1399": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1400": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1401": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1402": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1404": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1405": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1406": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1413": {
      "op": "SHL"
    },
    "1414": {
      "op": "SUB"
    },
    "1415": {
      "offset": [
        1269,
        1329
      ],
      "op": "AND",
      "path": "19"
    },
    "1416": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1417": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1269,
        1329
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1418": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1419": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F9"
    },
    "1422": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x598"
    },
    "1425": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1426": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1428": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33ED"
    },
    "1431": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1432": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1433": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F6"
    },
    "1436": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1437": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        17968,
        18208
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1438": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        17968,
        18208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1441": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        17968,
        18208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5AB"
    },
    "1444": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        17968,
        18208
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1445": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        17968,
        18208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1447": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        17968,
        18208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33ED"
    },
    "1450": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "i",
      "offset": [
        17968,
        18208
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1451": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        17968,
        18208
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1452": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        17968,
        18208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x116D"
    },
    "1455": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "i",
      "offset": [
        17968,
        18208
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1456": {
      "offset": [
        1002,
        1052
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1457": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1460": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5BE"
    },
    "1463": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1464": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1466": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33ED"
    },
    "1469": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "i",
      "offset": [
        1002,
        1052
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1470": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1471": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "1473": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1475": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1476": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1478": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1479": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1480": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1481": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1483": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1484": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1485": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1486": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1487": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1002,
        1052
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1488": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1489": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46C"
    },
    "1492": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5DE"
    },
    "1495": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1496": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1498": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3447"
    },
    "1501": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1502": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1503": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11F4"
    },
    "1506": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1507": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1508": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x424"
    },
    "1511": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x127B"
    },
    "1514": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1515": {
      "offset": [
        2382,
        2414
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1516": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2382,
        2414
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1519": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2382,
        2414
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "1521": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2382,
        2414
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1522": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2382,
        2414
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1523": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2382,
        2414
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1524": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        16962,
        17123
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1525": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        16962,
        17123
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1528": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        16962,
        17123
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x602"
    },
    "1531": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        16962,
        17123
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1532": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        16962,
        17123
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1534": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        16962,
        17123
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x341B"
    },
    "1537": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "jump": "i",
      "offset": [
        16962,
        17123
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1538": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        16962,
        17123
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1539": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        16962,
        17123
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12B1"
    },
    "1542": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "jump": "i",
      "offset": [
        16962,
        17123
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1543": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5911,
        7364
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1544": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5911,
        7364
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1547": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5911,
        7364
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1309"
    },
    "1550": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        5911,
        7364
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1551": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17320,
        17471
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1552": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17320,
        17471
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1555": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17320,
        17471
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x61D"
    },
    "1558": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17320,
        17471
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1559": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17320,
        17471
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1561": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17320,
        17471
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3557"
    },
    "1564": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "jump": "i",
      "offset": [
        17320,
        17471
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1565": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17320,
        17471
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1566": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17320,
        17471
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1785"
    },
    "1569": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "jump": "i",
      "offset": [
        17320,
        17471
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1570": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18725,
        18911
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1571": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18725,
        18911
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1574": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18725,
        18911
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x630"
    },
    "1577": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18725,
        18911
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1578": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18725,
        18911
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1580": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18725,
        18911
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33ED"
    },
    "1583": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "jump": "i",
      "offset": [
        18725,
        18911
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1584": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18725,
        18911
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1585": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18725,
        18911
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C1"
    },
    "1588": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "jump": "i",
      "offset": [
        18725,
        18911
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1589": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1590": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x7"
    },
    "1592": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "op": "SUB"
    },
    "1601": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1602": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "1605": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1606": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12066,
        12811
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1607": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12066,
        12811
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x512"
    },
    "1610": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12066,
        12811
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x654"
    },
    "1613": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12066,
        12811
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1614": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12066,
        12811
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1616": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12066,
        12811
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3447"
    },
    "1619": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12066,
        12811
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1620": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12066,
        12811
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1621": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12066,
        12811
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1810"
    },
    "1624": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12066,
        12811
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1625": {
      "offset": [
        2647,
        2679
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1626": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D9"
    },
    "1629": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1938"
    },
    "1632": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1633": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1634": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D9"
    },
    "1637": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19C6"
    },
    "1640": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1641": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19052,
        19201
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1642": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19052,
        19201
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1645": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19052,
        19201
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x677"
    },
    "1648": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19052,
        19201
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1649": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19052,
        19201
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1651": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19052,
        19201
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3670"
    },
    "1654": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "jump": "i",
      "offset": [
        19052,
        19201
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1655": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19052,
        19201
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1656": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19052,
        19201
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19D5"
    },
    "1659": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "jump": "i",
      "offset": [
        19052,
        19201
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1660": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1661": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "1664": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x68A"
    },
    "1667": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1668": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1670": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36B3"
    },
    "1673": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1674": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1675": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A16"
    },
    "1678": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1679": {
      "offset": [
        588,
        621
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1680": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        588,
        621
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "1682": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        588,
        621
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1683": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        588,
        621
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1686": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        588,
        621
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1687": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        588,
        621
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1688": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        588,
        621
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1689": {
      "offset": [
        1145,
        1199
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1690": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1693": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6A7"
    },
    "1696": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1697": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1699": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33ED"
    },
    "1702": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        1145,
        1199
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1703": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1704": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "1706": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1708": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1709": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1711": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1712": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1713": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1714": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1716": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1717": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1718": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1719": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1720": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1145,
        1199
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1721": {
      "offset": [
        2560,
        2595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1722": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1725": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6C7"
    },
    "1728": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1729": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1731": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33ED"
    },
    "1734": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        2560,
        2595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1735": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1736": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A21"
    },
    "1739": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        2560,
        2595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1740": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20131,
        20263
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1741": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20131,
        20263
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1744": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20131,
        20263
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6DA"
    },
    "1747": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20131,
        20263
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1748": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20131,
        20263
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1750": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20131,
        20263
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36B3"
    },
    "1753": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "i",
      "offset": [
        20131,
        20263
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1754": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20131,
        20263
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1755": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20131,
        20263
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A42"
    },
    "1758": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "i",
      "offset": [
        20131,
        20263
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1759": {
      "offset": [
        2470,
        2511
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1760": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1763": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6ED"
    },
    "1766": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1767": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1769": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33ED"
    },
    "1772": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "i",
      "offset": [
        2470,
        2511
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1773": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1774": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A97"
    },
    "1777": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "i",
      "offset": [
        2470,
        2511
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1778": {
      "offset": [
        1969,
        2016
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1779": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3BC"
    },
    "1782": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x700"
    },
    "1785": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1786": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1788": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3447"
    },
    "1791": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "i",
      "offset": [
        1969,
        2016
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1792": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1793": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "1795": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1797": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1798": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1800": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1801": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1802": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1803": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1805": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1806": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1807": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1808": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "1810": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "AND",
      "path": "19"
    },
    "1811": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1812": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        1969,
        2016
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1813": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1814": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "1817": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x723"
    },
    "1820": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1821": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1823": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36EC"
    },
    "1826": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1827": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1828": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AA7"
    },
    "1831": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1832": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1833": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1836": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x736"
    },
    "1839": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1840": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1842": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x376C"
    },
    "1845": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8318,
        9690
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1846": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1847": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1ADF"
    },
    "1850": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8318,
        9690
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1851": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9831,
        9976
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1852": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9831,
        9976
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1855": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9831,
        9976
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EDA"
    },
    "1858": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "i",
      "offset": [
        9831,
        9976
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1859": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15326,
        16158
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1860": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15326,
        16158
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x512"
    },
    "1863": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15326,
        16158
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x751"
    },
    "1866": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15326,
        16158
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1867": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15326,
        16158
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1869": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15326,
        16158
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3447"
    },
    "1872": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15326,
        16158
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1873": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15326,
        16158
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1874": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15326,
        16158
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2023"
    },
    "1877": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15326,
        16158
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1878": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17652,
        17787
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1879": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17652,
        17787
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1882": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17652,
        17787
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x764"
    },
    "1885": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17652,
        17787
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1886": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17652,
        17787
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1888": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17652,
        17787
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3557"
    },
    "1891": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "jump": "i",
      "offset": [
        17652,
        17787
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1892": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17652,
        17787
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1893": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17652,
        17787
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2181"
    },
    "1896": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "jump": "i",
      "offset": [
        17652,
        17787
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1897": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1898": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3D9"
    },
    "1901": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x777"
    },
    "1904": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1905": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1907": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x33ED"
    },
    "1910": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1911": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1912": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21BD"
    },
    "1915": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1916": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20476,
        20668
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1917": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20476,
        20668
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1920": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20476,
        20668
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x78A"
    },
    "1923": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20476,
        20668
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1924": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20476,
        20668
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1926": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20476,
        20668
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3447"
    },
    "1929": {
      "fn": "CardinalNFT.addMember",
      "jump": "i",
      "offset": [
        20476,
        20668
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1930": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20476,
        20668
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1931": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20476,
        20668
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x232C"
    },
    "1934": {
      "fn": "CardinalNFT.addMember",
      "jump": "i",
      "offset": [
        20476,
        20668
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1935": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19765,
        19916
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1936": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19765,
        19916
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "1939": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19765,
        19916
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x79D"
    },
    "1942": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19765,
        19916
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1943": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19765,
        19916
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1945": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19765,
        19916
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3447"
    },
    "1948": {
      "fn": "CardinalNFT.setCardinalToken",
      "jump": "i",
      "offset": [
        19765,
        19916
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1949": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19765,
        19916
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1950": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19765,
        19916
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23BD"
    },
    "1953": {
      "fn": "CardinalNFT.setCardinalToken",
      "jump": "i",
      "offset": [
        19765,
        19916
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1954": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1955": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7AA"
    },
    "1958": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2409"
    },
    "1961": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "jump": "i",
      "offset": [
        16564,
        16680
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1962": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1963": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1965": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1966": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C8"
    },
    "1969": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1970": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1971": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37A1"
    },
    "1974": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "jump": "i",
      "offset": [
        16564,
        16680
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1975": {
      "offset": [
        676,
        709
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1976": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        676,
        709
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "1978": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        676,
        709
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1979": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        676,
        709
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3F9"
    },
    "1982": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        676,
        709
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "op": "SUB"
    },
    "1991": {
      "offset": [
        676,
        709
      ],
      "op": "AND",
      "path": "19"
    },
    "1992": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        676,
        709
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1993": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        676,
        709
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1994": {
      "offset": [
        1638,
        1696
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1995": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1998": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7D8"
    },
    "2001": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2002": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2004": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3447"
    },
    "2007": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "jump": "i",
      "offset": [
        1638,
        1696
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2008": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2009": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "2011": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2013": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2014": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2016": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2017": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2018": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2019": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2021": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2022": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2023": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2024": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2025": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1638,
        1696
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2026": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16304,
        16432
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2027": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16304,
        16432
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7AA"
    },
    "2030": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16304,
        16432
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2460"
    },
    "2033": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "jump": "i",
      "offset": [
        16304,
        16432
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2034": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2035": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BC"
    },
    "2038": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x800"
    },
    "2041": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2042": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2044": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37E5"
    },
    "2047": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2048": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2055": {
      "op": "SHL"
    },
    "2056": {
      "op": "SUB"
    },
    "2057": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 1
    },
    "2058": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2059": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "5"
    },
    "2060": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2062": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2063": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2064": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2065": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2067": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2069": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2070": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2071": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2072": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2074": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2075": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2076": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2077": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2078": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2079": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2080": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "2081": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2082": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2083": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2084": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2085": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2086": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2087": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2088": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2089": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2091": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "2092": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2093": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2094": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19379,
        19583
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2095": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19379,
        19583
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "2098": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19379,
        19583
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x83C"
    },
    "2101": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19379,
        19583
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2102": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19379,
        19583
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2104": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19379,
        19583
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33ED"
    },
    "2107": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "jump": "i",
      "offset": [
        19379,
        19583
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2108": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19379,
        19583
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2109": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19379,
        19583
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x24B6"
    },
    "2112": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "jump": "i",
      "offset": [
        19379,
        19583
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2113": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4466,
        4581
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2114": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4466,
        4581
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "2117": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4466,
        4581
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x84F"
    },
    "2120": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4466,
        4581
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2121": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4466,
        4581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2123": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4466,
        4581
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33ED"
    },
    "2126": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "jump": "i",
      "offset": [
        4466,
        4581
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2127": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4466,
        4581
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2128": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4466,
        4581
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2513"
    },
    "2131": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "jump": "i",
      "offset": [
        4466,
        4581
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x424"
    },
    "2136": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x862"
    },
    "2139": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2142": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3447"
    },
    "2145": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2146": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2546"
    },
    "2150": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2151": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21385,
        21707
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2152": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21385,
        21707
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "2155": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21385,
        21707
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x875"
    },
    "2158": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21385,
        21707
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2159": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21385,
        21707
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2161": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21385,
        21707
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x341B"
    },
    "2164": {
      "fn": "CardinalNFT.setMemberDiscount",
      "jump": "i",
      "offset": [
        21385,
        21707
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2165": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21385,
        21707
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2166": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21385,
        21707
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x25DE"
    },
    "2169": {
      "fn": "CardinalNFT.setMemberDiscount",
      "jump": "i",
      "offset": [
        21385,
        21707
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2170": {
      "offset": [
        2752,
        2798
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2171": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        2752,
        2798
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "2174": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        2752,
        2798
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x19"
    },
    "2176": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        2752,
        2798
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2177": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        2752,
        2798
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2178": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        2752,
        2798
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2179": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18369,
        18573
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2180": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18369,
        18573
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x424"
    },
    "2183": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18369,
        18573
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x891"
    },
    "2186": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18369,
        18573
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2187": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18369,
        18573
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2189": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18369,
        18573
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33ED"
    },
    "2192": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "jump": "i",
      "offset": [
        18369,
        18573
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2193": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18369,
        18573
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2194": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18369,
        18573
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26A0"
    },
    "2197": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "jump": "i",
      "offset": [
        18369,
        18573
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2198": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2199": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2207": {
      "op": "SHL"
    },
    "2208": {
      "op": "SUB"
    },
    "2209": {
      "op": "NOT"
    },
    "2210": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 2
    },
    "2211": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "5"
    },
    "2212": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2219": {
      "op": "SHL"
    },
    "2220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "5"
    },
    "2221": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8C7"
    },
    "2225": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2226": {
      "op": "POP"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2233": {
      "op": "SHL"
    },
    "2234": {
      "op": "SUB"
    },
    "2235": {
      "op": "NOT"
    },
    "2236": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2237": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "5"
    },
    "2238": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2245": {
      "op": "SHL"
    },
    "2246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "5"
    },
    "2247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E2"
    },
    "2252": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2253": {
      "op": "POP"
    },
    "2254": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2261": {
      "op": "SHL"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2268": {
      "op": "SHL"
    },
    "2269": {
      "op": "SUB"
    },
    "2270": {
      "op": "NOT"
    },
    "2271": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 3
    },
    "2272": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "14"
    },
    "2273": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "14"
    },
    "2274": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2275": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1688,
        1863
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2276": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2277": {
      "op": "POP"
    },
    "2278": {
      "op": "POP"
    },
    "2279": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2280": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2281": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2283": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x0"
    },
    "2285": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2286": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2287": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F7"
    },
    "2290": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2291": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3813"
    },
    "2294": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2295": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2296": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2297": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2299": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2300": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2302": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2303": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2304": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "5"
    },
    "2305": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "5"
    },
    "2306": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2308": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2309": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2311": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2312": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2313": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2314": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2315": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2317": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2318": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2319": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2320": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2321": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2322": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2323": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2324": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2325": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2327": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2328": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2329": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2330": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2331": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x923"
    },
    "2334": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2335": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3813"
    },
    "2338": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2339": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2340": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2341": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2342": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x970"
    },
    "2345": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2346": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2347": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2349": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "5"
    },
    "2350": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x945"
    },
    "2353": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2354": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2357": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2358": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2359": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2360": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "5"
    },
    "2361": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "5"
    },
    "2362": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2363": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2364": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2365": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2367": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2368": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2369": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x970"
    },
    "2372": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2373": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2374": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2375": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2376": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2377": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2378": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2380": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2381": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2383": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2385": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2386": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2387": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2388": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2389": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2390": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2391": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2392": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2393": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2395": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2396": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2397": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2399": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2400": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2401": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2402": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "5"
    },
    "2403": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x953"
    },
    "2406": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2407": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2408": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2409": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "5"
    },
    "2410": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2412": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "5"
    },
    "2413": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2414": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2415": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2416": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2417": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2418": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2419": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2420": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2421": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2422": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2423": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2424": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2425": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2426": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2427": {
      "fn": "ERC721.getApproved",
      "offset": [
        4075,
        4082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2429": {
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4118
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 5,
      "value": "0x985"
    },
    "2432": {
      "fn": "ERC721.getApproved",
      "offset": [
        4110,
        4117
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2433": {
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26F2"
    },
    "2436": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4102,
        4118
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2437": {
      "branch": 201,
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4118
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2438": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9EB"
    },
    "2441": {
      "branch": 201,
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2442": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2444": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2445": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2451": {
      "op": "SHL"
    },
    "2452": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2453": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2456": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2458": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2459": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "ADD",
      "path": "5"
    },
    "2460": {
      "op": "MSTORE"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2465": {
      "op": "DUP3"
    },
    "2466": {
      "op": "ADD"
    },
    "2467": {
      "op": "MSTORE"
    },
    "2468": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2503": {
      "op": "DUP3"
    },
    "2504": {
      "op": "ADD"
    },
    "2505": {
      "op": "MSTORE"
    },
    "2506": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2521": {
      "op": "SHL"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2524": {
      "op": "DUP3"
    },
    "2525": {
      "op": "ADD"
    },
    "2526": {
      "op": "MSTORE"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2529": {
      "op": "ADD"
    },
    "2530": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2531": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2533": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2534": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2535": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2536": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SUB",
      "path": "5"
    },
    "2537": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2538": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "2539": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2540": {
      "op": "POP"
    },
    "2541": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x0"
    },
    "2543": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2544": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2545": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2546": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2548": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2550": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2551": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2553": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2554": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2555": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2562": {
      "op": "SHL"
    },
    "2563": {
      "op": "SUB"
    },
    "2564": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "AND",
      "path": "5"
    },
    "2565": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2566": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2567": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2568": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3630
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2570": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA12"
    },
    "2573": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3655
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2574": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F6"
    },
    "2577": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2578": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2579": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2580": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "POP",
      "path": "5"
    },
    "2581": {
      "fn": "ERC721.approve",
      "offset": [
        3680,
        3685
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 7
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2588": {
      "op": "SHL"
    },
    "2589": {
      "op": "SUB"
    },
    "2590": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "5"
    },
    "2591": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3676
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2598": {
      "op": "SHL"
    },
    "2599": {
      "op": "SUB"
    },
    "2600": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "5"
    },
    "2601": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "EQ",
      "path": "5"
    },
    "2602": {
      "branch": 202,
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2603": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA80"
    },
    "2606": {
      "branch": 202,
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2607": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2609": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2610": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2616": {
      "op": "SHL"
    },
    "2617": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2618": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2621": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2623": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2624": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "2625": {
      "op": "MSTORE"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2630": {
      "op": "DUP3"
    },
    "2631": {
      "op": "ADD"
    },
    "2632": {
      "op": "MSTORE"
    },
    "2633": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2668": {
      "op": "DUP3"
    },
    "2669": {
      "op": "ADD"
    },
    "2670": {
      "op": "MSTORE"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2675": {
      "op": "SHL"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2678": {
      "op": "DUP3"
    },
    "2679": {
      "op": "ADD"
    },
    "2680": {
      "op": "MSTORE"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2683": {
      "op": "ADD"
    },
    "2684": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "2687": {
      "op": "JUMP"
    },
    "2688": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2689": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 8
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2696": {
      "op": "SHL"
    },
    "2697": {
      "op": "SUB"
    },
    "2698": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 9
    },
    "2699": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "AND",
      "path": "5"
    },
    "2700": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "EQ",
      "path": "5"
    },
    "2701": {
      "branch": 203,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2702": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA9C"
    },
    "2705": {
      "branch": 203,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2706": {
      "op": "POP"
    },
    "2707": {
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA9C"
    },
    "2710": {
      "fn": "ERC721.approve",
      "offset": [
        3797,
        3802
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2711": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2712": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x800"
    },
    "2715": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2716": {
      "branch": 204,
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2717": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB0E"
    },
    "2720": {
      "branch": 204,
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2721": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2723": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2730": {
      "op": "SHL"
    },
    "2731": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2732": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2735": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2737": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2738": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "ADD",
      "path": "5"
    },
    "2739": {
      "op": "MSTORE"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2744": {
      "op": "DUP3"
    },
    "2745": {
      "op": "ADD"
    },
    "2746": {
      "op": "MSTORE"
    },
    "2747": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2782": {
      "op": "DUP3"
    },
    "2783": {
      "op": "ADD"
    },
    "2784": {
      "op": "MSTORE"
    },
    "2785": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2820": {
      "op": "DUP3"
    },
    "2821": {
      "op": "ADD"
    },
    "2822": {
      "op": "MSTORE"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2825": {
      "op": "ADD"
    },
    "2826": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "2829": {
      "op": "JUMP"
    },
    "2830": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2831": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 10,
      "value": "0xB18"
    },
    "2834": {
      "fn": "ERC721.approve",
      "offset": [
        3919,
        3921
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2835": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3930
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2836": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x270F"
    },
    "2839": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2840": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2841": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "2842": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "2843": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "2844": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2845": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20904,
        21104
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2846": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20991,
        21001
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 11
    },
    "2847": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2849": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2850": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2851": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2852": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        20990
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "2854": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2856": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2857": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2859": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2860": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2861": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2862": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "2864": {
      "branch": 162,
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20976,
        21002
      ],
      "op": "AND",
      "path": "19"
    },
    "2865": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20968,
        21048
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB8E"
    },
    "2868": {
      "branch": 162,
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20968,
        21048
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2869": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20968,
        21048
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2871": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20968,
        21048
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2872": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2878": {
      "op": "SHL"
    },
    "2879": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20968,
        21048
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2880": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20968,
        21048
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2883": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20968,
        21048
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2885": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20968,
        21048
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2886": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20968,
        21048
      ],
      "op": "ADD",
      "path": "19"
    },
    "2887": {
      "op": "MSTORE"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2892": {
      "op": "DUP3"
    },
    "2893": {
      "op": "ADD"
    },
    "2894": {
      "op": "MSTORE"
    },
    "2895": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920636F6E74726163742061646D696E732063616E2072656D6F766520"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2930": {
      "op": "DUP3"
    },
    "2931": {
      "op": "ADD"
    },
    "2932": {
      "op": "MSTORE"
    },
    "2933": {
      "op": "PUSH9",
      "value": "0x309036B2B6B132B917"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2945": {
      "op": "SHL"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2948": {
      "op": "DUP3"
    },
    "2949": {
      "op": "ADD"
    },
    "2950": {
      "op": "MSTORE"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2953": {
      "op": "ADD"
    },
    "2954": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20968,
        21048
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9E2"
    },
    "2957": {
      "op": "JUMP"
    },
    "2958": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        20968,
        21048
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2965": {
      "op": "SHL"
    },
    "2966": {
      "op": "SUB"
    },
    "2967": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21089
      ],
      "op": "AND",
      "path": "19",
      "statement": 12
    },
    "2968": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21092,
        21097
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2970": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21089
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2971": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21089
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2972": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21089
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2973": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21074
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "2975": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21089
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2977": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21089
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2978": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21089
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2980": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21089
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2981": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21089
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2982": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21097
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2983": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21097
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2986": {
      "op": "NOT"
    },
    "2987": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21097
      ],
      "op": "AND",
      "path": "19"
    },
    "2988": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21097
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2989": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21059,
        21097
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "2990": {
      "fn": "CardinalNFT.removeMember",
      "jump": "o",
      "offset": [
        20904,
        21104
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2991": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11664,
        11851
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2992": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2994": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3001": {
      "op": "SHL"
    },
    "3002": {
      "op": "SUB"
    },
    "3003": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3004": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3005": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3006": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD9"
    },
    "3009": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3010": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3012": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3019": {
      "op": "SHL"
    },
    "3020": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3021": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3022": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3024": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3025": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "3028": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3029": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "3032": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3033": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3034": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11758,
        11792
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 13,
      "value": "0xBE3"
    },
    "3037": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11771,
        11778
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3038": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11780,
        11791
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3039": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11758,
        11770
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x277D"
    },
    "3042": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "i",
      "offset": [
        11758,
        11792
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3043": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11758,
        11792
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3044": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11823,
        11830
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 14
    },
    "3045": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xC794E2271B51F209D8A645EEC85692351AD1ADC857AB2E06F9C5AF7961CF07D5"
    },
    "3078": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11832,
        11843
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3079": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3081": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3082": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC13"
    },
    "3085": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3086": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3087": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33DA"
    },
    "3090": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "i",
      "offset": [
        11807,
        11844
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3091": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3092": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3094": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3095": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3096": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3097": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "SUB",
      "path": "19"
    },
    "3098": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3099": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11807,
        11844
      ],
      "op": "LOG2",
      "path": "19"
    },
    "3100": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11664,
        11851
      ],
      "op": "POP",
      "path": "19"
    },
    "3101": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11664,
        11851
      ],
      "op": "POP",
      "path": "19"
    },
    "3102": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "o",
      "offset": [
        11664,
        11851
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3103": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7693,
        7862
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3104": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3106": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3113": {
      "op": "SHL"
    },
    "3114": {
      "op": "SUB"
    },
    "3115": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3116": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3117": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3118": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC49"
    },
    "3121": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3122": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3124": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3125": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3131": {
      "op": "SHL"
    },
    "3132": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3133": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3134": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3136": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3137": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "3140": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3141": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "3144": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3145": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3146": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7835
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 15,
      "value": "0x0"
    },
    "3148": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7835
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3149": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7835
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3150": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7835
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3151": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7826
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "3153": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3155": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7835
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3156": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3158": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7835
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3159": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7835
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3160": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7835
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3161": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7803,
        7855
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3162": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "jump": "o",
      "offset": [
        7693,
        7862
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3163": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3164": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 16,
      "value": "0xC65"
    },
    "3167": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3168": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4948,
        4955
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3169": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4933
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2808"
    },
    "3172": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3173": {
      "branch": 205,
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3174": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC81"
    },
    "3177": {
      "branch": 205,
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3178": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3180": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3181": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3187": {
      "op": "SHL"
    },
    "3188": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3189": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3190": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3192": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "ADD",
      "path": "5"
    },
    "3193": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "3196": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3197": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3883"
    },
    "3200": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3201": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3202": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5049
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 17,
      "value": "0xB18"
    },
    "3205": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5031,
        5035
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3206": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5037,
        5039
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3207": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5041,
        5048
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3208": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5030
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28EE"
    },
    "3211": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5021,
        5049
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3212": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3213": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14234,
        14249
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "3215": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14261,
        14274
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3217": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14277,
        14296
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC99"
    },
    "3220": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14277,
        14286
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "3222": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12",
      "statement": 18
    },
    "3223": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3224": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3225": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14277,
        14296
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3226": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14261,
        14296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3227": {
      "op": "POP"
    },
    "3228": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14306,
        14323
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3230": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14306,
        14323
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3231": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14384,
        14385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3233": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14369,
        14609
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3234": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14393,
        14401
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3235": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14387,
        14389
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3236": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14387,
        14401
      ],
      "op": "GT",
      "path": "19"
    },
    "3237": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14369,
        14609
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD1E"
    },
    "3240": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14369,
        14609
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3241": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14442,
        14453
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3248": {
      "op": "SHL"
    },
    "3249": {
      "op": "SUB"
    },
    "3250": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14427,
        14453
      ],
      "op": "AND",
      "path": "19"
    },
    "3251": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14427,
        14438
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCBB"
    },
    "3254": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14435,
        14437
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3255": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14427,
        14434
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "3258": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14427,
        14438
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3259": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14427,
        14438
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3266": {
      "op": "SHL"
    },
    "3267": {
      "op": "SUB"
    },
    "3268": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14427,
        14453
      ],
      "op": "AND",
      "path": "19"
    },
    "3269": {
      "branch": 163,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14427,
        14453
      ],
      "op": "EQ",
      "path": "19"
    },
    "3270": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14427,
        14547
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3271": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14427,
        14547
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3272": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14427,
        14547
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCF9"
    },
    "3275": {
      "branch": 163,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14427,
        14547
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3276": {
      "op": "POP"
    },
    "3277": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14481,
        14503
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "3279": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14481,
        14503
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3280": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14477
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3282": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14477
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3283": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14477
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3284": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14477
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3285": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14473
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3287": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14477
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3289": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14477
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3290": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14477
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3292": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14477
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3293": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14477
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3294": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14477
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3295": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14503
      ],
      "op": "EQ",
      "path": "19"
    },
    "3296": {
      "branch": 164,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14503
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3297": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14546
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCF9"
    },
    "3300": {
      "branch": 164,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14546
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3301": {
      "op": "POP"
    },
    "3302": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14546
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x14"
    },
    "3304": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14546
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3305": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14526
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3307": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14526
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3308": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14526
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3309": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14526
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3310": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14522
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3312": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14526
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3314": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14526
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3315": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14526
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3317": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14526
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3318": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14526
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3319": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14526
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3320": {
      "branch": 165,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14507,
        14546
      ],
      "op": "EQ",
      "path": "19"
    },
    "3321": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14458,
        14546
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3322": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14423,
        14599
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3323": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14423,
        14599
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD0C"
    },
    "3326": {
      "branch": 165,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14423,
        14599
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3327": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14567,
        14584
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 19,
      "value": "0xD09"
    },
    "3330": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14583,
        14584
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3332": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14567,
        14584
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3333": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14567,
        14584
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38EA"
    },
    "3336": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14567,
        14584
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3337": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14567,
        14584
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3338": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14567,
        14584
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3339": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14567,
        14584
      ],
      "op": "POP",
      "path": "19"
    },
    "3340": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14423,
        14599
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3341": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14403,
        14407
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 20
    },
    "3342": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14403,
        14407
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD16"
    },
    "3345": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14403,
        14407
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3346": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14403,
        14407
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3902"
    },
    "3349": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14403,
        14407
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3350": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14403,
        14407
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3351": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14403,
        14407
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3352": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14403,
        14407
      ],
      "op": "POP",
      "path": "19"
    },
    "3353": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14403,
        14407
      ],
      "op": "POP",
      "path": "19"
    },
    "3354": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14369,
        14609
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCA1"
    },
    "3357": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14369,
        14609
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3358": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14369,
        14609
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3359": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14369,
        14609
      ],
      "op": "POP",
      "path": "19"
    },
    "3360": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14619,
        14651
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3362": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14667,
        14679
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3363": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3372": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3373": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "GT",
      "path": "19"
    },
    "3374": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3375": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD3A"
    },
    "3378": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3379": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD3A"
    },
    "3382": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3464"
    },
    "3385": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14654,
        14680
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3386": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3387": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3389": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3390": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3391": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3392": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3393": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3394": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3395": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3397": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "MUL",
      "path": "19"
    },
    "3398": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3400": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "ADD",
      "path": "19"
    },
    "3401": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3402": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "ADD",
      "path": "19"
    },
    "3403": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3405": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3406": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3407": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3408": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD6D"
    },
    "3411": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3412": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3413": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3415": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "ADD",
      "path": "19"
    },
    "3416": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3417": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "3419": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3420": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3421": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3423": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "ADD",
      "path": "19"
    },
    "3424": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3425": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3427": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3428": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "SUB",
      "path": "19"
    },
    "3429": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3430": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3431": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD58"
    },
    "3434": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3435": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3436": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "POP",
      "path": "19"
    },
    "3437": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14654,
        14680
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3438": {
      "op": "POP"
    },
    "3439": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14619,
        14680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14706,
        14707
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3443": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14691,
        15049
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3444": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14715,
        14723
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3445": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14709,
        14711
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3446": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14709,
        14723
      ],
      "op": "GT",
      "path": "19"
    },
    "3447": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14691,
        15049
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE1C"
    },
    "3450": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14691,
        15049
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3451": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14764,
        14775
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3458": {
      "op": "SHL"
    },
    "3459": {
      "op": "SUB"
    },
    "3460": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14749,
        14775
      ],
      "op": "AND",
      "path": "19"
    },
    "3461": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14749,
        14760
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD8D"
    },
    "3464": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14759
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3465": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14749,
        14756
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "3468": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14749,
        14760
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3469": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14749,
        14760
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3476": {
      "op": "SHL"
    },
    "3477": {
      "op": "SUB"
    },
    "3478": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14749,
        14775
      ],
      "op": "AND",
      "path": "19"
    },
    "3479": {
      "branch": 166,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14749,
        14775
      ],
      "op": "EQ",
      "path": "19"
    },
    "3480": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14749,
        14869
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3481": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14749,
        14869
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3482": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14749,
        14869
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDCB"
    },
    "3485": {
      "branch": 166,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14749,
        14869
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3486": {
      "op": "POP"
    },
    "3487": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14803,
        14825
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "3489": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14803,
        14825
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3490": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3492": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14799
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3493": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14799
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3494": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14799
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3495": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14795
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3497": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3499": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14799
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3500": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3502": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14799
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3503": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14799
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3504": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14799
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3505": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14825
      ],
      "op": "EQ",
      "path": "19"
    },
    "3506": {
      "branch": 167,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14825
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3507": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14868
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDCB"
    },
    "3510": {
      "branch": 167,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14868
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3511": {
      "op": "POP"
    },
    "3512": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14868
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x14"
    },
    "3514": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14868
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3515": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14848
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3517": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14848
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3518": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14848
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3519": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14848
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3520": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14844
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3522": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14848
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3524": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14848
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3525": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14848
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3527": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14848
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3528": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14848
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3529": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14848
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3530": {
      "branch": 168,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14829,
        14868
      ],
      "op": "EQ",
      "path": "19"
    },
    "3531": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14780,
        14868
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3532": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14745,
        15039
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3533": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14745,
        15039
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE0A"
    },
    "3536": {
      "branch": 168,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14745,
        15039
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3537": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14889,
        14913
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3539": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14916,
        14928
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDDB"
    },
    "3542": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14925,
        14927
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3543": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14916,
        14924
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21BD"
    },
    "3546": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14916,
        14928
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3547": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14916,
        14928
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3548": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14889,
        14928
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3549": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14889,
        14928
      ],
      "op": "POP",
      "path": "19"
    },
    "3550": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14979,
        14989
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 21
    },
    "3551": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14962
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3552": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14963,
        14975
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3553": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3554": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3555": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3556": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "LT",
      "path": "19"
    },
    "3557": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDF0"
    },
    "3560": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3561": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDF0"
    },
    "3564": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x391D"
    },
    "3567": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14946,
        14976
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3568": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3569": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3571": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3572": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3573": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "MUL",
      "path": "19"
    },
    "3574": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3575": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3576": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3577": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "ADD",
      "path": "19"
    },
    "3578": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14976
      ],
      "op": "ADD",
      "path": "19"
    },
    "3579": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14946,
        14989
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3580": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15007,
        15024
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 22,
      "value": "0xE06"
    },
    "3583": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15023,
        15024
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3585": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15007,
        15024
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3586": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15007,
        15024
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38EA"
    },
    "3589": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        15007,
        15024
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3590": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15007,
        15024
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3591": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15007,
        15024
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "3592": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15007,
        15024
      ],
      "op": "POP",
      "path": "19"
    },
    "3593": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14871,
        15039
      ],
      "op": "POP",
      "path": "19"
    },
    "3594": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14745,
        15039
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3595": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14725,
        14729
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 23
    },
    "3596": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14725,
        14729
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE14"
    },
    "3599": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14725,
        14729
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3600": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14725,
        14729
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3902"
    },
    "3603": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14725,
        14729
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3604": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14725,
        14729
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3605": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14725,
        14729
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3606": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14725,
        14729
      ],
      "op": "POP",
      "path": "19"
    },
    "3607": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14725,
        14729
      ],
      "op": "POP",
      "path": "19"
    },
    "3608": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14691,
        15049
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD73"
    },
    "3611": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14691,
        15049
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3612": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14691,
        15049
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3613": {
      "op": "POP"
    },
    "3614": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15074,
        15090
      ],
      "op": "SWAP6",
      "path": "19",
      "statement": 24
    },
    "3615": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14154,
        15097
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "3616": {
      "op": "POP"
    },
    "3617": {
      "op": "POP"
    },
    "3618": {
      "op": "POP"
    },
    "3619": {
      "op": "POP"
    },
    "3620": {
      "op": "POP"
    },
    "3621": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "o",
      "offset": [
        14154,
        15097
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3622": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3623": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 25,
      "value": "0xB18"
    },
    "3626": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5272,
        5276
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3627": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5278,
        5280
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3628": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5282,
        5289
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3629": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3631": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3632": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3633": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3635": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "ADD",
      "path": "5"
    },
    "3636": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3638": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3639": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3640": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3642": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3643": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3644": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "POP",
      "path": "5"
    },
    "3645": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5271
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AA7"
    },
    "3648": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5255,
        5294
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3649": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3650": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3652": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3653": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10618,
        10622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3655": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10618,
        10622
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3662": {
      "op": "SHL"
    },
    "3663": {
      "op": "SUB"
    },
    "3664": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3665": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3666": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3667": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6E"
    },
    "3670": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3671": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3673": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3680": {
      "op": "SHL"
    },
    "3681": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3682": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3683": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3685": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3686": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "3689": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3690": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "3693": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3694": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3695": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10634,
        10655
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 26,
      "value": "0xE7C"
    },
    "3698": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10634,
        10643
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "3700": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 27
    },
    "3701": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3702": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3704": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "12"
    },
    "3705": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3706": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3707": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3708": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10634,
        10655
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3709": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10665,
        10682
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3711": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10685,
        10704
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE87"
    },
    "3714": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10685,
        10694
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "3716": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3717": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3718": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3719": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10685,
        10704
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3720": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 28,
      "value": "0x0"
    },
    "3722": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3723": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3724": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3725": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3727": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3729": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3730": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3731": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3732": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3734": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3735": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3736": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10741
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3737": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10750
      ],
      "op": "DUP10",
      "path": "19"
    },
    "3738": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10750
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3739": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10715,
        10750
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3740": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10760,
        10779
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 29,
      "value": "0xC"
    },
    "3742": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10760,
        10790
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3743": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10760,
        10790
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3744": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10760,
        10790
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3745": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10760,
        10790
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3746": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10760,
        10790
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3747": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10760,
        10803
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3748": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10760,
        10803
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3749": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10760,
        10803
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3750": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10665,
        10704
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10813,
        10841
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 30,
      "value": "0xEB1"
    },
    "3755": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10819,
        10829
      ],
      "op": "CALLER",
      "path": "19"
    },
    "3756": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10665,
        10704
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3757": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10813,
        10818
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A90"
    },
    "3760": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10813,
        10841
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3761": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10813,
        10841
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3762": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10851,
        10887
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 31,
      "value": "0xEBB"
    },
    "3765": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10864,
        10873
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3766": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10875,
        10886
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3767": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10851,
        10863
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x277D"
    },
    "3770": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10851,
        10887
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3771": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10851,
        10887
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3772": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10897,
        10930
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 32,
      "value": "0xEC5"
    },
    "3775": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10913,
        10917
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "3776": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10920,
        10929
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3777": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10897,
        10904
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA07"
    },
    "3780": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10897,
        10930
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3781": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10897,
        10930
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3782": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10958,
        10976
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 33,
      "value": "0x9"
    },
    "3784": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10958,
        10976
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3785": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10940,
        10983
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEDC"
    },
    "3788": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10940,
        10983
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3795": {
      "op": "SHL"
    },
    "3796": {
      "op": "SUB"
    },
    "3797": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10958,
        10976
      ],
      "op": "AND",
      "path": "19"
    },
    "3798": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10958,
        10976
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3800": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10940,
        10957
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A16"
    },
    "3803": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10940,
        10983
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3804": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10940,
        10983
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3805": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11008,
        11030
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "3807": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11008,
        11030
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3808": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10998,
        11004
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3809": {
      "branch": 169,
      "fn": "CardinalNFT.createToken",
      "offset": [
        10998,
        11030
      ],
      "op": "EQ",
      "path": "19"
    },
    "3810": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10994,
        11425
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3811": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10994,
        11425
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF20"
    },
    "3814": {
      "branch": 169,
      "fn": "CardinalNFT.createToken",
      "offset": [
        10994,
        11425
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3815": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11070
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 34,
      "value": "0x16"
    },
    "3817": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3818": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3819": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3821": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3822": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "ADD",
      "path": "19"
    },
    "3823": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3824": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3827": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3828": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3829": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3830": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3831": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289"
    },
    "3864": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "ADD",
      "path": "19"
    },
    "3865": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3866": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3867": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11046,
        11086
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3868": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10994,
        11425
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF8D"
    },
    "3871": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10994,
        11425
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3872": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10994,
        11425
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3873": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11125,
        11141
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x14"
    },
    "3875": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11125,
        11141
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3876": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11115,
        11121
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3877": {
      "branch": 170,
      "fn": "CardinalNFT.createToken",
      "offset": [
        11115,
        11141
      ],
      "op": "EQ",
      "path": "19"
    },
    "3878": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11111,
        11425
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3879": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11111,
        11425
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF8D"
    },
    "3882": {
      "branch": 170,
      "fn": "CardinalNFT.createToken",
      "offset": [
        11111,
        11425
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3883": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11175
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 35,
      "value": "0x17"
    },
    "3885": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3886": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3887": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3889": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3890": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "ADD",
      "path": "19"
    },
    "3891": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3892": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3895": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3896": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3897": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3898": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3899": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xC624B66CC0138B8FABC209247F72D758E1CF3343756D543BADBF24212BED8C15"
    },
    "3932": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "ADD",
      "path": "19"
    },
    "3933": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3934": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3935": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11157,
        11191
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3936": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11210,
        11227
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3937": {
      "branch": 171,
      "fn": "CardinalNFT.createToken",
      "offset": [
        11210,
        11227
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3938": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11206,
        11415
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF7B"
    },
    "3941": {
      "branch": 171,
      "fn": "CardinalNFT.createToken",
      "offset": [
        11206,
        11415
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3942": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11281
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 36,
      "value": "0x0"
    },
    "3944": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11281
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3945": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11281
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3946": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11281
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3947": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11270
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "3949": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11281
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3951": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11281
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3952": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11281
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3954": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11281
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3955": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11281
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3956": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11297
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3957": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11297
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3958": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11247,
        11297
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3959": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11206,
        11415
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF8D"
    },
    "3962": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11206,
        11415
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3963": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11206,
        11415
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3964": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11382
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 37,
      "value": "0x0"
    },
    "3966": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11382
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3967": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11382
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3968": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11382
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3969": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11371
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "3971": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11382
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3973": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11382
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3974": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11382
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3976": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11382
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3977": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11382
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3978": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11385,
        11400
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "3979": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11400
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3980": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11348,
        11400
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3981": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11206,
        11415
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3982": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11442,
        11451
      ],
      "op": "SWAP1",
      "path": "19",
      "statement": 38
    },
    "3983": {
      "op": "POP"
    },
    "3984": {
      "offset": [
        1318,
        1319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3985": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "3986": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "3987": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "POP",
      "path": "19"
    },
    "3988": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "POP",
      "path": "19"
    },
    "3989": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "POP",
      "path": "19"
    },
    "3990": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10483,
        11458
      ],
      "op": "POP",
      "path": "19"
    },
    "3991": {
      "fn": "CardinalNFT.createToken",
      "jump": "o",
      "offset": [
        10483,
        11458
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3992": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13060,
        13919
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3993": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13146,
        13161
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "3995": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13173,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3997": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13189,
        13208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFA5"
    },
    "4000": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13189,
        13198
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "4002": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4003": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4004": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4005": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13189,
        13208
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4006": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13173,
        13208
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4007": {
      "op": "POP"
    },
    "4008": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13218,
        13235
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4010": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13218,
        13235
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4011": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13296,
        13297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4013": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13281,
        13476
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4014": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13305,
        13313
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4015": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13299,
        13301
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4016": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13299,
        13313
      ],
      "op": "GT",
      "path": "19"
    },
    "4017": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13281,
        13476
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1011"
    },
    "4020": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13281,
        13476
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4021": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13354,
        13365
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4028": {
      "op": "SHL"
    },
    "4029": {
      "op": "SUB"
    },
    "4030": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13339,
        13365
      ],
      "op": "AND",
      "path": "19"
    },
    "4031": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13339,
        13350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFC7"
    },
    "4034": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13347,
        13349
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4035": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13339,
        13346
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "4038": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13339,
        13350
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4039": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13339,
        13350
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4046": {
      "op": "SHL"
    },
    "4047": {
      "op": "SUB"
    },
    "4048": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13339,
        13365
      ],
      "op": "AND",
      "path": "19"
    },
    "4049": {
      "branch": 172,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13339,
        13365
      ],
      "op": "EQ",
      "path": "19"
    },
    "4050": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13339,
        13414
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4051": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13339,
        13414
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4052": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13339,
        13414
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFEC"
    },
    "4055": {
      "branch": 172,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13339,
        13414
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4056": {
      "op": "POP"
    },
    "4057": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13392,
        13414
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "4059": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13392,
        13414
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4060": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13388
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4062": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13388
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4063": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13388
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4064": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13388
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4065": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13384
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "4067": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13388
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4069": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13388
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4070": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13388
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4072": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13388
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4073": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13388
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4074": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13388
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4075": {
      "branch": 173,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13369,
        13414
      ],
      "op": "EQ",
      "path": "19"
    },
    "4076": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13339,
        13414
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4077": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13335,
        13466
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4078": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13335,
        13466
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFFF"
    },
    "4081": {
      "branch": 173,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13335,
        13466
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4082": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13434,
        13451
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 39,
      "value": "0xFFC"
    },
    "4085": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13450,
        13451
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4087": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13434,
        13451
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4088": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13434,
        13451
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38EA"
    },
    "4091": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13434,
        13451
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4092": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13434,
        13451
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4093": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13434,
        13451
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4094": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13434,
        13451
      ],
      "op": "POP",
      "path": "19"
    },
    "4095": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13335,
        13466
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4096": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13315,
        13319
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 40
    },
    "4097": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13315,
        13319
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1009"
    },
    "4100": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13315,
        13319
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4101": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13315,
        13319
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3902"
    },
    "4104": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13315,
        13319
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4105": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13315,
        13319
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4106": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13315,
        13319
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4107": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13315,
        13319
      ],
      "op": "POP",
      "path": "19"
    },
    "4108": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13315,
        13319
      ],
      "op": "POP",
      "path": "19"
    },
    "4109": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13281,
        13476
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFAD"
    },
    "4112": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13281,
        13476
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4113": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13281,
        13476
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4114": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13281,
        13476
      ],
      "op": "POP",
      "path": "19"
    },
    "4115": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13486,
        13518
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4117": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13534,
        13546
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4118": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4127": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4128": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "GT",
      "path": "19"
    },
    "4129": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4130": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x102D"
    },
    "4133": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4134": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x102D"
    },
    "4137": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3464"
    },
    "4140": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13521,
        13547
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4141": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4142": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4144": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4145": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4146": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4147": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4148": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4149": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4150": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4152": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "MUL",
      "path": "19"
    },
    "4153": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4155": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "ADD",
      "path": "19"
    },
    "4156": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4157": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "ADD",
      "path": "19"
    },
    "4158": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4160": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4161": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4162": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4163": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1060"
    },
    "4166": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4167": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4168": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4170": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "ADD",
      "path": "19"
    },
    "4171": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4172": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "4174": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4175": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4176": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4178": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "ADD",
      "path": "19"
    },
    "4179": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4180": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4182": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4183": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "SUB",
      "path": "19"
    },
    "4184": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4185": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4186": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x104B"
    },
    "4189": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4190": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4191": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "POP",
      "path": "19"
    },
    "4192": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13521,
        13547
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4193": {
      "op": "POP"
    },
    "4194": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13486,
        13547
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4195": {
      "op": "POP"
    },
    "4196": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13573,
        13574
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4198": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13558,
        13871
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4199": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13582,
        13590
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4200": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13576,
        13578
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4201": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13576,
        13590
      ],
      "op": "GT",
      "path": "19"
    },
    "4202": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13558,
        13871
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE1C"
    },
    "4205": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13558,
        13871
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4206": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13631,
        13642
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4213": {
      "op": "SHL"
    },
    "4214": {
      "op": "SUB"
    },
    "4215": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13616,
        13642
      ],
      "op": "AND",
      "path": "19"
    },
    "4216": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13616,
        13627
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1080"
    },
    "4219": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13626
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4220": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13616,
        13623
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "4223": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13616,
        13627
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4224": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13616,
        13627
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4231": {
      "op": "SHL"
    },
    "4232": {
      "op": "SUB"
    },
    "4233": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13616,
        13642
      ],
      "op": "AND",
      "path": "19"
    },
    "4234": {
      "branch": 174,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13616,
        13642
      ],
      "op": "EQ",
      "path": "19"
    },
    "4235": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13616,
        13691
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4236": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13616,
        13691
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4237": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13616,
        13691
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10A5"
    },
    "4240": {
      "branch": 174,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13616,
        13691
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4241": {
      "op": "POP"
    },
    "4242": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13669,
        13691
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "4244": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13669,
        13691
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4245": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13665
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4247": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13665
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4248": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13665
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4249": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13665
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4250": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13661
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "4252": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13665
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4254": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13665
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4255": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13665
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4257": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13665
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4258": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13665
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4259": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13665
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4260": {
      "branch": 175,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13646,
        13691
      ],
      "op": "EQ",
      "path": "19"
    },
    "4261": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13616,
        13691
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4262": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13612,
        13861
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4263": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13612,
        13861
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10E4"
    },
    "4266": {
      "branch": 175,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13612,
        13861
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4267": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13711,
        13735
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4269": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13738,
        13750
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10B5"
    },
    "4272": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13747,
        13749
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4273": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13738,
        13746
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21BD"
    },
    "4276": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13738,
        13750
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4277": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13738,
        13750
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4278": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13711,
        13750
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4279": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13711,
        13750
      ],
      "op": "POP",
      "path": "19"
    },
    "4280": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13801,
        13811
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 41
    },
    "4281": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13784
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4282": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13785,
        13797
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4283": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4284": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4285": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4286": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "LT",
      "path": "19"
    },
    "4287": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10CA"
    },
    "4290": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4291": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10CA"
    },
    "4294": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x391D"
    },
    "4297": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13768,
        13798
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4298": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4299": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4301": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4302": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4303": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "MUL",
      "path": "19"
    },
    "4304": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4305": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4306": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4307": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "ADD",
      "path": "19"
    },
    "4308": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13798
      ],
      "op": "ADD",
      "path": "19"
    },
    "4309": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13768,
        13811
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4310": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13829,
        13846
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 42,
      "value": "0x10E0"
    },
    "4313": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13845,
        13846
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4315": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13829,
        13846
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4316": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13829,
        13846
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38EA"
    },
    "4319": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13829,
        13846
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4320": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13829,
        13846
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4321": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13829,
        13846
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4322": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13829,
        13846
      ],
      "op": "POP",
      "path": "19"
    },
    "4323": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13693,
        13861
      ],
      "op": "POP",
      "path": "19"
    },
    "4324": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13612,
        13861
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4325": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13592,
        13596
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 43
    },
    "4326": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13592,
        13596
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10EE"
    },
    "4329": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13592,
        13596
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4330": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13592,
        13596
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3902"
    },
    "4333": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13592,
        13596
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4334": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13592,
        13596
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4335": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13592,
        13596
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4336": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13592,
        13596
      ],
      "op": "POP",
      "path": "19"
    },
    "4337": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13592,
        13596
      ],
      "op": "POP",
      "path": "19"
    },
    "4338": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13558,
        13871
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1066"
    },
    "4341": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13558,
        13871
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4342": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4343": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4345": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4346": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4347": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4348": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4350": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4352": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4353": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4355": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4356": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4357": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4364": {
      "op": "SHL"
    },
    "4365": {
      "op": "SUB"
    },
    "4366": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "5"
    },
    "4367": {
      "branch": 206,
      "fn": "ERC721.ownerOf",
      "offset": [
        2332,
        2351
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 44
    },
    "4368": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E2"
    },
    "4371": {
      "branch": 206,
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4372": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4374": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4375": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4381": {
      "op": "SHL"
    },
    "4382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4386": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4388": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "5"
    },
    "4390": {
      "op": "MSTORE"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4395": {
      "op": "DUP3"
    },
    "4396": {
      "op": "ADD"
    },
    "4397": {
      "op": "MSTORE"
    },
    "4398": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4433": {
      "op": "DUP3"
    },
    "4434": {
      "op": "ADD"
    },
    "4435": {
      "op": "MSTORE"
    },
    "4436": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "4448": {
      "op": "SHL"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4451": {
      "op": "DUP3"
    },
    "4452": {
      "op": "ADD"
    },
    "4453": {
      "op": "MSTORE"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4456": {
      "op": "ADD"
    },
    "4457": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "4460": {
      "op": "JUMP"
    },
    "4461": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        17968,
        18208
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4462": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4464": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4471": {
      "op": "SHL"
    },
    "4472": {
      "op": "SUB"
    },
    "4473": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4474": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4475": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4476": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1197"
    },
    "4479": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4480": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4482": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4489": {
      "op": "SHL"
    },
    "4490": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4491": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4492": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4494": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4495": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "4498": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4499": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "4502": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4503": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4504": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18070,
        18092
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 45,
      "value": "0x13"
    },
    "4506": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18070,
        18120
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4507": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18070,
        18120
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4508": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18070,
        18120
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4509": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 46,
      "value": "0x40"
    },
    "4511": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4512": {
      "op": "PUSH22",
      "value": "0x1BDC9A59DA5B985B10D85C991A5B985B151E5C195259"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "4537": {
      "op": "SHL"
    },
    "4538": {
      "op": "DUP2"
    },
    "4539": {
      "op": "MSTORE"
    },
    "4540": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18070,
        18120
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4541": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18070,
        18120
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4544": {
      "op": "ADD"
    },
    "4545": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4546": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4548": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4549": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4550": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4551": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4552": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "SUB",
      "path": "19"
    },
    "4553": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4554": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4555": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4556": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xA611BA47A2A0887B794D3E097D5CFB33522F6ED26DF589CCD12C01D5C584800A"
    },
    "4589": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4590": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4592": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4593": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18135,
        18201
      ],
      "op": "LOG3",
      "path": "19"
    },
    "4594": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        17968,
        18208
      ],
      "op": "POP",
      "path": "19"
    },
    "4595": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "o",
      "offset": [
        17968,
        18208
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4596": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4597": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4605": {
      "op": "SHL"
    },
    "4606": {
      "op": "SUB"
    },
    "4607": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 47
    },
    "4608": {
      "branch": 207,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "5"
    },
    "4609": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x125F"
    },
    "4612": {
      "branch": 207,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4613": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4615": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4622": {
      "op": "SHL"
    },
    "4623": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4624": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4627": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4629": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4630": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "5"
    },
    "4631": {
      "op": "MSTORE"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4636": {
      "op": "DUP3"
    },
    "4637": {
      "op": "ADD"
    },
    "4638": {
      "op": "MSTORE"
    },
    "4639": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4674": {
      "op": "DUP3"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "op": "MSTORE"
    },
    "4677": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4690": {
      "op": "SHL"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4693": {
      "op": "DUP3"
    },
    "4694": {
      "op": "ADD"
    },
    "4695": {
      "op": "MSTORE"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4698": {
      "op": "ADD"
    },
    "4699": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "4702": {
      "op": "JUMP"
    },
    "4703": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4711": {
      "op": "SHL"
    },
    "4712": {
      "op": "SUB"
    },
    "4713": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "5",
      "statement": 48
    },
    "4714": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4716": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4717": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4718": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4719": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4721": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4723": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4724": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4726": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4727": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4728": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4729": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4730": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4731": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4732": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4734": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4741": {
      "op": "SHL"
    },
    "4742": {
      "op": "SUB"
    },
    "4743": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4744": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4745": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4746": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A5"
    },
    "4749": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4750": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4752": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4753": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4759": {
      "op": "SHL"
    },
    "4760": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4761": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4762": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4764": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4765": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "4768": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4769": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "4772": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4773": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4774": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0x12AF"
    },
    "4777": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4779": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BCB"
    },
    "4782": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4783": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4784": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4785": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        16962,
        17123
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4786": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4788": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4795": {
      "op": "SHL"
    },
    "4796": {
      "op": "SUB"
    },
    "4797": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4798": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4799": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4800": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12DB"
    },
    "4803": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4804": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4806": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4807": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4813": {
      "op": "SHL"
    },
    "4814": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4815": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4816": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4818": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4819": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "4822": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4823": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "4826": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4827": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4828": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17097
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 50,
      "value": "0x0"
    },
    "4830": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17097
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4831": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17097
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4832": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17097
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4833": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17088
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "4835": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17097
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4837": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17097
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4838": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17097
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4840": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17097
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4841": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17097
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4842": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4843": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4850": {
      "op": "SHL"
    },
    "4851": {
      "op": "SUB"
    },
    "4852": {
      "op": "NOT"
    },
    "4853": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "AND",
      "path": "19"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4860": {
      "op": "SHL"
    },
    "4861": {
      "op": "SUB"
    },
    "4862": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4863": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4864": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4865": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "AND",
      "path": "19"
    },
    "4866": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4867": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4868": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4869": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "OR",
      "path": "19"
    },
    "4870": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4871": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17063,
        17116
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4872": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "jump": "o",
      "offset": [
        16962,
        17123
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4873": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5911,
        7364
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4874": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6020,
        6051
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x19"
    },
    "4876": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6020,
        6051
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4877": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6094,
        6104
      ],
      "op": "CALLER",
      "path": "19"
    },
    "4878": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5958,
        5962
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4880": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6105
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4881": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6105
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4882": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6105
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4883": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "4885": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6105
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4887": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6105
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4888": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6105
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4890": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6105
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4891": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6105
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4892": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6105
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4893": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5958,
        5962
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4894": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5958,
        5962
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4895": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6020,
        6051
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4896": {
      "branch": 176,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6109
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4897": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6062,
        6253
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1350"
    },
    "4900": {
      "branch": 176,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6062,
        6253
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4901": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6225,
        6235
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 51
    },
    "4902": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6197,
        6236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4904": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6197,
        6236
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4905": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6197,
        6236
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4906": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6197,
        6236
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4907": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6197,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "4909": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6197,
        6236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4911": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6197,
        6236
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4912": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6197,
        6236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4914": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6197,
        6236
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4915": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6197,
        6236
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4916": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6197,
        6236
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4917": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6163,
        6194
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x19"
    },
    "4919": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6163,
        6194
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4920": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6239,
        6242
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "4922": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6239,
        6242
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4923": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6163,
        6236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1343"
    },
    "4926": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6163,
        6236
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4927": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6163,
        6236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3933"
    },
    "4930": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6163,
        6236
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4931": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6163,
        6236
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4932": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6163,
        6242
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x134D"
    },
    "4935": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6163,
        6242
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4936": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6163,
        6242
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4937": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6163,
        6242
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3968"
    },
    "4940": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6163,
        6242
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4941": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6163,
        6242
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4942": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6125,
        6242
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4943": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6125,
        6242
      ],
      "op": "POP",
      "path": "19"
    },
    "4944": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6062,
        6253
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4945": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6284
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 52,
      "value": "0xA"
    },
    "4947": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6284
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4948": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4950": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4951": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4958": {
      "op": "SHL"
    },
    "4959": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4960": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4961": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6295,
        6305
      ],
      "op": "CALLER",
      "path": "19"
    },
    "4962": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4964": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4965": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "ADD",
      "path": "19"
    },
    "4966": {
      "op": "MSTORE"
    },
    "4967": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6310,
        6345
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4968": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6310,
        6345
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4975": {
      "op": "SHL"
    },
    "4976": {
      "op": "SUB"
    },
    "4977": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6284
      ],
      "op": "AND",
      "path": "19"
    },
    "4978": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6284
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4979": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6294
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "4984": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6294
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4987": {
      "op": "ADD"
    },
    "4988": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4990": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4992": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4993": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4994": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4995": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "SUB",
      "path": "19"
    },
    "4996": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4997": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4998": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4999": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5000": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5001": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5002": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5003": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1393"
    },
    "5006": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5007": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5009": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5010": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5011": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5012": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "POP",
      "path": "19"
    },
    "5013": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "GAS",
      "path": "19"
    },
    "5014": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "5015": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5016": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5017": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5018": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13A7"
    },
    "5021": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5022": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5023": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5025": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5026": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5027": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5028": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5030": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5031": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5032": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "POP",
      "path": "19"
    },
    "5033": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "POP",
      "path": "19"
    },
    "5034": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "POP",
      "path": "19"
    },
    "5035": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "POP",
      "path": "19"
    },
    "5036": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5038": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5039": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5040": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5042": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "NOT",
      "path": "19"
    },
    "5043": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5045": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5046": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "ADD",
      "path": "19"
    },
    "5047": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "AND",
      "path": "19"
    },
    "5048": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5049": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "ADD",
      "path": "19"
    },
    "5050": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5051": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5053": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5054": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "POP",
      "path": "19"
    },
    "5055": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5056": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "ADD",
      "path": "19"
    },
    "5057": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5058": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13CB"
    },
    "5061": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5062": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5063": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x397C"
    },
    "5066": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6271,
        6306
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5067": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6306
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5068": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6345
      ],
      "op": "LT",
      "path": "19"
    },
    "5069": {
      "branch": 177,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6271,
        6345
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5070": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6263,
        6418
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x144D"
    },
    "5073": {
      "branch": 177,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6263,
        6418
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5074": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6263,
        6418
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5076": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6263,
        6418
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5077": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5083": {
      "op": "SHL"
    },
    "5084": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6263,
        6418
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5085": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6263,
        6418
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5088": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6263,
        6418
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5090": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6263,
        6418
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5091": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6263,
        6418
      ],
      "op": "ADD",
      "path": "19"
    },
    "5092": {
      "op": "MSTORE"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5097": {
      "op": "DUP3"
    },
    "5098": {
      "op": "ADD"
    },
    "5099": {
      "op": "DUP2"
    },
    "5100": {
      "op": "SWAP1"
    },
    "5101": {
      "op": "MSTORE"
    },
    "5102": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F7567682043617264696E616C2054"
    },
    "5135": {
      "op": "SWAP1"
    },
    "5136": {
      "op": "DUP3"
    },
    "5137": {
      "op": "ADD"
    },
    "5138": {
      "op": "MSTORE"
    },
    "5139": {
      "op": "PUSH32",
      "value": "0x6F6B656E7320746F2070617920666F7220746865206D656D6265727368697020"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5174": {
      "op": "DUP3"
    },
    "5175": {
      "op": "ADD"
    },
    "5176": {
      "op": "MSTORE"
    },
    "5177": {
      "op": "PUSH4",
      "value": "0x27232A17"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5184": {
      "op": "SHL"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5187": {
      "op": "DUP3"
    },
    "5188": {
      "op": "ADD"
    },
    "5189": {
      "op": "MSTORE"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6263,
        6418
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9E2"
    },
    "5196": {
      "op": "JUMP"
    },
    "5197": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6263,
        6418
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5198": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6449
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 53,
      "value": "0xA"
    },
    "5200": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6449
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5201": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5203": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5204": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "5209": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5211": {
      "op": "SHL"
    },
    "5212": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5213": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5214": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6460,
        6470
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5215": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5217": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5218": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "ADD",
      "path": "19"
    },
    "5219": {
      "op": "MSTORE"
    },
    "5220": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6480,
        6484
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5223": {
      "op": "DUP3"
    },
    "5224": {
      "op": "ADD"
    },
    "5225": {
      "op": "MSTORE"
    },
    "5226": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6490,
        6525
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5227": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6490,
        6525
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5234": {
      "op": "SHL"
    },
    "5235": {
      "op": "SUB"
    },
    "5236": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6449
      ],
      "op": "AND",
      "path": "19"
    },
    "5237": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6449
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5238": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6459
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDD62ED3E"
    },
    "5243": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6459
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5246": {
      "op": "ADD"
    },
    "5247": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5249": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5251": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5252": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5253": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5254": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "SUB",
      "path": "19"
    },
    "5255": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5256": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5257": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5258": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5259": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5260": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5261": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5262": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1496"
    },
    "5265": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5266": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5268": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5269": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5270": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5271": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "POP",
      "path": "19"
    },
    "5272": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "GAS",
      "path": "19"
    },
    "5273": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "5274": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5275": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5276": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5277": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14AA"
    },
    "5280": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5281": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5282": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5284": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5285": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5286": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5287": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5289": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5290": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5291": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "POP",
      "path": "19"
    },
    "5292": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "POP",
      "path": "19"
    },
    "5293": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "POP",
      "path": "19"
    },
    "5294": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "POP",
      "path": "19"
    },
    "5295": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5297": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5298": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5299": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5301": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "NOT",
      "path": "19"
    },
    "5302": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5304": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5305": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "ADD",
      "path": "19"
    },
    "5306": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "AND",
      "path": "19"
    },
    "5307": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5308": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "ADD",
      "path": "19"
    },
    "5309": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5310": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5312": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5313": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "POP",
      "path": "19"
    },
    "5314": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5315": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "ADD",
      "path": "19"
    },
    "5316": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5317": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14CE"
    },
    "5320": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5321": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5322": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x397C"
    },
    "5325": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6436,
        6486
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5326": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6486
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5327": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6525
      ],
      "op": "LT",
      "path": "19"
    },
    "5328": {
      "branch": 178,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6436,
        6525
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5329": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6428,
        6635
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x157A"
    },
    "5332": {
      "branch": 178,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6428,
        6635
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5333": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6428,
        6635
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5335": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6428,
        6635
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5336": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5342": {
      "op": "SHL"
    },
    "5343": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6428,
        6635
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5344": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6428,
        6635
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5347": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6428,
        6635
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5349": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6428,
        6635
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5350": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6428,
        6635
      ],
      "op": "ADD",
      "path": "19"
    },
    "5351": {
      "op": "MSTORE"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5356": {
      "op": "DUP3"
    },
    "5357": {
      "op": "ADD"
    },
    "5358": {
      "op": "MSTORE"
    },
    "5359": {
      "op": "PUSH32",
      "value": "0x596F7520686176656E277420617070726F766564207468697320636F6E747261"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5394": {
      "op": "DUP3"
    },
    "5395": {
      "op": "ADD"
    },
    "5396": {
      "op": "MSTORE"
    },
    "5397": {
      "op": "PUSH32",
      "value": "0x637420746F207370656E6420656E6F756768206F6620796F7572204361726469"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5432": {
      "op": "DUP3"
    },
    "5433": {
      "op": "ADD"
    },
    "5434": {
      "op": "MSTORE"
    },
    "5435": {
      "op": "PUSH32",
      "value": "0x6E616C20546F6B656E7320746F2070617920666F7220746865206D656D626572"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5470": {
      "op": "DUP3"
    },
    "5471": {
      "op": "ADD"
    },
    "5472": {
      "op": "MSTORE"
    },
    "5473": {
      "op": "PUSH9",
      "value": "0x39B434B81027232A17"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5485": {
      "op": "SHL"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5488": {
      "op": "DUP3"
    },
    "5489": {
      "op": "ADD"
    },
    "5490": {
      "op": "MSTORE"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "5493": {
      "op": "ADD"
    },
    "5494": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6428,
        6635
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9E2"
    },
    "5497": {
      "op": "JUMP"
    },
    "5498": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6428,
        6635
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5499": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6667
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 54,
      "value": "0xA"
    },
    "5501": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6667
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5502": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5504": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5505": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5512": {
      "op": "SHL"
    },
    "5513": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5514": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5515": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6681,
        6691
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5516": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5518": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5519": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "ADD",
      "path": "19"
    },
    "5520": {
      "op": "MSTORE"
    },
    "5521": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6701,
        6705
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5524": {
      "op": "DUP3"
    },
    "5525": {
      "op": "ADD"
    },
    "5526": {
      "op": "MSTORE"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5529": {
      "op": "DUP2"
    },
    "5530": {
      "op": "ADD"
    },
    "5531": {
      "op": "DUP4"
    },
    "5532": {
      "op": "SWAP1"
    },
    "5533": {
      "op": "MSTORE"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5540": {
      "op": "SHL"
    },
    "5541": {
      "op": "SUB"
    },
    "5542": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6667
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5543": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6667
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5544": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6667
      ],
      "op": "AND",
      "path": "19"
    },
    "5545": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6667
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5546": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6680
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23B872DD"
    },
    "5551": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5554": {
      "op": "ADD"
    },
    "5555": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5557": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5559": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5560": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5561": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5562": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "SUB",
      "path": "19"
    },
    "5563": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5564": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5566": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5567": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5568": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5569": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5570": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5571": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5572": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15CC"
    },
    "5575": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5576": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5578": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5579": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5580": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5581": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "POP",
      "path": "19"
    },
    "5582": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "GAS",
      "path": "19"
    },
    "5583": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "CALL",
      "path": "19"
    },
    "5584": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5585": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5586": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5587": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15E0"
    },
    "5590": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5591": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5592": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5594": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5595": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5596": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5597": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5599": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5600": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5601": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "POP",
      "path": "19"
    },
    "5602": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "POP",
      "path": "19"
    },
    "5603": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "POP",
      "path": "19"
    },
    "5604": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "POP",
      "path": "19"
    },
    "5605": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5607": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5608": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5609": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5611": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "NOT",
      "path": "19"
    },
    "5612": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5614": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5615": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "ADD",
      "path": "19"
    },
    "5616": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "AND",
      "path": "19"
    },
    "5617": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5618": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "ADD",
      "path": "19"
    },
    "5619": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5620": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5622": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5623": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "POP",
      "path": "19"
    },
    "5624": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5625": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "ADD",
      "path": "19"
    },
    "5626": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5627": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1604"
    },
    "5630": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5631": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5632": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3995"
    },
    "5635": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6654,
        6744
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5636": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5637": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6654,
        6744
      ],
      "op": "POP",
      "path": "19"
    },
    "5638": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6755,
        6776
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 55,
      "value": "0x1613"
    },
    "5641": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6755,
        6764
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "5643": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5644": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5645": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5647": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "12"
    },
    "5648": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5649": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5650": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5651": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6755,
        6776
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5652": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6786,
        6803
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5654": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6806,
        6825
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x161E"
    },
    "5657": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6806,
        6815
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "5659": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5660": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5661": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5662": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6806,
        6825
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5663": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6865,
        6881
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 56,
      "value": "0x14"
    },
    "5665": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6865,
        6881
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5666": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5668": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5669": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5670": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5671": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6851
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "5673": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5675": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5676": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5677": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5678": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5680": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5681": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5682": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6862
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5683": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6881
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5684": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6881
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5685": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6881
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5686": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6836,
        6881
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5687": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6891,
        6910
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 57,
      "value": "0xC"
    },
    "5689": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6891,
        6921
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5690": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6891,
        6921
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5691": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6891,
        6921
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5692": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6891,
        6921
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5693": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6891,
        6921
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5694": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6891,
        6925
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5695": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6786,
        6825
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5696": {
      "op": "POP"
    },
    "5697": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6935,
        6963
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 58,
      "value": "0x164A"
    },
    "5700": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6941,
        6951
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5701": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6786,
        6825
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5702": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6935,
        6940
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A90"
    },
    "5705": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6935,
        6963
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5706": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6935,
        6963
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5707": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 59,
      "value": "0x0"
    },
    "5709": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5710": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5711": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5712": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        6996
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "5714": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5716": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5717": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5718": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5719": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5721": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5722": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5723": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7007
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5724": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7010,
        7025
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "5725": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7025
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5726": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6973,
        7025
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5727": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7063,
        7073
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 60
    },
    "5728": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7035,
        7074
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5729": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7035,
        7074
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5730": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7035,
        7062
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "5732": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7035,
        7074
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5733": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7035,
        7074
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5734": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7035,
        7074
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5735": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7035,
        7074
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5736": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7035,
        7074
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5737": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7035,
        7078
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5738": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7112,
        7130
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 61,
      "value": "0x18"
    },
    "5740": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5741": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5742": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16FF"
    },
    "5745": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5746": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6997,
        7006
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5747": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6997,
        7006
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5748": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x167C"
    },
    "5751": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5752": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3813"
    },
    "5755": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5756": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5757": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5758": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5760": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "ADD",
      "path": "19"
    },
    "5761": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5763": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5764": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5765": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DIV",
      "path": "19"
    },
    "5766": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "MUL",
      "path": "19"
    },
    "5767": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5769": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "ADD",
      "path": "19"
    },
    "5770": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5772": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5773": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5774": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5775": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "ADD",
      "path": "19"
    },
    "5776": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5778": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5779": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5780": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5781": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5782": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5783": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5784": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5785": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5786": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5788": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "ADD",
      "path": "19"
    },
    "5789": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5790": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5791": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5792": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16A8"
    },
    "5795": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5796": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3813"
    },
    "5799": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5800": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5801": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5802": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5803": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16F5"
    },
    "5806": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5807": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5808": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5810": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "LT",
      "path": "19"
    },
    "5811": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16CA"
    },
    "5814": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5815": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "5818": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5819": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5820": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5821": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DIV",
      "path": "19"
    },
    "5822": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "MUL",
      "path": "19"
    },
    "5823": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5824": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5825": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5826": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5828": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "ADD",
      "path": "19"
    },
    "5829": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5830": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16F5"
    },
    "5833": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5834": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5835": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5836": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "ADD",
      "path": "19"
    },
    "5837": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5838": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5839": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5841": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5842": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5844": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5846": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5847": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5848": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5849": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5850": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5851": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5852": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5853": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5854": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5856": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "ADD",
      "path": "19"
    },
    "5857": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5858": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5860": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "ADD",
      "path": "19"
    },
    "5861": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5862": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5863": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "GT",
      "path": "19"
    },
    "5864": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16D8"
    },
    "5867": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5868": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5869": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5870": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SUB",
      "path": "19"
    },
    "5871": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5873": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "AND",
      "path": "19"
    },
    "5874": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5875": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "ADD",
      "path": "19"
    },
    "5876": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5877": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5878": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "POP",
      "path": "19"
    },
    "5879": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "POP",
      "path": "19"
    },
    "5880": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "POP",
      "path": "19"
    },
    "5881": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "POP",
      "path": "19"
    },
    "5882": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "POP",
      "path": "19"
    },
    "5883": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7100
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x277D"
    },
    "5886": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5887": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7088,
        7131
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5888": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7141,
        7174
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 62,
      "value": "0x1709"
    },
    "5891": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7157,
        7161
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5892": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7164,
        7173
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5893": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7141,
        7148
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA07"
    },
    "5896": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        7141,
        7174
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5897": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7141,
        7174
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5898": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7202,
        7220
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 63,
      "value": "0x9"
    },
    "5900": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7202,
        7220
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5901": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7184,
        7227
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1720"
    },
    "5904": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7184,
        7227
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5911": {
      "op": "SHL"
    },
    "5912": {
      "op": "SUB"
    },
    "5913": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7202,
        7220
      ],
      "op": "AND",
      "path": "19"
    },
    "5914": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7202,
        7220
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5916": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7184,
        7201
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A16"
    },
    "5919": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        7184,
        7227
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5920": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7184,
        7227
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5921": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7256
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 64,
      "value": "0x17"
    },
    "5923": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5924": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5925": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5927": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5928": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "ADD",
      "path": "19"
    },
    "5929": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5930": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5933": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5934": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5935": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5936": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xC624B66CC0138B8FABC209247F72D758E1CF3343756D543BADBF24212BED8C15"
    },
    "5969": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "ADD",
      "path": "19"
    },
    "5970": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5971": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5972": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7238,
        7272
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5973": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7288,
        7330
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 65,
      "value": "0x40"
    },
    "5975": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7288,
        7330
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5976": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7262,
        7271
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5977": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7262,
        7271
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5978": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7308,
        7318
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5979": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7308,
        7318
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5980": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7288,
        7330
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x7430CEFC529011C1B720A4803C3A12DB2BFDF282E089E2D26FF4929EF11A703C"
    },
    "6013": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7288,
        7330
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6014": {
      "op": "SWAP1"
    },
    "6015": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7288,
        7330
      ],
      "op": "LOG3",
      "path": "19"
    },
    "6016": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7348,
        7357
      ],
      "op": "SWAP3",
      "path": "19",
      "statement": 66
    },
    "6017": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5911,
        7364
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6018": {
      "op": "POP"
    },
    "6019": {
      "op": "POP"
    },
    "6020": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "o",
      "offset": [
        5911,
        7364
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6021": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17320,
        17471
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6022": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6024": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6031": {
      "op": "SHL"
    },
    "6032": {
      "op": "SUB"
    },
    "6033": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6034": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6035": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6036": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17AF"
    },
    "6039": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6040": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6042": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6043": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6049": {
      "op": "SHL"
    },
    "6050": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6051": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6052": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6054": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6055": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "6058": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6059": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "6062": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6063": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6064": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17448
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 67,
      "value": "0x0"
    },
    "6066": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17448
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6067": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17448
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6068": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17448
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6069": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17439
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "6071": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17448
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6073": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17448
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6074": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17448
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6076": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17448
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6077": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17448
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6078": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17448
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6079": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17420,
        17464
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6080": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "jump": "o",
      "offset": [
        17320,
        17471
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6081": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18725,
        18911
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6082": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6084": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6091": {
      "op": "SHL"
    },
    "6092": {
      "op": "SUB"
    },
    "6093": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6094": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6095": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6096": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17EB"
    },
    "6099": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6100": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6102": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6103": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6109": {
      "op": "SHL"
    },
    "6110": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6111": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6112": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6114": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6115": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "6118": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6119": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "6122": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6123": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6124": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18809,
        18822
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 68,
      "value": "0x15"
    },
    "6126": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18809,
        18841
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6127": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18809,
        18841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6128": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18809,
        18841
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6129": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18856,
        18904
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 69,
      "value": "0x40"
    },
    "6131": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18856,
        18904
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6132": {
      "op": "PUSH13",
      "value": "0x1CD95C9D9A58D9551E5C195259"
    },
    "6146": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "6148": {
      "op": "SHL"
    },
    "6149": {
      "op": "DUP2"
    },
    "6150": {
      "op": "MSTORE"
    },
    "6151": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18809,
        18841
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6152": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18809,
        18841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6153": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "6155": {
      "op": "ADD"
    },
    "6156": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        18856,
        18904
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x11C1"
    },
    "6159": {
      "op": "JUMP"
    },
    "6160": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12066,
        12811
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6161": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12136,
        12151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "6163": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12163,
        12176
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6165": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12179,
        12198
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x181D"
    },
    "6168": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12179,
        12188
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "6170": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6171": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6172": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6173": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12179,
        12198
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6174": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12163,
        12198
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6175": {
      "op": "POP"
    },
    "6176": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12208,
        12225
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6178": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12208,
        12225
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6179": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12286,
        12287
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6181": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12271,
        12417
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6182": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12295,
        12303
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6183": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12289,
        12291
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6184": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12289,
        12303
      ],
      "op": "GT",
      "path": "19"
    },
    "6185": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12271,
        12417
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x186E"
    },
    "6188": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12271,
        12417
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6189": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12344,
        12355
      ],
      "op": "DUP6",
      "path": "19"
    },
    "6190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6196": {
      "op": "SHL"
    },
    "6197": {
      "op": "SUB"
    },
    "6198": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12329,
        12355
      ],
      "op": "AND",
      "path": "19"
    },
    "6199": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12329,
        12340
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x183F"
    },
    "6202": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12337,
        12339
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6203": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12329,
        12336
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "6206": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12329,
        12340
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6207": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12329,
        12340
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6214": {
      "op": "SHL"
    },
    "6215": {
      "op": "SUB"
    },
    "6216": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12329,
        12355
      ],
      "op": "AND",
      "path": "19"
    },
    "6217": {
      "branch": 179,
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12329,
        12355
      ],
      "op": "EQ",
      "path": "19"
    },
    "6218": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12325,
        12407
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6219": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12325,
        12407
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x185C"
    },
    "6222": {
      "branch": 179,
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12325,
        12407
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6223": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12375,
        12392
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 70,
      "value": "0x1859"
    },
    "6226": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12391,
        12392
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6228": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12375,
        12392
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6229": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12375,
        12392
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38EA"
    },
    "6232": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12375,
        12392
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6233": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12375,
        12392
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6234": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12375,
        12392
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6235": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12375,
        12392
      ],
      "op": "POP",
      "path": "19"
    },
    "6236": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12325,
        12407
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6237": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12305,
        12309
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 71
    },
    "6238": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12305,
        12309
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1866"
    },
    "6241": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12305,
        12309
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6242": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12305,
        12309
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3902"
    },
    "6245": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12305,
        12309
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6246": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12305,
        12309
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6247": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12305,
        12309
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6248": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12305,
        12309
      ],
      "op": "POP",
      "path": "19"
    },
    "6249": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12305,
        12309
      ],
      "op": "POP",
      "path": "19"
    },
    "6250": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12271,
        12417
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1825"
    },
    "6253": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12271,
        12417
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6254": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12271,
        12417
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6255": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12271,
        12417
      ],
      "op": "POP",
      "path": "19"
    },
    "6256": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12427,
        12459
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6258": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12475,
        12487
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6259": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6268": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6269": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "GT",
      "path": "19"
    },
    "6270": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6271": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x188A"
    },
    "6274": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6275": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x188A"
    },
    "6278": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3464"
    },
    "6281": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12462,
        12488
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6282": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6283": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6285": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6286": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6287": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6288": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6289": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6290": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6291": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6293": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "MUL",
      "path": "19"
    },
    "6294": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6296": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "ADD",
      "path": "19"
    },
    "6297": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6298": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "ADD",
      "path": "19"
    },
    "6299": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6301": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6302": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6303": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6304": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18BD"
    },
    "6307": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6308": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6309": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6311": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "ADD",
      "path": "19"
    },
    "6312": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6313": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "6315": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6316": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6317": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6319": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "ADD",
      "path": "19"
    },
    "6320": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6321": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6323": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6324": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "SUB",
      "path": "19"
    },
    "6325": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6326": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6327": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18A8"
    },
    "6330": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6331": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6332": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "POP",
      "path": "19"
    },
    "6333": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12462,
        12488
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6334": {
      "op": "POP"
    },
    "6335": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12427,
        12488
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6336": {
      "op": "POP"
    },
    "6337": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12514,
        12515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6339": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12499,
        12763
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6340": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12523,
        12531
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6341": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12517,
        12519
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6342": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12517,
        12531
      ],
      "op": "GT",
      "path": "19"
    },
    "6343": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12499,
        12763
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE1C"
    },
    "6346": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12499,
        12763
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6347": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12572,
        12583
      ],
      "op": "DUP7",
      "path": "19"
    },
    "6348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6354": {
      "op": "SHL"
    },
    "6355": {
      "op": "SUB"
    },
    "6356": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12557,
        12583
      ],
      "op": "AND",
      "path": "19"
    },
    "6357": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12557,
        12568
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18DD"
    },
    "6360": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12565,
        12567
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6361": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12557,
        12564
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "6364": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12557,
        12568
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6365": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12557,
        12568
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6372": {
      "op": "SHL"
    },
    "6373": {
      "op": "SUB"
    },
    "6374": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12557,
        12583
      ],
      "op": "AND",
      "path": "19"
    },
    "6375": {
      "branch": 180,
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12557,
        12583
      ],
      "op": "EQ",
      "path": "19"
    },
    "6376": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12553,
        12753
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6377": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12553,
        12753
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1926"
    },
    "6380": {
      "branch": 180,
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12553,
        12753
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6381": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12603,
        12627
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6383": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12630,
        12642
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18F7"
    },
    "6386": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12639,
        12641
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6387": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12630,
        12638
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21BD"
    },
    "6390": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12630,
        12642
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6391": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12630,
        12642
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6392": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12603,
        12642
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6393": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12603,
        12642
      ],
      "op": "POP",
      "path": "19"
    },
    "6394": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12693,
        12703
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 72
    },
    "6395": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12676
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6396": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12677,
        12689
      ],
      "op": "DUP6",
      "path": "19"
    },
    "6397": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6398": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6399": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6400": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "LT",
      "path": "19"
    },
    "6401": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x190C"
    },
    "6404": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6405": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x190C"
    },
    "6408": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x391D"
    },
    "6411": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12660,
        12690
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6412": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6413": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6415": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6416": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6417": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "MUL",
      "path": "19"
    },
    "6418": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6419": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6420": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6421": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "ADD",
      "path": "19"
    },
    "6422": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12690
      ],
      "op": "ADD",
      "path": "19"
    },
    "6423": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12660,
        12703
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6424": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12721,
        12738
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 73,
      "value": "0x1922"
    },
    "6427": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12737,
        12738
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6429": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12721,
        12738
      ],
      "op": "DUP6",
      "path": "19"
    },
    "6430": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12721,
        12738
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38EA"
    },
    "6433": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12721,
        12738
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6434": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12721,
        12738
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6435": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12721,
        12738
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6436": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12721,
        12738
      ],
      "op": "POP",
      "path": "19"
    },
    "6437": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12585,
        12753
      ],
      "op": "POP",
      "path": "19"
    },
    "6438": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12553,
        12753
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6439": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12533,
        12537
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 74
    },
    "6440": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12533,
        12537
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1930"
    },
    "6443": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12533,
        12537
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6444": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12533,
        12537
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3902"
    },
    "6447": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12533,
        12537
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6448": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12533,
        12537
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6449": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12533,
        12537
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6450": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12533,
        12537
      ],
      "op": "POP",
      "path": "19"
    },
    "6451": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12533,
        12537
      ],
      "op": "POP",
      "path": "19"
    },
    "6452": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12499,
        12763
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18C3"
    },
    "6455": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12499,
        12763
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6456": {
      "offset": [
        2647,
        2679
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6457": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x18"
    },
    "6459": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6460": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6461": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1945"
    },
    "6464": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6465": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3813"
    },
    "6468": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6469": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6470": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6471": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6473": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "ADD",
      "path": "19"
    },
    "6474": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6476": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6477": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6478": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DIV",
      "path": "19"
    },
    "6479": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "MUL",
      "path": "19"
    },
    "6480": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6482": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "ADD",
      "path": "19"
    },
    "6483": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6485": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6486": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6487": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6488": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "ADD",
      "path": "19"
    },
    "6489": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6491": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6492": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6493": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6494": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6495": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6496": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6497": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6498": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6499": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6501": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "ADD",
      "path": "19"
    },
    "6502": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6503": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6504": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6505": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1971"
    },
    "6508": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6509": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3813"
    },
    "6512": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6513": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6514": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6515": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6516": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19BE"
    },
    "6519": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6520": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6521": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6523": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "LT",
      "path": "19"
    },
    "6524": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1993"
    },
    "6527": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6528": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "6531": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6532": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6533": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6534": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DIV",
      "path": "19"
    },
    "6535": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "MUL",
      "path": "19"
    },
    "6536": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6537": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6538": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6539": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6541": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "ADD",
      "path": "19"
    },
    "6542": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6543": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19BE"
    },
    "6546": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6547": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6548": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6549": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "ADD",
      "path": "19"
    },
    "6550": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6551": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6552": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6554": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6555": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6557": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6559": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6560": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6561": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6562": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6563": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6564": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6565": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6566": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6567": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6569": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "ADD",
      "path": "19"
    },
    "6570": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6571": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6573": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "ADD",
      "path": "19"
    },
    "6574": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6575": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6576": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "GT",
      "path": "19"
    },
    "6577": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19A1"
    },
    "6580": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6581": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6582": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6583": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SUB",
      "path": "19"
    },
    "6584": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6586": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "AND",
      "path": "19"
    },
    "6587": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6588": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "ADD",
      "path": "19"
    },
    "6589": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6590": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6591": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "POP",
      "path": "19"
    },
    "6592": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "POP",
      "path": "19"
    },
    "6593": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "POP",
      "path": "19"
    },
    "6594": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "POP",
      "path": "19"
    },
    "6595": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "POP",
      "path": "19"
    },
    "6596": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2647,
        2679
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6597": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "o",
      "offset": [
        2647,
        2679
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6598": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6599": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6601": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 75,
      "value": "0x1"
    },
    "6603": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6604": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6605": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F7"
    },
    "6608": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6609": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3813"
    },
    "6612": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6613": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19052,
        19201
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6614": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6616": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6623": {
      "op": "SHL"
    },
    "6624": {
      "op": "SUB"
    },
    "6625": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6626": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6627": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6628": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19FF"
    },
    "6631": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6632": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6634": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6635": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6639": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6641": {
      "op": "SHL"
    },
    "6642": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6644": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6646": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "6650": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "6654": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6655": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6656": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19194
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 76
    },
    "6657": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19194
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6658": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19194
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A12"
    },
    "6661": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19194
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6662": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19170
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x18"
    },
    "6664": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19170
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6665": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19194
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6667": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19194
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6668": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19194
      ],
      "op": "ADD",
      "path": "19"
    },
    "6669": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19194
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6670": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19194
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x32B6"
    },
    "6673": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "jump": "i",
      "offset": [
        19152,
        19194
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6674": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19194
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6675": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19152,
        19194
      ],
      "op": "POP",
      "path": "19"
    },
    "6676": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19052,
        19201
      ],
      "op": "POP",
      "path": "19"
    },
    "6677": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "jump": "o",
      "offset": [
        19052,
        19201
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6678": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6679": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4429
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 77,
      "value": "0x1A12"
    },
    "6682": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6683": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4410,
        4418
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6684": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4420,
        4428
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6685": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4395
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C1D"
    },
    "6688": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4429
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6689": {
      "offset": [
        2560,
        2595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6690": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "6692": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6693": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6694": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6695": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6696": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "LT",
      "path": "19"
    },
    "6697": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A31"
    },
    "6700": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6701": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6703": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6704": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "REVERT",
      "path": "19"
    },
    "6705": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6706": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6708": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6709": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6710": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6711": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6713": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6714": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6715": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6716": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "ADD",
      "path": "19"
    },
    "6717": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6718": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2560,
        2595
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6719": {
      "op": "POP"
    },
    "6720": {
      "offset": [
        2560,
        2595
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6721": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        2560,
        2595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6722": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20131,
        20263
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6723": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6725": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6732": {
      "op": "SHL"
    },
    "6733": {
      "op": "SUB"
    },
    "6734": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6735": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6736": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6737": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6C"
    },
    "6740": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6741": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6743": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6750": {
      "op": "SHL"
    },
    "6751": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6752": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6753": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6755": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6756": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "6759": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6760": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "6763": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6764": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6771": {
      "op": "SHL"
    },
    "6772": {
      "op": "SUB"
    },
    "6773": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "SWAP2",
      "path": "19",
      "statement": 78
    },
    "6774": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6775": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6776": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "AND",
      "path": "19"
    },
    "6777": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6779": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6780": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6781": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6782": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "6784": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6786": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6787": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6789": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6790": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20246
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6791": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6792": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6793": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6795": {
      "op": "NOT"
    },
    "6796": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "AND",
      "path": "19"
    },
    "6797": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6798": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6799": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6800": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6801": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6802": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6803": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "OR",
      "path": "19"
    },
    "6804": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6805": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20218,
        20256
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6806": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "o",
      "offset": [
        20131,
        20263
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6807": {
      "offset": [
        2470,
        2511
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6808": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x16"
    },
    "6810": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6811": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6812": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6813": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6814": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "LT",
      "path": "19"
    },
    "6815": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A31"
    },
    "6818": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6819": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6821": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6822": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2470,
        2511
      ],
      "op": "REVERT",
      "path": "19"
    },
    "6823": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6824": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 79,
      "value": "0x1AB1"
    },
    "6827": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6828": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5576
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6829": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5554
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2808"
    },
    "6832": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6833": {
      "branch": 208,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6834": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1ACD"
    },
    "6837": {
      "branch": 208,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6838": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6840": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6841": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6847": {
      "op": "SHL"
    },
    "6848": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6849": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6850": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6852": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "ADD",
      "path": "5"
    },
    "6853": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "6856": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6857": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3883"
    },
    "6860": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6861": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6862": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 80,
      "value": "0x1AD9"
    },
    "6865": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5655,
        5659
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6866": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5661,
        5663
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6867": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6868": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5674,
        5679
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6869": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CEC"
    },
    "6872": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6873": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6874": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "6875": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "6876": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "6877": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "6878": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6879": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6880": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6882": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6883": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8437,
        8441
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6885": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8437,
        8441
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6892": {
      "op": "SHL"
    },
    "6893": {
      "op": "SUB"
    },
    "6894": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6895": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6896": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6897": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0C"
    },
    "6900": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6901": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6903": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6910": {
      "op": "SHL"
    },
    "6911": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6912": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6913": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6915": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6916": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "6919": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6920": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "6923": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6924": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6925": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8481,
        8487
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 81
    },
    "6926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6932": {
      "op": "SHL"
    },
    "6933": {
      "op": "SUB"
    },
    "6934": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8461,
        8487
      ],
      "op": "AND",
      "path": "19"
    },
    "6935": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8461,
        8477
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B1F"
    },
    "6938": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8469,
        8476
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6939": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8461,
        8468
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "6942": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8461,
        8477
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6943": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8461,
        8477
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6950": {
      "op": "SHL"
    },
    "6951": {
      "op": "SUB"
    },
    "6952": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8461,
        8487
      ],
      "op": "AND",
      "path": "19"
    },
    "6953": {
      "branch": 181,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8461,
        8487
      ],
      "op": "EQ",
      "path": "19"
    },
    "6954": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8453,
        8535
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B89"
    },
    "6957": {
      "branch": 181,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8453,
        8535
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6958": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8453,
        8535
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6960": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8453,
        8535
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6961": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6965": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6967": {
      "op": "SHL"
    },
    "6968": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8453,
        8535
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6969": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8453,
        8535
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6972": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8453,
        8535
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6974": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8453,
        8535
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6975": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8453,
        8535
      ],
      "op": "ADD",
      "path": "19"
    },
    "6976": {
      "op": "MSTORE"
    },
    "6977": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6979": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6981": {
      "op": "DUP3"
    },
    "6982": {
      "op": "ADD"
    },
    "6983": {
      "op": "MSTORE"
    },
    "6984": {
      "op": "PUSH32",
      "value": "0x54686973206164647265737320646F65736E2774206F776E20746865204E4654"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7019": {
      "op": "DUP3"
    },
    "7020": {
      "op": "ADD"
    },
    "7021": {
      "op": "MSTORE"
    },
    "7022": {
      "op": "PUSH11",
      "value": "0x1039B832B1B4B334B2B217"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "7036": {
      "op": "SHL"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7039": {
      "op": "DUP3"
    },
    "7040": {
      "op": "ADD"
    },
    "7041": {
      "op": "MSTORE"
    },
    "7042": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7044": {
      "op": "ADD"
    },
    "7045": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8453,
        8535
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9E2"
    },
    "7048": {
      "op": "JUMP"
    },
    "7049": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8453,
        8535
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7050": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "7052": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7059": {
      "op": "SHL"
    },
    "7060": {
      "op": "SUB"
    },
    "7061": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7062": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8553,
        8569
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 82,
      "value": "0x1B9E"
    },
    "7065": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8561,
        8568
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7066": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8553,
        8560
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "7069": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8553,
        8569
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7070": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8553,
        8569
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7077": {
      "op": "SHL"
    },
    "7078": {
      "op": "SUB"
    },
    "7079": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8553,
        8580
      ],
      "op": "AND",
      "path": "19"
    },
    "7080": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8553,
        8580
      ],
      "op": "EQ",
      "path": "19"
    },
    "7081": {
      "branch": 182,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8553,
        8580
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7082": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8553,
        8622
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7083": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8553,
        8622
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7084": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8553,
        8622
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BD1"
    },
    "7087": {
      "branch": 182,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8553,
        8622
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7088": {
      "op": "POP"
    },
    "7089": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8604,
        8622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "7091": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8604,
        8622
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7098": {
      "op": "SHL"
    },
    "7099": {
      "op": "SUB"
    },
    "7100": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8604,
        8622
      ],
      "op": "AND",
      "path": "19"
    },
    "7101": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8584,
        8600
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BC5"
    },
    "7104": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8592,
        8599
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7105": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8584,
        8591
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "7108": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8584,
        8600
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7109": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8584,
        8600
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7116": {
      "op": "SHL"
    },
    "7117": {
      "op": "SUB"
    },
    "7118": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8584,
        8622
      ],
      "op": "AND",
      "path": "19"
    },
    "7119": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8584,
        8622
      ],
      "op": "EQ",
      "path": "19"
    },
    "7120": {
      "branch": 183,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8584,
        8622
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7121": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8553,
        8622
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7122": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8545,
        8684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C43"
    },
    "7125": {
      "branch": 183,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8545,
        8684
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7126": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8545,
        8684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7128": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8545,
        8684
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7129": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7133": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7135": {
      "op": "SHL"
    },
    "7136": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8545,
        8684
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7137": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8545,
        8684
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7140": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8545,
        8684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7142": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8545,
        8684
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7143": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8545,
        8684
      ],
      "op": "ADD",
      "path": "19"
    },
    "7144": {
      "op": "MSTORE"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7149": {
      "op": "DUP3"
    },
    "7150": {
      "op": "ADD"
    },
    "7151": {
      "op": "MSTORE"
    },
    "7152": {
      "op": "PUSH32",
      "value": "0x43616E27742063686172676520746865206F776E6572206F72206D61726B6574"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7187": {
      "op": "DUP3"
    },
    "7188": {
      "op": "ADD"
    },
    "7189": {
      "op": "MSTORE"
    },
    "7190": {
      "op": "PUSH32",
      "value": "0x706C61636520666F7220746865206D656D626572736869702E00000000000000"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7225": {
      "op": "DUP3"
    },
    "7226": {
      "op": "ADD"
    },
    "7227": {
      "op": "MSTORE"
    },
    "7228": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7230": {
      "op": "ADD"
    },
    "7231": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8545,
        8684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9E2"
    },
    "7234": {
      "op": "JUMP"
    },
    "7235": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8545,
        8684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7236": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8741,
        8772
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x19"
    },
    "7238": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8741,
        8772
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7245": {
      "op": "SHL"
    },
    "7246": {
      "op": "SUB"
    },
    "7247": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8822
      ],
      "op": "DUP6",
      "path": "19"
    },
    "7248": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8822
      ],
      "op": "AND",
      "path": "19"
    },
    "7249": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8695,
        8738
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7251": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8822
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7252": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8822
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7253": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8822
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7254": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8814
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "7256": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8822
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7258": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8822
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7259": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8822
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7261": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8822
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7262": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8822
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7263": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8822
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7264": {
      "branch": 184,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8787,
        8826
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7265": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8783,
        8966
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C99"
    },
    "7268": {
      "branch": 184,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8783,
        8966
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7275": {
      "op": "SHL"
    },
    "7276": {
      "op": "SUB"
    },
    "7277": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "DUP6",
      "path": "19",
      "statement": 83
    },
    "7278": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "AND",
      "path": "19"
    },
    "7279": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7281": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7282": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7283": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7284": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8941
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "7286": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7288": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7289": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7291": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7292": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7293": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8914,
        8949
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7294": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8880,
        8911
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x19"
    },
    "7296": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8880,
        8911
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7297": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8952,
        8955
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "7299": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8952,
        8955
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7300": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8880,
        8949
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C8C"
    },
    "7303": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8880,
        8949
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7304": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8880,
        8949
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3933"
    },
    "7307": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8880,
        8949
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7308": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8880,
        8949
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7309": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8880,
        8955
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C96"
    },
    "7312": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8880,
        8955
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7313": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8880,
        8955
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7314": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8880,
        8955
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3968"
    },
    "7317": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8880,
        8955
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7318": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8880,
        8955
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7319": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8842,
        8955
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7320": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8842,
        8955
      ],
      "op": "POP",
      "path": "19"
    },
    "7321": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8783,
        8966
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7322": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        8993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "7324": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        8993
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7325": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7327": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7328": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7335": {
      "op": "SHL"
    },
    "7336": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7337": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7344": {
      "op": "SHL"
    },
    "7345": {
      "op": "SUB"
    },
    "7346": {
      "op": "DUP8"
    },
    "7347": {
      "op": "DUP2"
    },
    "7348": {
      "op": "AND"
    },
    "7349": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7351": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7352": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "ADD",
      "path": "19"
    },
    "7353": {
      "op": "MSTORE"
    },
    "7354": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9014,
        9049
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7355": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9014,
        9049
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7356": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        8993
      ],
      "op": "AND",
      "path": "19"
    },
    "7357": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        8993
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7358": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9003
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "7363": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9003
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7364": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7366": {
      "op": "ADD"
    },
    "7367": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7369": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7371": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7372": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7373": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7374": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "SUB",
      "path": "19"
    },
    "7375": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7376": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7377": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7378": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "7379": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7380": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7381": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7382": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CDE"
    },
    "7385": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7386": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7388": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7389": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7390": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7391": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "POP",
      "path": "19"
    },
    "7392": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "GAS",
      "path": "19"
    },
    "7393": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "7394": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7395": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7396": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7397": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CF2"
    },
    "7400": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7401": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7402": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7404": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7405": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "7406": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7407": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7409": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7410": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7411": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "POP",
      "path": "19"
    },
    "7412": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "POP",
      "path": "19"
    },
    "7413": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "POP",
      "path": "19"
    },
    "7414": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "POP",
      "path": "19"
    },
    "7415": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7417": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7418": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7419": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7421": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "NOT",
      "path": "19"
    },
    "7422": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7424": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7425": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "ADD",
      "path": "19"
    },
    "7426": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "AND",
      "path": "19"
    },
    "7427": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7428": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "ADD",
      "path": "19"
    },
    "7429": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7430": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7432": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7433": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "POP",
      "path": "19"
    },
    "7434": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7435": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "ADD",
      "path": "19"
    },
    "7436": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7437": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D16"
    },
    "7440": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7441": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7442": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x397C"
    },
    "7445": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8980,
        9011
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7446": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9011
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7447": {
      "branch": 185,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9049
      ],
      "op": "LT",
      "path": "19"
    },
    "7448": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9137
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7449": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9137
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DA2"
    },
    "7452": {
      "branch": 185,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9137
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7453": {
      "op": "POP"
    },
    "7454": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9066
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "7456": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9066
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7457": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7459": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7460": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "7465": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7467": {
      "op": "SHL"
    },
    "7468": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7469": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7476": {
      "op": "SHL"
    },
    "7477": {
      "op": "SUB"
    },
    "7478": {
      "op": "DUP8"
    },
    "7479": {
      "op": "DUP2"
    },
    "7480": {
      "op": "AND"
    },
    "7481": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7483": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7484": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "ADD",
      "path": "19"
    },
    "7485": {
      "op": "MSTORE"
    },
    "7486": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9093,
        9097
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "7487": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7489": {
      "op": "DUP4"
    },
    "7490": {
      "op": "ADD"
    },
    "7491": {
      "op": "MSTORE"
    },
    "7492": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9102,
        9137
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7493": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9102,
        9137
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7494": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9066
      ],
      "op": "AND",
      "path": "19"
    },
    "7495": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9066
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7496": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9076
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDD62ED3E"
    },
    "7501": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9076
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7502": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7504": {
      "op": "ADD"
    },
    "7505": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7507": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7509": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7510": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7511": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7512": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "SUB",
      "path": "19"
    },
    "7513": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7514": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7515": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7516": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "7517": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7518": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7519": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7520": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D68"
    },
    "7523": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7524": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7526": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7527": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7528": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7529": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "POP",
      "path": "19"
    },
    "7530": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "GAS",
      "path": "19"
    },
    "7531": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "7532": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7533": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7534": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7535": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D7C"
    },
    "7538": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7539": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7540": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7542": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7543": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "7544": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7545": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7547": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7548": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7549": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "POP",
      "path": "19"
    },
    "7550": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "POP",
      "path": "19"
    },
    "7551": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "POP",
      "path": "19"
    },
    "7552": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "POP",
      "path": "19"
    },
    "7553": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7555": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7556": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7557": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7559": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "NOT",
      "path": "19"
    },
    "7560": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7562": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7563": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "ADD",
      "path": "19"
    },
    "7564": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "AND",
      "path": "19"
    },
    "7565": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7566": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "ADD",
      "path": "19"
    },
    "7567": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7568": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7570": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7571": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "POP",
      "path": "19"
    },
    "7572": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7573": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "ADD",
      "path": "19"
    },
    "7574": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7575": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DA0"
    },
    "7578": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7579": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7580": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x397C"
    },
    "7583": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        9053,
        9099
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7584": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9099
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7585": {
      "branch": 186,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9053,
        9137
      ],
      "op": "LT",
      "path": "19"
    },
    "7586": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9137
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7587": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8976,
        9212
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7588": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8976,
        9212
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DBA"
    },
    "7591": {
      "branch": 186,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8976,
        9212
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7592": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9153,
        9179
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 84,
      "value": "0x1DB0"
    },
    "7595": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9171,
        9178
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7596": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9153,
        9170
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D1F"
    },
    "7599": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        9153,
        9179
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7600": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9153,
        9179
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7601": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9200,
        9201
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 85,
      "value": "0x1"
    },
    "7603": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9193,
        9201
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7604": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9193,
        9201
      ],
      "op": "POP",
      "path": "19"
    },
    "7605": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9193,
        9201
      ],
      "op": "POP",
      "path": "19"
    },
    "7606": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9193,
        9201
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1ED3"
    },
    "7609": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9193,
        9201
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7610": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8976,
        9212
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7611": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9235
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 86,
      "value": "0xA"
    },
    "7613": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9235
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7614": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7616": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7617": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7622": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7624": {
      "op": "SHL"
    },
    "7625": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7626": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7633": {
      "op": "SHL"
    },
    "7634": {
      "op": "SUB"
    },
    "7635": {
      "op": "DUP8"
    },
    "7636": {
      "op": "DUP2"
    },
    "7637": {
      "op": "AND"
    },
    "7638": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7640": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7641": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "ADD",
      "path": "19"
    },
    "7642": {
      "op": "MSTORE"
    },
    "7643": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9265,
        9269
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7646": {
      "op": "DUP4"
    },
    "7647": {
      "op": "ADD"
    },
    "7648": {
      "op": "MSTORE"
    },
    "7649": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7651": {
      "op": "DUP3"
    },
    "7652": {
      "op": "ADD"
    },
    "7653": {
      "op": "DUP5"
    },
    "7654": {
      "op": "SWAP1"
    },
    "7655": {
      "op": "MSTORE"
    },
    "7656": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9235
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7657": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9235
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7658": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9235
      ],
      "op": "AND",
      "path": "19"
    },
    "7659": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9235
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7660": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9248
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23B872DD"
    },
    "7665": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9248
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7666": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7668": {
      "op": "ADD"
    },
    "7669": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7671": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7673": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7674": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7675": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7676": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "SUB",
      "path": "19"
    },
    "7677": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7678": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7680": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP8",
      "path": "19"
    },
    "7681": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7682": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "7683": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7684": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7685": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7686": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E0E"
    },
    "7689": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7690": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7692": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7693": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7694": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7695": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "POP",
      "path": "19"
    },
    "7696": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "GAS",
      "path": "19"
    },
    "7697": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "CALL",
      "path": "19"
    },
    "7698": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7699": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7700": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7701": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E22"
    },
    "7704": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7705": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7706": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7708": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7709": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "7710": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7711": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7713": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7714": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7715": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "POP",
      "path": "19"
    },
    "7716": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "POP",
      "path": "19"
    },
    "7717": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "POP",
      "path": "19"
    },
    "7718": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "POP",
      "path": "19"
    },
    "7719": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7721": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7722": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7723": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7725": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "NOT",
      "path": "19"
    },
    "7726": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7728": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7729": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "ADD",
      "path": "19"
    },
    "7730": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "AND",
      "path": "19"
    },
    "7731": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7732": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "ADD",
      "path": "19"
    },
    "7733": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7734": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7736": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7737": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "POP",
      "path": "19"
    },
    "7738": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7739": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "ADD",
      "path": "19"
    },
    "7740": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7741": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E46"
    },
    "7744": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7745": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7746": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3995"
    },
    "7749": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        9222,
        9308
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7750": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9222,
        9308
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7751": {
      "op": "POP"
    },
    "7752": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9323,
        9340
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7753": {
      "branch": 187,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9323,
        9340
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7754": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9319,
        9504
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E63"
    },
    "7757": {
      "branch": 187,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9319,
        9504
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7758": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9388
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 87,
      "value": "0x0"
    },
    "7760": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9388
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7761": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9388
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7762": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9388
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7763": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9379
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "7765": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9388
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7767": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9388
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7768": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9388
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7770": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9388
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7771": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9388
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7772": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9404
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7773": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9404
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7774": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9356,
        9404
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7775": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9319,
        9504
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E75"
    },
    "7778": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9319,
        9504
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7779": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9319,
        9504
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7780": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9475
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 88,
      "value": "0x0"
    },
    "7782": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9475
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7783": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9475
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7784": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9475
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7785": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9466
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "7787": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9475
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7789": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9475
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7790": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9475
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7792": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9475
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7793": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9475
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7794": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9478,
        9493
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "7795": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9493
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7796": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9443,
        9493
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7797": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9319,
        9504
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7804": {
      "op": "SHL"
    },
    "7805": {
      "op": "SUB"
    },
    "7806": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "DUP6",
      "path": "19",
      "statement": 89
    },
    "7807": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "AND",
      "path": "19"
    },
    "7808": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9552,
        9553
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7810": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7811": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7812": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7813": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9541
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "7815": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7817": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7818": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7819": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7820": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7822": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7823": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7824": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7825": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9553
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7826": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9553
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7827": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9553
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7828": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9553
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7829": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9569,
        9664
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 90
    },
    "7830": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9569,
        9664
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7831": {
      "op": "DUP5"
    },
    "7832": {
      "op": "DUP2"
    },
    "7833": {
      "op": "MSTORE"
    },
    "7834": {
      "op": "SWAP1"
    },
    "7835": {
      "op": "DUP2"
    },
    "7836": {
      "op": "ADD"
    },
    "7837": {
      "op": "DUP7"
    },
    "7838": {
      "op": "SWAP1"
    },
    "7839": {
      "op": "MSTORE"
    },
    "7840": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9604,
        9611
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7841": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9604,
        9611
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7842": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9514,
        9549
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7843": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9569,
        9664
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x9170D37D9D267E1D271F28F3F225AC7E95B00677566675BA1D251944EB3C5924"
    },
    "7876": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9569,
        9664
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7877": {
      "op": "ADD"
    },
    "7878": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9569,
        9664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7880": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9569,
        9664
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7881": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9569,
        9664
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7882": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9569,
        9664
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7883": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9569,
        9664
      ],
      "op": "SUB",
      "path": "19"
    },
    "7884": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9569,
        9664
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7885": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9569,
        9664
      ],
      "op": "LOG3",
      "path": "19"
    },
    "7886": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9682,
        9683
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 91,
      "value": "0x0"
    },
    "7888": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9675,
        9683
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7889": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9675,
        9683
      ],
      "op": "POP",
      "path": "19"
    },
    "7890": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9675,
        9683
      ],
      "op": "POP",
      "path": "19"
    },
    "7891": {
      "offset": [
        1318,
        1319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7892": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "7893": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7894": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "POP",
      "path": "19"
    },
    "7895": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "POP",
      "path": "19"
    },
    "7896": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8318,
        9690
      ],
      "op": "POP",
      "path": "19"
    },
    "7897": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "o",
      "offset": [
        8318,
        9690
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7898": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9831,
        9976
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7899": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "7901": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7908": {
      "op": "SHL"
    },
    "7909": {
      "op": "SUB"
    },
    "7910": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7911": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "7912": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7913": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F04"
    },
    "7916": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7917": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7919": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7920": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7924": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7926": {
      "op": "SHL"
    },
    "7927": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7928": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7929": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7931": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7932": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "7935": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7936": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "7939": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7940": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7941": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9911
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 92,
      "value": "0xA"
    },
    "7943": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9911
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7950": {
      "op": "SHL"
    },
    "7951": {
      "op": "SUB"
    },
    "7952": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9911
      ],
      "op": "AND",
      "path": "19"
    },
    "7953": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9920
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA9059CBB"
    },
    "7958": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9921,
        9928
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F27"
    },
    "7961": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "7963": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7970": {
      "op": "SHL"
    },
    "7971": {
      "op": "SUB"
    },
    "7972": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7973": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7974": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7975": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9921,
        9928
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7976": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9943
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "7978": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9943
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7979": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7981": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7982": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7987": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7989": {
      "op": "SHL"
    },
    "7990": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7991": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7992": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9962,
        9966
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "7993": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7995": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7996": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "ADD",
      "path": "19"
    },
    "7997": {
      "op": "MSTORE"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8004": {
      "op": "SHL"
    },
    "8005": {
      "op": "SUB"
    },
    "8006": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9943
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8007": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9943
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8008": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9943
      ],
      "op": "AND",
      "path": "19"
    },
    "8009": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9943
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8010": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9953
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "8015": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9953
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8018": {
      "op": "ADD"
    },
    "8019": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8021": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8023": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8024": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8025": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8026": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "SUB",
      "path": "19"
    },
    "8027": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8028": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP7",
      "path": "19"
    },
    "8029": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8030": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "8031": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8032": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8033": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8034": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F6A"
    },
    "8037": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8038": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8040": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8041": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "REVERT",
      "path": "19"
    },
    "8042": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8043": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "POP",
      "path": "19"
    },
    "8044": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "GAS",
      "path": "19"
    },
    "8045": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "8046": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8047": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8048": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8049": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F7E"
    },
    "8052": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8053": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "8054": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8056": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8057": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "8058": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "8059": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8061": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "REVERT",
      "path": "19"
    },
    "8062": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8063": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "POP",
      "path": "19"
    },
    "8064": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "POP",
      "path": "19"
    },
    "8065": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "POP",
      "path": "19"
    },
    "8066": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "POP",
      "path": "19"
    },
    "8067": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8069": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8070": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "8071": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "8073": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "NOT",
      "path": "19"
    },
    "8074": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "8076": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8077": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "ADD",
      "path": "19"
    },
    "8078": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "AND",
      "path": "19"
    },
    "8079": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8080": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "ADD",
      "path": "19"
    },
    "8081": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8082": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8084": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8085": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "POP",
      "path": "19"
    },
    "8086": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8087": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "ADD",
      "path": "19"
    },
    "8088": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8089": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FA2"
    },
    "8092": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8093": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8094": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x397C"
    },
    "8097": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "i",
      "offset": [
        9930,
        9968
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8098": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9930,
        9968
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8099": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8101": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8106": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8108": {
      "op": "SHL"
    },
    "8109": {
      "op": "SUB"
    },
    "8110": {
      "op": "NOT"
    },
    "8111": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "8113": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP6",
      "path": "19"
    },
    "8114": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8115": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "SHL",
      "path": "19"
    },
    "8116": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "AND",
      "path": "19"
    },
    "8117": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8118": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8125": {
      "op": "SHL"
    },
    "8126": {
      "op": "SUB"
    },
    "8127": {
      "op": "SWAP1"
    },
    "8128": {
      "op": "SWAP3"
    },
    "8129": {
      "op": "AND"
    },
    "8130": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "8132": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8133": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "ADD",
      "path": "19"
    },
    "8134": {
      "op": "MSTORE"
    },
    "8135": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8137": {
      "op": "DUP3"
    },
    "8138": {
      "op": "ADD"
    },
    "8139": {
      "op": "MSTORE"
    },
    "8140": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8142": {
      "op": "ADD"
    },
    "8143": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8145": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8147": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8148": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8149": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8150": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "SUB",
      "path": "19"
    },
    "8151": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8152": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8154": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP8",
      "path": "19"
    },
    "8155": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8156": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "8157": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8158": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8159": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8160": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FE8"
    },
    "8163": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8164": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8166": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8167": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "REVERT",
      "path": "19"
    },
    "8168": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8169": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "POP",
      "path": "19"
    },
    "8170": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "GAS",
      "path": "19"
    },
    "8171": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "CALL",
      "path": "19"
    },
    "8172": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8173": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8174": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8175": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FFC"
    },
    "8178": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8179": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "8180": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8182": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8183": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "8184": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "8185": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8187": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "REVERT",
      "path": "19"
    },
    "8188": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8189": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "POP",
      "path": "19"
    },
    "8190": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "POP",
      "path": "19"
    },
    "8191": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "POP",
      "path": "19"
    },
    "8192": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "POP",
      "path": "19"
    },
    "8193": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8195": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8196": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "8197": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "8199": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "NOT",
      "path": "19"
    },
    "8200": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "8202": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8203": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "ADD",
      "path": "19"
    },
    "8204": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "AND",
      "path": "19"
    },
    "8205": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8206": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "ADD",
      "path": "19"
    },
    "8207": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8208": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8210": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8211": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "POP",
      "path": "19"
    },
    "8212": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8213": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "ADD",
      "path": "19"
    },
    "8214": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8215": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2020"
    },
    "8218": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8219": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8220": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3995"
    },
    "8223": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "i",
      "offset": [
        9898,
        9969
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8224": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8225": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9898,
        9969
      ],
      "op": "POP",
      "path": "19"
    },
    "8226": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "o",
      "offset": [
        9831,
        9976
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8227": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15326,
        16158
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8228": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15403,
        15418
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "8230": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15430,
        15443
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8232": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15446,
        15465
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2030"
    },
    "8235": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15446,
        15455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "8237": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8238": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8239": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8240": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15446,
        15465
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8241": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15430,
        15465
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8242": {
      "op": "POP"
    },
    "8243": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15475,
        15492
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8245": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15475,
        15492
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8246": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15553,
        15554
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8248": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15538,
        15724
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8249": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15562,
        15570
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8250": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15556,
        15558
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8251": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15556,
        15570
      ],
      "op": "GT",
      "path": "19"
    },
    "8252": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15538,
        15724
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x209C"
    },
    "8255": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15538,
        15724
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8256": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15611,
        15622
      ],
      "op": "DUP6",
      "path": "19"
    },
    "8257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8263": {
      "op": "SHL"
    },
    "8264": {
      "op": "SUB"
    },
    "8265": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15596,
        15622
      ],
      "op": "AND",
      "path": "19"
    },
    "8266": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15596,
        15607
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2052"
    },
    "8269": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15604,
        15606
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8270": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15596,
        15603
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "8273": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15596,
        15607
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8274": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15596,
        15607
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8281": {
      "op": "SHL"
    },
    "8282": {
      "op": "SUB"
    },
    "8283": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15596,
        15622
      ],
      "op": "AND",
      "path": "19"
    },
    "8284": {
      "branch": 188,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15596,
        15622
      ],
      "op": "EQ",
      "path": "19"
    },
    "8285": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15596,
        15662
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8286": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15596,
        15662
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8287": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15596,
        15662
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2077"
    },
    "8290": {
      "branch": 188,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15596,
        15662
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8291": {
      "op": "POP"
    },
    "8292": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15649,
        15662
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "8294": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15649,
        15662
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8295": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15645
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8297": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15645
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8298": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15645
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8299": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15645
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8300": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15641
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "8302": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15645
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8304": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15645
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8305": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15645
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8307": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15645
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8308": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15645
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8309": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15645
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8310": {
      "branch": 189,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15626,
        15662
      ],
      "op": "EQ",
      "path": "19"
    },
    "8311": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15596,
        15662
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8312": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15592,
        15714
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8313": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15592,
        15714
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x208A"
    },
    "8316": {
      "branch": 189,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15592,
        15714
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8317": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15682,
        15699
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 93,
      "value": "0x2087"
    },
    "8320": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15698,
        15699
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8322": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15682,
        15699
      ],
      "op": "DUP5",
      "path": "19"
    },
    "8323": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15682,
        15699
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38EA"
    },
    "8326": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15682,
        15699
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8327": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15682,
        15699
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8328": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15682,
        15699
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8329": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15682,
        15699
      ],
      "op": "POP",
      "path": "19"
    },
    "8330": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15592,
        15714
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8331": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15572,
        15576
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 94
    },
    "8332": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15572,
        15576
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2094"
    },
    "8335": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15572,
        15576
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8336": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15572,
        15576
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3902"
    },
    "8339": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15572,
        15576
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8340": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15572,
        15576
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8341": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15572,
        15576
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8342": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15572,
        15576
      ],
      "op": "POP",
      "path": "19"
    },
    "8343": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15572,
        15576
      ],
      "op": "POP",
      "path": "19"
    },
    "8344": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15538,
        15724
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2038"
    },
    "8347": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15538,
        15724
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8348": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15538,
        15724
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8349": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15538,
        15724
      ],
      "op": "POP",
      "path": "19"
    },
    "8350": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15734,
        15766
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8352": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15782,
        15794
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8353": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8362": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8363": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "GT",
      "path": "19"
    },
    "8364": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8365": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x20B8"
    },
    "8368": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8369": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x20B8"
    },
    "8372": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3464"
    },
    "8375": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15769,
        15795
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8376": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8377": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8379": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8380": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8381": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8382": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8383": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8384": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8385": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8387": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "MUL",
      "path": "19"
    },
    "8388": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8390": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "ADD",
      "path": "19"
    },
    "8391": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8392": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "ADD",
      "path": "19"
    },
    "8393": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8395": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8396": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8397": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8398": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x20EB"
    },
    "8401": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8402": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8403": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8405": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "ADD",
      "path": "19"
    },
    "8406": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8407": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "8409": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8410": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8411": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8413": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "ADD",
      "path": "19"
    },
    "8414": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8415": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8417": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8418": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "SUB",
      "path": "19"
    },
    "8419": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8420": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8421": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x20D6"
    },
    "8424": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8425": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8426": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "POP",
      "path": "19"
    },
    "8427": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15769,
        15795
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8428": {
      "op": "POP"
    },
    "8429": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15734,
        15795
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8430": {
      "op": "POP"
    },
    "8431": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15821,
        15822
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8433": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15806,
        16110
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8434": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15830,
        15838
      ],
      "op": "DUP5",
      "path": "19"
    },
    "8435": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15824,
        15826
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8436": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15824,
        15838
      ],
      "op": "GT",
      "path": "19"
    },
    "8437": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15806,
        16110
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE1C"
    },
    "8440": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15806,
        16110
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8441": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15879,
        15890
      ],
      "op": "DUP7",
      "path": "19"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8448": {
      "op": "SHL"
    },
    "8449": {
      "op": "SUB"
    },
    "8450": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15864,
        15890
      ],
      "op": "AND",
      "path": "19"
    },
    "8451": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15864,
        15875
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x210B"
    },
    "8454": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15874
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8455": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15864,
        15871
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "8458": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15864,
        15875
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8459": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15864,
        15875
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8466": {
      "op": "SHL"
    },
    "8467": {
      "op": "SUB"
    },
    "8468": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15864,
        15890
      ],
      "op": "AND",
      "path": "19"
    },
    "8469": {
      "branch": 190,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15864,
        15890
      ],
      "op": "EQ",
      "path": "19"
    },
    "8470": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15864,
        15930
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8471": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15864,
        15930
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8472": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15864,
        15930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2130"
    },
    "8475": {
      "branch": 190,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15864,
        15930
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8476": {
      "op": "POP"
    },
    "8477": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15917,
        15930
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "8479": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15917,
        15930
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8480": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15913
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8482": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15913
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8483": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15913
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8484": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15913
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8485": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15909
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "8487": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15913
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8489": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15913
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8490": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15913
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8492": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15913
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8493": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15913
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8494": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15913
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8495": {
      "branch": 191,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15894,
        15930
      ],
      "op": "EQ",
      "path": "19"
    },
    "8496": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15864,
        15930
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8497": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15860,
        16100
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8498": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15860,
        16100
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x216F"
    },
    "8501": {
      "branch": 191,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15860,
        16100
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8502": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15950,
        15974
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8504": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15977,
        15989
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2140"
    },
    "8507": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15986,
        15988
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8508": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15977,
        15985
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21BD"
    },
    "8511": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15977,
        15989
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8512": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15977,
        15989
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8513": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15950,
        15989
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8514": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15950,
        15989
      ],
      "op": "POP",
      "path": "19"
    },
    "8515": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16040,
        16050
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 95
    },
    "8516": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16023
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8517": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16024,
        16036
      ],
      "op": "DUP6",
      "path": "19"
    },
    "8518": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8519": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8520": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8521": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "LT",
      "path": "19"
    },
    "8522": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2155"
    },
    "8525": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8526": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2155"
    },
    "8529": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x391D"
    },
    "8532": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        16007,
        16037
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8533": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8534": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8536": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8537": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8538": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "MUL",
      "path": "19"
    },
    "8539": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8540": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8541": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8542": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "ADD",
      "path": "19"
    },
    "8543": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16037
      ],
      "op": "ADD",
      "path": "19"
    },
    "8544": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16007,
        16050
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8545": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16068,
        16085
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 96,
      "value": "0x216B"
    },
    "8548": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16084,
        16085
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8550": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16068,
        16085
      ],
      "op": "DUP6",
      "path": "19"
    },
    "8551": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16068,
        16085
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38EA"
    },
    "8554": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        16068,
        16085
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8555": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16068,
        16085
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8556": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16068,
        16085
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "8557": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16068,
        16085
      ],
      "op": "POP",
      "path": "19"
    },
    "8558": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15932,
        16100
      ],
      "op": "POP",
      "path": "19"
    },
    "8559": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15860,
        16100
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8560": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15840,
        15844
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 97
    },
    "8561": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15840,
        15844
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2179"
    },
    "8564": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15840,
        15844
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8565": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15840,
        15844
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3902"
    },
    "8568": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15840,
        15844
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8569": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15840,
        15844
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8570": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15840,
        15844
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8571": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15840,
        15844
      ],
      "op": "POP",
      "path": "19"
    },
    "8572": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15840,
        15844
      ],
      "op": "POP",
      "path": "19"
    },
    "8573": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15806,
        16110
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x20F1"
    },
    "8576": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15806,
        16110
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8577": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17652,
        17787
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8578": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "8580": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8587": {
      "op": "SHL"
    },
    "8588": {
      "op": "SUB"
    },
    "8589": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8590": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "8591": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8592": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21AB"
    },
    "8595": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8596": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8598": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8605": {
      "op": "SHL"
    },
    "8606": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8607": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8608": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8610": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8611": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "8614": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8615": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "8618": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8619": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8620": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17768
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 98,
      "value": "0x0"
    },
    "8622": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17768
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8623": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17768
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8624": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17768
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8625": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17759
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "8627": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17768
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8629": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17768
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8630": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17768
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8632": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17768
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8633": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17768
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8634": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17768
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8635": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        17744,
        17780
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "8636": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "jump": "o",
      "offset": [
        17652,
        17787
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8637": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8638": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        540,
        553
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "8640": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        589
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 99,
      "value": "0x21C8"
    },
    "8643": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        581,
        588
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8644": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        580
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x26F2"
    },
    "8647": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        573,
        589
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8648": {
      "branch": 218,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        589
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8649": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x222E"
    },
    "8652": {
      "branch": 218,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8653": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8655": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8662": {
      "op": "SHL"
    },
    "8663": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8664": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8667": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "8669": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8670": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "ADD",
      "path": "8"
    },
    "8671": {
      "op": "MSTORE"
    },
    "8672": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8676": {
      "op": "DUP3"
    },
    "8677": {
      "op": "ADD"
    },
    "8678": {
      "op": "MSTORE"
    },
    "8679": {
      "op": "PUSH32",
      "value": "0x45524337323155524953746F726167653A2055524920717565727920666F7220"
    },
    "8712": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8714": {
      "op": "DUP3"
    },
    "8715": {
      "op": "ADD"
    },
    "8716": {
      "op": "MSTORE"
    },
    "8717": {
      "op": "PUSH17",
      "value": "0x3737B732BC34B9BA32B73A103A37B5B2B7"
    },
    "8735": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "8737": {
      "op": "SHL"
    },
    "8738": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8740": {
      "op": "DUP3"
    },
    "8741": {
      "op": "ADD"
    },
    "8742": {
      "op": "MSTORE"
    },
    "8743": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8745": {
      "op": "ADD"
    },
    "8746": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9E2"
    },
    "8749": {
      "op": "JUMP"
    },
    "8750": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8751": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        677
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8753": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8754": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8755": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8756": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        690
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "8758": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8760": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8761": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8763": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8764": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "8765": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8766": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8767": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2247"
    },
    "8770": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8771": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3813"
    },
    "8774": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8775": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8776": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8777": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "8779": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "8780": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8782": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8783": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8784": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DIV",
      "path": "8"
    },
    "8785": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MUL",
      "path": "8"
    },
    "8786": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8788": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "8789": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8791": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8792": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8793": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8794": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "8795": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8797": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8798": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8799": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "8800": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8801": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8802": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8803": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8804": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8805": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8807": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "8808": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8809": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8810": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8811": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2273"
    },
    "8814": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8815": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3813"
    },
    "8818": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8819": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8820": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8821": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8822": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22C0"
    },
    "8825": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8826": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8827": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "8829": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "LT",
      "path": "8"
    },
    "8830": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2295"
    },
    "8833": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8834": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "8837": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8838": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "8839": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8840": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DIV",
      "path": "8"
    },
    "8841": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MUL",
      "path": "8"
    },
    "8842": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "8843": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8844": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8845": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8847": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "8848": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8849": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22C0"
    },
    "8852": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8853": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8854": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8855": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "8856": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8857": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8858": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8860": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8861": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8863": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8865": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "8866": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8867": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8868": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8869": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8870": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8871": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8872": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8873": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "8875": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "8876": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8877": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8879": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "8880": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8881": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "8882": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "GT",
      "path": "8"
    },
    "8883": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22A3"
    },
    "8886": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8887": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8888": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8889": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SUB",
      "path": "8"
    },
    "8890": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "8892": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "AND",
      "path": "8"
    },
    "8893": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8894": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "8895": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8896": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8897": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "8898": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "8899": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "8900": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "8901": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "8902": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8903": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "8904": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8906": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        730,
        740
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22DE"
    },
    "8909": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 100,
      "value": "0x40"
    },
    "8911": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8912": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8913": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8915": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8916": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "8917": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8918": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8919": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8922": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8923": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8924": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8925": {
      "fn": "ERC721._baseURI",
      "offset": [
        3388,
        3480
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8926": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        730,
        740
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8927": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        740
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8928": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        740
      ],
      "op": "POP",
      "path": "8"
    },
    "8929": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        823
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8930": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        813,
        831
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8931": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        835,
        836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8933": {
      "branch": 219,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        813,
        836
      ],
      "op": "EQ",
      "path": "8"
    },
    "8934": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8935": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22F1"
    },
    "8938": {
      "branch": 219,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8939": {
      "op": "POP"
    },
    "8940": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        859,
        868
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 101
    },
    "8941": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8942": {
      "op": "POP"
    },
    "8943": {
      "op": "POP"
    },
    "8944": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "o",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8945": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8946": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1004
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8947": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1004
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8948": {
      "branch": 220,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1008
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8949": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2323"
    },
    "8952": {
      "branch": 220,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8953": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1055,
        1059
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 102
    },
    "8954": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1061,
        1070
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8955": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8957": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8958": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8960": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "ADD",
      "path": "8"
    },
    "8961": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x230B"
    },
    "8964": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "8965": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8966": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8967": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x39B2"
    },
    "8970": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        1038,
        1071
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8971": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8972": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8974": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8975": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8977": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8978": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP4",
      "path": "8"
    },
    "8979": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SUB",
      "path": "8"
    },
    "8980": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SUB",
      "path": "8"
    },
    "8981": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8982": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8983": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8984": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8986": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8987": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "8988": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "8989": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "8990": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "8991": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8992": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8993": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "POP",
      "path": "8"
    },
    "8994": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "o",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8995": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8996": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1100,
        1123
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 103,
      "value": "0xF90"
    },
    "8999": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1115,
        1122
      ],
      "op": "DUP5",
      "path": "8"
    },
    "9000": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1100,
        1114
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2E5E"
    },
    "9003": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        1100,
        1123
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9004": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20476,
        20668
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9005": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20560,
        20570
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 104
    },
    "9006": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9008": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9009": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9010": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9011": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20559
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "9013": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9015": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9016": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9018": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9019": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "9020": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9021": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "9023": {
      "branch": 192,
      "fn": "CardinalNFT.addMember",
      "offset": [
        20545,
        20571
      ],
      "op": "AND",
      "path": "19"
    },
    "9024": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20537,
        20613
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2399"
    },
    "9027": {
      "branch": 192,
      "fn": "CardinalNFT.addMember",
      "offset": [
        20537,
        20613
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9028": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20537,
        20613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9030": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20537,
        20613
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9031": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9035": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9037": {
      "op": "SHL"
    },
    "9038": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20537,
        20613
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9039": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20537,
        20613
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9042": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20537,
        20613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "9044": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20537,
        20613
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9045": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20537,
        20613
      ],
      "op": "ADD",
      "path": "19"
    },
    "9046": {
      "op": "MSTORE"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "9049": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9051": {
      "op": "DUP3"
    },
    "9052": {
      "op": "ADD"
    },
    "9053": {
      "op": "MSTORE"
    },
    "9054": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920636F6E74726163742061646D696E732063616E20616464206D656D"
    },
    "9087": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9089": {
      "op": "DUP3"
    },
    "9090": {
      "op": "ADD"
    },
    "9091": {
      "op": "MSTORE"
    },
    "9092": {
      "op": "PUSH5",
      "value": "0x3132B93997"
    },
    "9098": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "9100": {
      "op": "SHL"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9103": {
      "op": "DUP3"
    },
    "9104": {
      "op": "ADD"
    },
    "9105": {
      "op": "MSTORE"
    },
    "9106": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9108": {
      "op": "ADD"
    },
    "9109": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20537,
        20613
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9E2"
    },
    "9112": {
      "op": "JUMP"
    },
    "9113": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20537,
        20613
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9120": {
      "op": "SHL"
    },
    "9121": {
      "op": "SUB"
    },
    "9122": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20654
      ],
      "op": "AND",
      "path": "19",
      "statement": 105
    },
    "9123": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20654
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9125": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20654
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9126": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20654
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9127": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20654
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9128": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20639
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "9130": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20654
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9132": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20654
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9133": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20654
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9135": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20654
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9136": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20654
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "9137": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20661
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9138": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20661
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9139": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9141": {
      "op": "NOT"
    },
    "9142": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20661
      ],
      "op": "AND",
      "path": "19"
    },
    "9143": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20657,
        20661
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "9145": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20661
      ],
      "op": "OR",
      "path": "19"
    },
    "9146": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20661
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9147": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20624,
        20661
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "9148": {
      "fn": "CardinalNFT.addMember",
      "jump": "o",
      "offset": [
        20476,
        20668
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9149": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19765,
        19916
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9150": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "9152": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9159": {
      "op": "SHL"
    },
    "9160": {
      "op": "SUB"
    },
    "9161": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9162": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "9163": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9164": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23E7"
    },
    "9167": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9168": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9170": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9177": {
      "op": "SHL"
    },
    "9178": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9179": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9180": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9182": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9183": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "9186": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9187": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "9190": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9191": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9192": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19871
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 106,
      "value": "0xA"
    },
    "9194": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9195": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9202": {
      "op": "SHL"
    },
    "9203": {
      "op": "SUB"
    },
    "9204": {
      "op": "NOT"
    },
    "9205": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "AND",
      "path": "19"
    },
    "9206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9212": {
      "op": "SHL"
    },
    "9213": {
      "op": "SUB"
    },
    "9214": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "9215": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9216": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "9217": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "AND",
      "path": "19"
    },
    "9218": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9219": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9220": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9221": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "OR",
      "path": "19"
    },
    "9222": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9223": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        19858,
        19909
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "9224": {
      "fn": "CardinalNFT.setCardinalToken",
      "jump": "o",
      "offset": [
        19765,
        19916
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9225": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9226": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16620,
        16636
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "9228": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16655,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 107,
      "value": "0x17"
    },
    "9230": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9231": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9232": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9233": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9235": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "MUL",
      "path": "19"
    },
    "9236": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9238": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "ADD",
      "path": "19"
    },
    "9239": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9241": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9242": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9243": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9244": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "ADD",
      "path": "19"
    },
    "9245": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9247": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9248": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9249": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "9250": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9251": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9252": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9253": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9254": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9255": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9257": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "ADD",
      "path": "19"
    },
    "9258": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9259": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9260": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9261": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9262": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9263": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x970"
    },
    "9266": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9267": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9269": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "MUL",
      "path": "19"
    },
    "9270": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9271": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "ADD",
      "path": "19"
    },
    "9272": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9273": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9274": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9276": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9277": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9279": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9281": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "9282": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9283": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9284": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9285": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9286": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9287": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9288": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9290": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "ADD",
      "path": "19"
    },
    "9291": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9292": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "9294": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "ADD",
      "path": "19"
    },
    "9295": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9296": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9297": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "DUP4",
      "path": "19"
    },
    "9298": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "GT",
      "path": "19"
    },
    "9299": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2443"
    },
    "9302": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9303": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "POP",
      "path": "19"
    },
    "9304": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "POP",
      "path": "19"
    },
    "9305": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "POP",
      "path": "19"
    },
    "9306": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "POP",
      "path": "19"
    },
    "9307": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "POP",
      "path": "19"
    },
    "9308": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9309": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16648,
        16673
      ],
      "op": "POP",
      "path": "19"
    },
    "9310": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16564,
        16680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9311": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "jump": "o",
      "offset": [
        16564,
        16680
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9312": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16304,
        16432
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9313": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16366,
        16382
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "9315": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16401,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 108,
      "value": "0x16"
    },
    "9317": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9318": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9319": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9320": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9322": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "MUL",
      "path": "19"
    },
    "9323": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9325": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "ADD",
      "path": "19"
    },
    "9326": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9328": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9329": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9330": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9331": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "ADD",
      "path": "19"
    },
    "9332": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9334": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9335": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9336": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "9337": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9338": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9339": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9340": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9341": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9342": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9344": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "ADD",
      "path": "19"
    },
    "9345": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9346": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9347": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9348": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9349": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9350": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x970"
    },
    "9353": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9354": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9356": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "MUL",
      "path": "19"
    },
    "9357": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9358": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "ADD",
      "path": "19"
    },
    "9359": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9360": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9361": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9363": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9364": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9366": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9368": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "9369": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9370": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9371": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9372": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9373": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9374": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9376": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "ADD",
      "path": "19"
    },
    "9377": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9378": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "9380": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "ADD",
      "path": "19"
    },
    "9381": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9382": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9383": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "DUP4",
      "path": "19"
    },
    "9384": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "GT",
      "path": "19"
    },
    "9385": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2443"
    },
    "9388": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9389": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "POP",
      "path": "19"
    },
    "9390": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "POP",
      "path": "19"
    },
    "9391": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "POP",
      "path": "19"
    },
    "9392": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "POP",
      "path": "19"
    },
    "9393": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "POP",
      "path": "19"
    },
    "9394": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9395": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16394,
        16425
      ],
      "op": "POP",
      "path": "19"
    },
    "9396": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16304,
        16432
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9397": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "jump": "o",
      "offset": [
        16304,
        16432
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9398": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19379,
        19583
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9399": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "9401": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9408": {
      "op": "SHL"
    },
    "9409": {
      "op": "SUB"
    },
    "9410": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9411": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "9412": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9413": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24E0"
    },
    "9416": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9419": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9420": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9424": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9426": {
      "op": "SHL"
    },
    "9427": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9428": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9429": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9431": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9432": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "9435": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9436": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "9439": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9440": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9441": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19467,
        19498
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 109,
      "value": "0x19"
    },
    "9443": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19467,
        19519
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9444": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19467,
        19519
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9445": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19467,
        19519
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "9446": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19534,
        19576
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 110,
      "value": "0x40"
    },
    "9448": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19534,
        19576
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9449": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19501,
        19519
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9450": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19501,
        19519
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9451": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19534,
        19576
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x1361F6A741CB766EA2F0BE44A0E1686DF0E08320BE065F6C8DF9E4F639AB297A"
    },
    "9484": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19534,
        19576
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9485": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19534,
        19576
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9487": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19534,
        19576
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9488": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19534,
        19576
      ],
      "op": "LOG2",
      "path": "19"
    },
    "9489": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19379,
        19583
      ],
      "op": "POP",
      "path": "19"
    },
    "9490": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "jump": "o",
      "offset": [
        19379,
        19583
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9491": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4466,
        4581
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9492": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "9494": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9501": {
      "op": "SHL"
    },
    "9502": {
      "op": "SUB"
    },
    "9503": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9504": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "9505": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9506": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x253D"
    },
    "9509": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9510": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9512": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9519": {
      "op": "SHL"
    },
    "9520": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9521": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9522": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9524": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9525": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "9528": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9529": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "9532": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9533": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9534": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4548,
        4574
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 111,
      "value": "0x2020"
    },
    "9537": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4566,
        4573
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9538": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4548,
        4565
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D1F"
    },
    "9541": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "jump": "i",
      "offset": [
        4548,
        4574
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9543": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "9545": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9552": {
      "op": "SHL"
    },
    "9553": {
      "op": "SUB"
    },
    "9554": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9555": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "9556": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9557": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2570"
    },
    "9560": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9561": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9563": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9570": {
      "op": "SHL"
    },
    "9571": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9572": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9573": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9575": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9576": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "9579": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9580": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "9583": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9584": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9591": {
      "op": "SHL"
    },
    "9592": {
      "op": "SUB"
    },
    "9593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 112
    },
    "9594": {
      "branch": 222,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "9595": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25D5"
    },
    "9598": {
      "branch": 222,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9601": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9602": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9606": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9608": {
      "op": "SHL"
    },
    "9609": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9610": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9613": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9615": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9616": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "9617": {
      "op": "MSTORE"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9620": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9622": {
      "op": "DUP3"
    },
    "9623": {
      "op": "ADD"
    },
    "9624": {
      "op": "MSTORE"
    },
    "9625": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9658": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9660": {
      "op": "DUP3"
    },
    "9661": {
      "op": "ADD"
    },
    "9662": {
      "op": "MSTORE"
    },
    "9663": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9672": {
      "op": "SHL"
    },
    "9673": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9675": {
      "op": "DUP3"
    },
    "9676": {
      "op": "ADD"
    },
    "9677": {
      "op": "MSTORE"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9680": {
      "op": "ADD"
    },
    "9681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "9684": {
      "op": "JUMP"
    },
    "9685": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9686": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 113,
      "value": "0x2020"
    },
    "9689": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9690": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BCB"
    },
    "9693": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9694": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21385,
        21707
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9695": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21501,
        21511
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 114
    },
    "9696": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9698": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9699": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9700": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9701": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "9703": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9705": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9706": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9708": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9709": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "9710": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9711": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "9713": {
      "branch": 193,
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21486,
        21512
      ],
      "op": "AND",
      "path": "19"
    },
    "9714": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21478,
        21568
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2659"
    },
    "9717": {
      "branch": 193,
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21478,
        21568
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9718": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21478,
        21568
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9720": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21478,
        21568
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9727": {
      "op": "SHL"
    },
    "9728": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21478,
        21568
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9729": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21478,
        21568
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9732": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21478,
        21568
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "9734": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21478,
        21568
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9735": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21478,
        21568
      ],
      "op": "ADD",
      "path": "19"
    },
    "9736": {
      "op": "MSTORE"
    },
    "9737": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9741": {
      "op": "DUP3"
    },
    "9742": {
      "op": "ADD"
    },
    "9743": {
      "op": "MSTORE"
    },
    "9744": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920636F6E74726163742061646D696E732063616E207365742061206D"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9779": {
      "op": "DUP3"
    },
    "9780": {
      "op": "ADD"
    },
    "9781": {
      "op": "MSTORE"
    },
    "9782": {
      "op": "PUSH19",
      "value": "0x32B6B132B939B434B8103234B9B1B7BAB73A17"
    },
    "9802": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "9804": {
      "op": "SHL"
    },
    "9805": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9807": {
      "op": "DUP3"
    },
    "9808": {
      "op": "ADD"
    },
    "9809": {
      "op": "MSTORE"
    },
    "9810": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9812": {
      "op": "ADD"
    },
    "9813": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21478,
        21568
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9E2"
    },
    "9816": {
      "op": "JUMP"
    },
    "9817": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21478,
        21568
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9824": {
      "op": "SHL"
    },
    "9825": {
      "op": "SUB"
    },
    "9826": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 115
    },
    "9827": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "AND",
      "path": "19"
    },
    "9828": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9830": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9831": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9832": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9833": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21605
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "9835": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9837": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9838": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9840": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9841": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9842": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "9843": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21637
      ],
      "op": "DUP5",
      "path": "19"
    },
    "9844": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21637
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9845": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21637
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "9846": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21652,
        21700
      ],
      "op": "MLOAD",
      "path": "19",
      "statement": 116
    },
    "9847": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21623,
        21637
      ],
      "op": "DUP4",
      "path": "19"
    },
    "9848": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21623,
        21637
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "9849": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21578,
        21620
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9850": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21652,
        21700
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x874556B552951A64A8A3F7627516F395097B3DE40CF93B85E87B03118CC02CF0"
    },
    "9883": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21652,
        21700
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9884": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21652,
        21700
      ],
      "op": "LOG3",
      "path": "19"
    },
    "9885": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21385,
        21707
      ],
      "op": "POP",
      "path": "19"
    },
    "9886": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21385,
        21707
      ],
      "op": "POP",
      "path": "19"
    },
    "9887": {
      "fn": "CardinalNFT.setMemberDiscount",
      "jump": "o",
      "offset": [
        21385,
        21707
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9888": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18369,
        18573
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9889": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "9891": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9898": {
      "op": "SHL"
    },
    "9899": {
      "op": "SUB"
    },
    "9900": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9901": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "9902": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9903": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26CA"
    },
    "9906": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9907": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9909": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9910": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9914": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9916": {
      "op": "SHL"
    },
    "9917": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9918": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9919": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9921": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9922": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "9925": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9926": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384E"
    },
    "9929": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9930": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9931": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18459,
        18475
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 117,
      "value": "0x14"
    },
    "9933": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18459,
        18497
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9934": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18459,
        18497
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9935": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18459,
        18497
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "9936": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18512,
        18566
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 118,
      "value": "0x40"
    },
    "9938": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18512,
        18566
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9939": {
      "op": "PUSH16",
      "value": "0x1B595B58995C9CDA1A5C151E5C195259"
    },
    "9956": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "9958": {
      "op": "SHL"
    },
    "9959": {
      "op": "DUP2"
    },
    "9960": {
      "op": "MSTORE"
    },
    "9961": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18459,
        18497
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9962": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18459,
        18497
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9963": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "9965": {
      "op": "ADD"
    },
    "9966": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18512,
        18566
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x11C1"
    },
    "9969": {
      "op": "JUMP"
    },
    "9970": {
      "fn": "ERC721._exists",
      "offset": [
        7159,
        7284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9971": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9973": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 119
    },
    "9974": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9975": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9976": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "9978": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9980": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9981": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9983": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9984": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9985": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9992": {
      "op": "SHL"
    },
    "9993": {
      "op": "SUB"
    },
    "9994": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "5"
    },
    "9995": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9996": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9997": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9998": {
      "fn": "ERC721._exists",
      "jump": "o",
      "offset": [
        7159,
        7284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9999": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10000": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 120,
      "value": "0x0"
    },
    "10002": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10003": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10004": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10005": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11257
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10007": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10009": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10010": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10012": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10013": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10014": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10015": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10022": {
      "op": "SHL"
    },
    "10023": {
      "op": "SUB"
    },
    "10024": {
      "op": "NOT"
    },
    "10025": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "5"
    },
    "10026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10032": {
      "op": "SHL"
    },
    "10033": {
      "op": "SUB"
    },
    "10034": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10035": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "5"
    },
    "10036": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10037": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10038": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "OR",
      "path": "5"
    },
    "10039": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10040": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10041": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "10042": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10043": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10044": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 121,
      "value": "0x2744"
    },
    "10047": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10048": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11309
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F6"
    },
    "10051": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10052": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10059": {
      "op": "SHL"
    },
    "10060": {
      "op": "SUB"
    },
    "10061": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "AND",
      "path": "5"
    },
    "10062": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "10095": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10097": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10098": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10100": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10101": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10102": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10103": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SUB",
      "path": "5"
    },
    "10104": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10105": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "LOG4",
      "path": "5"
    },
    "10106": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "5"
    },
    "10107": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "5"
    },
    "10108": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10109": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1277,
        1491
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10110": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1392
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 122,
      "value": "0x2786"
    },
    "10113": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1384,
        1391
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10114": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1383
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x26F2"
    },
    "10117": {
      "fn": "ERC721URIStorage._setTokenURI",
      "jump": "i",
      "offset": [
        1376,
        1392
      ],
      "op": "JUMP",
      "path": "8"
    },
    "10118": {
      "branch": 221,
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1392
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10119": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x27E9"
    },
    "10122": {
      "branch": 221,
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "10123": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "10125": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "10126": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10130": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10132": {
      "op": "SHL"
    },
    "10133": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10134": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10137": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "10139": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10140": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "ADD",
      "path": "8"
    },
    "10141": {
      "op": "MSTORE"
    },
    "10142": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10146": {
      "op": "DUP3"
    },
    "10147": {
      "op": "ADD"
    },
    "10148": {
      "op": "MSTORE"
    },
    "10149": {
      "op": "PUSH32",
      "value": "0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E"
    },
    "10182": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10184": {
      "op": "DUP3"
    },
    "10185": {
      "op": "ADD"
    },
    "10186": {
      "op": "MSTORE"
    },
    "10187": {
      "op": "PUSH14",
      "value": "0x32BC34B9BA32B73A103A37B5B2B7"
    },
    "10202": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "10204": {
      "op": "SHL"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10207": {
      "op": "DUP3"
    },
    "10208": {
      "op": "ADD"
    },
    "10209": {
      "op": "MSTORE"
    },
    "10210": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10212": {
      "op": "ADD"
    },
    "10213": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9E2"
    },
    "10216": {
      "op": "JUMP"
    },
    "10217": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10218": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 123,
      "value": "0x0"
    },
    "10220": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10221": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10222": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10223": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1463
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "10225": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "10227": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10228": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10229": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10230": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "10232": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10233": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "10234": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "10235": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10236": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "10237": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB18"
    },
    "10240": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "10241": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "DUP5",
      "path": "8"
    },
    "10242": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "ADD",
      "path": "8"
    },
    "10243": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10244": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x32B6"
    },
    "10247": {
      "fn": "ERC721URIStorage._setTokenURI",
      "jump": "i",
      "offset": [
        1453,
        1484
      ],
      "op": "JUMP",
      "path": "8"
    },
    "10248": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10249": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7539
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10251": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7575
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 124,
      "value": "0x2813"
    },
    "10254": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7567,
        7574
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10255": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7566
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26F2"
    },
    "10258": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7559,
        7575
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10259": {
      "branch": 209,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7575
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10260": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2874"
    },
    "10263": {
      "branch": 209,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10264": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10266": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10273": {
      "op": "SHL"
    },
    "10274": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10275": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10278": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10280": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10281": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "ADD",
      "path": "5"
    },
    "10282": {
      "op": "MSTORE"
    },
    "10283": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "10285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10287": {
      "op": "DUP3"
    },
    "10288": {
      "op": "ADD"
    },
    "10289": {
      "op": "MSTORE"
    },
    "10290": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "10323": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10325": {
      "op": "DUP3"
    },
    "10326": {
      "op": "ADD"
    },
    "10327": {
      "op": "MSTORE"
    },
    "10328": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "10341": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10343": {
      "op": "SHL"
    },
    "10344": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10346": {
      "op": "DUP3"
    },
    "10347": {
      "op": "ADD"
    },
    "10348": {
      "op": "MSTORE"
    },
    "10349": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10351": {
      "op": "ADD"
    },
    "10352": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "10355": {
      "op": "JUMP"
    },
    "10356": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10357": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10359": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x287F"
    },
    "10362": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7672
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10363": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F6"
    },
    "10366": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10367": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10368": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10369": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "POP",
      "path": "5"
    },
    "10370": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7702,
        7707
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 125
    },
    "10371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10377": {
      "op": "SHL"
    },
    "10378": {
      "op": "SUB"
    },
    "10379": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "5"
    },
    "10380": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7698
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10387": {
      "op": "SHL"
    },
    "10388": {
      "op": "SUB"
    },
    "10389": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "5"
    },
    "10390": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "EQ",
      "path": "5"
    },
    "10391": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10392": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28BA"
    },
    "10395": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10396": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "POP",
      "path": "5"
    },
    "10397": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10404": {
      "op": "SHL"
    },
    "10405": {
      "op": "SUB"
    },
    "10406": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "5"
    },
    "10407": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28AF"
    },
    "10410": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7723,
        7730
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10411": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97A"
    },
    "10414": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10415": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10422": {
      "op": "SHL"
    },
    "10423": {
      "op": "SUB"
    },
    "10424": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "5"
    },
    "10425": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "EQ",
      "path": "5"
    },
    "10426": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10427": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10428": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF90"
    },
    "10431": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10432": {
      "op": "POP"
    },
    "10433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10439": {
      "op": "SHL"
    },
    "10440": {
      "op": "SUB"
    },
    "10441": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10442": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10443": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "5"
    },
    "10444": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10446": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10447": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10448": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10449": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "10451": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10453": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10454": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10455": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10456": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10458": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10459": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10460": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10461": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "10462": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP9",
      "path": "5"
    },
    "10463": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "10464": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10465": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10466": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10467": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10468": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10469": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10470": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10471": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "10473": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "10474": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7778
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF90"
    },
    "10477": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10478": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        11057
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10479": {
      "fn": "ERC721._transfer",
      "offset": [
        10606,
        10610
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 126
    },
    "10480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10486": {
      "op": "SHL"
    },
    "10487": {
      "op": "SUB"
    },
    "10488": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "5"
    },
    "10489": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2901"
    },
    "10492": {
      "fn": "ERC721._transfer",
      "offset": [
        10594,
        10601
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10493": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10593
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F6"
    },
    "10496": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10497": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10504": {
      "op": "SHL"
    },
    "10505": {
      "op": "SUB"
    },
    "10506": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "5"
    },
    "10507": {
      "branch": 210,
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "EQ",
      "path": "5"
    },
    "10508": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2965"
    },
    "10511": {
      "branch": 210,
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10512": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10514": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10521": {
      "op": "SHL"
    },
    "10522": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10523": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10526": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10528": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10529": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "ADD",
      "path": "5"
    },
    "10530": {
      "op": "MSTORE"
    },
    "10531": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10535": {
      "op": "DUP3"
    },
    "10536": {
      "op": "ADD"
    },
    "10537": {
      "op": "MSTORE"
    },
    "10538": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "10571": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10573": {
      "op": "DUP3"
    },
    "10574": {
      "op": "ADD"
    },
    "10575": {
      "op": "MSTORE"
    },
    "10576": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "10582": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "10584": {
      "op": "SHL"
    },
    "10585": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10587": {
      "op": "DUP3"
    },
    "10588": {
      "op": "ADD"
    },
    "10589": {
      "op": "MSTORE"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10592": {
      "op": "ADD"
    },
    "10593": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "10596": {
      "op": "JUMP"
    },
    "10597": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10604": {
      "op": "SHL"
    },
    "10605": {
      "op": "SUB"
    },
    "10606": {
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 127
    },
    "10607": {
      "branch": 211,
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "AND",
      "path": "5"
    },
    "10608": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29C7"
    },
    "10611": {
      "branch": 211,
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10612": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10614": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10615": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10619": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10621": {
      "op": "SHL"
    },
    "10622": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10623": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10626": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10628": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10629": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "ADD",
      "path": "5"
    },
    "10630": {
      "op": "MSTORE"
    },
    "10631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10633": {
      "op": "DUP1"
    },
    "10634": {
      "op": "DUP3"
    },
    "10635": {
      "op": "ADD"
    },
    "10636": {
      "op": "MSTORE"
    },
    "10637": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "10670": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10672": {
      "op": "DUP3"
    },
    "10673": {
      "op": "ADD"
    },
    "10674": {
      "op": "MSTORE"
    },
    "10675": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "10680": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10682": {
      "op": "SHL"
    },
    "10683": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10685": {
      "op": "DUP3"
    },
    "10686": {
      "op": "ADD"
    },
    "10687": {
      "op": "MSTORE"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10690": {
      "op": "ADD"
    },
    "10691": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "10694": {
      "op": "JUMP"
    },
    "10695": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10696": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 128,
      "value": "0x29D2"
    },
    "10699": {
      "fn": "ERC721._transfer",
      "offset": [
        10856,
        10857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10701": {
      "fn": "ERC721._transfer",
      "offset": [
        10860,
        10867
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10702": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x270F"
    },
    "10705": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10706": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10713": {
      "op": "SHL"
    },
    "10714": {
      "op": "SUB"
    },
    "10715": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 129
    },
    "10716": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "AND",
      "path": "5"
    },
    "10717": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10719": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10720": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10721": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10722": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10888
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "10724": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10726": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10727": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10729": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10730": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10731": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10732": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10733": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "10735": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10736": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10737": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29FB"
    },
    "10740": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10741": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10742": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10743": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39E1"
    },
    "10746": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10747": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10748": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10749": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10750": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "10751": {
      "op": "POP"
    },
    "10752": {
      "op": "POP"
    },
    "10753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10759": {
      "op": "SHL"
    },
    "10760": {
      "op": "SUB"
    },
    "10761": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 130
    },
    "10762": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "AND",
      "path": "5"
    },
    "10763": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10765": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10766": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10767": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10768": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10918
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "10770": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10772": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10773": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10775": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10776": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10777": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10778": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10779": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "10781": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10782": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10783": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A29"
    },
    "10786": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10787": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10788": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10789": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38EA"
    },
    "10792": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10793": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10794": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10795": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10796": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "10797": {
      "op": "POP"
    },
    "10798": {
      "op": "POP"
    },
    "10799": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 131,
      "value": "0x0"
    },
    "10801": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10802": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10803": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10804": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10944
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "10806": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10808": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10809": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10811": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10812": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10813": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10814": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10815": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10822": {
      "op": "SHL"
    },
    "10823": {
      "op": "SUB"
    },
    "10824": {
      "op": "NOT"
    },
    "10825": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "5"
    },
    "10826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10832": {
      "op": "SHL"
    },
    "10833": {
      "op": "SUB"
    },
    "10834": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP7",
      "path": "5"
    },
    "10835": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10836": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "5"
    },
    "10837": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10838": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10839": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "OR",
      "path": "5"
    },
    "10840": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10841": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10842": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "10843": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 132
    },
    "10844": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10845": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10846": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "10847": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10848": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "DUP8",
      "path": "5"
    },
    "10849": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "AND",
      "path": "5"
    },
    "10850": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10851": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10884": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10885": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "LOG4",
      "path": "5"
    },
    "10886": {
      "fn": "ERC721._transfer",
      "offset": [
        11012,
        11050
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 133,
      "value": "0xB18"
    },
    "10889": {
      "fn": "ERC721._transfer",
      "offset": [
        11032,
        11036
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10890": {
      "fn": "ERC721._transfer",
      "offset": [
        11038,
        11040
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10891": {
      "fn": "ERC721._transfer",
      "offset": [
        11042,
        11049
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10892": {
      "fn": "ERC721._transfer",
      "offset": [
        11012,
        11031
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F35"
    },
    "10895": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11012,
        11050
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10896": {
      "fn": "ERC721._mint",
      "offset": [
        9078,
        9505
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10903": {
      "op": "SHL"
    },
    "10904": {
      "op": "SUB"
    },
    "10905": {
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 134
    },
    "10906": {
      "branch": 212,
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "AND",
      "path": "5"
    },
    "10907": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AE6"
    },
    "10910": {
      "branch": 212,
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10911": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10913": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10920": {
      "op": "SHL"
    },
    "10921": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10922": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10925": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10927": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10928": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "ADD",
      "path": "5"
    },
    "10929": {
      "op": "DUP2"
    },
    "10930": {
      "op": "SWAP1"
    },
    "10931": {
      "op": "MSTORE"
    },
    "10932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10934": {
      "op": "DUP3"
    },
    "10935": {
      "op": "ADD"
    },
    "10936": {
      "op": "MSTORE"
    },
    "10937": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "10970": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10972": {
      "op": "DUP3"
    },
    "10973": {
      "op": "ADD"
    },
    "10974": {
      "op": "MSTORE"
    },
    "10975": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10977": {
      "op": "ADD"
    },
    "10978": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "10981": {
      "op": "JUMP"
    },
    "10982": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10983": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9245
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 135,
      "value": "0x2AEF"
    },
    "10986": {
      "fn": "ERC721._mint",
      "offset": [
        9237,
        9244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10987": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9236
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26F2"
    },
    "10990": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9229,
        9245
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10991": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9245
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10992": {
      "branch": 213,
      "fn": "ERC721._mint",
      "offset": [
        9228,
        9245
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10993": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B3C"
    },
    "10996": {
      "branch": 213,
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10997": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10999": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11000": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11004": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11006": {
      "op": "SHL"
    },
    "11007": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11008": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11011": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "11013": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11014": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "ADD",
      "path": "5"
    },
    "11015": {
      "op": "MSTORE"
    },
    "11016": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11018": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11020": {
      "op": "DUP3"
    },
    "11021": {
      "op": "ADD"
    },
    "11022": {
      "op": "MSTORE"
    },
    "11023": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11056": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11058": {
      "op": "DUP3"
    },
    "11059": {
      "op": "ADD"
    },
    "11060": {
      "op": "MSTORE"
    },
    "11061": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11063": {
      "op": "ADD"
    },
    "11064": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "11067": {
      "op": "JUMP"
    },
    "11068": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11075": {
      "op": "SHL"
    },
    "11076": {
      "op": "SUB"
    },
    "11077": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 136
    },
    "11078": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "AND",
      "path": "5"
    },
    "11079": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11081": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11082": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11083": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11084": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9354
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "11086": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11088": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11089": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11091": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11092": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11093": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11094": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "11095": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "11097": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11098": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11099": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B65"
    },
    "11102": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11103": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "DUP5",
      "path": "5"
    },
    "11104": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11105": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38EA"
    },
    "11108": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11109": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11110": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11111": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11112": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11113": {
      "op": "POP"
    },
    "11114": {
      "op": "POP"
    },
    "11115": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 137,
      "value": "0x0"
    },
    "11117": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11118": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11119": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11120": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9380
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "11122": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11124": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11125": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11127": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11128": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11129": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11130": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11131": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "11132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11138": {
      "op": "SHL"
    },
    "11139": {
      "op": "SUB"
    },
    "11140": {
      "op": "NOT"
    },
    "11141": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "5"
    },
    "11142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11148": {
      "op": "SHL"
    },
    "11149": {
      "op": "SUB"
    },
    "11150": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP7",
      "path": "5"
    },
    "11151": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "5"
    },
    "11152": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11153": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11154": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "OR",
      "path": "5"
    },
    "11155": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11156": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11157": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11158": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 138
    },
    "11159": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11160": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11161": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11162": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11163": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11196": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11197": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11198": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11199": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "LOG4",
      "path": "5"
    },
    "11200": {
      "fn": "ERC721._mint",
      "offset": [
        9454,
        9498
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 139,
      "value": "0x1A12"
    },
    "11203": {
      "fn": "ERC721._mint",
      "offset": [
        9482,
        9483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11205": {
      "fn": "ERC721._mint",
      "offset": [
        9486,
        9488
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11206": {
      "fn": "ERC721._mint",
      "offset": [
        9490,
        9497
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11207": {
      "fn": "ERC721._mint",
      "offset": [
        9454,
        9473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F35"
    },
    "11210": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9454,
        9498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11211": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11212": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "11214": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11215": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11222": {
      "op": "SHL"
    },
    "11223": {
      "op": "SUB"
    },
    "11224": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 140
    },
    "11225": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11226": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11233": {
      "op": "SHL"
    },
    "11234": {
      "op": "SUB"
    },
    "11235": {
      "op": "NOT"
    },
    "11236": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11237": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11238": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11239": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "11240": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11241": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11242": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11243": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 141,
      "value": "0x40"
    },
    "11245": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11246": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11247": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "11248": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11249": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11250": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11251": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11252": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11285": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11286": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11288": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11289": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "11290": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11291": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11292": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11293": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11294": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11624,
        11632
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 142
    },
    "11295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11301": {
      "op": "SHL"
    },
    "11302": {
      "op": "SUB"
    },
    "11303": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "5"
    },
    "11304": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11620
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11311": {
      "op": "SHL"
    },
    "11312": {
      "op": "SUB"
    },
    "11313": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "5"
    },
    "11314": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "EQ",
      "path": "5"
    },
    "11315": {
      "branch": 214,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11316": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C7F"
    },
    "11319": {
      "branch": 214,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11320": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11322": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11329": {
      "op": "SHL"
    },
    "11330": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11331": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11334": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "11336": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11337": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "ADD",
      "path": "5"
    },
    "11338": {
      "op": "MSTORE"
    },
    "11339": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11343": {
      "op": "DUP3"
    },
    "11344": {
      "op": "ADD"
    },
    "11345": {
      "op": "MSTORE"
    },
    "11346": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "11379": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11381": {
      "op": "DUP3"
    },
    "11382": {
      "op": "ADD"
    },
    "11383": {
      "op": "MSTORE"
    },
    "11384": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11386": {
      "op": "ADD"
    },
    "11387": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "11390": {
      "op": "JUMP"
    },
    "11391": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11398": {
      "op": "SHL"
    },
    "11399": {
      "op": "SUB"
    },
    "11400": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 143
    },
    "11401": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11402": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "AND",
      "path": "5"
    },
    "11403": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11405": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11406": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11407": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11408": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "11410": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11412": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11413": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11414": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11415": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11417": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11418": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11419": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11420": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "11421": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP8",
      "path": "5"
    },
    "11422": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "AND",
      "path": "5"
    },
    "11423": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11424": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP5",
      "path": "5"
    },
    "11425": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11426": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "11427": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11428": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11429": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11430": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11431": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11432": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11433": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11434": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "11435": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11437": {
      "op": "NOT"
    },
    "11438": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "AND",
      "path": "5"
    },
    "11439": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP7",
      "path": "5"
    },
    "11440": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11441": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11442": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11443": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11444": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "OR",
      "path": "5"
    },
    "11445": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11446": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11447": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11448": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 144
    },
    "11449": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11450": {
      "op": "SWAP2"
    },
    "11451": {
      "op": "DUP3"
    },
    "11452": {
      "op": "MSTORE"
    },
    "11453": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "11486": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11487": {
      "op": "ADD"
    },
    "11488": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11490": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11491": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11492": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11493": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SUB",
      "path": "5"
    },
    "11494": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11495": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "LOG3",
      "path": "5"
    },
    "11496": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "5"
    },
    "11497": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "5"
    },
    "11498": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "5"
    },
    "11499": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11500": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6549,
        6856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11501": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 145,
      "value": "0x2CF7"
    },
    "11504": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6710,
        6714
      ],
      "op": "DUP5",
      "path": "5"
    },
    "11505": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6716,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "11506": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6720,
        6727
      ],
      "op": "DUP5",
      "path": "5"
    },
    "11507": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6709
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28EE"
    },
    "11510": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11511": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11512": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 146,
      "value": "0x2D03"
    },
    "11515": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6769,
        6773
      ],
      "op": "DUP5",
      "path": "5"
    },
    "11516": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6775,
        6777
      ],
      "op": "DUP5",
      "path": "5"
    },
    "11517": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6786
      ],
      "op": "DUP5",
      "path": "5"
    },
    "11518": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6788,
        6793
      ],
      "op": "DUP5",
      "path": "5"
    },
    "11519": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6768
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30AE"
    },
    "11522": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11523": {
      "branch": 215,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11524": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AD9"
    },
    "11527": {
      "branch": 215,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11528": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11530": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11531": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11537": {
      "op": "SHL"
    },
    "11538": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11539": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11540": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "11542": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "ADD",
      "path": "5"
    },
    "11543": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "11546": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11547": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39F8"
    },
    "11550": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11551": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3792,
        4325
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11552": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3859,
        3865
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11554": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3854,
        4319
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11555": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3875,
        3893
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "11557": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3875,
        3900
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11558": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11559": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3871,
        3900
      ],
      "op": "LT",
      "path": "19"
    },
    "11560": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3854,
        4319
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "11561": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3854,
        4319
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A12"
    },
    "11564": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3854,
        4319
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "11565": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3950,
        3957
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11566": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3943
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "11568": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3944,
        3945
      ],
      "op": "DUP3",
      "path": "19"
    },
    "11569": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11570": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11571": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11572": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "LT",
      "path": "19"
    },
    "11573": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D40"
    },
    "11576": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "11577": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D40"
    },
    "11580": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x391D"
    },
    "11583": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3925,
        3946
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11584": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11585": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11586": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11588": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "11589": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "11591": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11593": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "11594": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "ADD",
      "path": "19"
    },
    "11595": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3946
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11596": {
      "branch": 194,
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3925,
        3957
      ],
      "op": "EQ",
      "path": "19"
    },
    "11597": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3921,
        4309
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "11598": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3921,
        4309
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E4C"
    },
    "11601": {
      "branch": 194,
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3921,
        4309
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "11602": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3977,
        3993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11604": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3996,
        4026
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D79"
    },
    "11607": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4022
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "11609": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4023,
        4024
      ],
      "op": "DUP4",
      "path": "19"
    },
    "11610": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11611": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11612": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11613": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "LT",
      "path": "19"
    },
    "11614": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D69"
    },
    "11617": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "11618": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D69"
    },
    "11621": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x391D"
    },
    "11624": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4004,
        4025
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11625": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11626": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11627": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11629": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "11630": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "11632": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11634": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "11635": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "ADD",
      "path": "19"
    },
    "11636": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4004,
        4025
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11637": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3996,
        4003
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "11640": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3996,
        4026
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11641": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3996,
        4026
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11642": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3977,
        4026
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11643": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3977,
        4026
      ],
      "op": "POP",
      "path": "19"
    },
    "11644": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4044,
        4101
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 147,
      "value": "0x2DA3"
    },
    "11647": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4054,
        4062
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11648": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4072,
        4076
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "11649": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4097
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "11651": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4098,
        4099
      ],
      "op": "DUP6",
      "path": "19"
    },
    "11652": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11653": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11654": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11655": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "LT",
      "path": "19"
    },
    "11656": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D93"
    },
    "11659": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "11660": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D93"
    },
    "11663": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x391D"
    },
    "11666": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4079,
        4100
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11667": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11668": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11669": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11671": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "11672": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "11674": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11676": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "11677": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "ADD",
      "path": "19"
    },
    "11678": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4100
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11679": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4044,
        4053
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x28EE"
    },
    "11682": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4044,
        4101
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11683": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4044,
        4101
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11684": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4125,
        4162
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 148,
      "value": "0x40"
    },
    "11686": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4125,
        4162
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "11687": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4154,
        4161
      ],
      "op": "DUP4",
      "path": "19"
    },
    "11688": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4154,
        4161
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11695": {
      "op": "SHL"
    },
    "11696": {
      "op": "SUB"
    },
    "11697": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4125,
        4162
      ],
      "op": "DUP4",
      "path": "19"
    },
    "11698": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4125,
        4162
      ],
      "op": "AND",
      "path": "19"
    },
    "11699": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4125,
        4162
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11700": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4125,
        4162
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x5AB068FE2788C545757BCB78E3B2D842E34EC21C90F26C60E5CE7686E90B8749"
    },
    "11733": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4125,
        4162
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11734": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4125,
        4162
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11736": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4125,
        4162
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11737": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4125,
        4162
      ],
      "op": "LOG3",
      "path": "19"
    },
    "11738": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4223
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 149,
      "value": "0x17"
    },
    "11740": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4224,
        4249
      ],
      "op": "DUP1",
      "path": "19"
    },
    "11741": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4224,
        4249
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11742": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4224,
        4251
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2DE9"
    },
    "11745": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4224,
        4251
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11746": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4250,
        4251
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "11748": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4250,
        4251
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11749": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4224,
        4251
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x39E1"
    },
    "11752": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4224,
        4251
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11753": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4224,
        4251
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11754": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11755": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11756": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11757": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "LT",
      "path": "19"
    },
    "11758": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2DF9"
    },
    "11761": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "11762": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2DF9"
    },
    "11765": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x391D"
    },
    "11768": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4205,
        4252
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11769": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11770": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11771": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11773": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "11774": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "11776": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11778": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "11779": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "ADD",
      "path": "19"
    },
    "11780": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4205,
        4252
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11781": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4199
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "11783": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4200,
        4201
      ],
      "op": "DUP4",
      "path": "19"
    },
    "11784": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11785": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11786": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11787": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "LT",
      "path": "19"
    },
    "11788": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E17"
    },
    "11791": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "11792": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E17"
    },
    "11795": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x391D"
    },
    "11798": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4181,
        4202
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11799": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11800": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11802": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "11803": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "DUP3",
      "path": "19"
    },
    "11804": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "11805": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "11807": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11808": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "11809": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "11810": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4202
      ],
      "op": "ADD",
      "path": "19"
    },
    "11811": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4181,
        4252
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "11812": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4288
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 150,
      "value": "0x17"
    },
    "11814": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "DUP1",
      "path": "19"
    },
    "11815": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "11816": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "DUP1",
      "path": "19"
    },
    "11817": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E34"
    },
    "11820": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "11821": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E34"
    },
    "11824": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A4A"
    },
    "11827": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4270,
        4294
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11828": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11829": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "11831": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11832": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "SUB",
      "path": "19"
    },
    "11833": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11834": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11835": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11836": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11838": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "11839": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "11841": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11843": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "11844": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "ADD",
      "path": "19"
    },
    "11845": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "11847": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11848": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "11849": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11850": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4270,
        4294
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "11851": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3959,
        4309
      ],
      "op": "POP",
      "path": "19"
    },
    "11852": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3921,
        4309
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11853": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3902,
        3905
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 151
    },
    "11854": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3902,
        3905
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E56"
    },
    "11857": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3902,
        3905
      ],
      "op": "DUP2",
      "path": "19"
    },
    "11858": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3902,
        3905
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3902"
    },
    "11861": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3902,
        3905
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11862": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3902,
        3905
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "11863": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3902,
        3905
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "11864": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3902,
        3905
      ],
      "op": "POP",
      "path": "19"
    },
    "11865": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3902,
        3905
      ],
      "op": "POP",
      "path": "19"
    },
    "11866": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3854,
        4319
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D22"
    },
    "11869": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3854,
        4319
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11870": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11871": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2891,
        2904
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "11873": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2940
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 152,
      "value": "0x2E69"
    },
    "11876": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2932,
        2939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11877": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2931
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26F2"
    },
    "11880": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2924,
        2940
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11881": {
      "branch": 216,
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2940
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11882": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2ECD"
    },
    "11885": {
      "branch": 216,
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11886": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11888": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11895": {
      "op": "SHL"
    },
    "11896": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11897": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11900": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "11902": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11903": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "ADD",
      "path": "5"
    },
    "11904": {
      "op": "MSTORE"
    },
    "11905": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "11907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11909": {
      "op": "DUP3"
    },
    "11910": {
      "op": "ADD"
    },
    "11911": {
      "op": "MSTORE"
    },
    "11912": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "11945": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11947": {
      "op": "DUP3"
    },
    "11948": {
      "op": "ADD"
    },
    "11949": {
      "op": "MSTORE"
    },
    "11950": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "11966": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "11968": {
      "op": "SHL"
    },
    "11969": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11971": {
      "op": "DUP3"
    },
    "11972": {
      "op": "ADD"
    },
    "11973": {
      "op": "MSTORE"
    },
    "11974": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11976": {
      "op": "ADD"
    },
    "11977": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "11980": {
      "op": "JUMP"
    },
    "11981": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11982": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3024
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11984": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EE4"
    },
    "11987": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11989": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11990": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11991": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11993": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11994": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "11995": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11996": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11997": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12000": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12001": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12002": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12003": {
      "fn": "ERC721._baseURI",
      "offset": [
        3388,
        3480
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12004": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12005": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12006": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "POP",
      "path": "5"
    },
    "12007": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3078,
        3079
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 153,
      "value": "0x0"
    },
    "12009": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3060,
        3067
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12010": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3075
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12011": {
      "branch": 217,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3079
      ],
      "op": "GT",
      "path": "5"
    },
    "12012": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F04"
    },
    "12015": {
      "branch": 217,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12016": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12018": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12019": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12020": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12022": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "ADD",
      "path": "5"
    },
    "12023": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12025": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12026": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12027": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12029": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12030": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12031": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "POP",
      "path": "5"
    },
    "12032": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1ED3"
    },
    "12035": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12036": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12037": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3106,
        3113
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12038": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F0E"
    },
    "12041": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3122
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12042": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31B8"
    },
    "12045": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12046": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12047": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12049": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12050": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12052": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "ADD",
      "path": "5"
    },
    "12053": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F1F"
    },
    "12056": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12057": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12058": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12059": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39B2"
    },
    "12062": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12063": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12064": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12066": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12067": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12069": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12070": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12071": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "5"
    },
    "12072": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "5"
    },
    "12073": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12074": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12075": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12076": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12078": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12079": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3140
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12080": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12081": {
      "op": "POP"
    },
    "12082": {
      "op": "POP"
    },
    "12083": {
      "op": "POP"
    },
    "12084": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12085": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4863,
        5756
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12086": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5003,
        5019
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x14"
    },
    "12088": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5003,
        5019
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "12089": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        4999
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12091": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        4999
      ],
      "op": "DUP3",
      "path": "19"
    },
    "12092": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        4999
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12093": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        4999
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12094": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        4990
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "12096": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        4999
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12098": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        4999
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12099": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        4999
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12101": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        4999
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12102": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        4999
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "12103": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        4999
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "12104": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        5019
      ],
      "op": "EQ",
      "path": "19"
    },
    "12105": {
      "branch": 195,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        5019
      ],
      "op": "DUP1",
      "path": "19"
    },
    "12106": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        5073
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F62"
    },
    "12109": {
      "branch": 195,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        5073
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12110": {
      "op": "POP"
    },
    "12111": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5051,
        5073
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "12113": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5051,
        5073
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "12114": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12116": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5047
      ],
      "op": "DUP3",
      "path": "19"
    },
    "12117": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5047
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12118": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5047
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12119": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5038
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "12121": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12123": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5047
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12124": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12126": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5047
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12127": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5047
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "12128": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5047
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "12129": {
      "branch": 196,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5023,
        5073
      ],
      "op": "EQ",
      "path": "19"
    },
    "12130": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4975,
        5073
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12131": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4971,
        5695
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "12132": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4971,
        5695
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB18"
    },
    "12135": {
      "branch": 196,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4971,
        5695
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12136": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "12138": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12145": {
      "op": "SHL"
    },
    "12146": {
      "op": "SUB"
    },
    "12147": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5108
      ],
      "op": "DUP5",
      "path": "19"
    },
    "12148": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5108
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12149": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5108
      ],
      "op": "AND",
      "path": "19"
    },
    "12150": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12151": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "12152": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5108
      ],
      "op": "EQ",
      "path": "19"
    },
    "12153": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5108
      ],
      "op": "DUP1",
      "path": "19"
    },
    "12154": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5108
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "12155": {
      "branch": 197,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5108
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12156": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5138
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F93"
    },
    "12159": {
      "branch": 197,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5138
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12160": {
      "op": "POP"
    },
    "12161": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5120,
        5138
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "12163": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5120,
        5138
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "12164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12170": {
      "op": "SHL"
    },
    "12171": {
      "op": "SUB"
    },
    "12172": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5112,
        5138
      ],
      "op": "DUP5",
      "path": "19"
    },
    "12173": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5112,
        5138
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12174": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5112,
        5138
      ],
      "op": "AND",
      "path": "19"
    },
    "12175": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5120,
        5138
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "12176": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5120,
        5138
      ],
      "op": "AND",
      "path": "19"
    },
    "12177": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5112,
        5138
      ],
      "op": "EQ",
      "path": "19"
    },
    "12178": {
      "branch": 198,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5112,
        5138
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "12179": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5138
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12180": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5160
      ],
      "op": "DUP1",
      "path": "19"
    },
    "12181": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5160
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "12182": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5160
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FA7"
    },
    "12185": {
      "branch": 198,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5160
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12186": {
      "op": "POP"
    },
    "12187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12193": {
      "op": "SHL"
    },
    "12194": {
      "op": "SUB"
    },
    "12195": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5142,
        5160
      ],
      "op": "DUP4",
      "path": "19"
    },
    "12196": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5142,
        5160
      ],
      "op": "AND",
      "path": "19"
    },
    "12197": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5142,
        5160
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "12198": {
      "branch": 199,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5142,
        5160
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "12199": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5093,
        5160
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12200": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5089,
        5570
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "12201": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5089,
        5570
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3055"
    },
    "12204": {
      "branch": 199,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5089,
        5570
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12211": {
      "op": "SHL"
    },
    "12212": {
      "op": "SUB"
    },
    "12213": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5213
      ],
      "op": "DUP4",
      "path": "19"
    },
    "12214": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5213
      ],
      "op": "AND",
      "path": "19"
    },
    "12215": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5216,
        5217
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12217": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5213
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12218": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5213
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12219": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5213
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12220": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5207
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "12222": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12224": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5213
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12225": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12227": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5213
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12228": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5213
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "12229": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "12230": {
      "branch": 200,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5184,
        5217
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "12231": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5180,
        5556
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3034"
    },
    "12234": {
      "branch": 200,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5180,
        5556
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12241": {
      "op": "SHL"
    },
    "12242": {
      "op": "SUB"
    },
    "12243": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 154
    },
    "12244": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "AND",
      "path": "19"
    },
    "12245": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12247": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12248": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12249": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12250": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "12252": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12254": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12255": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12257": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12258": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "12259": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5302
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "12260": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5306
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FEF"
    },
    "12263": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5306
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12264": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5305,
        5306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "12266": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5305,
        5306
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12267": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5306
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x39E1"
    },
    "12270": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "jump": "i",
      "offset": [
        5273,
        5306
      ],
      "op": "JUMP",
      "path": "19"
    },
    "12271": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5273,
        5306
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12278": {
      "op": "SHL"
    },
    "12279": {
      "op": "SUB"
    },
    "12280": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5270
      ],
      "op": "DUP5",
      "path": "19"
    },
    "12281": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5270
      ],
      "op": "AND",
      "path": "19"
    },
    "12282": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5270
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12284": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5270
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12285": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5270
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12286": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5270
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12287": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5264
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "12289": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5270
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12291": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5270
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12292": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5270
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12294": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5270
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12295": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5270
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "12296": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5306
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12297": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5306
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12298": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5241,
        5306
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "12299": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5328,
        5446
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x302F"
    },
    "12302": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5328,
        5446
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12309": {
      "op": "SHL"
    },
    "12310": {
      "op": "SUB"
    },
    "12311": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5415
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 155
    },
    "12312": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5415
      ],
      "op": "AND",
      "path": "19"
    },
    "12313": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5418,
        5423
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12315": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5415
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12316": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5415
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12317": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5415
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12318": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5409
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "12320": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5415
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12322": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5415
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12323": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5415
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12325": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5415
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12326": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5415
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "12327": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5423
      ],
      "op": "DUP1",
      "path": "19"
    },
    "12328": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5423
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "12329": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12331": {
      "op": "NOT"
    },
    "12332": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5423
      ],
      "op": "AND",
      "path": "19"
    },
    "12333": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5423
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12334": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5394,
        5423
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "12335": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5328,
        5446
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12336": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5180,
        5556
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3055"
    },
    "12339": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5180,
        5556
      ],
      "op": "JUMP",
      "path": "19"
    },
    "12340": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5180,
        5556
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12347": {
      "op": "SHL"
    },
    "12348": {
      "op": "SUB"
    },
    "12349": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5529
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 156
    },
    "12350": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5529
      ],
      "op": "AND",
      "path": "19"
    },
    "12351": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5532,
        5537
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12353": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5529
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12354": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5529
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12355": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5529
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12356": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5523
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "12358": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5529
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12360": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5529
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12361": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5529
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12363": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5529
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12364": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5529
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "12365": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5537
      ],
      "op": "DUP1",
      "path": "19"
    },
    "12366": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5537
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "12367": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12369": {
      "op": "NOT"
    },
    "12370": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5537
      ],
      "op": "AND",
      "path": "19"
    },
    "12371": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5537
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12372": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5508,
        5537
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "12373": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5180,
        5556
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12380": {
      "op": "SHL"
    },
    "12381": {
      "op": "SUB"
    },
    "12382": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 157
    },
    "12383": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "AND",
      "path": "19"
    },
    "12384": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12386": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12387": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12388": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12389": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5598
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "12391": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12393": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12394": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12395": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12396": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12398": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "DUP1",
      "path": "19"
    },
    "12399": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "DUP4",
      "path": "19"
    },
    "12400": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5602
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "12401": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5609
      ],
      "op": "DUP1",
      "path": "19"
    },
    "12402": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5609
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "12403": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12405": {
      "op": "NOT"
    },
    "12406": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5609
      ],
      "op": "AND",
      "path": "19"
    },
    "12407": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5605,
        5609
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "12409": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5609
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12410": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5609
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12411": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5609
      ],
      "op": "OR",
      "path": "19"
    },
    "12412": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5609
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12413": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5609
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "12414": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5583,
        5609
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "12415": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5676
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 158,
      "value": "0xF"
    },
    "12417": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12418": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5680
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "12419": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5680
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12420": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12421": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5680
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "12422": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5680
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "12423": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5680
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "12424": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3090"
    },
    "12427": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5684
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "12428": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38EA"
    },
    "12431": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "jump": "i",
      "offset": [
        5653,
        5684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "12432": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5653,
        5684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12439": {
      "op": "SHL"
    },
    "12440": {
      "op": "SUB"
    },
    "12441": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5650
      ],
      "op": "DUP4",
      "path": "19"
    },
    "12442": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5650
      ],
      "op": "AND",
      "path": "19"
    },
    "12443": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5650
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12445": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5650
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12446": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5650
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12447": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5650
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12448": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5646
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "12450": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5650
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12452": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5650
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12453": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5650
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12455": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5650
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12456": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5650
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "12457": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5623,
        5684
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "12458": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "12459": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "12460": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "12461": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12462": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12463": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12484,
        12488
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12471": {
      "op": "SHL"
    },
    "12472": {
      "op": "SUB"
    },
    "12473": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12474": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "AND",
      "path": "5"
    },
    "12475": {
      "op": "EXTCODESIZE"
    },
    "12476": {
      "op": "ISZERO"
    },
    "12477": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31B0"
    },
    "12480": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12481": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12483": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12484": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "12489": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12491": {
      "op": "SHL"
    },
    "12492": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12493": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12500": {
      "op": "SHL"
    },
    "12501": {
      "op": "SUB"
    },
    "12502": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12503": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "AND",
      "path": "5"
    },
    "12504": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12505": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x150B7A02"
    },
    "12510": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12511": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30F2"
    },
    "12514": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12515": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "12516": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12517": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "DUP10",
      "path": "5"
    },
    "12518": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12519": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12520": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12521": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12522": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12523": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12525": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "12526": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A60"
    },
    "12529": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12530": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12531": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12533": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12535": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12536": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12537": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12538": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SUB",
      "path": "5"
    },
    "12539": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12540": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12542": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12543": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12544": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "12545": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12546": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12547": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12548": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x310C"
    },
    "12551": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12552": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12554": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12555": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "REVERT",
      "path": "5"
    },
    "12556": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12557": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "12558": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "GAS",
      "path": "5"
    },
    "12559": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "CALL",
      "path": "5"
    },
    "12560": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12561": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "12562": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "12563": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "12564": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12565": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12566": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x313C"
    },
    "12569": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12570": {
      "op": "POP"
    },
    "12571": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12573": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12574": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12575": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "12577": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12578": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12579": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12580": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "12581": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12583": {
      "op": "NOT"
    },
    "12584": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "AND",
      "path": "5"
    },
    "12585": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12586": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "12587": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12588": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12589": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12590": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3139"
    },
    "12593": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12594": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12595": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "12596": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12597": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A9D"
    },
    "12600": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12601": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12602": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12604": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12605": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3196"
    },
    "12608": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12609": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12610": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12611": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12612": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12613": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x316A"
    },
    "12616": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12617": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12619": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12620": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12621": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "5"
    },
    "12622": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "12624": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "NOT",
      "path": "5"
    },
    "12625": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "12627": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12628": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "5"
    },
    "12629": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "AND",
      "path": "5"
    },
    "12630": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12631": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "5"
    },
    "12632": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12634": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12635": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12636": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12637": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12638": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12639": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12641": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12643": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12644": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "5"
    },
    "12645": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "12646": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x316F"
    },
    "12649": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12650": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12651": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "12653": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12654": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "5"
    },
    "12655": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12656": {
      "op": "POP"
    },
    "12657": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12658": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12659": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x318E"
    },
    "12662": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12663": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 159,
      "value": "0x40"
    },
    "12665": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12666": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12670": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12672": {
      "op": "SHL"
    },
    "12673": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12674": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12675": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12677": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "ADD",
      "path": "5"
    },
    "12678": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E2"
    },
    "12681": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12682": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39F8"
    },
    "12685": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12820,
        12880
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12686": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12687": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12992,
        12998
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12688": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12986,
        12999
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12689": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12977,
        12983
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12690": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12973,
        12975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12692": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12969,
        12984
      ],
      "op": "ADD",
      "path": "5"
    },
    "12693": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12962,
        13000
      ],
      "op": "REVERT",
      "path": "5"
    },
    "12694": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12699": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12701": {
      "op": "SHL"
    },
    "12702": {
      "op": "SUB"
    },
    "12703": {
      "op": "NOT"
    },
    "12704": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "AND",
      "path": "5",
      "statement": 160
    },
    "12705": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "12710": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12712": {
      "op": "SHL"
    },
    "12713": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "EQ",
      "path": "5"
    },
    "12714": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12715": {
      "op": "POP"
    },
    "12716": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF90"
    },
    "12719": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12720": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12721": {
      "op": "POP"
    },
    "12722": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13091,
        13095
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 161,
      "value": "0x1"
    },
    "12724": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13084,
        13095
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF90"
    },
    "12727": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13084,
        13095
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12728": {
      "op": "JUMPDEST"
    },
    "12729": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12731": {
      "op": "DUP2"
    },
    "12732": {
      "op": "PUSH2",
      "value": "0x31DC"
    },
    "12735": {
      "op": "JUMPI"
    },
    "12736": {
      "op": "POP"
    },
    "12737": {
      "op": "POP"
    },
    "12738": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12740": {
      "op": "DUP1"
    },
    "12741": {
      "op": "MLOAD"
    },
    "12742": {
      "op": "DUP1"
    },
    "12743": {
      "op": "DUP3"
    },
    "12744": {
      "op": "ADD"
    },
    "12745": {
      "op": "SWAP1"
    },
    "12746": {
      "op": "SWAP2"
    },
    "12747": {
      "op": "MSTORE"
    },
    "12748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12750": {
      "op": "DUP2"
    },
    "12751": {
      "op": "MSTORE"
    },
    "12752": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "12754": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "12756": {
      "op": "SHL"
    },
    "12757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12759": {
      "op": "DUP3"
    },
    "12760": {
      "op": "ADD"
    },
    "12761": {
      "op": "MSTORE"
    },
    "12762": {
      "op": "SWAP1"
    },
    "12763": {
      "jump": "o",
      "op": "JUMP"
    },
    "12764": {
      "op": "JUMPDEST"
    },
    "12765": {
      "op": "DUP2"
    },
    "12766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12768": {
      "op": "JUMPDEST"
    },
    "12769": {
      "op": "DUP2"
    },
    "12770": {
      "op": "ISZERO"
    },
    "12771": {
      "op": "PUSH2",
      "value": "0x3206"
    },
    "12774": {
      "op": "JUMPI"
    },
    "12775": {
      "op": "DUP1"
    },
    "12776": {
      "op": "PUSH2",
      "value": "0x31F0"
    },
    "12779": {
      "op": "DUP2"
    },
    "12780": {
      "op": "PUSH2",
      "value": "0x3902"
    },
    "12783": {
      "jump": "i",
      "op": "JUMP"
    },
    "12784": {
      "op": "JUMPDEST"
    },
    "12785": {
      "op": "SWAP2"
    },
    "12786": {
      "op": "POP"
    },
    "12787": {
      "op": "PUSH2",
      "value": "0x31FF"
    },
    "12790": {
      "op": "SWAP1"
    },
    "12791": {
      "op": "POP"
    },
    "12792": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "12794": {
      "op": "DUP4"
    },
    "12795": {
      "op": "PUSH2",
      "value": "0x3968"
    },
    "12798": {
      "jump": "i",
      "op": "JUMP"
    },
    "12799": {
      "op": "JUMPDEST"
    },
    "12800": {
      "op": "SWAP2"
    },
    "12801": {
      "op": "POP"
    },
    "12802": {
      "op": "PUSH2",
      "value": "0x31E0"
    },
    "12805": {
      "op": "JUMP"
    },
    "12806": {
      "op": "JUMPDEST"
    },
    "12807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12809": {
      "op": "DUP2"
    },
    "12810": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12819": {
      "op": "DUP2"
    },
    "12820": {
      "op": "GT"
    },
    "12821": {
      "op": "ISZERO"
    },
    "12822": {
      "op": "PUSH2",
      "value": "0x3221"
    },
    "12825": {
      "op": "JUMPI"
    },
    "12826": {
      "op": "PUSH2",
      "value": "0x3221"
    },
    "12829": {
      "op": "PUSH2",
      "value": "0x3464"
    },
    "12832": {
      "jump": "i",
      "op": "JUMP"
    },
    "12833": {
      "op": "JUMPDEST"
    },
    "12834": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12836": {
      "op": "MLOAD"
    },
    "12837": {
      "op": "SWAP1"
    },
    "12838": {
      "op": "DUP1"
    },
    "12839": {
      "op": "DUP3"
    },
    "12840": {
      "op": "MSTORE"
    },
    "12841": {
      "op": "DUP1"
    },
    "12842": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12844": {
      "op": "ADD"
    },
    "12845": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12847": {
      "op": "NOT"
    },
    "12848": {
      "op": "AND"
    },
    "12849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12851": {
      "op": "ADD"
    },
    "12852": {
      "op": "DUP3"
    },
    "12853": {
      "op": "ADD"
    },
    "12854": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12856": {
      "op": "MSTORE"
    },
    "12857": {
      "op": "DUP1"
    },
    "12858": {
      "op": "ISZERO"
    },
    "12859": {
      "op": "PUSH2",
      "value": "0x324B"
    },
    "12862": {
      "op": "JUMPI"
    },
    "12863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12865": {
      "op": "DUP3"
    },
    "12866": {
      "op": "ADD"
    },
    "12867": {
      "op": "DUP2"
    },
    "12868": {
      "op": "DUP1"
    },
    "12869": {
      "op": "CALLDATASIZE"
    },
    "12870": {
      "op": "DUP4"
    },
    "12871": {
      "op": "CALLDATACOPY"
    },
    "12872": {
      "op": "ADD"
    },
    "12873": {
      "op": "SWAP1"
    },
    "12874": {
      "op": "POP"
    },
    "12875": {
      "op": "JUMPDEST"
    },
    "12876": {
      "op": "POP"
    },
    "12877": {
      "op": "SWAP1"
    },
    "12878": {
      "op": "POP"
    },
    "12879": {
      "op": "JUMPDEST"
    },
    "12880": {
      "op": "DUP5"
    },
    "12881": {
      "op": "ISZERO"
    },
    "12882": {
      "op": "PUSH2",
      "value": "0xF90"
    },
    "12885": {
      "op": "JUMPI"
    },
    "12886": {
      "op": "PUSH2",
      "value": "0x3260"
    },
    "12889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12891": {
      "op": "DUP4"
    },
    "12892": {
      "op": "PUSH2",
      "value": "0x39E1"
    },
    "12895": {
      "jump": "i",
      "op": "JUMP"
    },
    "12896": {
      "op": "JUMPDEST"
    },
    "12897": {
      "op": "SWAP2"
    },
    "12898": {
      "op": "POP"
    },
    "12899": {
      "op": "PUSH2",
      "value": "0x326D"
    },
    "12902": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "12904": {
      "op": "DUP7"
    },
    "12905": {
      "op": "PUSH2",
      "value": "0x3ABA"
    },
    "12908": {
      "jump": "i",
      "op": "JUMP"
    },
    "12909": {
      "op": "JUMPDEST"
    },
    "12910": {
      "op": "PUSH2",
      "value": "0x3278"
    },
    "12913": {
      "op": "SWAP1"
    },
    "12914": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "12916": {
      "op": "PUSH2",
      "value": "0x38EA"
    },
    "12919": {
      "jump": "i",
      "op": "JUMP"
    },
    "12920": {
      "op": "JUMPDEST"
    },
    "12921": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12923": {
      "op": "SHL"
    },
    "12924": {
      "op": "DUP2"
    },
    "12925": {
      "op": "DUP4"
    },
    "12926": {
      "op": "DUP2"
    },
    "12927": {
      "op": "MLOAD"
    },
    "12928": {
      "op": "DUP2"
    },
    "12929": {
      "op": "LT"
    },
    "12930": {
      "op": "PUSH2",
      "value": "0x328D"
    },
    "12933": {
      "op": "JUMPI"
    },
    "12934": {
      "op": "PUSH2",
      "value": "0x328D"
    },
    "12937": {
      "op": "PUSH2",
      "value": "0x391D"
    },
    "12940": {
      "jump": "i",
      "op": "JUMP"
    },
    "12941": {
      "op": "JUMPDEST"
    },
    "12942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12944": {
      "op": "ADD"
    },
    "12945": {
      "op": "ADD"
    },
    "12946": {
      "op": "SWAP1"
    },
    "12947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12951": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12953": {
      "op": "SHL"
    },
    "12954": {
      "op": "SUB"
    },
    "12955": {
      "op": "NOT"
    },
    "12956": {
      "op": "AND"
    },
    "12957": {
      "op": "SWAP1"
    },
    "12958": {
      "op": "DUP2"
    },
    "12959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12961": {
      "op": "BYTE"
    },
    "12962": {
      "op": "SWAP1"
    },
    "12963": {
      "op": "MSTORE8"
    },
    "12964": {
      "op": "POP"
    },
    "12965": {
      "op": "PUSH2",
      "value": "0x32AF"
    },
    "12968": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "12970": {
      "op": "DUP7"
    },
    "12971": {
      "op": "PUSH2",
      "value": "0x3968"
    },
    "12974": {
      "jump": "i",
      "op": "JUMP"
    },
    "12975": {
      "op": "JUMPDEST"
    },
    "12976": {
      "op": "SWAP5"
    },
    "12977": {
      "op": "POP"
    },
    "12978": {
      "op": "PUSH2",
      "value": "0x324F"
    },
    "12981": {
      "op": "JUMP"
    },
    "12982": {
      "op": "JUMPDEST"
    },
    "12983": {
      "op": "DUP3"
    },
    "12984": {
      "op": "DUP1"
    },
    "12985": {
      "op": "SLOAD"
    },
    "12986": {
      "op": "PUSH2",
      "value": "0x32C2"
    },
    "12989": {
      "op": "SWAP1"
    },
    "12990": {
      "op": "PUSH2",
      "value": "0x3813"
    },
    "12993": {
      "jump": "i",
      "op": "JUMP"
    },
    "12994": {
      "op": "JUMPDEST"
    },
    "12995": {
      "op": "SWAP1"
    },
    "12996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12998": {
      "op": "MSTORE"
    },
    "12999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13003": {
      "op": "KECCAK256"
    },
    "13004": {
      "op": "SWAP1"
    },
    "13005": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13007": {
      "op": "ADD"
    },
    "13008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13010": {
      "op": "SWAP1"
    },
    "13011": {
      "op": "DIV"
    },
    "13012": {
      "op": "DUP2"
    },
    "13013": {
      "op": "ADD"
    },
    "13014": {
      "op": "SWAP3"
    },
    "13015": {
      "op": "DUP3"
    },
    "13016": {
      "op": "PUSH2",
      "value": "0x32E4"
    },
    "13019": {
      "op": "JUMPI"
    },
    "13020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13022": {
      "op": "DUP6"
    },
    "13023": {
      "op": "SSTORE"
    },
    "13024": {
      "op": "PUSH2",
      "value": "0x332A"
    },
    "13027": {
      "op": "JUMP"
    },
    "13028": {
      "op": "JUMPDEST"
    },
    "13029": {
      "op": "DUP3"
    },
    "13030": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13032": {
      "op": "LT"
    },
    "13033": {
      "op": "PUSH2",
      "value": "0x32FD"
    },
    "13036": {
      "op": "JUMPI"
    },
    "13037": {
      "op": "DUP1"
    },
    "13038": {
      "op": "MLOAD"
    },
    "13039": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13041": {
      "op": "NOT"
    },
    "13042": {
      "op": "AND"
    },
    "13043": {
      "op": "DUP4"
    },
    "13044": {
      "op": "DUP1"
    },
    "13045": {
      "op": "ADD"
    },
    "13046": {
      "op": "OR"
    },
    "13047": {
      "op": "DUP6"
    },
    "13048": {
      "op": "SSTORE"
    },
    "13049": {
      "op": "PUSH2",
      "value": "0x332A"
    },
    "13052": {
      "op": "JUMP"
    },
    "13053": {
      "op": "JUMPDEST"
    },
    "13054": {
      "op": "DUP3"
    },
    "13055": {
      "op": "DUP1"
    },
    "13056": {
      "op": "ADD"
    },
    "13057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13059": {
      "op": "ADD"
    },
    "13060": {
      "op": "DUP6"
    },
    "13061": {
      "op": "SSTORE"
    },
    "13062": {
      "op": "DUP3"
    },
    "13063": {
      "op": "ISZERO"
    },
    "13064": {
      "op": "PUSH2",
      "value": "0x332A"
    },
    "13067": {
      "op": "JUMPI"
    },
    "13068": {
      "op": "SWAP2"
    },
    "13069": {
      "op": "DUP3"
    },
    "13070": {
      "op": "ADD"
    },
    "13071": {
      "op": "JUMPDEST"
    },
    "13072": {
      "op": "DUP3"
    },
    "13073": {
      "op": "DUP2"
    },
    "13074": {
      "op": "GT"
    },
    "13075": {
      "op": "ISZERO"
    },
    "13076": {
      "op": "PUSH2",
      "value": "0x332A"
    },
    "13079": {
      "op": "JUMPI"
    },
    "13080": {
      "op": "DUP3"
    },
    "13081": {
      "op": "MLOAD"
    },
    "13082": {
      "op": "DUP3"
    },
    "13083": {
      "op": "SSTORE"
    },
    "13084": {
      "op": "SWAP2"
    },
    "13085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13087": {
      "op": "ADD"
    },
    "13088": {
      "op": "SWAP2"
    },
    "13089": {
      "op": "SWAP1"
    },
    "13090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13092": {
      "op": "ADD"
    },
    "13093": {
      "op": "SWAP1"
    },
    "13094": {
      "op": "PUSH2",
      "value": "0x330F"
    },
    "13097": {
      "op": "JUMP"
    },
    "13098": {
      "op": "JUMPDEST"
    },
    "13099": {
      "op": "POP"
    },
    "13100": {
      "op": "PUSH2",
      "value": "0x3336"
    },
    "13103": {
      "op": "SWAP3"
    },
    "13104": {
      "op": "SWAP2"
    },
    "13105": {
      "op": "POP"
    },
    "13106": {
      "op": "PUSH2",
      "value": "0x333A"
    },
    "13109": {
      "jump": "i",
      "op": "JUMP"
    },
    "13110": {
      "op": "JUMPDEST"
    },
    "13111": {
      "op": "POP"
    },
    "13112": {
      "op": "SWAP1"
    },
    "13113": {
      "jump": "o",
      "op": "JUMP"
    },
    "13114": {
      "op": "JUMPDEST"
    },
    "13115": {
      "op": "JUMPDEST"
    },
    "13116": {
      "op": "DUP1"
    },
    "13117": {
      "op": "DUP3"
    },
    "13118": {
      "op": "GT"
    },
    "13119": {
      "op": "ISZERO"
    },
    "13120": {
      "op": "PUSH2",
      "value": "0x3336"
    },
    "13123": {
      "op": "JUMPI"
    },
    "13124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13126": {
      "op": "DUP2"
    },
    "13127": {
      "op": "SSTORE"
    },
    "13128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13130": {
      "op": "ADD"
    },
    "13131": {
      "op": "PUSH2",
      "value": "0x333B"
    },
    "13134": {
      "op": "JUMP"
    },
    "13135": {
      "op": "JUMPDEST"
    },
    "13136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13140": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13142": {
      "op": "SHL"
    },
    "13143": {
      "op": "SUB"
    },
    "13144": {
      "op": "NOT"
    },
    "13145": {
      "op": "DUP2"
    },
    "13146": {
      "op": "AND"
    },
    "13147": {
      "op": "DUP2"
    },
    "13148": {
      "op": "EQ"
    },
    "13149": {
      "op": "PUSH2",
      "value": "0x2020"
    },
    "13152": {
      "op": "JUMPI"
    },
    "13153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13155": {
      "op": "DUP1"
    },
    "13156": {
      "op": "REVERT"
    },
    "13157": {
      "op": "JUMPDEST"
    },
    "13158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13162": {
      "op": "DUP3"
    },
    "13163": {
      "op": "DUP5"
    },
    "13164": {
      "op": "SUB"
    },
    "13165": {
      "op": "SLT"
    },
    "13166": {
      "op": "ISZERO"
    },
    "13167": {
      "op": "PUSH2",
      "value": "0x3377"
    },
    "13170": {
      "op": "JUMPI"
    },
    "13171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13173": {
      "op": "DUP1"
    },
    "13174": {
      "op": "REVERT"
    },
    "13175": {
      "op": "JUMPDEST"
    },
    "13176": {
      "op": "DUP2"
    },
    "13177": {
      "op": "CALLDATALOAD"
    },
    "13178": {
      "op": "PUSH2",
      "value": "0x1ED3"
    },
    "13181": {
      "op": "DUP2"
    },
    "13182": {
      "op": "PUSH2",
      "value": "0x334F"
    },
    "13185": {
      "jump": "i",
      "op": "JUMP"
    },
    "13186": {
      "op": "JUMPDEST"
    },
    "13187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13189": {
      "op": "JUMPDEST"
    },
    "13190": {
      "op": "DUP4"
    },
    "13191": {
      "op": "DUP2"
    },
    "13192": {
      "op": "LT"
    },
    "13193": {
      "op": "ISZERO"
    },
    "13194": {
      "op": "PUSH2",
      "value": "0x339D"
    },
    "13197": {
      "op": "JUMPI"
    },
    "13198": {
      "op": "DUP2"
    },
    "13199": {
      "op": "DUP2"
    },
    "13200": {
      "op": "ADD"
    },
    "13201": {
      "op": "MLOAD"
    },
    "13202": {
      "op": "DUP4"
    },
    "13203": {
      "op": "DUP3"
    },
    "13204": {
      "op": "ADD"
    },
    "13205": {
      "op": "MSTORE"
    },
    "13206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13208": {
      "op": "ADD"
    },
    "13209": {
      "op": "PUSH2",
      "value": "0x3385"
    },
    "13212": {
      "op": "JUMP"
    },
    "13213": {
      "op": "JUMPDEST"
    },
    "13214": {
      "op": "DUP4"
    },
    "13215": {
      "op": "DUP2"
    },
    "13216": {
      "op": "GT"
    },
    "13217": {
      "op": "ISZERO"
    },
    "13218": {
      "op": "PUSH2",
      "value": "0x1AD9"
    },
    "13221": {
      "op": "JUMPI"
    },
    "13222": {
      "op": "POP"
    },
    "13223": {
      "op": "POP"
    },
    "13224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13226": {
      "op": "SWAP2"
    },
    "13227": {
      "op": "ADD"
    },
    "13228": {
      "op": "MSTORE"
    },
    "13229": {
      "jump": "o",
      "op": "JUMP"
    },
    "13230": {
      "op": "JUMPDEST"
    },
    "13231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13233": {
      "op": "DUP2"
    },
    "13234": {
      "op": "MLOAD"
    },
    "13235": {
      "op": "DUP1"
    },
    "13236": {
      "op": "DUP5"
    },
    "13237": {
      "op": "MSTORE"
    },
    "13238": {
      "op": "PUSH2",
      "value": "0x33C6"
    },
    "13241": {
      "op": "DUP2"
    },
    "13242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13244": {
      "op": "DUP7"
    },
    "13245": {
      "op": "ADD"
    },
    "13246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13248": {
      "op": "DUP7"
    },
    "13249": {
      "op": "ADD"
    },
    "13250": {
      "op": "PUSH2",
      "value": "0x3382"
    },
    "13253": {
      "jump": "i",
      "op": "JUMP"
    },
    "13254": {
      "op": "JUMPDEST"
    },
    "13255": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13257": {
      "op": "ADD"
    },
    "13258": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13260": {
      "op": "NOT"
    },
    "13261": {
      "op": "AND"
    },
    "13262": {
      "op": "SWAP3"
    },
    "13263": {
      "op": "SWAP1"
    },
    "13264": {
      "op": "SWAP3"
    },
    "13265": {
      "op": "ADD"
    },
    "13266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13268": {
      "op": "ADD"
    },
    "13269": {
      "op": "SWAP3"
    },
    "13270": {
      "op": "SWAP2"
    },
    "13271": {
      "op": "POP"
    },
    "13272": {
      "op": "POP"
    },
    "13273": {
      "jump": "o",
      "op": "JUMP"
    },
    "13274": {
      "op": "JUMPDEST"
    },
    "13275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13277": {
      "op": "DUP2"
    },
    "13278": {
      "op": "MSTORE"
    },
    "13279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13281": {
      "op": "PUSH2",
      "value": "0x1ED3"
    },
    "13284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13286": {
      "op": "DUP4"
    },
    "13287": {
      "op": "ADD"
    },
    "13288": {
      "op": "DUP5"
    },
    "13289": {
      "op": "PUSH2",
      "value": "0x33AE"
    },
    "13292": {
      "jump": "i",
      "op": "JUMP"
    },
    "13293": {
      "op": "JUMPDEST"
    },
    "13294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13298": {
      "op": "DUP3"
    },
    "13299": {
      "op": "DUP5"
    },
    "13300": {
      "op": "SUB"
    },
    "13301": {
      "op": "SLT"
    },
    "13302": {
      "op": "ISZERO"
    },
    "13303": {
      "op": "PUSH2",
      "value": "0x33FF"
    },
    "13306": {
      "op": "JUMPI"
    },
    "13307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13309": {
      "op": "DUP1"
    },
    "13310": {
      "op": "REVERT"
    },
    "13311": {
      "op": "JUMPDEST"
    },
    "13312": {
      "op": "POP"
    },
    "13313": {
      "op": "CALLDATALOAD"
    },
    "13314": {
      "op": "SWAP2"
    },
    "13315": {
      "op": "SWAP1"
    },
    "13316": {
      "op": "POP"
    },
    "13317": {
      "jump": "o",
      "op": "JUMP"
    },
    "13318": {
      "op": "JUMPDEST"
    },
    "13319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13325": {
      "op": "SHL"
    },
    "13326": {
      "op": "SUB"
    },
    "13327": {
      "op": "DUP2"
    },
    "13328": {
      "op": "AND"
    },
    "13329": {
      "op": "DUP2"
    },
    "13330": {
      "op": "EQ"
    },
    "13331": {
      "op": "PUSH2",
      "value": "0x2020"
    },
    "13334": {
      "op": "JUMPI"
    },
    "13335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13337": {
      "op": "DUP1"
    },
    "13338": {
      "op": "REVERT"
    },
    "13339": {
      "op": "JUMPDEST"
    },
    "13340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13342": {
      "op": "DUP1"
    },
    "13343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13345": {
      "op": "DUP4"
    },
    "13346": {
      "op": "DUP6"
    },
    "13347": {
      "op": "SUB"
    },
    "13348": {
      "op": "SLT"
    },
    "13349": {
      "op": "ISZERO"
    },
    "13350": {
      "op": "PUSH2",
      "value": "0x342E"
    },
    "13353": {
      "op": "JUMPI"
    },
    "13354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13356": {
      "op": "DUP1"
    },
    "13357": {
      "op": "REVERT"
    },
    "13358": {
      "op": "JUMPDEST"
    },
    "13359": {
      "op": "DUP3"
    },
    "13360": {
      "op": "CALLDATALOAD"
    },
    "13361": {
      "op": "PUSH2",
      "value": "0x3439"
    },
    "13364": {
      "op": "DUP2"
    },
    "13365": {
      "op": "PUSH2",
      "value": "0x3406"
    },
    "13368": {
      "jump": "i",
      "op": "JUMP"
    },
    "13369": {
      "op": "JUMPDEST"
    },
    "13370": {
      "op": "SWAP5"
    },
    "13371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13373": {
      "op": "SWAP4"
    },
    "13374": {
      "op": "SWAP1"
    },
    "13375": {
      "op": "SWAP4"
    },
    "13376": {
      "op": "ADD"
    },
    "13377": {
      "op": "CALLDATALOAD"
    },
    "13378": {
      "op": "SWAP4"
    },
    "13379": {
      "op": "POP"
    },
    "13380": {
      "op": "POP"
    },
    "13381": {
      "op": "POP"
    },
    "13382": {
      "jump": "o",
      "op": "JUMP"
    },
    "13383": {
      "op": "JUMPDEST"
    },
    "13384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13388": {
      "op": "DUP3"
    },
    "13389": {
      "op": "DUP5"
    },
    "13390": {
      "op": "SUB"
    },
    "13391": {
      "op": "SLT"
    },
    "13392": {
      "op": "ISZERO"
    },
    "13393": {
      "op": "PUSH2",
      "value": "0x3459"
    },
    "13396": {
      "op": "JUMPI"
    },
    "13397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13399": {
      "op": "DUP1"
    },
    "13400": {
      "op": "REVERT"
    },
    "13401": {
      "op": "JUMPDEST"
    },
    "13402": {
      "op": "DUP2"
    },
    "13403": {
      "op": "CALLDATALOAD"
    },
    "13404": {
      "op": "PUSH2",
      "value": "0x1ED3"
    },
    "13407": {
      "op": "DUP2"
    },
    "13408": {
      "op": "PUSH2",
      "value": "0x3406"
    },
    "13411": {
      "jump": "i",
      "op": "JUMP"
    },
    "13412": {
      "op": "JUMPDEST"
    },
    "13413": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13420": {
      "op": "SHL"
    },
    "13421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13423": {
      "op": "MSTORE"
    },
    "13424": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "13426": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13428": {
      "op": "MSTORE"
    },
    "13429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13433": {
      "op": "REVERT"
    },
    "13434": {
      "op": "JUMPDEST"
    },
    "13435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13437": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13446": {
      "op": "DUP1"
    },
    "13447": {
      "op": "DUP5"
    },
    "13448": {
      "op": "GT"
    },
    "13449": {
      "op": "ISZERO"
    },
    "13450": {
      "op": "PUSH2",
      "value": "0x3495"
    },
    "13453": {
      "op": "JUMPI"
    },
    "13454": {
      "op": "PUSH2",
      "value": "0x3495"
    },
    "13457": {
      "op": "PUSH2",
      "value": "0x3464"
    },
    "13460": {
      "jump": "i",
      "op": "JUMP"
    },
    "13461": {
      "op": "JUMPDEST"
    },
    "13462": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13464": {
      "op": "MLOAD"
    },
    "13465": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13467": {
      "op": "DUP6"
    },
    "13468": {
      "op": "ADD"
    },
    "13469": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13471": {
      "op": "NOT"
    },
    "13472": {
      "op": "SWAP1"
    },
    "13473": {
      "op": "DUP2"
    },
    "13474": {
      "op": "AND"
    },
    "13475": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "13477": {
      "op": "ADD"
    },
    "13478": {
      "op": "AND"
    },
    "13479": {
      "op": "DUP2"
    },
    "13480": {
      "op": "ADD"
    },
    "13481": {
      "op": "SWAP1"
    },
    "13482": {
      "op": "DUP3"
    },
    "13483": {
      "op": "DUP3"
    },
    "13484": {
      "op": "GT"
    },
    "13485": {
      "op": "DUP2"
    },
    "13486": {
      "op": "DUP4"
    },
    "13487": {
      "op": "LT"
    },
    "13488": {
      "op": "OR"
    },
    "13489": {
      "op": "ISZERO"
    },
    "13490": {
      "op": "PUSH2",
      "value": "0x34BD"
    },
    "13493": {
      "op": "JUMPI"
    },
    "13494": {
      "op": "PUSH2",
      "value": "0x34BD"
    },
    "13497": {
      "op": "PUSH2",
      "value": "0x3464"
    },
    "13500": {
      "jump": "i",
      "op": "JUMP"
    },
    "13501": {
      "op": "JUMPDEST"
    },
    "13502": {
      "op": "DUP2"
    },
    "13503": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13505": {
      "op": "MSTORE"
    },
    "13506": {
      "op": "DUP1"
    },
    "13507": {
      "op": "SWAP4"
    },
    "13508": {
      "op": "POP"
    },
    "13509": {
      "op": "DUP6"
    },
    "13510": {
      "op": "DUP2"
    },
    "13511": {
      "op": "MSTORE"
    },
    "13512": {
      "op": "DUP7"
    },
    "13513": {
      "op": "DUP7"
    },
    "13514": {
      "op": "DUP7"
    },
    "13515": {
      "op": "ADD"
    },
    "13516": {
      "op": "GT"
    },
    "13517": {
      "op": "ISZERO"
    },
    "13518": {
      "op": "PUSH2",
      "value": "0x34D6"
    },
    "13521": {
      "op": "JUMPI"
    },
    "13522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13524": {
      "op": "DUP1"
    },
    "13525": {
      "op": "REVERT"
    },
    "13526": {
      "op": "JUMPDEST"
    },
    "13527": {
      "op": "DUP6"
    },
    "13528": {
      "op": "DUP6"
    },
    "13529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13531": {
      "op": "DUP4"
    },
    "13532": {
      "op": "ADD"
    },
    "13533": {
      "op": "CALLDATACOPY"
    },
    "13534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13538": {
      "op": "DUP8"
    },
    "13539": {
      "op": "DUP4"
    },
    "13540": {
      "op": "ADD"
    },
    "13541": {
      "op": "ADD"
    },
    "13542": {
      "op": "MSTORE"
    },
    "13543": {
      "op": "POP"
    },
    "13544": {
      "op": "POP"
    },
    "13545": {
      "op": "POP"
    },
    "13546": {
      "op": "SWAP4"
    },
    "13547": {
      "op": "SWAP3"
    },
    "13548": {
      "op": "POP"
    },
    "13549": {
      "op": "POP"
    },
    "13550": {
      "op": "POP"
    },
    "13551": {
      "jump": "o",
      "op": "JUMP"
    },
    "13552": {
      "op": "JUMPDEST"
    },
    "13553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13555": {
      "op": "DUP3"
    },
    "13556": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13558": {
      "op": "DUP4"
    },
    "13559": {
      "op": "ADD"
    },
    "13560": {
      "op": "SLT"
    },
    "13561": {
      "op": "PUSH2",
      "value": "0x3501"
    },
    "13564": {
      "op": "JUMPI"
    },
    "13565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13567": {
      "op": "DUP1"
    },
    "13568": {
      "op": "REVERT"
    },
    "13569": {
      "op": "JUMPDEST"
    },
    "13570": {
      "op": "PUSH2",
      "value": "0x1ED3"
    },
    "13573": {
      "op": "DUP4"
    },
    "13574": {
      "op": "DUP4"
    },
    "13575": {
      "op": "CALLDATALOAD"
    },
    "13576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13578": {
      "op": "DUP6"
    },
    "13579": {
      "op": "ADD"
    },
    "13580": {
      "op": "PUSH2",
      "value": "0x347A"
    },
    "13583": {
      "jump": "i",
      "op": "JUMP"
    },
    "13584": {
      "op": "JUMPDEST"
    },
    "13585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13587": {
      "op": "DUP1"
    },
    "13588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13590": {
      "op": "DUP4"
    },
    "13591": {
      "op": "DUP6"
    },
    "13592": {
      "op": "SUB"
    },
    "13593": {
      "op": "SLT"
    },
    "13594": {
      "op": "ISZERO"
    },
    "13595": {
      "op": "PUSH2",
      "value": "0x3523"
    },
    "13598": {
      "op": "JUMPI"
    },
    "13599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13601": {
      "op": "DUP1"
    },
    "13602": {
      "op": "REVERT"
    },
    "13603": {
      "op": "JUMPDEST"
    },
    "13604": {
      "op": "DUP3"
    },
    "13605": {
      "op": "CALLDATALOAD"
    },
    "13606": {
      "op": "SWAP2"
    },
    "13607": {
      "op": "POP"
    },
    "13608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13610": {
      "op": "DUP4"
    },
    "13611": {
      "op": "ADD"
    },
    "13612": {
      "op": "CALLDATALOAD"
    },
    "13613": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13622": {
      "op": "DUP2"
    },
    "13623": {
      "op": "GT"
    },
    "13624": {
      "op": "ISZERO"
    },
    "13625": {
      "op": "PUSH2",
      "value": "0x3541"
    },
    "13628": {
      "op": "JUMPI"
    },
    "13629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13631": {
      "op": "DUP1"
    },
    "13632": {
      "op": "REVERT"
    },
    "13633": {
      "op": "JUMPDEST"
    },
    "13634": {
      "op": "PUSH2",
      "value": "0x354D"
    },
    "13637": {
      "op": "DUP6"
    },
    "13638": {
      "op": "DUP3"
    },
    "13639": {
      "op": "DUP7"
    },
    "13640": {
      "op": "ADD"
    },
    "13641": {
      "op": "PUSH2",
      "value": "0x34F0"
    },
    "13644": {
      "jump": "i",
      "op": "JUMP"
    },
    "13645": {
      "op": "JUMPDEST"
    },
    "13646": {
      "op": "SWAP2"
    },
    "13647": {
      "op": "POP"
    },
    "13648": {
      "op": "POP"
    },
    "13649": {
      "op": "SWAP3"
    },
    "13650": {
      "op": "POP"
    },
    "13651": {
      "op": "SWAP3"
    },
    "13652": {
      "op": "SWAP1"
    },
    "13653": {
      "op": "POP"
    },
    "13654": {
      "jump": "o",
      "op": "JUMP"
    },
    "13655": {
      "op": "JUMPDEST"
    },
    "13656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13658": {
      "op": "DUP1"
    },
    "13659": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13661": {
      "op": "DUP4"
    },
    "13662": {
      "op": "DUP6"
    },
    "13663": {
      "op": "SUB"
    },
    "13664": {
      "op": "SLT"
    },
    "13665": {
      "op": "ISZERO"
    },
    "13666": {
      "op": "PUSH2",
      "value": "0x356A"
    },
    "13669": {
      "op": "JUMPI"
    },
    "13670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13672": {
      "op": "DUP1"
    },
    "13673": {
      "op": "REVERT"
    },
    "13674": {
      "op": "JUMPDEST"
    },
    "13675": {
      "op": "POP"
    },
    "13676": {
      "op": "POP"
    },
    "13677": {
      "op": "DUP1"
    },
    "13678": {
      "op": "CALLDATALOAD"
    },
    "13679": {
      "op": "SWAP3"
    },
    "13680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13682": {
      "op": "SWAP1"
    },
    "13683": {
      "op": "SWAP2"
    },
    "13684": {
      "op": "ADD"
    },
    "13685": {
      "op": "CALLDATALOAD"
    },
    "13686": {
      "op": "SWAP2"
    },
    "13687": {
      "op": "POP"
    },
    "13688": {
      "jump": "o",
      "op": "JUMP"
    },
    "13689": {
      "op": "JUMPDEST"
    },
    "13690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13692": {
      "op": "DUP1"
    },
    "13693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13695": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13697": {
      "op": "DUP5"
    },
    "13698": {
      "op": "DUP7"
    },
    "13699": {
      "op": "SUB"
    },
    "13700": {
      "op": "SLT"
    },
    "13701": {
      "op": "ISZERO"
    },
    "13702": {
      "op": "PUSH2",
      "value": "0x358E"
    },
    "13705": {
      "op": "JUMPI"
    },
    "13706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13708": {
      "op": "DUP1"
    },
    "13709": {
      "op": "REVERT"
    },
    "13710": {
      "op": "JUMPDEST"
    },
    "13711": {
      "op": "DUP4"
    },
    "13712": {
      "op": "CALLDATALOAD"
    },
    "13713": {
      "op": "PUSH2",
      "value": "0x3599"
    },
    "13716": {
      "op": "DUP2"
    },
    "13717": {
      "op": "PUSH2",
      "value": "0x3406"
    },
    "13720": {
      "jump": "i",
      "op": "JUMP"
    },
    "13721": {
      "op": "JUMPDEST"
    },
    "13722": {
      "op": "SWAP3"
    },
    "13723": {
      "op": "POP"
    },
    "13724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13726": {
      "op": "DUP5"
    },
    "13727": {
      "op": "ADD"
    },
    "13728": {
      "op": "CALLDATALOAD"
    },
    "13729": {
      "op": "PUSH2",
      "value": "0x35A9"
    },
    "13732": {
      "op": "DUP2"
    },
    "13733": {
      "op": "PUSH2",
      "value": "0x3406"
    },
    "13736": {
      "jump": "i",
      "op": "JUMP"
    },
    "13737": {
      "op": "JUMPDEST"
    },
    "13738": {
      "op": "SWAP3"
    },
    "13739": {
      "op": "SWAP6"
    },
    "13740": {
      "op": "SWAP3"
    },
    "13741": {
      "op": "SWAP5"
    },
    "13742": {
      "op": "POP"
    },
    "13743": {
      "op": "POP"
    },
    "13744": {
      "op": "POP"
    },
    "13745": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13747": {
      "op": "SWAP2"
    },
    "13748": {
      "op": "SWAP1"
    },
    "13749": {
      "op": "SWAP2"
    },
    "13750": {
      "op": "ADD"
    },
    "13751": {
      "op": "CALLDATALOAD"
    },
    "13752": {
      "op": "SWAP1"
    },
    "13753": {
      "jump": "o",
      "op": "JUMP"
    },
    "13754": {
      "op": "JUMPDEST"
    },
    "13755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13759": {
      "op": "DUP1"
    },
    "13760": {
      "op": "DUP4"
    },
    "13761": {
      "op": "ADD"
    },
    "13762": {
      "op": "DUP2"
    },
    "13763": {
      "op": "DUP5"
    },
    "13764": {
      "op": "MSTORE"
    },
    "13765": {
      "op": "DUP1"
    },
    "13766": {
      "op": "DUP6"
    },
    "13767": {
      "op": "MLOAD"
    },
    "13768": {
      "op": "DUP1"
    },
    "13769": {
      "op": "DUP4"
    },
    "13770": {
      "op": "MSTORE"
    },
    "13771": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13773": {
      "op": "DUP7"
    },
    "13774": {
      "op": "ADD"
    },
    "13775": {
      "op": "SWAP2"
    },
    "13776": {
      "op": "POP"
    },
    "13777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13779": {
      "op": "DUP2"
    },
    "13780": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13782": {
      "op": "SHL"
    },
    "13783": {
      "op": "DUP8"
    },
    "13784": {
      "op": "ADD"
    },
    "13785": {
      "op": "ADD"
    },
    "13786": {
      "op": "SWAP3"
    },
    "13787": {
      "op": "POP"
    },
    "13788": {
      "op": "DUP4"
    },
    "13789": {
      "op": "DUP8"
    },
    "13790": {
      "op": "ADD"
    },
    "13791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13793": {
      "op": "JUMPDEST"
    },
    "13794": {
      "op": "DUP3"
    },
    "13795": {
      "op": "DUP2"
    },
    "13796": {
      "op": "LT"
    },
    "13797": {
      "op": "ISZERO"
    },
    "13798": {
      "op": "PUSH2",
      "value": "0x360F"
    },
    "13801": {
      "op": "JUMPI"
    },
    "13802": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "13804": {
      "op": "NOT"
    },
    "13805": {
      "op": "DUP9"
    },
    "13806": {
      "op": "DUP7"
    },
    "13807": {
      "op": "SUB"
    },
    "13808": {
      "op": "ADD"
    },
    "13809": {
      "op": "DUP5"
    },
    "13810": {
      "op": "MSTORE"
    },
    "13811": {
      "op": "PUSH2",
      "value": "0x35FD"
    },
    "13814": {
      "op": "DUP6"
    },
    "13815": {
      "op": "DUP4"
    },
    "13816": {
      "op": "MLOAD"
    },
    "13817": {
      "op": "PUSH2",
      "value": "0x33AE"
    },
    "13820": {
      "jump": "i",
      "op": "JUMP"
    },
    "13821": {
      "op": "JUMPDEST"
    },
    "13822": {
      "op": "SWAP5"
    },
    "13823": {
      "op": "POP"
    },
    "13824": {
      "op": "SWAP3"
    },
    "13825": {
      "op": "DUP6"
    },
    "13826": {
      "op": "ADD"
    },
    "13827": {
      "op": "SWAP3"
    },
    "13828": {
      "op": "SWAP1"
    },
    "13829": {
      "op": "DUP6"
    },
    "13830": {
      "op": "ADD"
    },
    "13831": {
      "op": "SWAP1"
    },
    "13832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13834": {
      "op": "ADD"
    },
    "13835": {
      "op": "PUSH2",
      "value": "0x35E1"
    },
    "13838": {
      "op": "JUMP"
    },
    "13839": {
      "op": "JUMPDEST"
    },
    "13840": {
      "op": "POP"
    },
    "13841": {
      "op": "SWAP3"
    },
    "13842": {
      "op": "SWAP8"
    },
    "13843": {
      "op": "SWAP7"
    },
    "13844": {
      "op": "POP"
    },
    "13845": {
      "op": "POP"
    },
    "13846": {
      "op": "POP"
    },
    "13847": {
      "op": "POP"
    },
    "13848": {
      "op": "POP"
    },
    "13849": {
      "op": "POP"
    },
    "13850": {
      "op": "POP"
    },
    "13851": {
      "jump": "o",
      "op": "JUMP"
    },
    "13852": {
      "op": "JUMPDEST"
    },
    "13853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13855": {
      "op": "DUP1"
    },
    "13856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13858": {
      "op": "DUP1"
    },
    "13859": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13861": {
      "op": "DUP6"
    },
    "13862": {
      "op": "DUP8"
    },
    "13863": {
      "op": "SUB"
    },
    "13864": {
      "op": "SLT"
    },
    "13865": {
      "op": "ISZERO"
    },
    "13866": {
      "op": "PUSH2",
      "value": "0x3632"
    },
    "13869": {
      "op": "JUMPI"
    },
    "13870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13872": {
      "op": "DUP1"
    },
    "13873": {
      "op": "REVERT"
    },
    "13874": {
      "op": "JUMPDEST"
    },
    "13875": {
      "op": "DUP5"
    },
    "13876": {
      "op": "CALLDATALOAD"
    },
    "13877": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13886": {
      "op": "DUP2"
    },
    "13887": {
      "op": "GT"
    },
    "13888": {
      "op": "ISZERO"
    },
    "13889": {
      "op": "PUSH2",
      "value": "0x3649"
    },
    "13892": {
      "op": "JUMPI"
    },
    "13893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13895": {
      "op": "DUP1"
    },
    "13896": {
      "op": "REVERT"
    },
    "13897": {
      "op": "JUMPDEST"
    },
    "13898": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "13901": {
      "op": "DUP8"
    },
    "13902": {
      "op": "DUP3"
    },
    "13903": {
      "op": "DUP9"
    },
    "13904": {
      "op": "ADD"
    },
    "13905": {
      "op": "PUSH2",
      "value": "0x34F0"
    },
    "13908": {
      "jump": "i",
      "op": "JUMP"
    },
    "13909": {
      "op": "JUMPDEST"
    },
    "13910": {
      "op": "SWAP8"
    },
    "13911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13913": {
      "op": "DUP8"
    },
    "13914": {
      "op": "ADD"
    },
    "13915": {
      "op": "CALLDATALOAD"
    },
    "13916": {
      "op": "SWAP8"
    },
    "13917": {
      "op": "POP"
    },
    "13918": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13920": {
      "op": "DUP8"
    },
    "13921": {
      "op": "ADD"
    },
    "13922": {
      "op": "CALLDATALOAD"
    },
    "13923": {
      "op": "SWAP7"
    },
    "13924": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13926": {
      "op": "ADD"
    },
    "13927": {
      "op": "CALLDATALOAD"
    },
    "13928": {
      "op": "SWAP6"
    },
    "13929": {
      "op": "POP"
    },
    "13930": {
      "op": "SWAP4"
    },
    "13931": {
      "op": "POP"
    },
    "13932": {
      "op": "POP"
    },
    "13933": {
      "op": "POP"
    },
    "13934": {
      "op": "POP"
    },
    "13935": {
      "jump": "o",
      "op": "JUMP"
    },
    "13936": {
      "op": "JUMPDEST"
    },
    "13937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13941": {
      "op": "DUP3"
    },
    "13942": {
      "op": "DUP5"
    },
    "13943": {
      "op": "SUB"
    },
    "13944": {
      "op": "SLT"
    },
    "13945": {
      "op": "ISZERO"
    },
    "13946": {
      "op": "PUSH2",
      "value": "0x3682"
    },
    "13949": {
      "op": "JUMPI"
    },
    "13950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13952": {
      "op": "DUP1"
    },
    "13953": {
      "op": "REVERT"
    },
    "13954": {
      "op": "JUMPDEST"
    },
    "13955": {
      "op": "DUP2"
    },
    "13956": {
      "op": "CALLDATALOAD"
    },
    "13957": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13966": {
      "op": "DUP2"
    },
    "13967": {
      "op": "GT"
    },
    "13968": {
      "op": "ISZERO"
    },
    "13969": {
      "op": "PUSH2",
      "value": "0x3699"
    },
    "13972": {
      "op": "JUMPI"
    },
    "13973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13975": {
      "op": "DUP1"
    },
    "13976": {
      "op": "REVERT"
    },
    "13977": {
      "op": "JUMPDEST"
    },
    "13978": {
      "op": "PUSH2",
      "value": "0xF90"
    },
    "13981": {
      "op": "DUP5"
    },
    "13982": {
      "op": "DUP3"
    },
    "13983": {
      "op": "DUP6"
    },
    "13984": {
      "op": "ADD"
    },
    "13985": {
      "op": "PUSH2",
      "value": "0x34F0"
    },
    "13988": {
      "jump": "i",
      "op": "JUMP"
    },
    "13989": {
      "op": "JUMPDEST"
    },
    "13990": {
      "op": "DUP1"
    },
    "13991": {
      "op": "ISZERO"
    },
    "13992": {
      "op": "ISZERO"
    },
    "13993": {
      "op": "DUP2"
    },
    "13994": {
      "op": "EQ"
    },
    "13995": {
      "op": "PUSH2",
      "value": "0x2020"
    },
    "13998": {
      "op": "JUMPI"
    },
    "13999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14001": {
      "op": "DUP1"
    },
    "14002": {
      "op": "REVERT"
    },
    "14003": {
      "op": "JUMPDEST"
    },
    "14004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14006": {
      "op": "DUP1"
    },
    "14007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14009": {
      "op": "DUP4"
    },
    "14010": {
      "op": "DUP6"
    },
    "14011": {
      "op": "SUB"
    },
    "14012": {
      "op": "SLT"
    },
    "14013": {
      "op": "ISZERO"
    },
    "14014": {
      "op": "PUSH2",
      "value": "0x36C6"
    },
    "14017": {
      "op": "JUMPI"
    },
    "14018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14020": {
      "op": "DUP1"
    },
    "14021": {
      "op": "REVERT"
    },
    "14022": {
      "op": "JUMPDEST"
    },
    "14023": {
      "op": "DUP3"
    },
    "14024": {
      "op": "CALLDATALOAD"
    },
    "14025": {
      "op": "PUSH2",
      "value": "0x36D1"
    },
    "14028": {
      "op": "DUP2"
    },
    "14029": {
      "op": "PUSH2",
      "value": "0x3406"
    },
    "14032": {
      "jump": "i",
      "op": "JUMP"
    },
    "14033": {
      "op": "JUMPDEST"
    },
    "14034": {
      "op": "SWAP2"
    },
    "14035": {
      "op": "POP"
    },
    "14036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14038": {
      "op": "DUP4"
    },
    "14039": {
      "op": "ADD"
    },
    "14040": {
      "op": "CALLDATALOAD"
    },
    "14041": {
      "op": "PUSH2",
      "value": "0x36E1"
    },
    "14044": {
      "op": "DUP2"
    },
    "14045": {
      "op": "PUSH2",
      "value": "0x36A5"
    },
    "14048": {
      "jump": "i",
      "op": "JUMP"
    },
    "14049": {
      "op": "JUMPDEST"
    },
    "14050": {
      "op": "DUP1"
    },
    "14051": {
      "op": "SWAP2"
    },
    "14052": {
      "op": "POP"
    },
    "14053": {
      "op": "POP"
    },
    "14054": {
      "op": "SWAP3"
    },
    "14055": {
      "op": "POP"
    },
    "14056": {
      "op": "SWAP3"
    },
    "14057": {
      "op": "SWAP1"
    },
    "14058": {
      "op": "POP"
    },
    "14059": {
      "jump": "o",
      "op": "JUMP"
    },
    "14060": {
      "op": "JUMPDEST"
    },
    "14061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14063": {
      "op": "DUP1"
    },
    "14064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14066": {
      "op": "DUP1"
    },
    "14067": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14069": {
      "op": "DUP6"
    },
    "14070": {
      "op": "DUP8"
    },
    "14071": {
      "op": "SUB"
    },
    "14072": {
      "op": "SLT"
    },
    "14073": {
      "op": "ISZERO"
    },
    "14074": {
      "op": "PUSH2",
      "value": "0x3702"
    },
    "14077": {
      "op": "JUMPI"
    },
    "14078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14080": {
      "op": "DUP1"
    },
    "14081": {
      "op": "REVERT"
    },
    "14082": {
      "op": "JUMPDEST"
    },
    "14083": {
      "op": "DUP5"
    },
    "14084": {
      "op": "CALLDATALOAD"
    },
    "14085": {
      "op": "PUSH2",
      "value": "0x370D"
    },
    "14088": {
      "op": "DUP2"
    },
    "14089": {
      "op": "PUSH2",
      "value": "0x3406"
    },
    "14092": {
      "jump": "i",
      "op": "JUMP"
    },
    "14093": {
      "op": "JUMPDEST"
    },
    "14094": {
      "op": "SWAP4"
    },
    "14095": {
      "op": "POP"
    },
    "14096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14098": {
      "op": "DUP6"
    },
    "14099": {
      "op": "ADD"
    },
    "14100": {
      "op": "CALLDATALOAD"
    },
    "14101": {
      "op": "PUSH2",
      "value": "0x371D"
    },
    "14104": {
      "op": "DUP2"
    },
    "14105": {
      "op": "PUSH2",
      "value": "0x3406"
    },
    "14108": {
      "jump": "i",
      "op": "JUMP"
    },
    "14109": {
      "op": "JUMPDEST"
    },
    "14110": {
      "op": "SWAP3"
    },
    "14111": {
      "op": "POP"
    },
    "14112": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14114": {
      "op": "DUP6"
    },
    "14115": {
      "op": "ADD"
    },
    "14116": {
      "op": "CALLDATALOAD"
    },
    "14117": {
      "op": "SWAP2"
    },
    "14118": {
      "op": "POP"
    },
    "14119": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14121": {
      "op": "DUP6"
    },
    "14122": {
      "op": "ADD"
    },
    "14123": {
      "op": "CALLDATALOAD"
    },
    "14124": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14133": {
      "op": "DUP2"
    },
    "14134": {
      "op": "GT"
    },
    "14135": {
      "op": "ISZERO"
    },
    "14136": {
      "op": "PUSH2",
      "value": "0x3740"
    },
    "14139": {
      "op": "JUMPI"
    },
    "14140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14142": {
      "op": "DUP1"
    },
    "14143": {
      "op": "REVERT"
    },
    "14144": {
      "op": "JUMPDEST"
    },
    "14145": {
      "op": "DUP6"
    },
    "14146": {
      "op": "ADD"
    },
    "14147": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14149": {
      "op": "DUP2"
    },
    "14150": {
      "op": "ADD"
    },
    "14151": {
      "op": "DUP8"
    },
    "14152": {
      "op": "SGT"
    },
    "14153": {
      "op": "PUSH2",
      "value": "0x3751"
    },
    "14156": {
      "op": "JUMPI"
    },
    "14157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14159": {
      "op": "DUP1"
    },
    "14160": {
      "op": "REVERT"
    },
    "14161": {
      "op": "JUMPDEST"
    },
    "14162": {
      "op": "PUSH2",
      "value": "0x3760"
    },
    "14165": {
      "op": "DUP8"
    },
    "14166": {
      "op": "DUP3"
    },
    "14167": {
      "op": "CALLDATALOAD"
    },
    "14168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14170": {
      "op": "DUP5"
    },
    "14171": {
      "op": "ADD"
    },
    "14172": {
      "op": "PUSH2",
      "value": "0x347A"
    },
    "14175": {
      "jump": "i",
      "op": "JUMP"
    },
    "14176": {
      "op": "JUMPDEST"
    },
    "14177": {
      "op": "SWAP2"
    },
    "14178": {
      "op": "POP"
    },
    "14179": {
      "op": "POP"
    },
    "14180": {
      "op": "SWAP3"
    },
    "14181": {
      "op": "SWAP6"
    },
    "14182": {
      "op": "SWAP2"
    },
    "14183": {
      "op": "SWAP5"
    },
    "14184": {
      "op": "POP"
    },
    "14185": {
      "op": "SWAP3"
    },
    "14186": {
      "op": "POP"
    },
    "14187": {
      "jump": "o",
      "op": "JUMP"
    },
    "14188": {
      "op": "JUMPDEST"
    },
    "14189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14191": {
      "op": "DUP1"
    },
    "14192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14194": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14196": {
      "op": "DUP5"
    },
    "14197": {
      "op": "DUP7"
    },
    "14198": {
      "op": "SUB"
    },
    "14199": {
      "op": "SLT"
    },
    "14200": {
      "op": "ISZERO"
    },
    "14201": {
      "op": "PUSH2",
      "value": "0x3781"
    },
    "14204": {
      "op": "JUMPI"
    },
    "14205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14207": {
      "op": "DUP1"
    },
    "14208": {
      "op": "REVERT"
    },
    "14209": {
      "op": "JUMPDEST"
    },
    "14210": {
      "op": "DUP4"
    },
    "14211": {
      "op": "CALLDATALOAD"
    },
    "14212": {
      "op": "PUSH2",
      "value": "0x378C"
    },
    "14215": {
      "op": "DUP2"
    },
    "14216": {
      "op": "PUSH2",
      "value": "0x3406"
    },
    "14219": {
      "jump": "i",
      "op": "JUMP"
    },
    "14220": {
      "op": "JUMPDEST"
    },
    "14221": {
      "op": "SWAP6"
    },
    "14222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14224": {
      "op": "DUP6"
    },
    "14225": {
      "op": "ADD"
    },
    "14226": {
      "op": "CALLDATALOAD"
    },
    "14227": {
      "op": "SWAP6"
    },
    "14228": {
      "op": "POP"
    },
    "14229": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14231": {
      "op": "SWAP1"
    },
    "14232": {
      "op": "SWAP5"
    },
    "14233": {
      "op": "ADD"
    },
    "14234": {
      "op": "CALLDATALOAD"
    },
    "14235": {
      "op": "SWAP4"
    },
    "14236": {
      "op": "SWAP3"
    },
    "14237": {
      "op": "POP"
    },
    "14238": {
      "op": "POP"
    },
    "14239": {
      "op": "POP"
    },
    "14240": {
      "jump": "o",
      "op": "JUMP"
    },
    "14241": {
      "op": "JUMPDEST"
    },
    "14242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14244": {
      "op": "DUP1"
    },
    "14245": {
      "op": "DUP3"
    },
    "14246": {
      "op": "MSTORE"
    },
    "14247": {
      "op": "DUP3"
    },
    "14248": {
      "op": "MLOAD"
    },
    "14249": {
      "op": "DUP3"
    },
    "14250": {
      "op": "DUP3"
    },
    "14251": {
      "op": "ADD"
    },
    "14252": {
      "op": "DUP2"
    },
    "14253": {
      "op": "SWAP1"
    },
    "14254": {
      "op": "MSTORE"
    },
    "14255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14257": {
      "op": "SWAP2"
    },
    "14258": {
      "op": "SWAP1"
    },
    "14259": {
      "op": "DUP5"
    },
    "14260": {
      "op": "DUP3"
    },
    "14261": {
      "op": "ADD"
    },
    "14262": {
      "op": "SWAP1"
    },
    "14263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14265": {
      "op": "DUP6"
    },
    "14266": {
      "op": "ADD"
    },
    "14267": {
      "op": "SWAP1"
    },
    "14268": {
      "op": "DUP5"
    },
    "14269": {
      "op": "JUMPDEST"
    },
    "14270": {
      "op": "DUP2"
    },
    "14271": {
      "op": "DUP2"
    },
    "14272": {
      "op": "LT"
    },
    "14273": {
      "op": "ISZERO"
    },
    "14274": {
      "op": "PUSH2",
      "value": "0x37D9"
    },
    "14277": {
      "op": "JUMPI"
    },
    "14278": {
      "op": "DUP4"
    },
    "14279": {
      "op": "MLOAD"
    },
    "14280": {
      "op": "DUP4"
    },
    "14281": {
      "op": "MSTORE"
    },
    "14282": {
      "op": "SWAP3"
    },
    "14283": {
      "op": "DUP5"
    },
    "14284": {
      "op": "ADD"
    },
    "14285": {
      "op": "SWAP3"
    },
    "14286": {
      "op": "SWAP2"
    },
    "14287": {
      "op": "DUP5"
    },
    "14288": {
      "op": "ADD"
    },
    "14289": {
      "op": "SWAP2"
    },
    "14290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14292": {
      "op": "ADD"
    },
    "14293": {
      "op": "PUSH2",
      "value": "0x37BD"
    },
    "14296": {
      "op": "JUMP"
    },
    "14297": {
      "op": "JUMPDEST"
    },
    "14298": {
      "op": "POP"
    },
    "14299": {
      "op": "SWAP1"
    },
    "14300": {
      "op": "SWAP7"
    },
    "14301": {
      "op": "SWAP6"
    },
    "14302": {
      "op": "POP"
    },
    "14303": {
      "op": "POP"
    },
    "14304": {
      "op": "POP"
    },
    "14305": {
      "op": "POP"
    },
    "14306": {
      "op": "POP"
    },
    "14307": {
      "op": "POP"
    },
    "14308": {
      "jump": "o",
      "op": "JUMP"
    },
    "14309": {
      "op": "JUMPDEST"
    },
    "14310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14312": {
      "op": "DUP1"
    },
    "14313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14315": {
      "op": "DUP4"
    },
    "14316": {
      "op": "DUP6"
    },
    "14317": {
      "op": "SUB"
    },
    "14318": {
      "op": "SLT"
    },
    "14319": {
      "op": "ISZERO"
    },
    "14320": {
      "op": "PUSH2",
      "value": "0x37F8"
    },
    "14323": {
      "op": "JUMPI"
    },
    "14324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14326": {
      "op": "DUP1"
    },
    "14327": {
      "op": "REVERT"
    },
    "14328": {
      "op": "JUMPDEST"
    },
    "14329": {
      "op": "DUP3"
    },
    "14330": {
      "op": "CALLDATALOAD"
    },
    "14331": {
      "op": "PUSH2",
      "value": "0x3803"
    },
    "14334": {
      "op": "DUP2"
    },
    "14335": {
      "op": "PUSH2",
      "value": "0x3406"
    },
    "14338": {
      "jump": "i",
      "op": "JUMP"
    },
    "14339": {
      "op": "JUMPDEST"
    },
    "14340": {
      "op": "SWAP2"
    },
    "14341": {
      "op": "POP"
    },
    "14342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14344": {
      "op": "DUP4"
    },
    "14345": {
      "op": "ADD"
    },
    "14346": {
      "op": "CALLDATALOAD"
    },
    "14347": {
      "op": "PUSH2",
      "value": "0x36E1"
    },
    "14350": {
      "op": "DUP2"
    },
    "14351": {
      "op": "PUSH2",
      "value": "0x3406"
    },
    "14354": {
      "jump": "i",
      "op": "JUMP"
    },
    "14355": {
      "op": "JUMPDEST"
    },
    "14356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14358": {
      "op": "DUP2"
    },
    "14359": {
      "op": "DUP2"
    },
    "14360": {
      "op": "SHR"
    },
    "14361": {
      "op": "SWAP1"
    },
    "14362": {
      "op": "DUP3"
    },
    "14363": {
      "op": "AND"
    },
    "14364": {
      "op": "DUP1"
    },
    "14365": {
      "op": "PUSH2",
      "value": "0x3827"
    },
    "14368": {
      "op": "JUMPI"
    },
    "14369": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14371": {
      "op": "DUP3"
    },
    "14372": {
      "op": "AND"
    },
    "14373": {
      "op": "SWAP2"
    },
    "14374": {
      "op": "POP"
    },
    "14375": {
      "op": "JUMPDEST"
    },
    "14376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14378": {
      "op": "DUP3"
    },
    "14379": {
      "op": "LT"
    },
    "14380": {
      "op": "DUP2"
    },
    "14381": {
      "op": "EQ"
    },
    "14382": {
      "op": "ISZERO"
    },
    "14383": {
      "op": "PUSH2",
      "value": "0x3848"
    },
    "14386": {
      "op": "JUMPI"
    },
    "14387": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14392": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14394": {
      "op": "SHL"
    },
    "14395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14397": {
      "op": "MSTORE"
    },
    "14398": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14400": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14402": {
      "op": "MSTORE"
    },
    "14403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14407": {
      "op": "REVERT"
    },
    "14408": {
      "op": "JUMPDEST"
    },
    "14409": {
      "op": "POP"
    },
    "14410": {
      "op": "SWAP2"
    },
    "14411": {
      "op": "SWAP1"
    },
    "14412": {
      "op": "POP"
    },
    "14413": {
      "jump": "o",
      "op": "JUMP"
    },
    "14414": {
      "op": "JUMPDEST"
    },
    "14415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14417": {
      "op": "DUP1"
    },
    "14418": {
      "op": "DUP3"
    },
    "14419": {
      "op": "MSTORE"
    },
    "14420": {
      "op": "DUP2"
    },
    "14421": {
      "op": "DUP2"
    },
    "14422": {
      "op": "ADD"
    },
    "14423": {
      "op": "MSTORE"
    },
    "14424": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "14457": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14459": {
      "op": "DUP3"
    },
    "14460": {
      "op": "ADD"
    },
    "14461": {
      "op": "MSTORE"
    },
    "14462": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14464": {
      "op": "ADD"
    },
    "14465": {
      "op": "SWAP1"
    },
    "14466": {
      "jump": "o",
      "op": "JUMP"
    },
    "14467": {
      "op": "JUMPDEST"
    },
    "14468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14470": {
      "op": "DUP1"
    },
    "14471": {
      "op": "DUP3"
    },
    "14472": {
      "op": "MSTORE"
    },
    "14473": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14475": {
      "op": "SWAP1"
    },
    "14476": {
      "op": "DUP3"
    },
    "14477": {
      "op": "ADD"
    },
    "14478": {
      "op": "MSTORE"
    },
    "14479": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "14512": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14514": {
      "op": "DUP3"
    },
    "14515": {
      "op": "ADD"
    },
    "14516": {
      "op": "MSTORE"
    },
    "14517": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "14535": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "14537": {
      "op": "SHL"
    },
    "14538": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14540": {
      "op": "DUP3"
    },
    "14541": {
      "op": "ADD"
    },
    "14542": {
      "op": "MSTORE"
    },
    "14543": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14545": {
      "op": "ADD"
    },
    "14546": {
      "op": "SWAP1"
    },
    "14547": {
      "jump": "o",
      "op": "JUMP"
    },
    "14548": {
      "op": "JUMPDEST"
    },
    "14549": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14556": {
      "op": "SHL"
    },
    "14557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14559": {
      "op": "MSTORE"
    },
    "14560": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14562": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14564": {
      "op": "MSTORE"
    },
    "14565": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14569": {
      "op": "REVERT"
    },
    "14570": {
      "op": "JUMPDEST"
    },
    "14571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14573": {
      "op": "DUP3"
    },
    "14574": {
      "op": "NOT"
    },
    "14575": {
      "op": "DUP3"
    },
    "14576": {
      "op": "GT"
    },
    "14577": {
      "op": "ISZERO"
    },
    "14578": {
      "op": "PUSH2",
      "value": "0x38FD"
    },
    "14581": {
      "op": "JUMPI"
    },
    "14582": {
      "op": "PUSH2",
      "value": "0x38FD"
    },
    "14585": {
      "op": "PUSH2",
      "value": "0x38D4"
    },
    "14588": {
      "jump": "i",
      "op": "JUMP"
    },
    "14589": {
      "op": "JUMPDEST"
    },
    "14590": {
      "op": "POP"
    },
    "14591": {
      "op": "ADD"
    },
    "14592": {
      "op": "SWAP1"
    },
    "14593": {
      "jump": "o",
      "op": "JUMP"
    },
    "14594": {
      "op": "JUMPDEST"
    },
    "14595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14599": {
      "op": "NOT"
    },
    "14600": {
      "op": "DUP3"
    },
    "14601": {
      "op": "EQ"
    },
    "14602": {
      "op": "ISZERO"
    },
    "14603": {
      "op": "PUSH2",
      "value": "0x3916"
    },
    "14606": {
      "op": "JUMPI"
    },
    "14607": {
      "op": "PUSH2",
      "value": "0x3916"
    },
    "14610": {
      "op": "PUSH2",
      "value": "0x38D4"
    },
    "14613": {
      "jump": "i",
      "op": "JUMP"
    },
    "14614": {
      "op": "JUMPDEST"
    },
    "14615": {
      "op": "POP"
    },
    "14616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14618": {
      "op": "ADD"
    },
    "14619": {
      "op": "SWAP1"
    },
    "14620": {
      "jump": "o",
      "op": "JUMP"
    },
    "14621": {
      "op": "JUMPDEST"
    },
    "14622": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14627": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14629": {
      "op": "SHL"
    },
    "14630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14632": {
      "op": "MSTORE"
    },
    "14633": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14635": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14637": {
      "op": "MSTORE"
    },
    "14638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14642": {
      "op": "REVERT"
    },
    "14643": {
      "op": "JUMPDEST"
    },
    "14644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14646": {
      "op": "DUP2"
    },
    "14647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14649": {
      "op": "NOT"
    },
    "14650": {
      "op": "DIV"
    },
    "14651": {
      "op": "DUP4"
    },
    "14652": {
      "op": "GT"
    },
    "14653": {
      "op": "DUP3"
    },
    "14654": {
      "op": "ISZERO"
    },
    "14655": {
      "op": "ISZERO"
    },
    "14656": {
      "op": "AND"
    },
    "14657": {
      "op": "ISZERO"
    },
    "14658": {
      "op": "PUSH2",
      "value": "0x394D"
    },
    "14661": {
      "op": "JUMPI"
    },
    "14662": {
      "op": "PUSH2",
      "value": "0x394D"
    },
    "14665": {
      "op": "PUSH2",
      "value": "0x38D4"
    },
    "14668": {
      "jump": "i",
      "op": "JUMP"
    },
    "14669": {
      "op": "JUMPDEST"
    },
    "14670": {
      "op": "POP"
    },
    "14671": {
      "op": "MUL"
    },
    "14672": {
      "op": "SWAP1"
    },
    "14673": {
      "jump": "o",
      "op": "JUMP"
    },
    "14674": {
      "op": "JUMPDEST"
    },
    "14675": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14680": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14682": {
      "op": "SHL"
    },
    "14683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14685": {
      "op": "MSTORE"
    },
    "14686": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14688": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14690": {
      "op": "MSTORE"
    },
    "14691": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14695": {
      "op": "REVERT"
    },
    "14696": {
      "op": "JUMPDEST"
    },
    "14697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14699": {
      "op": "DUP3"
    },
    "14700": {
      "op": "PUSH2",
      "value": "0x3977"
    },
    "14703": {
      "op": "JUMPI"
    },
    "14704": {
      "op": "PUSH2",
      "value": "0x3977"
    },
    "14707": {
      "op": "PUSH2",
      "value": "0x3952"
    },
    "14710": {
      "jump": "i",
      "op": "JUMP"
    },
    "14711": {
      "op": "JUMPDEST"
    },
    "14712": {
      "op": "POP"
    },
    "14713": {
      "op": "DIV"
    },
    "14714": {
      "op": "SWAP1"
    },
    "14715": {
      "jump": "o",
      "op": "JUMP"
    },
    "14716": {
      "op": "JUMPDEST"
    },
    "14717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14721": {
      "op": "DUP3"
    },
    "14722": {
      "op": "DUP5"
    },
    "14723": {
      "op": "SUB"
    },
    "14724": {
      "op": "SLT"
    },
    "14725": {
      "op": "ISZERO"
    },
    "14726": {
      "op": "PUSH2",
      "value": "0x398E"
    },
    "14729": {
      "op": "JUMPI"
    },
    "14730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14732": {
      "op": "DUP1"
    },
    "14733": {
      "op": "REVERT"
    },
    "14734": {
      "op": "JUMPDEST"
    },
    "14735": {
      "op": "POP"
    },
    "14736": {
      "op": "MLOAD"
    },
    "14737": {
      "op": "SWAP2"
    },
    "14738": {
      "op": "SWAP1"
    },
    "14739": {
      "op": "POP"
    },
    "14740": {
      "jump": "o",
      "op": "JUMP"
    },
    "14741": {
      "op": "JUMPDEST"
    },
    "14742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14746": {
      "op": "DUP3"
    },
    "14747": {
      "op": "DUP5"
    },
    "14748": {
      "op": "SUB"
    },
    "14749": {
      "op": "SLT"
    },
    "14750": {
      "op": "ISZERO"
    },
    "14751": {
      "op": "PUSH2",
      "value": "0x39A7"
    },
    "14754": {
      "op": "JUMPI"
    },
    "14755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14757": {
      "op": "DUP1"
    },
    "14758": {
      "op": "REVERT"
    },
    "14759": {
      "op": "JUMPDEST"
    },
    "14760": {
      "op": "DUP2"
    },
    "14761": {
      "op": "MLOAD"
    },
    "14762": {
      "op": "PUSH2",
      "value": "0x1ED3"
    },
    "14765": {
      "op": "DUP2"
    },
    "14766": {
      "op": "PUSH2",
      "value": "0x36A5"
    },
    "14769": {
      "jump": "i",
      "op": "JUMP"
    },
    "14770": {
      "op": "JUMPDEST"
    },
    "14771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14773": {
      "op": "DUP4"
    },
    "14774": {
      "op": "MLOAD"
    },
    "14775": {
      "op": "PUSH2",
      "value": "0x39C4"
    },
    "14778": {
      "op": "DUP2"
    },
    "14779": {
      "op": "DUP5"
    },
    "14780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14782": {
      "op": "DUP9"
    },
    "14783": {
      "op": "ADD"
    },
    "14784": {
      "op": "PUSH2",
      "value": "0x3382"
    },
    "14787": {
      "jump": "i",
      "op": "JUMP"
    },
    "14788": {
      "op": "JUMPDEST"
    },
    "14789": {
      "op": "DUP4"
    },
    "14790": {
      "op": "MLOAD"
    },
    "14791": {
      "op": "SWAP1"
    },
    "14792": {
      "op": "DUP4"
    },
    "14793": {
      "op": "ADD"
    },
    "14794": {
      "op": "SWAP1"
    },
    "14795": {
      "op": "PUSH2",
      "value": "0x39D8"
    },
    "14798": {
      "op": "DUP2"
    },
    "14799": {
      "op": "DUP4"
    },
    "14800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14802": {
      "op": "DUP9"
    },
    "14803": {
      "op": "ADD"
    },
    "14804": {
      "op": "PUSH2",
      "value": "0x3382"
    },
    "14807": {
      "jump": "i",
      "op": "JUMP"
    },
    "14808": {
      "op": "JUMPDEST"
    },
    "14809": {
      "op": "ADD"
    },
    "14810": {
      "op": "SWAP5"
    },
    "14811": {
      "op": "SWAP4"
    },
    "14812": {
      "op": "POP"
    },
    "14813": {
      "op": "POP"
    },
    "14814": {
      "op": "POP"
    },
    "14815": {
      "op": "POP"
    },
    "14816": {
      "jump": "o",
      "op": "JUMP"
    },
    "14817": {
      "op": "JUMPDEST"
    },
    "14818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14820": {
      "op": "DUP3"
    },
    "14821": {
      "op": "DUP3"
    },
    "14822": {
      "op": "LT"
    },
    "14823": {
      "op": "ISZERO"
    },
    "14824": {
      "op": "PUSH2",
      "value": "0x39F3"
    },
    "14827": {
      "op": "JUMPI"
    },
    "14828": {
      "op": "PUSH2",
      "value": "0x39F3"
    },
    "14831": {
      "op": "PUSH2",
      "value": "0x38D4"
    },
    "14834": {
      "jump": "i",
      "op": "JUMP"
    },
    "14835": {
      "op": "JUMPDEST"
    },
    "14836": {
      "op": "POP"
    },
    "14837": {
      "op": "SUB"
    },
    "14838": {
      "op": "SWAP1"
    },
    "14839": {
      "jump": "o",
      "op": "JUMP"
    },
    "14840": {
      "op": "JUMPDEST"
    },
    "14841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14843": {
      "op": "DUP1"
    },
    "14844": {
      "op": "DUP3"
    },
    "14845": {
      "op": "MSTORE"
    },
    "14846": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14848": {
      "op": "SWAP1"
    },
    "14849": {
      "op": "DUP3"
    },
    "14850": {
      "op": "ADD"
    },
    "14851": {
      "op": "MSTORE"
    },
    "14852": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14885": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14887": {
      "op": "DUP3"
    },
    "14888": {
      "op": "ADD"
    },
    "14889": {
      "op": "MSTORE"
    },
    "14890": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14909": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14911": {
      "op": "SHL"
    },
    "14912": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14914": {
      "op": "DUP3"
    },
    "14915": {
      "op": "ADD"
    },
    "14916": {
      "op": "MSTORE"
    },
    "14917": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14919": {
      "op": "ADD"
    },
    "14920": {
      "op": "SWAP1"
    },
    "14921": {
      "jump": "o",
      "op": "JUMP"
    },
    "14922": {
      "op": "JUMPDEST"
    },
    "14923": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14928": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14930": {
      "op": "SHL"
    },
    "14931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14933": {
      "op": "MSTORE"
    },
    "14934": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14936": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14938": {
      "op": "MSTORE"
    },
    "14939": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14943": {
      "op": "REVERT"
    },
    "14944": {
      "op": "JUMPDEST"
    },
    "14945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14951": {
      "op": "SHL"
    },
    "14952": {
      "op": "SUB"
    },
    "14953": {
      "op": "DUP6"
    },
    "14954": {
      "op": "DUP2"
    },
    "14955": {
      "op": "AND"
    },
    "14956": {
      "op": "DUP3"
    },
    "14957": {
      "op": "MSTORE"
    },
    "14958": {
      "op": "DUP5"
    },
    "14959": {
      "op": "AND"
    },
    "14960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14962": {
      "op": "DUP3"
    },
    "14963": {
      "op": "ADD"
    },
    "14964": {
      "op": "MSTORE"
    },
    "14965": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14967": {
      "op": "DUP2"
    },
    "14968": {
      "op": "ADD"
    },
    "14969": {
      "op": "DUP4"
    },
    "14970": {
      "op": "SWAP1"
    },
    "14971": {
      "op": "MSTORE"
    },
    "14972": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14974": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14976": {
      "op": "DUP3"
    },
    "14977": {
      "op": "ADD"
    },
    "14978": {
      "op": "DUP2"
    },
    "14979": {
      "op": "SWAP1"
    },
    "14980": {
      "op": "MSTORE"
    },
    "14981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14983": {
      "op": "SWAP1"
    },
    "14984": {
      "op": "PUSH2",
      "value": "0x3A93"
    },
    "14987": {
      "op": "SWAP1"
    },
    "14988": {
      "op": "DUP4"
    },
    "14989": {
      "op": "ADD"
    },
    "14990": {
      "op": "DUP5"
    },
    "14991": {
      "op": "PUSH2",
      "value": "0x33AE"
    },
    "14994": {
      "jump": "i",
      "op": "JUMP"
    },
    "14995": {
      "op": "JUMPDEST"
    },
    "14996": {
      "op": "SWAP7"
    },
    "14997": {
      "op": "SWAP6"
    },
    "14998": {
      "op": "POP"
    },
    "14999": {
      "op": "POP"
    },
    "15000": {
      "op": "POP"
    },
    "15001": {
      "op": "POP"
    },
    "15002": {
      "op": "POP"
    },
    "15003": {
      "op": "POP"
    },
    "15004": {
      "jump": "o",
      "op": "JUMP"
    },
    "15005": {
      "op": "JUMPDEST"
    },
    "15006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15010": {
      "op": "DUP3"
    },
    "15011": {
      "op": "DUP5"
    },
    "15012": {
      "op": "SUB"
    },
    "15013": {
      "op": "SLT"
    },
    "15014": {
      "op": "ISZERO"
    },
    "15015": {
      "op": "PUSH2",
      "value": "0x3AAF"
    },
    "15018": {
      "op": "JUMPI"
    },
    "15019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15021": {
      "op": "DUP1"
    },
    "15022": {
      "op": "REVERT"
    },
    "15023": {
      "op": "JUMPDEST"
    },
    "15024": {
      "op": "DUP2"
    },
    "15025": {
      "op": "MLOAD"
    },
    "15026": {
      "op": "PUSH2",
      "value": "0x1ED3"
    },
    "15029": {
      "op": "DUP2"
    },
    "15030": {
      "op": "PUSH2",
      "value": "0x334F"
    },
    "15033": {
      "jump": "i",
      "op": "JUMP"
    },
    "15034": {
      "op": "JUMPDEST"
    },
    "15035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15037": {
      "op": "DUP3"
    },
    "15038": {
      "op": "PUSH2",
      "value": "0x3AC9"
    },
    "15041": {
      "op": "JUMPI"
    },
    "15042": {
      "op": "PUSH2",
      "value": "0x3AC9"
    },
    "15045": {
      "op": "PUSH2",
      "value": "0x3952"
    },
    "15048": {
      "jump": "i",
      "op": "JUMP"
    },
    "15049": {
      "op": "JUMPDEST"
    },
    "15050": {
      "op": "POP"
    },
    "15051": {
      "op": "MOD"
    },
    "15052": {
      "op": "SWAP1"
    },
    "15053": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d7fc3e67f66e4c516ad1ae96792ee7f390675a75",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.8;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./CardinalToken.sol\";\n\n/**\n * @title Cardinal House NFT Contract\n * @dev NFT contract that will be used with the marketplace contract\n */\ncontract CardinalNFT is ERC721URIStorage, Ownable {\n    using Counters for Counters.Counter;\n\n    // Counter to give each NFT a unique ID.\n    Counters.Counter public _tokenIds;\n\n    // Address of the Cardinal NFT marketplace.\n    address public marketplaceAddress;\n\n    // Contract for the Cardinal Token (CRNL).\n    CardinalToken public cardinalToken;\n\n    // Each NFT will be associated with an ID that determines the type of NFT it is\n    // This makes it easy to identify sets of NFTs like Original Cardinal NFTs, membership NFTs, and service NFTs\n    mapping(uint256 => uint256) public tokenIdToTypeId;\n\n    // Each NFT will have a unique listing fee that is kept track of in this mapping.\n    mapping(uint256 => uint256) public tokenIdToListingFee;\n    \n    // Mapping of token ID to address for whitelist spots.\n    mapping(uint256 => address) public tokenIdToWhitelistAddress;\n\n    // Mapping to determine if an address has a membership (either Original Cardinal NFT or membership NFT)\n    mapping(address => bool) public addressIsMember;\n\n    // Mapping to determine the number of membership NFTs an address has (especially if they have Original Cardinal NFT and membership NFT)\n    mapping(address => uint256) public addressToMemberNFTCount;\n\n    // Maps each membership NFT ID to the last block timestamp that the membership was paid for.\n    mapping(uint256 => uint256) public membershipNFTToLastPaid;\n\n    // Mapping to determine which addresses can add and remove other addresses from the member mapping.\n    mapping (address => bool) public addressIsAdmin;\n\n    // Mapping to determine membership discount for addresses.\n    mapping (address => uint256) public addressToMembershipDiscount;\n\n    // The type ID for the Original Cardinal NFTs.\n    uint256 public originalCardinalTypeId = 1;\n\n    // The type ID for the membership NFTs.\n    uint256 public membershipTypeId = 2;\n\n    // The type ID for the service NFTs.\n    uint256 public serviceTypeId = 3;\n\n    // Array of the Original Cardinal token IDs.\n    uint256[] public originalCardinalTokenIds;\n\n    // Array of the membership token IDs.\n    uint256[] public membershipTokenIds;\n\n    // The token URI for all membership NFTs\n    string public membershipTokenURI;\n\n    // The current price of the membership NFT in Cardinal Tokens\n    uint256 public membershipPriceInCardinalTokens;\n\n    event membershipNFTMinted(address indexed owner, uint256 indexed tokenId);\n    event memberChargedForMembership(address indexed member, uint256 indexed tokenId, uint256 membershipPrice, uint256 currTimeStamp);\n    event membershipNFTBurnt(address indexed owner, uint256 indexed tokenId);\n    event tokenURIUpdated(uint256 indexed tokenId, string newTokenURI);\n    event membershipPriceUpdated(uint256 indexed newMembershipPrice);\n    event typeIdUpdated(string indexed typeIdThatWasUpdated, uint256 indexed newTypeId);\n    event memberDiscountSet(address indexed member, uint256 indexed discountAmount);\n\n    constructor(address _marketplaceAddress, address payable _cardinalTokenAddress) ERC721(\"CardinalHouseNFT\", \"CRNLNFT\") {\n        marketplaceAddress = _marketplaceAddress;\n        cardinalToken = CardinalToken(_cardinalTokenAddress);\n    }\n\n    /**\n    * @dev Only owner function to burn a membership NFT\n    * @param tokenId the tokenId of the membership NFT to burn\n     */\n    function burnMembershipNFT(uint256 tokenId) private {\n        for (uint i = 0; i < membershipTokenIds.length; i++) {\n            if (membershipTokenIds[i] == tokenId) {\n                address NFTOwner = ownerOf(membershipTokenIds[i]);\n                _transfer(NFTOwner, address(this), membershipTokenIds[i]);\n\n                emit membershipNFTBurnt(NFTOwner, tokenId);\n\n                membershipTokenIds[i] = membershipTokenIds[membershipTokenIds.length-1];\n                membershipTokenIds.pop();\n            }\n        }\n    }\n\n    /**\n    * @dev Only owner function to burn a membership NFT\n    * @param tokenId the tokenId of the membership NFT to burn\n     */\n    function burnMembershiptNFTManually(uint256 tokenId) external onlyOwner {\n        burnMembershipNFT(tokenId);\n    }\n\n    /**\n     * @dev After a token transfer, update the addressToMember mapping if the NFT is an Original Cardinal or membership NFT\n     * @param from the sender's address\n     * @param to the recipient's address\n     * @param tokenId the tokenId that was transferred\n     */\n    function _afterTokenTransfer(address from, address to, uint256 tokenId) internal virtual override {\n        if (tokenIdToTypeId[tokenId] == membershipTypeId || tokenIdToTypeId[tokenId] == originalCardinalTypeId) {\n            if (from != owner() && from != marketplaceAddress && from != address(0)) {\n                if (addressToMemberNFTCount[from] > 0) {\n                    addressToMemberNFTCount[from] = addressToMemberNFTCount[from] - 1;\n                    if (addressToMemberNFTCount[from] == 0) {\n                        addressIsMember[from] = false;\n                    }\n                }\n                else {\n                    addressIsMember[from] = false;\n                }\n            }\n            addressIsMember[to] = true;\n            addressToMemberNFTCount[to] = addressToMemberNFTCount[to] + 1;\n        }\n\n        super._afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n    * @dev Allows someone to mint a membership NFT by paying Cardinal Tokens\n    * @return the ID of the newly minted membership NFT\n     */\n    function mintMembershipNFT() external returns (uint) {\n        uint256 currMembershipPriceInCardinalTokens = membershipPriceInCardinalTokens;\n\n        if (addressToMembershipDiscount[msg.sender] > 0) {\n            currMembershipPriceInCardinalTokens = membershipPriceInCardinalTokens * addressToMembershipDiscount[msg.sender] / 100;\n        }\n\n        require(cardinalToken.balanceOf(msg.sender) >= currMembershipPriceInCardinalTokens, \"You don't have enough Cardinal Tokens to pay for the membership NFT.\");\n        require(cardinalToken.allowance(msg.sender, address(this)) >= currMembershipPriceInCardinalTokens, \"You haven't approved this contract to spend enough of your Cardinal Tokens to pay for the membership NFT.\");\n        \n        cardinalToken.transferFrom(msg.sender, address(this), currMembershipPriceInCardinalTokens);\n\n        _tokenIds.increment();\n        uint256 newItemId = _tokenIds.current();\n\n        tokenIdToTypeId[newItemId] = membershipTypeId;\n        tokenIdToListingFee[newItemId] = 0;\n        _mint(msg.sender, newItemId);\n        membershipNFTToLastPaid[newItemId] = block.timestamp;\n        addressToMembershipDiscount[msg.sender] = 0;\n        _setTokenURI(newItemId, membershipTokenURI);\n        approve(address(this), newItemId);\n        setApprovalForAll(marketplaceAddress, true);\n\n        membershipTokenIds.push(newItemId);\n\n        emit membershipNFTMinted(msg.sender, newItemId);\n\n        return newItemId;\n    }\n\n    /**\n    * @dev Only owner function to update the timestamp for a membership NFT after it has been paid for for a month.\n    * @param tokenId the ID of the membership NFT to have the timestamp updated for\n    * @param lastPaidTimestamp the timestamp to update the membership NFT to for when it was last paid for\n     */\n    function updateMembershipNFTLastPaid(uint256 tokenId, uint256 lastPaidTimestamp) external onlyOwner {\n        membershipNFTToLastPaid[tokenId] = lastPaidTimestamp;\n    }\n\n    /**\n    * @dev Only owner function to take funds from an address to pay for the next month of a membership\n    * @param member the address of the member that is being charged for the next month of a membership\n    * @param tokenId the token ID that the member is being charged\n    * @param currTimeStamp the current timestamp for the transaction to avoid relying on block.timestamp\n    * @return 0 for success, 1 for failure and NFT burn\n     */\n    function chargeMemberForMembership(address member, uint256 tokenId, uint256 currTimeStamp) external onlyOwner returns (uint) {\n        require(ownerOf(tokenId) == member, \"This address doesn't own the NFT specified.\");\n        require(ownerOf(tokenId) != owner() && ownerOf(tokenId) != marketplaceAddress, \"Can't charge the owner or marketplace for the membership.\");\n\n        uint256 currMembershipPriceInCardinalTokens = membershipPriceInCardinalTokens;\n\n        if (addressToMembershipDiscount[member] > 0) {\n            currMembershipPriceInCardinalTokens = membershipPriceInCardinalTokens * addressToMembershipDiscount[member] / 100;\n        }\n\n        if (cardinalToken.balanceOf(member) < currMembershipPriceInCardinalTokens || cardinalToken.allowance(member, address(this)) < currMembershipPriceInCardinalTokens) {\n            burnMembershipNFT(tokenId);\n            return 1;\n        }\n\n        cardinalToken.transferFrom(member, address(this), currMembershipPriceInCardinalTokens);\n\n        if (currTimeStamp > 0) {\n            membershipNFTToLastPaid[tokenId] = currTimeStamp;\n        }\n        else {\n            membershipNFTToLastPaid[tokenId] = block.timestamp;\n        }\n\n        addressToMembershipDiscount[member] = 0;\n\n        emit memberChargedForMembership(member, tokenId, currMembershipPriceInCardinalTokens, currTimeStamp);\n\n        return 0;\n    }\n\n    /**\n    * @dev Only owner function to withdraw the Cardinal Tokens that are paid to this contract for the Membership NFTs.\n     */\n    function withdrawMembershipNFTFunds() external onlyOwner {\n        cardinalToken.transfer(owner(), cardinalToken.balanceOf(address(this)));\n    }\n\n    /**\n    * @dev Only owner function to mint a new NFT.\n    * @param newTokenURI the token URI on IPFS for the NFT metadata\n    * @param typeId the type ID of the NFT to distinguish what type of NFT it is (Original Cardinal, membership, service)\n    * @param listingFee the fee the user pays when putting the NFT for sale on the marketplace\n    * @param currTimeStamp the current timestamp for the transaction to avoid relying on block.timestamp\n    * @return the ID of the newly minted NFT\n     */\n    function createToken(string memory newTokenURI, uint256 typeId, uint256 listingFee, uint256 currTimeStamp) external onlyOwner returns (uint) {\n        _tokenIds.increment();\n        uint256 newItemId = _tokenIds.current();\n\n        tokenIdToTypeId[newItemId] = typeId;\n        tokenIdToListingFee[newItemId] = listingFee;\n        _mint(msg.sender, newItemId);\n        _setTokenURI(newItemId, newTokenURI);\n        approve(address(this), newItemId);\n        setApprovalForAll(marketplaceAddress, true);\n\n        if (typeId == originalCardinalTypeId) {\n            originalCardinalTokenIds.push(newItemId);\n        }\n        else if (typeId == membershipTypeId) {\n            membershipTokenIds.push(newItemId);\n\n            if (currTimeStamp > 0) {\n                membershipNFTToLastPaid[newItemId] = currTimeStamp;\n            }\n            else {\n                membershipNFTToLastPaid[newItemId] = block.timestamp;\n            }\n        }\n\n        return newItemId;\n    }\n\n    /**\n    * @dev Setter function for the token URI of an NFT.\n    * @param tokenId the ID of the NFT to update the token URI of\n    * @param newTokenURI the token URI to update the NFT with\n     */\n    function setTokenURI(uint256 tokenId, string memory newTokenURI) external onlyOwner {\n        _setTokenURI(tokenId, newTokenURI);\n        emit tokenURIUpdated(tokenId, newTokenURI);\n    }\n\n    /**\n    * @dev Function to get all token URIs for tokens that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's NFTs\n     */\n    function getUserTokenURIs(address userAddress) external view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get all token URIs for Original Cardinal NFTs that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's Original Cardinal NFTs\n     */\n    function getUserOriginalCardinalTokenURIs(address userAddress) external view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == originalCardinalTypeId) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == originalCardinalTypeId) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get all token URIs for membership NFTs that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's membership NFTs\n     */\n    function getUserMembershipTokenURIs(address userAddress) external view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && (tokenIdToTypeId[id] == originalCardinalTypeId || tokenIdToTypeId[id] == membershipTypeId)) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && (tokenIdToTypeId[id] == originalCardinalTypeId || tokenIdToTypeId[id] == membershipTypeId)) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get all token URIs for service NFTs that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's service NFTs\n     */\n    function getUserServiceTokenURIs(address userAddress) external view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == serviceTypeId) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == serviceTypeId) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get a list of all the Original Cardinal NFT IDs.\n    * @return list of the Original Cardinal NFT IDs\n     */\n    function getOriginalCardinalTokenIds() external view returns (uint256[] memory) {\n        return originalCardinalTokenIds;\n    }\n\n    /**\n    * @dev Function to get a list of all the membership NFT IDs.\n    * @return list of the membership NFT IDs\n     */\n    function getMembershipTokenIds() external view returns (uint256[] memory) {\n        return membershipTokenIds;\n    }\n\n    /**\n    * @dev Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.\n    * @param whiteListAddress the address of the user who will be able to purchase the NFT\n    * @param tokenId the ID of the NFT that the whitelist spot is for\n     */\n    function addWhiteListToToken(address whiteListAddress, uint256 tokenId) external onlyOwner {\n        tokenIdToWhitelistAddress[tokenId] = whiteListAddress;\n    }\n\n    /**\n    * @dev updates the listing fee of an NFT.\n    * @param tokenId the ID of the NFT to update the listing fee of\n    * @param newListingFee the listing fee value for the NFT\n     */\n    function updateTokenListingFee(uint256 tokenId, uint256 newListingFee) external onlyOwner {\n        tokenIdToListingFee[tokenId] = newListingFee;\n    }\n\n    /**\n    * @dev updates the type ID of an NFT.\n    * @param tokenId the ID of the NFT to update the type ID of\n    * @param newTypeId the type ID value for the NFT\n     */\n    function updateTokenTypeId(uint256 tokenId, uint256 newTypeId) external onlyOwner {\n        tokenIdToTypeId[tokenId] = newTypeId;\n    }\n\n    /**\n    * @dev updates the type ID that represents the Original Cardinal NFTs\n    * @param newOriginalCardinalTypeId the new type ID of the Original Cardinal NFTs\n     */\n    function updateOriginalCardinalTypeId(uint256 newOriginalCardinalTypeId) external onlyOwner {\n        originalCardinalTypeId = newOriginalCardinalTypeId;\n        emit typeIdUpdated(\"originalCardinalTypeId\", newOriginalCardinalTypeId);\n    }\n\n    /**\n    * @dev updates the type ID that represents the membership NFTs\n    * @param newMembershipTypeId the new type ID of the membership NFTs\n     */\n    function updateMembershipTypeId(uint256 newMembershipTypeId) external onlyOwner {\n        membershipTypeId = newMembershipTypeId;\n        emit typeIdUpdated(\"membershipTypeId\", newMembershipTypeId);\n    }\n\n    /**\n    * @dev updates the type ID that represents the service NFTs\n    * @param newServiceTypeId the new type ID of the service NFTs\n     */\n    function updateServiceTypeId(uint256 newServiceTypeId) external onlyOwner {\n        serviceTypeId = newServiceTypeId;\n        emit typeIdUpdated(\"serviceTypeId\", newServiceTypeId);\n    }\n\n    /**\n    * @dev updates the membership NFT token URI\n    * @param newMembershipTokenURI the new type ID of the service NFTs\n     */\n    function updateMembershipTokenURI(string memory newMembershipTokenURI) external onlyOwner {\n        membershipTokenURI = newMembershipTokenURI;\n    }\n\n    /**\n    * @dev sets the price of the membership NFTs in Cardinal Tokens\n    * @param newMembershipPrice the new price of the membership NFTs in Cardinal Tokens\n     */\n    function updateMembershipPrice(uint256 newMembershipPrice) external onlyOwner {\n        membershipPriceInCardinalTokens = newMembershipPrice;\n        emit membershipPriceUpdated(newMembershipPrice);\n    }\n\n    /**\n    * @dev Only owner function to set the reference to the Cardinal Token contract\n    * @param cardinalTokenAddress the address for the Cardinal Token contract\n    */\n    function setCardinalToken(address payable cardinalTokenAddress) external onlyOwner {\n        cardinalToken = CardinalToken(cardinalTokenAddress);\n    }\n\n    /**\n    * @dev Only owner function to update the admin mapping.\n    * @param adminAddress the address to admin rights for\n    * @param isAdmin boolean to determine if the address is an admin or not\n    */\n    function setAdminUser(address adminAddress, bool isAdmin) external onlyOwner {\n        addressIsAdmin[adminAddress] = isAdmin;\n    }\n\n    /**\n    * @dev Allows contract admins to manually add an address as a member. Necessary for memberships purchased through Patreon.\n    * @param memberAddress the address of the member being added\n    */\n    function addMember(address memberAddress) external {\n        require(addressIsAdmin[msg.sender], \"Only contract admins can add members.\");\n\n        addressIsMember[memberAddress] = true;\n    }\n\n    /**\n    * @dev Allows contract admins to manually remove an address as a member. Necessary for when a membership bought through Patreon expires.\n    * @param memberAddress the address to remove from the membership list\n    */\n    function removeMember(address memberAddress) external {\n        require(addressIsAdmin[msg.sender], \"Only contract admins can remove a member.\");\n\n        addressIsMember[memberAddress] = false;\n    }\n\n    /**\n    * @dev Allows contract admins to set a membership discount for an address.\n    * @param memberAddress the address to give the discount to\n    * @param discountAmount the discount amount, 90 for 90% of membership price, 75 for 75% of membership price, etc.\n    */\n    function setMemberDiscount(address memberAddress, uint256 discountAmount) external {\n        require(addressIsAdmin[msg.sender], \"Only contract admins can set a membership discount.\");\n        addressToMembershipDiscount[memberAddress] = discountAmount;\n        emit memberDiscountSet(memberAddress, discountAmount);\n    }\n}",
  "sourceMap": "445:21264:19:-:0;;;2247:1;2207:41;;2333:1;2299:35;;2413:1;2382:32;;3414:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:5;;;;;;;;;;;-1:-1:-1;;;1390:113:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:5;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:5;:::i;:::-;-1:-1:-1;1479:17:5;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;3542:18:19::1;:40:::0;;-1:-1:-1;;;;;3542:40:19;;::::1;-1:-1:-1::0;;;;;;3542:40:19;;::::1;;::::0;;;3592:13:::1;:52:::0;;;;;::::1;::::0;::::1;;::::0;;445:21264;;640:96:11;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;445:21264:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;445:21264:19;;;-1:-1:-1;445:21264:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:40;-1:-1:-1;;;;;89:31:40;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:393::-;237:6;245;298:2;286:9;277:7;273:23;269:32;266:52;;;314:1;311;304:12;266:52;346:9;340:16;365:31;390:5;365:31;:::i;:::-;465:2;450:18;;444:25;415:5;;-1:-1:-1;478:33:40;444:25;478:33;:::i;:::-;530:7;520:17;;;150:393;;;;;:::o;548:380::-;627:1;623:12;;;;670;;;691:61;;745:4;737:6;733:17;723:27;;691:61;798:2;790:6;787:14;767:18;764:38;761:161;;;844:10;839:3;835:20;832:1;825:31;879:4;876:1;869:15;907:4;904:1;897:15;761:161;;548:380;;;:::o;:::-;445:21264:19;;;;;;",
  "sourcePath": "contracts/CardinalNFT.sol",
  "type": "contract"
}