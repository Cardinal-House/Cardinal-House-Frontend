{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_marketplaceAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_cardinalTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_tokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "whiteListAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "addWhiteListToToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressIsMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToMemberNFTCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burnMembershiptNFTManually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cardinalToken",
      "outputs": [
        {
          "internalType": "contract CardinalToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "chargeMemberForMembership",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "typeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "listingFee",
          "type": "uint256"
        }
      ],
      "name": "createToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembershipTokenIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOriginalCardinalTokenIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserMembershipTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserOriginalCardinalTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserServiceTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketplaceAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "membershipNFTToLastPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "membershipPriceInCardinalTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "membershipTokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "membershipTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "membershipTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintMembershipNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "originalCardinalTokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "originalCardinalTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "serviceTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "cardinalTokenAddress",
          "type": "address"
        }
      ],
      "name": "setCardinalToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToListingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToWhitelistAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastPaidTimestamp",
          "type": "uint256"
        }
      ],
      "name": "updateMembershipNFTLastPaid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMembershipPrice",
          "type": "uint256"
        }
      ],
      "name": "updateMembershipPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newMembershipTokenURI",
          "type": "string"
        }
      ],
      "name": "updateMembershipTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMembershipTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateMembershipTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newOriginalCardinalTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateOriginalCardinalTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newServiceTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateServiceTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newListingFee",
          "type": "uint256"
        }
      ],
      "name": "updateTokenListingFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateTokenTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawMembershipNFTFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "11": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "12": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
    "14": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
    "15": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "19": "contracts/CardinalNFT.sol",
    "20": "contracts/CardinalToken.sol",
    "3": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "39": "interfaces/Uniswap.sol",
    "5": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
    "6": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "8": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
    "9": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/CardinalNFT.sol",
    "exportedSymbols": {
      "Address": [
        11470
      ],
      "CardinalNFT": [
        2868
      ],
      "CardinalToken": [
        3870
      ],
      "Context": [
        11014
      ],
      "Counters": [
        9465
      ],
      "ERC165": [
        11494
      ],
      "ERC20": [
        10384
      ],
      "ERC721": [
        9391
      ],
      "ERC721URIStorage": [
        9796
      ],
      "IERC165": [
        11917
      ],
      "IERC20": [
        11572
      ],
      "IERC20Metadata": [
        11597
      ],
      "IERC721": [
        11130
      ],
      "IERC721Metadata": [
        11175
      ],
      "IERC721Receiver": [
        11148
      ],
      "IUniswapV2Factory": [
        10396
      ],
      "IUniswapV2Pair": [
        10400
      ],
      "IUniswapV2Router01": [
        10457
      ],
      "IUniswapV2Router02": [
        10517
      ],
      "Ownable": [
        8485
      ],
      "Strings": [
        9668
      ]
    },
    "id": 2869,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1684,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:19"
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 1685,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2869,
        "sourceUnit": 9466,
        "src": "65:52:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 1686,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2869,
        "sourceUnit": 9797,
        "src": "118:78:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 1687,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2869,
        "sourceUnit": 9392,
        "src": "197:57:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1688,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2869,
        "sourceUnit": 8486,
        "src": "255:52:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CardinalToken.sol",
        "file": "./CardinalToken.sol",
        "id": 1689,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2869,
        "sourceUnit": 3871,
        "src": "308:29:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1691,
              "name": "ERC721URIStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9796,
              "src": "478:16:19"
            },
            "id": 1692,
            "nodeType": "InheritanceSpecifier",
            "src": "478:16:19"
          },
          {
            "baseName": {
              "id": 1693,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8485,
              "src": "496:7:19"
            },
            "id": 1694,
            "nodeType": "InheritanceSpecifier",
            "src": "496:7:19"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1690,
          "nodeType": "StructuredDocumentation",
          "src": "339:114:19",
          "text": " @title Cardinal House NFT Contract\n @dev NFT contract that will be used with the marketplace contract"
        },
        "fullyImplemented": true,
        "id": 2868,
        "linearizedBaseContracts": [
          2868,
          8485,
          9796,
          9391,
          11175,
          11130,
          11494,
          11917,
          11014
        ],
        "name": "CardinalNFT",
        "nameLocation": "463:11:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1698,
            "libraryName": {
              "id": 1695,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9465,
              "src": "516:8:19"
            },
            "nodeType": "UsingForDirective",
            "src": "510:36:19",
            "typeName": {
              "id": 1697,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1696,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9397,
                "src": "529:16:19"
              },
              "referencedDeclaration": 9397,
              "src": "529:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9397_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "aa46a400",
            "id": 1701,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "621:9:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "597:33:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$9397_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 1700,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1699,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9397,
                "src": "597:16:19"
              },
              "referencedDeclaration": 9397,
              "src": "597:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9397_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "daa17f49",
            "id": 1703,
            "mutability": "mutable",
            "name": "marketplaceAddress",
            "nameLocation": "700:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "685:33:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1702,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "685:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0e1bac89",
            "id": 1706,
            "mutability": "mutable",
            "name": "cardinalToken",
            "nameLocation": "793:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "772:34:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CardinalToken_$3870",
              "typeString": "contract CardinalToken"
            },
            "typeName": {
              "id": 1705,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1704,
                "name": "CardinalToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3870,
                "src": "772:13:19"
              },
              "referencedDeclaration": 3870,
              "src": "772:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CardinalToken_$3870",
                "typeString": "contract CardinalToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f48853b",
            "id": 1710,
            "mutability": "mutable",
            "name": "tokenIdToTypeId",
            "nameLocation": "1046:15:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "1011:50:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1709,
              "keyType": {
                "id": 1707,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1019:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1011:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1708,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1030:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b063c954",
            "id": 1714,
            "mutability": "mutable",
            "name": "tokenIdToListingFee",
            "nameLocation": "1189:19:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "1154:54:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1713,
              "keyType": {
                "id": 1711,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1162:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1154:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1712,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1173:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c23a67a",
            "id": 1718,
            "mutability": "mutable",
            "name": "tokenIdToWhitelistAddress",
            "nameLocation": "1313:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "1278:60:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1717,
              "keyType": {
                "id": 1715,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1286:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1278:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1716,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1297:7:19",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "28da575b",
            "id": 1722,
            "mutability": "mutable",
            "name": "addressIsMember",
            "nameLocation": "1485:15:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "1453:47:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1721,
              "keyType": {
                "id": 1719,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1461:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1453:24:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1720,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1472:4:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dca8bc47",
            "id": 1726,
            "mutability": "mutable",
            "name": "addressToMemberNFTCount",
            "nameLocation": "1682:23:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "1647:58:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1725,
              "keyType": {
                "id": 1723,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1655:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1647:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1724,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1666:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "11ab8df5",
            "id": 1730,
            "mutability": "mutable",
            "name": "membershipNFTToLastPaid",
            "nameLocation": "1844:23:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "1809:58:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1729,
              "keyType": {
                "id": 1727,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1817:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1809:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1728,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1828:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46d36230",
            "id": 1733,
            "mutability": "mutable",
            "name": "originalCardinalTypeId",
            "nameLocation": "1940:22:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "1925:41:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1731,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1925:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 1732,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1965:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17550165",
            "id": 1736,
            "mutability": "mutable",
            "name": "membershipTypeId",
            "nameLocation": "2032:16:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "2017:35:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1734,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2017:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 1735,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2051:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "71af8374",
            "id": 1739,
            "mutability": "mutable",
            "name": "serviceTypeId",
            "nameLocation": "2115:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "2100:32:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1737,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2100:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 1738,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2131:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b43affda",
            "id": 1742,
            "mutability": "mutable",
            "name": "originalCardinalTokenIds",
            "nameLocation": "2205:24:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "2188:41:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 1740,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2188:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1741,
              "nodeType": "ArrayTypeName",
              "src": "2188:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b15d8d5f",
            "id": 1745,
            "mutability": "mutable",
            "name": "membershipTokenIds",
            "nameLocation": "2295:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "2278:35:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 1743,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2278:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1744,
              "nodeType": "ArrayTypeName",
              "src": "2278:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95914875",
            "id": 1747,
            "mutability": "mutable",
            "name": "membershipTokenURI",
            "nameLocation": "2379:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "2365:32:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1746,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2365:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fe0596f2",
            "id": 1749,
            "mutability": "mutable",
            "name": "membershipPriceInCardinalTokens",
            "nameLocation": "2485:31:19",
            "nodeType": "VariableDeclaration",
            "scope": 2868,
            "src": "2470:46:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1748,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2470:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1770,
              "nodeType": "Block",
              "src": "2641:119:19",
              "statements": [
                {
                  "expression": {
                    "id": 1762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1760,
                      "name": "marketplaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1703,
                      "src": "2651:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1761,
                      "name": "_marketplaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1751,
                      "src": "2672:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2651:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1763,
                  "nodeType": "ExpressionStatement",
                  "src": "2651:40:19"
                },
                {
                  "expression": {
                    "id": 1768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1764,
                      "name": "cardinalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1706,
                      "src": "2701:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CardinalToken_$3870",
                        "typeString": "contract CardinalToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1766,
                          "name": "_cardinalTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1753,
                          "src": "2731:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 1765,
                        "name": "CardinalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3870,
                        "src": "2717:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CardinalToken_$3870_$",
                          "typeString": "type(contract CardinalToken)"
                        }
                      },
                      "id": 1767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2717:36:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CardinalToken_$3870",
                        "typeString": "contract CardinalToken"
                      }
                    },
                    "src": "2701:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CardinalToken_$3870",
                      "typeString": "contract CardinalToken"
                    }
                  },
                  "id": 1769,
                  "nodeType": "ExpressionStatement",
                  "src": "2701:52:19"
                }
              ]
            },
            "id": 1771,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "43617264696e616c486f7573654e4654",
                    "id": 1756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2610:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6ee88678998c54718817266dc4a98fb48d8777ef8dc15d90449d31aedae09c52",
                      "typeString": "literal_string \"CardinalHouseNFT\""
                    },
                    "value": "CardinalHouseNFT"
                  },
                  {
                    "hexValue": "43524e4c4e4654",
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2630:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_837df6b24b44e841af94bf28f10c6aad119ef15fb5f6eaccbd21edaaec5c8586",
                      "typeString": "literal_string \"CRNLNFT\""
                    },
                    "value": "CRNLNFT"
                  }
                ],
                "id": 1758,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1755,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9391,
                  "src": "2603:6:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2603:37:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1751,
                  "mutability": "mutable",
                  "name": "_marketplaceAddress",
                  "nameLocation": "2543:19:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1771,
                  "src": "2535:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1753,
                  "mutability": "mutable",
                  "name": "_cardinalTokenAddress",
                  "nameLocation": "2580:21:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1771,
                  "src": "2564:37:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2564:15:19",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2534:68:19"
            },
            "returnParameters": {
              "id": 1759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2641:0:19"
            },
            "scope": 2868,
            "src": "2523:237:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1832,
              "nodeType": "Block",
              "src": "2953:420:19",
              "statements": [
                {
                  "body": {
                    "id": 1830,
                    "nodeType": "Block",
                    "src": "3016:351:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1788,
                              "name": "membershipTokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1745,
                              "src": "3034:18:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1790,
                            "indexExpression": {
                              "id": 1789,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1778,
                              "src": "3053:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3034:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1791,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1774,
                            "src": "3059:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3034:32:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1829,
                        "nodeType": "IfStatement",
                        "src": "3030:327:19",
                        "trueBody": {
                          "id": 1828,
                          "nodeType": "Block",
                          "src": "3068:289:19",
                          "statements": [
                            {
                              "assignments": [
                                1794
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1794,
                                  "mutability": "mutable",
                                  "name": "NFTOwner",
                                  "nameLocation": "3094:8:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1828,
                                  "src": "3086:16:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1793,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3086:7:19",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1800,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1796,
                                      "name": "membershipTokenIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1745,
                                      "src": "3113:18:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 1798,
                                    "indexExpression": {
                                      "id": 1797,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1778,
                                      "src": "3132:1:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3113:21:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1795,
                                  "name": "ownerOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8671,
                                  "src": "3105:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view returns (address)"
                                  }
                                },
                                "id": 1799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3105:30:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3086:49:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1802,
                                    "name": "NFTOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1794,
                                    "src": "3163:8:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1805,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3181:4:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                                          "typeString": "contract CardinalNFT"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                                          "typeString": "contract CardinalNFT"
                                        }
                                      ],
                                      "id": 1804,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3173:7:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1803,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3173:7:19",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1806,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3173:13:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1807,
                                      "name": "membershipTokenIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1745,
                                      "src": "3188:18:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 1809,
                                    "indexExpression": {
                                      "id": 1808,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1778,
                                      "src": "3207:1:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3188:21:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1801,
                                  "name": "_transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9250,
                                  "src": "3153:9:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3153:57:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1811,
                              "nodeType": "ExpressionStatement",
                              "src": "3153:57:19"
                            },
                            {
                              "expression": {
                                "id": 1821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1812,
                                    "name": "membershipTokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1745,
                                    "src": "3229:18:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 1814,
                                  "indexExpression": {
                                    "id": 1813,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1778,
                                    "src": "3248:1:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3229:21:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1815,
                                    "name": "membershipTokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1745,
                                    "src": "3253:18:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 1820,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1816,
                                        "name": "membershipTokenIds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1745,
                                        "src": "3272:18:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 1817,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "3272:25:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1818,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3298:1:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3272:27:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3253:47:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3229:71:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1822,
                              "nodeType": "ExpressionStatement",
                              "src": "3229:71:19"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 1823,
                                    "name": "membershipTokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1745,
                                    "src": "3318:18:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 1825,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "src": "3318:22:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                    "typeString": "function (uint256[] storage pointer)"
                                  }
                                },
                                "id": 1826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3318:24:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1827,
                              "nodeType": "ExpressionStatement",
                              "src": "3318:24:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1781,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1778,
                      "src": "2980:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1782,
                        "name": "membershipTokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1745,
                        "src": "2984:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2984:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2980:29:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1831,
                  "initializationExpression": {
                    "assignments": [
                      1778
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1778,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2973:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 1831,
                        "src": "2968:6:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1777,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2968:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1780,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2977:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2968:10:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3011:3:19",
                      "subExpression": {
                        "id": 1785,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "3011:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1787,
                    "nodeType": "ExpressionStatement",
                    "src": "3011:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "2963:404:19"
                }
              ]
            },
            "documentation": {
              "id": 1772,
              "nodeType": "StructuredDocumentation",
              "src": "2766:130:19",
              "text": " @dev Only owner function to burn a membership NFT\n @param tokenId the tokenId of the membership NFT to burn"
            },
            "id": 1833,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnMembershipNFT",
            "nameLocation": "2910:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1774,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2936:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1833,
                  "src": "2928:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2928:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2927:17:19"
            },
            "returnParameters": {
              "id": 1776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2953:0:19"
            },
            "scope": 2868,
            "src": "2901:472:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1845,
              "nodeType": "Block",
              "src": "3584:43:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1842,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "3612:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1841,
                      "name": "burnMembershipNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1833,
                      "src": "3594:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3594:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1844,
                  "nodeType": "ExpressionStatement",
                  "src": "3594:26:19"
                }
              ]
            },
            "documentation": {
              "id": 1834,
              "nodeType": "StructuredDocumentation",
              "src": "3379:130:19",
              "text": " @dev Only owner function to burn a membership NFT\n @param tokenId the tokenId of the membership NFT to burn"
            },
            "functionSelector": "eecbbec4",
            "id": 1846,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1839,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1838,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "3574:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "3574:9:19"
              }
            ],
            "name": "burnMembershiptNFTManually",
            "nameLocation": "3523:26:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1836,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3558:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1846,
                  "src": "3550:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3550:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3549:17:19"
            },
            "returnParameters": {
              "id": 1840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3584:0:19"
            },
            "scope": 2868,
            "src": "3514:113:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9390
            ],
            "body": {
              "id": 1948,
              "nodeType": "Block",
              "src": "4007:795:19",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1857,
                          "name": "tokenIdToTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1710,
                          "src": "4021:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1859,
                        "indexExpression": {
                          "id": 1858,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1853,
                          "src": "4037:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4021:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1860,
                        "name": "membershipTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1736,
                        "src": "4049:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4021:44:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1862,
                          "name": "tokenIdToTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1710,
                          "src": "4069:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1864,
                        "indexExpression": {
                          "id": 1863,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1853,
                          "src": "4085:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4069:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1865,
                        "name": "originalCardinalTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1733,
                        "src": "4097:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4069:50:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4021:98:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1939,
                  "nodeType": "IfStatement",
                  "src": "4017:724:19",
                  "trueBody": {
                    "id": 1938,
                    "nodeType": "Block",
                    "src": "4121:620:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1868,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1849,
                                "src": "4139:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1869,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8413,
                                  "src": "4147:5:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 1870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4147:7:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4139:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1872,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1849,
                                "src": "4158:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1873,
                                "name": "marketplaceAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1703,
                                "src": "4166:18:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4158:26:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4139:45:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1876,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1849,
                              "src": "4188:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1879,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4204:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4196:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1877,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4196:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4196:10:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4188:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4139:67:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1921,
                        "nodeType": "IfStatement",
                        "src": "4135:481:19",
                        "trueBody": {
                          "id": 1920,
                          "nodeType": "Block",
                          "src": "4208:408:19",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1887,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1883,
                                    "name": "addressToMemberNFTCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1726,
                                    "src": "4230:23:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1885,
                                  "indexExpression": {
                                    "id": 1884,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1849,
                                    "src": "4254:4:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4230:29:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1886,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4262:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4230:33:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1918,
                                "nodeType": "Block",
                                "src": "4532:70:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1916,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1912,
                                          "name": "addressIsMember",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1722,
                                          "src": "4554:15:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                            "typeString": "mapping(address => bool)"
                                          }
                                        },
                                        "id": 1914,
                                        "indexExpression": {
                                          "id": 1913,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1849,
                                          "src": "4570:4:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "4554:21:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "66616c7365",
                                        "id": 1915,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4578:5:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      "src": "4554:29:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1917,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4554:29:19"
                                  }
                                ]
                              },
                              "id": 1919,
                              "nodeType": "IfStatement",
                              "src": "4226:376:19",
                              "trueBody": {
                                "id": 1911,
                                "nodeType": "Block",
                                "src": "4265:245:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1896,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1888,
                                          "name": "addressToMemberNFTCount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1726,
                                          "src": "4287:23:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 1890,
                                        "indexExpression": {
                                          "id": 1889,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1849,
                                          "src": "4311:4:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "4287:29:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1895,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "baseExpression": {
                                            "id": 1891,
                                            "name": "addressToMemberNFTCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1726,
                                            "src": "4319:23:19",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 1893,
                                          "indexExpression": {
                                            "id": 1892,
                                            "name": "from",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1849,
                                            "src": "4343:4:19",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4319:29:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1894,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4351:1:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "4319:33:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4287:65:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1897,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4287:65:19"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1902,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 1898,
                                          "name": "addressToMemberNFTCount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1726,
                                          "src": "4378:23:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 1900,
                                        "indexExpression": {
                                          "id": 1899,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1849,
                                          "src": "4402:4:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4378:29:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1901,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4411:1:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "4378:34:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1910,
                                    "nodeType": "IfStatement",
                                    "src": "4374:118:19",
                                    "trueBody": {
                                      "id": 1909,
                                      "nodeType": "Block",
                                      "src": "4414:78:19",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1907,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "id": 1903,
                                                "name": "addressIsMember",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1722,
                                                "src": "4440:15:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                  "typeString": "mapping(address => bool)"
                                                }
                                              },
                                              "id": 1905,
                                              "indexExpression": {
                                                "id": 1904,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1849,
                                                "src": "4456:4:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "4440:21:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "hexValue": "66616c7365",
                                              "id": 1906,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "bool",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "4464:5:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "value": "false"
                                            },
                                            "src": "4440:29:19",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1908,
                                          "nodeType": "ExpressionStatement",
                                          "src": "4440:29:19"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1922,
                              "name": "addressIsMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1722,
                              "src": "4629:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1924,
                            "indexExpression": {
                              "id": 1923,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1851,
                              "src": "4645:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4629:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4651:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4629:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1927,
                        "nodeType": "ExpressionStatement",
                        "src": "4629:26:19"
                      },
                      {
                        "expression": {
                          "id": 1936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1928,
                              "name": "addressToMemberNFTCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1726,
                              "src": "4669:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1930,
                            "indexExpression": {
                              "id": 1929,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1851,
                              "src": "4693:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4669:27:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1931,
                                "name": "addressToMemberNFTCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1726,
                                "src": "4699:23:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1933,
                              "indexExpression": {
                                "id": 1932,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1851,
                                "src": "4723:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4699:27:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4729:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4699:31:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4669:61:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1937,
                        "nodeType": "ExpressionStatement",
                        "src": "4669:61:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1943,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1849,
                        "src": "4777:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1944,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1851,
                        "src": "4783:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1945,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1853,
                        "src": "4787:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1940,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4751:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CardinalNFT_$2868_$",
                          "typeString": "type(contract super CardinalNFT)"
                        }
                      },
                      "id": 1942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9390,
                      "src": "4751:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4751:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1947,
                  "nodeType": "ExpressionStatement",
                  "src": "4751:44:19"
                }
              ]
            },
            "documentation": {
              "id": 1847,
              "nodeType": "StructuredDocumentation",
              "src": "3633:271:19",
              "text": " @dev After a token transfer, update the addressToMember mapping if the NFT is an Original Cardinal or membership NFT\n @param from the sender's address\n @param to the recipient's address\n @param tokenId the tokenId that was transferred"
            },
            "id": 1949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "3918:19:19",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1855,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3998:8:19"
            },
            "parameters": {
              "id": 1854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1849,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3946:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "3938:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3938:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3960:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "3952:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3952:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1853,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3972:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "3964:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3964:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3937:43:19"
            },
            "returnParameters": {
              "id": 1856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4007:0:19"
            },
            "scope": 2868,
            "src": "3909:893:19",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2055,
              "nodeType": "Block",
              "src": "5008:988:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1958,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5050:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5050:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1956,
                              "name": "cardinalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1706,
                              "src": "5026:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                "typeString": "contract CardinalToken"
                              }
                            },
                            "id": 1957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9895,
                            "src": "5026:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5026:35:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1961,
                          "name": "membershipPriceInCardinalTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1749,
                          "src": "5065:31:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5026:70:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f7567682043617264696e616c20546f6b656e7320746f2070617920666f7220746865206d656d62657273686970204e46542e",
                        "id": 1963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5098:70:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52966867b18a9bacf4bdca1586d2adc25583518f6f88b89cdea879d446a3df3e",
                          "typeString": "literal_string \"You don't have enough Cardinal Tokens to pay for the membership NFT.\""
                        },
                        "value": "You don't have enough Cardinal Tokens to pay for the membership NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_52966867b18a9bacf4bdca1586d2adc25583518f6f88b89cdea879d446a3df3e",
                          "typeString": "literal_string \"You don't have enough Cardinal Tokens to pay for the membership NFT.\""
                        }
                      ],
                      "id": 1955,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5018:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5018:151:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1965,
                  "nodeType": "ExpressionStatement",
                  "src": "5018:151:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1969,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5211:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5211:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1973,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5231:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                                    "typeString": "contract CardinalNFT"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                                    "typeString": "contract CardinalNFT"
                                  }
                                ],
                                "id": 1972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5223:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1971,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5223:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5223:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1967,
                              "name": "cardinalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1706,
                              "src": "5187:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                "typeString": "contract CardinalToken"
                              }
                            },
                            "id": 1968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9938,
                            "src": "5187:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5187:50:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1976,
                          "name": "membershipPriceInCardinalTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1749,
                          "src": "5241:31:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5187:85:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520686176656e277420617070726f766564207468697320636f6e747261637420746f207370656e6420656e6f756768206f6620796f75722043617264696e616c20546f6b656e7320746f2070617920666f7220746865206d656d62657273686970204e46542e",
                        "id": 1978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5274:107:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fed4261beeece14029a200acfec51152f371bab0a973bb948b1332e077f75a9",
                          "typeString": "literal_string \"You haven't approved this contract to spend enough of your Cardinal Tokens to pay for the membership NFT.\""
                        },
                        "value": "You haven't approved this contract to spend enough of your Cardinal Tokens to pay for the membership NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fed4261beeece14029a200acfec51152f371bab0a973bb948b1332e077f75a9",
                          "typeString": "literal_string \"You haven't approved this contract to spend enough of your Cardinal Tokens to pay for the membership NFT.\""
                        }
                      ],
                      "id": 1966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5179:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5179:203:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1980,
                  "nodeType": "ExpressionStatement",
                  "src": "5179:203:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1984,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5428:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5428:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1988,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5448:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 1987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5440:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1986,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5440:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5440:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1990,
                        "name": "membershipPriceInCardinalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "5455:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1981,
                        "name": "cardinalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1706,
                        "src": "5401:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CardinalToken_$3870",
                          "typeString": "contract CardinalToken"
                        }
                      },
                      "id": 1983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3543,
                      "src": "5401:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5401:86:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1992,
                  "nodeType": "ExpressionStatement",
                  "src": "5401:86:19"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1993,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "5498:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9397_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1995,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9423,
                      "src": "5498:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$9397_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$9397_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 1996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5498:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1997,
                  "nodeType": "ExpressionStatement",
                  "src": "5498:21:19"
                },
                {
                  "assignments": [
                    1999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1999,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "5537:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2055,
                      "src": "5529:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1998,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5529:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2003,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2000,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "5549:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9397_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2001,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9409,
                      "src": "5549:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9397_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9397_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5549:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5529:39:19"
                },
                {
                  "expression": {
                    "id": 2008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2004,
                        "name": "tokenIdToTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "5579:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2006,
                      "indexExpression": {
                        "id": 2005,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "5595:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5579:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2007,
                      "name": "membershipTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1736,
                      "src": "5608:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5579:45:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2009,
                  "nodeType": "ExpressionStatement",
                  "src": "5579:45:19"
                },
                {
                  "expression": {
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2010,
                        "name": "tokenIdToListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "5634:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2012,
                      "indexExpression": {
                        "id": 2011,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "5654:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5634:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5667:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5634:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2015,
                  "nodeType": "ExpressionStatement",
                  "src": "5634:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2017,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5684:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5684:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2019,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "5696:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2016,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9115,
                      "src": "5678:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5678:28:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2021,
                  "nodeType": "ExpressionStatement",
                  "src": "5678:28:19"
                },
                {
                  "expression": {
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2022,
                        "name": "membershipNFTToLastPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "5716:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2024,
                      "indexExpression": {
                        "id": 2023,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "5740:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5716:34:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2025,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5753:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5753:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5716:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2028,
                  "nodeType": "ExpressionStatement",
                  "src": "5716:52:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2030,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "5791:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2031,
                        "name": "membershipTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1747,
                        "src": "5802:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 2029,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9765,
                      "src": "5778:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5778:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2033,
                  "nodeType": "ExpressionStatement",
                  "src": "5778:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2037,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5847:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5839:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2035,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5839:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5839:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2039,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "5854:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2034,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8785,
                      "src": "5831:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5831:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2041,
                  "nodeType": "ExpressionStatement",
                  "src": "5831:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2043,
                        "name": "marketplaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1703,
                        "src": "5892:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5912:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2042,
                      "name": "setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8823,
                      "src": "5874:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 2045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5874:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2046,
                  "nodeType": "ExpressionStatement",
                  "src": "5874:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2050,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "5952:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2047,
                        "name": "membershipTokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1745,
                        "src": "5928:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 2049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5928:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 2051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5928:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2052,
                  "nodeType": "ExpressionStatement",
                  "src": "5928:34:19"
                },
                {
                  "expression": {
                    "id": 2053,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1999,
                    "src": "5980:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1954,
                  "id": 2054,
                  "nodeType": "Return",
                  "src": "5973:16:19"
                }
              ]
            },
            "documentation": {
              "id": 1950,
              "nodeType": "StructuredDocumentation",
              "src": "4808:144:19",
              "text": " @dev Allows someone to mint a membership NFT by paying Cardinal Tokens\n @return the ID of the newly minted membership NFT"
            },
            "functionSelector": "7498d280",
            "id": 2056,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintMembershipNFT",
            "nameLocation": "4966:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4983:2:19"
            },
            "returnParameters": {
              "id": 1954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1953,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2056,
                  "src": "5002:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1952,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5002:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5001:6:19"
            },
            "scope": 2868,
            "src": "4957:1039:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2072,
              "nodeType": "Block",
              "src": "6423:69:19",
              "statements": [
                {
                  "expression": {
                    "id": 2070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2066,
                        "name": "membershipNFTToLastPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "6433:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2068,
                      "indexExpression": {
                        "id": 2067,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2059,
                        "src": "6457:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6433:32:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2069,
                      "name": "lastPaidTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2061,
                      "src": "6468:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6433:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2071,
                  "nodeType": "ExpressionStatement",
                  "src": "6433:52:19"
                }
              ]
            },
            "documentation": {
              "id": 2057,
              "nodeType": "StructuredDocumentation",
              "src": "6002:318:19",
              "text": " @dev Only owner function to update the timestamp for a membership NFT after it has been paid for for a month.\n @param tokenId the ID of the membership NFT to have the timestamp updated for\n @param lastPaidTimestamp the timestamp to update the membership NFT to for when it was last paid for"
            },
            "functionSelector": "1c652fb5",
            "id": 2073,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2064,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2063,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "6413:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "6413:9:19"
              }
            ],
            "name": "updateMembershipNFTLastPaid",
            "nameLocation": "6334:27:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2059,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6370:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "6362:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6362:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2061,
                  "mutability": "mutable",
                  "name": "lastPaidTimestamp",
                  "nameLocation": "6387:17:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "6379:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6379:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6361:44:19"
            },
            "returnParameters": {
              "id": 2065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6423:0:19"
            },
            "scope": 2868,
            "src": "6325:167:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2155,
              "nodeType": "Block",
              "src": "6944:656:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2087,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2078,
                              "src": "6970:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2086,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8671,
                            "src": "6962:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 2088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6962:16:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2089,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2076,
                          "src": "6982:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6962:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206164647265737320646f65736e2774206f776e20746865204e4654207370656369666965642e",
                        "id": 2091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6990:45:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_655a88e2cd124c545f32cef045bc3f8aca7e11950295592b0824fb0a1e8e26dc",
                          "typeString": "literal_string \"This address doesn't own the NFT specified.\""
                        },
                        "value": "This address doesn't own the NFT specified."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_655a88e2cd124c545f32cef045bc3f8aca7e11950295592b0824fb0a1e8e26dc",
                          "typeString": "literal_string \"This address doesn't own the NFT specified.\""
                        }
                      ],
                      "id": 2085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6954:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6954:82:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2093,
                  "nodeType": "ExpressionStatement",
                  "src": "6954:82:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2096,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2078,
                                "src": "7062:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2095,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8671,
                              "src": "7054:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 2097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7054:16:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2098,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8413,
                              "src": "7074:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7074:7:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7054:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2102,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2078,
                                "src": "7093:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2101,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8671,
                              "src": "7085:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 2103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7085:16:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2104,
                            "name": "marketplaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1703,
                            "src": "7105:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7085:38:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7054:69:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e27742063686172676520746865206f776e6572206f72206d61726b6574706c61636520666f7220746865206d656d626572736869702e",
                        "id": 2107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7125:59:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69025aa7d9144b4895576b86225b0f405885f990436c7832db0d661450aeb25e",
                          "typeString": "literal_string \"Can't charge the owner or marketplace for the membership.\""
                        },
                        "value": "Can't charge the owner or marketplace for the membership."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69025aa7d9144b4895576b86225b0f405885f990436c7832db0d661450aeb25e",
                          "typeString": "literal_string \"Can't charge the owner or marketplace for the membership.\""
                        }
                      ],
                      "id": 2094,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7046:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7046:139:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "7046:139:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 2112,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2076,
                            "src": "7224:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2110,
                            "name": "cardinalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1706,
                            "src": "7200:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          },
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9895,
                          "src": "7200:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7200:31:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 2114,
                        "name": "membershipPriceInCardinalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "7234:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7200:65:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 2118,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2076,
                            "src": "7293:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2121,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7309:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                                  "typeString": "contract CardinalNFT"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                                  "typeString": "contract CardinalNFT"
                                }
                              ],
                              "id": 2120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7301:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2119,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7301:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7301:13:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2116,
                            "name": "cardinalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1706,
                            "src": "7269:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          },
                          "id": 2117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9938,
                          "src": "7269:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7269:46:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 2124,
                        "name": "membershipPriceInCardinalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "7318:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7269:80:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7200:149:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2134,
                  "nodeType": "IfStatement",
                  "src": "7196:228:19",
                  "trueBody": {
                    "id": 2133,
                    "nodeType": "Block",
                    "src": "7351:73:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2128,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2078,
                              "src": "7383:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2127,
                            "name": "burnMembershipNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1833,
                            "src": "7365:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7365:26:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2130,
                        "nodeType": "ExpressionStatement",
                        "src": "7365:26:19"
                      },
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 2131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7412:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 2084,
                        "id": 2132,
                        "nodeType": "Return",
                        "src": "7405:8:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2138,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2076,
                        "src": "7460:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2141,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7476:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 2140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7468:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2139,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7468:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7468:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2143,
                        "name": "membershipPriceInCardinalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "7483:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2135,
                        "name": "cardinalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1706,
                        "src": "7433:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CardinalToken_$3870",
                          "typeString": "contract CardinalToken"
                        }
                      },
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3543,
                      "src": "7433:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7433:82:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2145,
                  "nodeType": "ExpressionStatement",
                  "src": "7433:82:19"
                },
                {
                  "expression": {
                    "id": 2151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2146,
                        "name": "membershipNFTToLastPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "7525:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2148,
                      "indexExpression": {
                        "id": 2147,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2078,
                        "src": "7549:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7525:32:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2149,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7560:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7560:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7525:50:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2152,
                  "nodeType": "ExpressionStatement",
                  "src": "7525:50:19"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7592:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 2084,
                  "id": 2154,
                  "nodeType": "Return",
                  "src": "7585:8:19"
                }
              ]
            },
            "documentation": {
              "id": 2074,
              "nodeType": "StructuredDocumentation",
              "src": "6498:341:19",
              "text": " @dev Only owner function to take funds from an address to pay for the next month of a membership\n @param member the address of the member that is being charged for the next month of a membership\n @param tokenId the token ID that the member is being charged \n @return 0 for success, 1 for failure and NFT burn"
            },
            "functionSelector": "0becd3bb",
            "id": 2156,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2081,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2080,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "6919:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "6919:9:19"
              }
            ],
            "name": "chargeMemberForMembership",
            "nameLocation": "6853:25:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2076,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "6887:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2156,
                  "src": "6879:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6879:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2078,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6903:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2156,
                  "src": "6895:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6895:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6878:33:19"
            },
            "returnParameters": {
              "id": 2084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2083,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2156,
                  "src": "6938:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2082,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6938:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6937:6:19"
            },
            "scope": 2868,
            "src": "6844:756:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2176,
              "nodeType": "Block",
              "src": "7796:88:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2165,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8413,
                          "src": "7829:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7829:7:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2171,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7870:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                                  "typeString": "contract CardinalNFT"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                                  "typeString": "contract CardinalNFT"
                                }
                              ],
                              "id": 2170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7862:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2169,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7862:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7862:13:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2167,
                            "name": "cardinalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1706,
                            "src": "7838:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          },
                          "id": 2168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9895,
                          "src": "7838:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7838:38:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2162,
                        "name": "cardinalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1706,
                        "src": "7806:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CardinalToken_$3870",
                          "typeString": "contract CardinalToken"
                        }
                      },
                      "id": 2164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3355,
                      "src": "7806:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7806:71:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2175,
                  "nodeType": "ExpressionStatement",
                  "src": "7806:71:19"
                }
              ]
            },
            "documentation": {
              "id": 2157,
              "nodeType": "StructuredDocumentation",
              "src": "7606:130:19",
              "text": " @dev Only owner function to withdraw the Cardinal Tokens that are paid to this contract for the Membership NFTs."
            },
            "functionSelector": "beb48326",
            "id": 2177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2160,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2159,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "7786:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "7786:9:19"
              }
            ],
            "name": "withdrawMembershipNFTFunds",
            "nameLocation": "7750:26:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7776:2:19"
            },
            "returnParameters": {
              "id": 2161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7796:0:19"
            },
            "scope": 2868,
            "src": "7741:143:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2269,
              "nodeType": "Block",
              "src": "8396:674:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2191,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "8406:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9397_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2193,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9423,
                      "src": "8406:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$9397_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$9397_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8406:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2195,
                  "nodeType": "ExpressionStatement",
                  "src": "8406:21:19"
                },
                {
                  "assignments": [
                    2197
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2197,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "8445:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2269,
                      "src": "8437:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2196,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8437:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2201,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2198,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "8457:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9397_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9409,
                      "src": "8457:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9397_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9397_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8457:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8437:39:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8493:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8493:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2205,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "8505:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2202,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9115,
                      "src": "8487:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8487:28:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2207,
                  "nodeType": "ExpressionStatement",
                  "src": "8487:28:19"
                },
                {
                  "expression": {
                    "id": 2212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2208,
                        "name": "tokenIdToTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "8525:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2210,
                      "indexExpression": {
                        "id": 2209,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "8541:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8525:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2211,
                      "name": "typeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2182,
                      "src": "8554:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8525:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2213,
                  "nodeType": "ExpressionStatement",
                  "src": "8525:35:19"
                },
                {
                  "expression": {
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2214,
                        "name": "tokenIdToListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "8570:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2216,
                      "indexExpression": {
                        "id": 2215,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "8590:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8570:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2217,
                      "name": "listingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2184,
                      "src": "8603:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8570:43:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "8570:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2221,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "8636:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2222,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2180,
                        "src": "8647:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2220,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9765,
                      "src": "8623:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8623:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2224,
                  "nodeType": "ExpressionStatement",
                  "src": "8623:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2228,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8682:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$2868",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 2227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8674:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2226,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8674:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8674:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2230,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "8689:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2225,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8785,
                      "src": "8666:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8666:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2232,
                  "nodeType": "ExpressionStatement",
                  "src": "8666:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2234,
                        "name": "marketplaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1703,
                        "src": "8727:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8747:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2233,
                      "name": "setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8823,
                      "src": "8709:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 2236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8709:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2237,
                  "nodeType": "ExpressionStatement",
                  "src": "8709:43:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2238,
                      "name": "typeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2182,
                      "src": "8767:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2239,
                      "name": "originalCardinalTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1733,
                      "src": "8777:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8767:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2248,
                        "name": "typeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2182,
                        "src": "8884:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 2249,
                        "name": "membershipTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1736,
                        "src": "8894:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8884:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2265,
                    "nodeType": "IfStatement",
                    "src": "8880:157:19",
                    "trueBody": {
                      "id": 2264,
                      "nodeType": "Block",
                      "src": "8912:125:19",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2254,
                                "name": "newItemId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2197,
                                "src": "8950:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2251,
                                "name": "membershipTokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1745,
                                "src": "8926:18:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 2253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "push",
                              "nodeType": "MemberAccess",
                              "src": "8926:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                "typeString": "function (uint256[] storage pointer,uint256)"
                              }
                            },
                            "id": 2255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8926:34:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2256,
                          "nodeType": "ExpressionStatement",
                          "src": "8926:34:19"
                        },
                        {
                          "expression": {
                            "id": 2262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 2257,
                                "name": "membershipNFTToLastPaid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1730,
                                "src": "8974:23:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 2259,
                              "indexExpression": {
                                "id": 2258,
                                "name": "newItemId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2197,
                                "src": "8998:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "8974:34:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 2260,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9011:5:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9011:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8974:52:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2263,
                          "nodeType": "ExpressionStatement",
                          "src": "8974:52:19"
                        }
                      ]
                    }
                  },
                  "id": 2266,
                  "nodeType": "IfStatement",
                  "src": "8763:274:19",
                  "trueBody": {
                    "id": 2247,
                    "nodeType": "Block",
                    "src": "8801:65:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2244,
                              "name": "newItemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2197,
                              "src": "8845:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2241,
                              "name": "originalCardinalTokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "8815:24:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8815:29:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 2245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8815:40:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2246,
                        "nodeType": "ExpressionStatement",
                        "src": "8815:40:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2267,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2197,
                    "src": "9054:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2190,
                  "id": 2268,
                  "nodeType": "Return",
                  "src": "9047:16:19"
                }
              ]
            },
            "documentation": {
              "id": 2178,
              "nodeType": "StructuredDocumentation",
              "src": "7890:388:19",
              "text": " @dev Only owner function to mint a new NFT.\n @param tokenURI the token URI on IPFS for the NFT metadata\n @param typeId the type ID of the NFT to distinguish what type of NFT it is (Original Cardinal, membership, service)\n @param listingFee the fee the user pays when putting the NFT for sale on the marketplace\n @return the ID of the newly minted NFT"
            },
            "functionSelector": "bec2a7c5",
            "id": 2270,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2186,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "8371:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "8371:9:19"
              }
            ],
            "name": "createToken",
            "nameLocation": "8292:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2180,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "8318:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2270,
                  "src": "8304:22:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2179,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8304:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2182,
                  "mutability": "mutable",
                  "name": "typeId",
                  "nameLocation": "8336:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2270,
                  "src": "8328:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8328:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2184,
                  "mutability": "mutable",
                  "name": "listingFee",
                  "nameLocation": "8352:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2270,
                  "src": "8344:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8344:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8303:60:19"
            },
            "returnParameters": {
              "id": 2190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2270,
                  "src": "8390:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2188,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8390:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8389:6:19"
            },
            "scope": 2868,
            "src": "8283:787:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2285,
              "nodeType": "Block",
              "src": "9358:51:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2281,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2273,
                        "src": "9381:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2282,
                        "name": "newTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2275,
                        "src": "9390:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2280,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9765,
                      "src": "9368:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9368:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2284,
                  "nodeType": "ExpressionStatement",
                  "src": "9368:34:19"
                }
              ]
            },
            "documentation": {
              "id": 2271,
              "nodeType": "StructuredDocumentation",
              "src": "9076:195:19",
              "text": " @dev Setter function for the token URI of an NFT.\n @param tokenId the ID of the NFT to update the token URI of\n @param newTokenURI the token URI to update the NFT with"
            },
            "functionSelector": "162094c4",
            "id": 2286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2278,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2277,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "9348:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "9348:9:19"
              }
            ],
            "name": "setTokenURI",
            "nameLocation": "9285:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2273,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9305:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2286,
                  "src": "9297:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9297:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2275,
                  "mutability": "mutable",
                  "name": "newTokenURI",
                  "nameLocation": "9328:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2286,
                  "src": "9314:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2274,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9314:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9296:44:19"
            },
            "returnParameters": {
              "id": 2279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9358:0:19"
            },
            "scope": 2868,
            "src": "9276:133:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2380,
              "nodeType": "Block",
              "src": "9709:658:19",
              "statements": [
                {
                  "assignments": [
                    2296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2296,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "9724:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2380,
                      "src": "9719:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2295,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9719:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2300,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2297,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "9735:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9397_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9409,
                      "src": "9735:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9397_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9397_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9735:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9719:35:19"
                },
                {
                  "assignments": [
                    2302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2302,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "9769:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2380,
                      "src": "9764:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2301,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9764:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2304,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9784:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9764:21:19"
                },
                {
                  "assignments": [
                    2306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2306,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "9800:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2380,
                      "src": "9795:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2305,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9795:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2308,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9815:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9795:21:19"
                },
                {
                  "body": {
                    "id": 2330,
                    "nodeType": "Block",
                    "src": "9867:106:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2320,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2310,
                                "src": "9893:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2319,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8671,
                              "src": "9885:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 2321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9885:11:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2322,
                            "name": "userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2289,
                            "src": "9900:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9885:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2329,
                        "nodeType": "IfStatement",
                        "src": "9881:82:19",
                        "trueBody": {
                          "id": 2328,
                          "nodeType": "Block",
                          "src": "9913:50:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 2326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2324,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2302,
                                  "src": "9931:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9947:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "9931:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2327,
                              "nodeType": "ExpressionStatement",
                              "src": "9931:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2313,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2310,
                      "src": "9845:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2314,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2296,
                      "src": "9851:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9845:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2331,
                  "initializationExpression": {
                    "assignments": [
                      2310
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2310,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "9837:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2331,
                        "src": "9832:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2309,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9832:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2312,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9842:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9832:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9861:4:19",
                      "subExpression": {
                        "id": 2316,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2310,
                        "src": "9861:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2318,
                    "nodeType": "ExpressionStatement",
                    "src": "9861:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "9827:146:19"
                },
                {
                  "assignments": [
                    2336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2336,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "9999:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2380,
                      "src": "9983:32:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2334,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9983:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2335,
                        "nodeType": "ArrayTypeName",
                        "src": "9983:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2342,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2340,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2302,
                        "src": "10031:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10018:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2337,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "10022:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2338,
                        "nodeType": "ArrayTypeName",
                        "src": "10022:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 2341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10018:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9983:61:19"
                },
                {
                  "body": {
                    "id": 2376,
                    "nodeType": "Block",
                    "src": "10095:224:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2354,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2344,
                                "src": "10121:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2353,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8671,
                              "src": "10113:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 2355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10113:11:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2356,
                            "name": "userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2289,
                            "src": "10128:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10113:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2375,
                        "nodeType": "IfStatement",
                        "src": "10109:200:19",
                        "trueBody": {
                          "id": 2374,
                          "nodeType": "Block",
                          "src": "10141:168:19",
                          "statements": [
                            {
                              "assignments": [
                                2359
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2359,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "10173:10:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2374,
                                  "src": "10159:24:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 2358,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10159:6:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2363,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2361,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2344,
                                    "src": "10195:2:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2360,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    9743
                                  ],
                                  "referencedDeclaration": 9743,
                                  "src": "10186:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 2362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10186:12:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10159:39:19"
                            },
                            {
                              "expression": {
                                "id": 2368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2364,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2336,
                                    "src": "10216:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 2366,
                                  "indexExpression": {
                                    "id": 2365,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2306,
                                    "src": "10233:12:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10216:30:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2367,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2359,
                                  "src": "10249:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "10216:43:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 2369,
                              "nodeType": "ExpressionStatement",
                              "src": "10216:43:19"
                            },
                            {
                              "expression": {
                                "id": 2372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2370,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2306,
                                  "src": "10277:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10293:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "10277:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2373,
                              "nodeType": "ExpressionStatement",
                              "src": "10277:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2347,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2344,
                      "src": "10073:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2348,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2296,
                      "src": "10079:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10073:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2377,
                  "initializationExpression": {
                    "assignments": [
                      2344
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2344,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "10065:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2377,
                        "src": "10060:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2343,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10060:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2346,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10070:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10060:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10089:4:19",
                      "subExpression": {
                        "id": 2350,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "10089:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2352,
                    "nodeType": "ExpressionStatement",
                    "src": "10089:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "10055:264:19"
                },
                {
                  "expression": {
                    "id": 2378,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2336,
                    "src": "10344:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2294,
                  "id": 2379,
                  "nodeType": "Return",
                  "src": "10337:23:19"
                }
              ]
            },
            "documentation": {
              "id": 2287,
              "nodeType": "StructuredDocumentation",
              "src": "9415:204:19",
              "text": " @dev Function to get all token URIs for tokens that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's NFTs"
            },
            "functionSelector": "8f01785d",
            "id": 2381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTokenURIs",
            "nameLocation": "9633:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2289,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "9658:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2381,
                  "src": "9650:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9650:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9649:21:19"
            },
            "returnParameters": {
              "id": 2294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2293,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2381,
                  "src": "9692:15:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2291,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "9692:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2292,
                    "nodeType": "ArrayTypeName",
                    "src": "9692:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9691:17:19"
            },
            "scope": 2868,
            "src": "9624:743:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2487,
              "nodeType": "Block",
              "src": "10717:756:19",
              "statements": [
                {
                  "assignments": [
                    2391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2391,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "10732:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2487,
                      "src": "10727:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2390,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10727:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2395,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2392,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "10743:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9397_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2393,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9409,
                      "src": "10743:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9397_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9397_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10743:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10727:35:19"
                },
                {
                  "assignments": [
                    2397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2397,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "10777:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2487,
                      "src": "10772:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2396,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10772:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2399,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10792:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10772:21:19"
                },
                {
                  "assignments": [
                    2401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2401,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "10808:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2487,
                      "src": "10803:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2400,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10803:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2403,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10823:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10803:21:19"
                },
                {
                  "body": {
                    "id": 2431,
                    "nodeType": "Block",
                    "src": "10875:155:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2415,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2405,
                                  "src": "10901:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2414,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8671,
                                "src": "10893:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10893:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2417,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2384,
                              "src": "10908:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "10893:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 2419,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1710,
                                "src": "10923:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 2421,
                              "indexExpression": {
                                "id": 2420,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2405,
                                "src": "10939:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10923:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2422,
                              "name": "originalCardinalTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1733,
                              "src": "10946:22:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10923:45:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10893:75:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2430,
                        "nodeType": "IfStatement",
                        "src": "10889:131:19",
                        "trueBody": {
                          "id": 2429,
                          "nodeType": "Block",
                          "src": "10970:50:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 2427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2425,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2397,
                                  "src": "10988:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2426,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11004:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "10988:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2428,
                              "nodeType": "ExpressionStatement",
                              "src": "10988:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2408,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2405,
                      "src": "10853:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2409,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2391,
                      "src": "10859:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10853:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2432,
                  "initializationExpression": {
                    "assignments": [
                      2405
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2405,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "10845:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2432,
                        "src": "10840:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2404,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10840:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2407,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10850:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10840:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10869:4:19",
                      "subExpression": {
                        "id": 2411,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2405,
                        "src": "10869:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2413,
                    "nodeType": "ExpressionStatement",
                    "src": "10869:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "10835:195:19"
                },
                {
                  "assignments": [
                    2437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2437,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "11056:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2487,
                      "src": "11040:32:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2435,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "11040:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2436,
                        "nodeType": "ArrayTypeName",
                        "src": "11040:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2443,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2441,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2397,
                        "src": "11088:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11075:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2438,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "11079:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2439,
                        "nodeType": "ArrayTypeName",
                        "src": "11079:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 2442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11075:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11040:61:19"
                },
                {
                  "body": {
                    "id": 2483,
                    "nodeType": "Block",
                    "src": "11152:273:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2455,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2445,
                                  "src": "11178:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2454,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8671,
                                "src": "11170:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11170:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2457,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2384,
                              "src": "11185:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11170:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 2459,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1710,
                                "src": "11200:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 2461,
                              "indexExpression": {
                                "id": 2460,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2445,
                                "src": "11216:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11200:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2462,
                              "name": "originalCardinalTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1733,
                              "src": "11223:22:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11200:45:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11170:75:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2482,
                        "nodeType": "IfStatement",
                        "src": "11166:249:19",
                        "trueBody": {
                          "id": 2481,
                          "nodeType": "Block",
                          "src": "11247:168:19",
                          "statements": [
                            {
                              "assignments": [
                                2466
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2466,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "11279:10:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2481,
                                  "src": "11265:24:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 2465,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11265:6:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2470,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2468,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2445,
                                    "src": "11301:2:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2467,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    9743
                                  ],
                                  "referencedDeclaration": 9743,
                                  "src": "11292:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 2469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11292:12:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11265:39:19"
                            },
                            {
                              "expression": {
                                "id": 2475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2471,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2437,
                                    "src": "11322:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 2473,
                                  "indexExpression": {
                                    "id": 2472,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2401,
                                    "src": "11339:12:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11322:30:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2474,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2466,
                                  "src": "11355:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "11322:43:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 2476,
                              "nodeType": "ExpressionStatement",
                              "src": "11322:43:19"
                            },
                            {
                              "expression": {
                                "id": 2479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2477,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2401,
                                  "src": "11383:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2478,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11399:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "11383:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2480,
                              "nodeType": "ExpressionStatement",
                              "src": "11383:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2448,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2445,
                      "src": "11130:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2449,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2391,
                      "src": "11136:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11130:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2484,
                  "initializationExpression": {
                    "assignments": [
                      2445
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2445,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "11122:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2484,
                        "src": "11117:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2444,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11117:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2447,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11127:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11117:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11146:4:19",
                      "subExpression": {
                        "id": 2451,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2445,
                        "src": "11146:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2453,
                    "nodeType": "ExpressionStatement",
                    "src": "11146:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "11112:313:19"
                },
                {
                  "expression": {
                    "id": 2485,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2437,
                    "src": "11450:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2389,
                  "id": 2486,
                  "nodeType": "Return",
                  "src": "11443:23:19"
                }
              ]
            },
            "documentation": {
              "id": 2382,
              "nodeType": "StructuredDocumentation",
              "src": "10373:238:19",
              "text": " @dev Function to get all token URIs for Original Cardinal NFTs that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's Original Cardinal NFTs"
            },
            "functionSelector": "56060a74",
            "id": 2488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserOriginalCardinalTokenURIs",
            "nameLocation": "10625:32:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2384,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "10666:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2488,
                  "src": "10658:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10658:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10657:21:19"
            },
            "returnParameters": {
              "id": 2389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2388,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2488,
                  "src": "10700:15:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2386,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "10700:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2387,
                    "nodeType": "ArrayTypeName",
                    "src": "10700:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10699:17:19"
            },
            "scope": 2868,
            "src": "10616:857:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2608,
              "nodeType": "Block",
              "src": "11803:846:19",
              "statements": [
                {
                  "assignments": [
                    2498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2498,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "11818:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2608,
                      "src": "11813:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2497,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11813:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2502,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2499,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "11829:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9397_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2500,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9409,
                      "src": "11829:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9397_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9397_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11829:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11813:35:19"
                },
                {
                  "assignments": [
                    2504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2504,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "11863:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2608,
                      "src": "11858:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2503,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11858:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2506,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11878:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11858:21:19"
                },
                {
                  "assignments": [
                    2508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2508,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "11894:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2608,
                      "src": "11889:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2507,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11889:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2510,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11909:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11889:21:19"
                },
                {
                  "body": {
                    "id": 2545,
                    "nodeType": "Block",
                    "src": "11961:200:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2522,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2512,
                                  "src": "11987:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2521,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8671,
                                "src": "11979:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11979:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2524,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2491,
                              "src": "11994:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11979:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2530,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2526,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1710,
                                      "src": "12010:15:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 2528,
                                    "indexExpression": {
                                      "id": 2527,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2512,
                                      "src": "12026:2:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12010:19:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 2529,
                                    "name": "originalCardinalTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1733,
                                    "src": "12033:22:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12010:45:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2535,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2531,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1710,
                                      "src": "12059:15:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 2533,
                                    "indexExpression": {
                                      "id": 2532,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2512,
                                      "src": "12075:2:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12059:19:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 2534,
                                    "name": "membershipTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1736,
                                    "src": "12082:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12059:39:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "12010:88:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2537,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12009:90:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11979:120:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2544,
                        "nodeType": "IfStatement",
                        "src": "11975:176:19",
                        "trueBody": {
                          "id": 2543,
                          "nodeType": "Block",
                          "src": "12101:50:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 2541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2539,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2504,
                                  "src": "12119:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2540,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12135:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "12119:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2542,
                              "nodeType": "ExpressionStatement",
                              "src": "12119:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2515,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2512,
                      "src": "11939:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2516,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2498,
                      "src": "11945:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11939:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2546,
                  "initializationExpression": {
                    "assignments": [
                      2512
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2512,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "11931:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2546,
                        "src": "11926:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2511,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11926:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2514,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11936:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11926:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11955:4:19",
                      "subExpression": {
                        "id": 2518,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2512,
                        "src": "11955:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2520,
                    "nodeType": "ExpressionStatement",
                    "src": "11955:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "11921:240:19"
                },
                {
                  "assignments": [
                    2551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2551,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "12187:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2608,
                      "src": "12171:32:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2549,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12171:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2550,
                        "nodeType": "ArrayTypeName",
                        "src": "12171:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2557,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2555,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2504,
                        "src": "12219:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "12206:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2552,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12210:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2553,
                        "nodeType": "ArrayTypeName",
                        "src": "12210:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 2556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12206:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12171:61:19"
                },
                {
                  "body": {
                    "id": 2604,
                    "nodeType": "Block",
                    "src": "12283:318:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2569,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2559,
                                  "src": "12309:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2568,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8671,
                                "src": "12301:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12301:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2571,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2491,
                              "src": "12316:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "12301:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2573,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1710,
                                      "src": "12332:15:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 2575,
                                    "indexExpression": {
                                      "id": 2574,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2559,
                                      "src": "12348:2:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12332:19:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 2576,
                                    "name": "originalCardinalTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1733,
                                    "src": "12355:22:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12332:45:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2582,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2578,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1710,
                                      "src": "12381:15:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 2580,
                                    "indexExpression": {
                                      "id": 2579,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2559,
                                      "src": "12397:2:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12381:19:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 2581,
                                    "name": "membershipTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1736,
                                    "src": "12404:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12381:39:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "12332:88:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2584,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12331:90:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "12301:120:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2603,
                        "nodeType": "IfStatement",
                        "src": "12297:294:19",
                        "trueBody": {
                          "id": 2602,
                          "nodeType": "Block",
                          "src": "12423:168:19",
                          "statements": [
                            {
                              "assignments": [
                                2587
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2587,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "12455:10:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2602,
                                  "src": "12441:24:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 2586,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12441:6:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2591,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2589,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2559,
                                    "src": "12477:2:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2588,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    9743
                                  ],
                                  "referencedDeclaration": 9743,
                                  "src": "12468:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 2590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12468:12:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "12441:39:19"
                            },
                            {
                              "expression": {
                                "id": 2596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2592,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2551,
                                    "src": "12498:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 2594,
                                  "indexExpression": {
                                    "id": 2593,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2508,
                                    "src": "12515:12:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12498:30:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2595,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2587,
                                  "src": "12531:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "12498:43:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 2597,
                              "nodeType": "ExpressionStatement",
                              "src": "12498:43:19"
                            },
                            {
                              "expression": {
                                "id": 2600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2598,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2508,
                                  "src": "12559:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12575:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "12559:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2601,
                              "nodeType": "ExpressionStatement",
                              "src": "12559:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2562,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2559,
                      "src": "12261:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2563,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2498,
                      "src": "12267:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12261:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2605,
                  "initializationExpression": {
                    "assignments": [
                      2559
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2559,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "12253:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2605,
                        "src": "12248:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2558,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12248:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2561,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12258:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12248:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12277:4:19",
                      "subExpression": {
                        "id": 2565,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2559,
                        "src": "12277:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2567,
                    "nodeType": "ExpressionStatement",
                    "src": "12277:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "12243:358:19"
                },
                {
                  "expression": {
                    "id": 2606,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2551,
                    "src": "12626:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2496,
                  "id": 2607,
                  "nodeType": "Return",
                  "src": "12619:23:19"
                }
              ]
            },
            "documentation": {
              "id": 2489,
              "nodeType": "StructuredDocumentation",
              "src": "11479:224:19",
              "text": " @dev Function to get all token URIs for membership NFTs that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's membership NFTs"
            },
            "functionSelector": "33a41510",
            "id": 2609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserMembershipTokenURIs",
            "nameLocation": "11717:26:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2491,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "11752:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2609,
                  "src": "11744:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11744:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11743:21:19"
            },
            "returnParameters": {
              "id": 2496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2495,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2609,
                  "src": "11786:15:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2493,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "11786:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2494,
                    "nodeType": "ArrayTypeName",
                    "src": "11786:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11785:17:19"
            },
            "scope": 2868,
            "src": "11708:941:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2715,
              "nodeType": "Block",
              "src": "12970:738:19",
              "statements": [
                {
                  "assignments": [
                    2619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2619,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "12985:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2715,
                      "src": "12980:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2618,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12980:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2623,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2620,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "12996:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9397_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2621,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9409,
                      "src": "12996:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9397_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9397_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12996:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12980:35:19"
                },
                {
                  "assignments": [
                    2625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2625,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "13030:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2715,
                      "src": "13025:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2624,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13025:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2627,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13045:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13025:21:19"
                },
                {
                  "assignments": [
                    2629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2629,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "13061:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2715,
                      "src": "13056:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2628,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13056:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2631,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13076:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13056:21:19"
                },
                {
                  "body": {
                    "id": 2659,
                    "nodeType": "Block",
                    "src": "13128:146:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2643,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2633,
                                  "src": "13154:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2642,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8671,
                                "src": "13146:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13146:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2645,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2612,
                              "src": "13161:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "13146:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 2647,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1710,
                                "src": "13176:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 2649,
                              "indexExpression": {
                                "id": 2648,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2633,
                                "src": "13192:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13176:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2650,
                              "name": "serviceTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1739,
                              "src": "13199:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13176:36:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13146:66:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2658,
                        "nodeType": "IfStatement",
                        "src": "13142:122:19",
                        "trueBody": {
                          "id": 2657,
                          "nodeType": "Block",
                          "src": "13214:50:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 2655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2653,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2625,
                                  "src": "13232:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2654,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13248:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "13232:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2656,
                              "nodeType": "ExpressionStatement",
                              "src": "13232:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2636,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2633,
                      "src": "13106:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2637,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2619,
                      "src": "13112:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13106:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2660,
                  "initializationExpression": {
                    "assignments": [
                      2633
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2633,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "13098:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2660,
                        "src": "13093:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2632,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13093:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2635,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13103:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13093:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13122:4:19",
                      "subExpression": {
                        "id": 2639,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2633,
                        "src": "13122:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2641,
                    "nodeType": "ExpressionStatement",
                    "src": "13122:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "13088:186:19"
                },
                {
                  "assignments": [
                    2665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2665,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "13300:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2715,
                      "src": "13284:32:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2663,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "13284:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2664,
                        "nodeType": "ArrayTypeName",
                        "src": "13284:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2671,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2669,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "13332:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13319:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2666,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "13323:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2667,
                        "nodeType": "ArrayTypeName",
                        "src": "13323:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 2670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13319:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13284:61:19"
                },
                {
                  "body": {
                    "id": 2711,
                    "nodeType": "Block",
                    "src": "13396:264:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2683,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2673,
                                  "src": "13422:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2682,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8671,
                                "src": "13414:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13414:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2685,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2612,
                              "src": "13429:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "13414:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 2687,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1710,
                                "src": "13444:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 2689,
                              "indexExpression": {
                                "id": 2688,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2673,
                                "src": "13460:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13444:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2690,
                              "name": "serviceTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1739,
                              "src": "13467:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13444:36:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13414:66:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2710,
                        "nodeType": "IfStatement",
                        "src": "13410:240:19",
                        "trueBody": {
                          "id": 2709,
                          "nodeType": "Block",
                          "src": "13482:168:19",
                          "statements": [
                            {
                              "assignments": [
                                2694
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2694,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "13514:10:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2709,
                                  "src": "13500:24:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 2693,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13500:6:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2698,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2696,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2673,
                                    "src": "13536:2:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2695,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    9743
                                  ],
                                  "referencedDeclaration": 9743,
                                  "src": "13527:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 2697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13527:12:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "13500:39:19"
                            },
                            {
                              "expression": {
                                "id": 2703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2699,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2665,
                                    "src": "13557:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 2701,
                                  "indexExpression": {
                                    "id": 2700,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2629,
                                    "src": "13574:12:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13557:30:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2702,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2694,
                                  "src": "13590:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "13557:43:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 2704,
                              "nodeType": "ExpressionStatement",
                              "src": "13557:43:19"
                            },
                            {
                              "expression": {
                                "id": 2707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2705,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2629,
                                  "src": "13618:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2706,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13634:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "13618:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2708,
                              "nodeType": "ExpressionStatement",
                              "src": "13618:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2676,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2673,
                      "src": "13374:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2677,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2619,
                      "src": "13380:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13374:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2712,
                  "initializationExpression": {
                    "assignments": [
                      2673
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2673,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "13366:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2712,
                        "src": "13361:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2672,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13361:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2675,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13371:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13361:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13390:4:19",
                      "subExpression": {
                        "id": 2679,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2673,
                        "src": "13390:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2681,
                    "nodeType": "ExpressionStatement",
                    "src": "13390:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "13356:304:19"
                },
                {
                  "expression": {
                    "id": 2713,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2665,
                    "src": "13685:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2617,
                  "id": 2714,
                  "nodeType": "Return",
                  "src": "13678:23:19"
                }
              ]
            },
            "documentation": {
              "id": 2610,
              "nodeType": "StructuredDocumentation",
              "src": "12655:218:19",
              "text": " @dev Function to get all token URIs for service NFTs that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's service NFTs"
            },
            "functionSelector": "c34e3782",
            "id": 2716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserServiceTokenURIs",
            "nameLocation": "12887:23:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2612,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "12919:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2716,
                  "src": "12911:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12911:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12910:21:19"
            },
            "returnParameters": {
              "id": 2617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2616,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2716,
                  "src": "12953:15:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2614,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "12953:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2615,
                    "nodeType": "ArrayTypeName",
                    "src": "12953:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12952:17:19"
            },
            "scope": 2868,
            "src": "12878:830:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2725,
              "nodeType": "Block",
              "src": "13932:48:19",
              "statements": [
                {
                  "expression": {
                    "id": 2723,
                    "name": "originalCardinalTokenIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1742,
                    "src": "13949:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2722,
                  "id": 2724,
                  "nodeType": "Return",
                  "src": "13942:31:19"
                }
              ]
            },
            "documentation": {
              "id": 2717,
              "nodeType": "StructuredDocumentation",
              "src": "13714:135:19",
              "text": " @dev Function to get a list of all the Original Cardinal NFT IDs.\n @return list of the Original Cardinal NFT IDs"
            },
            "functionSelector": "e4e0a931",
            "id": 2726,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOriginalCardinalTokenIds",
            "nameLocation": "13863:27:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13890:2:19"
            },
            "returnParameters": {
              "id": 2722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2721,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2726,
                  "src": "13914:16:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2719,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13914:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2720,
                    "nodeType": "ArrayTypeName",
                    "src": "13914:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13913:18:19"
            },
            "scope": 2868,
            "src": "13854:126:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2735,
              "nodeType": "Block",
              "src": "14184:42:19",
              "statements": [
                {
                  "expression": {
                    "id": 2733,
                    "name": "membershipTokenIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1745,
                    "src": "14201:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2732,
                  "id": 2734,
                  "nodeType": "Return",
                  "src": "14194:25:19"
                }
              ]
            },
            "documentation": {
              "id": 2727,
              "nodeType": "StructuredDocumentation",
              "src": "13986:121:19",
              "text": " @dev Function to get a list of all the membership NFT IDs.\n @return list of the membership NFT IDs"
            },
            "functionSelector": "d473dab1",
            "id": 2736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipTokenIds",
            "nameLocation": "14121:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14142:2:19"
            },
            "returnParameters": {
              "id": 2732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2731,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2736,
                  "src": "14166:16:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2729,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14166:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2730,
                    "nodeType": "ArrayTypeName",
                    "src": "14166:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14165:18:19"
            },
            "scope": 2868,
            "src": "14112:114:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2752,
              "nodeType": "Block",
              "src": "14597:70:19",
              "statements": [
                {
                  "expression": {
                    "id": 2750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2746,
                        "name": "tokenIdToWhitelistAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1718,
                        "src": "14607:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2748,
                      "indexExpression": {
                        "id": 2747,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2741,
                        "src": "14633:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14607:34:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2749,
                      "name": "whiteListAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2739,
                      "src": "14644:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14607:53:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2751,
                  "nodeType": "ExpressionStatement",
                  "src": "14607:53:19"
                }
              ]
            },
            "documentation": {
              "id": 2737,
              "nodeType": "StructuredDocumentation",
              "src": "14232:271:19",
              "text": " @dev Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.\n @param whiteListAddress the address of the user who will be able to purchase the NFT\n @param tokenId the ID of the NFT that the whitelist spot is for"
            },
            "functionSelector": "7417353f",
            "id": 2753,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2744,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2743,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "14587:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "14587:9:19"
              }
            ],
            "name": "addWhiteListToToken",
            "nameLocation": "14517:19:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2739,
                  "mutability": "mutable",
                  "name": "whiteListAddress",
                  "nameLocation": "14545:16:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "14537:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14537:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2741,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14571:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "14563:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14563:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14536:43:19"
            },
            "returnParameters": {
              "id": 2745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14597:0:19"
            },
            "scope": 2868,
            "src": "14508:159:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2769,
              "nodeType": "Block",
              "src": "14952:61:19",
              "statements": [
                {
                  "expression": {
                    "id": 2767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2763,
                        "name": "tokenIdToListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "14962:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2765,
                      "indexExpression": {
                        "id": 2764,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2756,
                        "src": "14982:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14962:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2766,
                      "name": "newListingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2758,
                      "src": "14993:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14962:44:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2768,
                  "nodeType": "ExpressionStatement",
                  "src": "14962:44:19"
                }
              ]
            },
            "documentation": {
              "id": 2754,
              "nodeType": "StructuredDocumentation",
              "src": "14673:186:19",
              "text": " @dev updates the listing fee of an NFT.\n @param tokenId the ID of the NFT to update the listing fee of\n @param newListingFee the listing fee value for the NFT"
            },
            "functionSelector": "7867ccd1",
            "id": 2770,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2761,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2760,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "14942:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "14942:9:19"
              }
            ],
            "name": "updateTokenListingFee",
            "nameLocation": "14873:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2756,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14903:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2770,
                  "src": "14895:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14895:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2758,
                  "mutability": "mutable",
                  "name": "newListingFee",
                  "nameLocation": "14920:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2770,
                  "src": "14912:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14912:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14894:40:19"
            },
            "returnParameters": {
              "id": 2762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14952:0:19"
            },
            "scope": 2868,
            "src": "14864:149:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2786,
              "nodeType": "Block",
              "src": "15274:53:19",
              "statements": [
                {
                  "expression": {
                    "id": 2784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2780,
                        "name": "tokenIdToTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "15284:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2782,
                      "indexExpression": {
                        "id": 2781,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2773,
                        "src": "15300:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15284:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2783,
                      "name": "newTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2775,
                      "src": "15311:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15284:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2785,
                  "nodeType": "ExpressionStatement",
                  "src": "15284:36:19"
                }
              ]
            },
            "documentation": {
              "id": 2771,
              "nodeType": "StructuredDocumentation",
              "src": "15019:170:19",
              "text": " @dev updates the type ID of an NFT.\n @param tokenId the ID of the NFT to update the type ID of\n @param newTypeId the type ID value for the NFT"
            },
            "functionSelector": "c79ba39c",
            "id": 2787,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2778,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2777,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "15264:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "15264:9:19"
              }
            ],
            "name": "updateTokenTypeId",
            "nameLocation": "15203:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2773,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15229:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2787,
                  "src": "15221:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15221:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2775,
                  "mutability": "mutable",
                  "name": "newTypeId",
                  "nameLocation": "15246:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2787,
                  "src": "15238:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15238:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15220:36:19"
            },
            "returnParameters": {
              "id": 2779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15274:0:19"
            },
            "scope": 2868,
            "src": "15194:133:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2799,
              "nodeType": "Block",
              "src": "15598:67:19",
              "statements": [
                {
                  "expression": {
                    "id": 2797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2795,
                      "name": "originalCardinalTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1733,
                      "src": "15608:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2796,
                      "name": "newOriginalCardinalTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2790,
                      "src": "15633:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15608:50:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2798,
                  "nodeType": "ExpressionStatement",
                  "src": "15608:50:19"
                }
              ]
            },
            "documentation": {
              "id": 2788,
              "nodeType": "StructuredDocumentation",
              "src": "15333:170:19",
              "text": " @dev updates the type ID that represents the Original Cardinal NFTs\n @param newOriginalCardinalTypeId the new type ID of the Original Cardinal NFTs"
            },
            "functionSelector": "66a98ea3",
            "id": 2800,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2793,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2792,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "15588:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "15588:9:19"
              }
            ],
            "name": "updateOriginalCardinalTypeId",
            "nameLocation": "15517:28:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2790,
                  "mutability": "mutable",
                  "name": "newOriginalCardinalTypeId",
                  "nameLocation": "15554:25:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2800,
                  "src": "15546:33:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15546:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15545:35:19"
            },
            "returnParameters": {
              "id": 2794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15598:0:19"
            },
            "scope": 2868,
            "src": "15508:157:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2812,
              "nodeType": "Block",
              "src": "15904:55:19",
              "statements": [
                {
                  "expression": {
                    "id": 2810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2808,
                      "name": "membershipTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1736,
                      "src": "15914:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2809,
                      "name": "newMembershipTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2803,
                      "src": "15933:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15914:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2811,
                  "nodeType": "ExpressionStatement",
                  "src": "15914:38:19"
                }
              ]
            },
            "documentation": {
              "id": 2801,
              "nodeType": "StructuredDocumentation",
              "src": "15671:150:19",
              "text": " @dev updates the type ID that represents the membership NFTs\n @param newMembershipTypeId the new type ID of the membership NFTs"
            },
            "functionSelector": "ffeab8a4",
            "id": 2813,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2806,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2805,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "15894:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "15894:9:19"
              }
            ],
            "name": "updateMembershipTypeId",
            "nameLocation": "15835:22:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2803,
                  "mutability": "mutable",
                  "name": "newMembershipTypeId",
                  "nameLocation": "15866:19:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2813,
                  "src": "15858:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15858:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15857:29:19"
            },
            "returnParameters": {
              "id": 2807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15904:0:19"
            },
            "scope": 2868,
            "src": "15826:133:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2825,
              "nodeType": "Block",
              "src": "16183:49:19",
              "statements": [
                {
                  "expression": {
                    "id": 2823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2821,
                      "name": "serviceTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1739,
                      "src": "16193:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2822,
                      "name": "newServiceTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2816,
                      "src": "16209:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16193:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2824,
                  "nodeType": "ExpressionStatement",
                  "src": "16193:32:19"
                }
              ]
            },
            "documentation": {
              "id": 2814,
              "nodeType": "StructuredDocumentation",
              "src": "15965:141:19",
              "text": " @dev updates the type ID that represents the service NFTs\n @param newServiceTypeId the new type ID of the service NFTs"
            },
            "functionSelector": "86794f66",
            "id": 2826,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2819,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2818,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "16173:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "16173:9:19"
              }
            ],
            "name": "updateServiceTypeId",
            "nameLocation": "16120:19:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2816,
                  "mutability": "mutable",
                  "name": "newServiceTypeId",
                  "nameLocation": "16148:16:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2826,
                  "src": "16140:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16140:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16139:26:19"
            },
            "returnParameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16183:0:19"
            },
            "scope": 2868,
            "src": "16111:121:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2838,
              "nodeType": "Block",
              "src": "16461:59:19",
              "statements": [
                {
                  "expression": {
                    "id": 2836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2834,
                      "name": "membershipTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "16471:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2835,
                      "name": "newMembershipTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2829,
                      "src": "16492:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "16471:42:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2837,
                  "nodeType": "ExpressionStatement",
                  "src": "16471:42:19"
                }
              ]
            },
            "documentation": {
              "id": 2827,
              "nodeType": "StructuredDocumentation",
              "src": "16238:130:19",
              "text": " @dev updates the membership NFT token URI\n @param newMembershipTokenURI the new type ID of the service NFTs"
            },
            "functionSelector": "96291db6",
            "id": 2839,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2832,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2831,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "16451:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "16451:9:19"
              }
            ],
            "name": "updateMembershipTokenURI",
            "nameLocation": "16382:24:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2829,
                  "mutability": "mutable",
                  "name": "newMembershipTokenURI",
                  "nameLocation": "16421:21:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2839,
                  "src": "16407:35:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2828,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16407:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16406:37:19"
            },
            "returnParameters": {
              "id": 2833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16461:0:19"
            },
            "scope": 2868,
            "src": "16373:147:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2851,
              "nodeType": "Block",
              "src": "16774:69:19",
              "statements": [
                {
                  "expression": {
                    "id": 2849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2847,
                      "name": "membershipPriceInCardinalTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1749,
                      "src": "16784:31:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2848,
                      "name": "newMembershipPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2842,
                      "src": "16818:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16784:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2850,
                  "nodeType": "ExpressionStatement",
                  "src": "16784:52:19"
                }
              ]
            },
            "documentation": {
              "id": 2840,
              "nodeType": "StructuredDocumentation",
              "src": "16526:167:19",
              "text": " @dev sets the price of the membership NFTs in Cardinal Tokens\n @param newMembershipPrice the new price of the membership NFTs in Cardinal Tokens"
            },
            "functionSelector": "ebaa42ed",
            "id": 2852,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2845,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2844,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "16764:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "16764:9:19"
              }
            ],
            "name": "updateMembershipPrice",
            "nameLocation": "16707:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2842,
                  "mutability": "mutable",
                  "name": "newMembershipPrice",
                  "nameLocation": "16737:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2852,
                  "src": "16729:26:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16729:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16728:28:19"
            },
            "returnParameters": {
              "id": 2846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16774:0:19"
            },
            "scope": 2868,
            "src": "16698:145:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2866,
              "nodeType": "Block",
              "src": "17106:68:19",
              "statements": [
                {
                  "expression": {
                    "id": 2864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2860,
                      "name": "cardinalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1706,
                      "src": "17116:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CardinalToken_$3870",
                        "typeString": "contract CardinalToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2862,
                          "name": "cardinalTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2855,
                          "src": "17146:20:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 2861,
                        "name": "CardinalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3870,
                        "src": "17132:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CardinalToken_$3870_$",
                          "typeString": "type(contract CardinalToken)"
                        }
                      },
                      "id": 2863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17132:35:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CardinalToken_$3870",
                        "typeString": "contract CardinalToken"
                      }
                    },
                    "src": "17116:51:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CardinalToken_$3870",
                      "typeString": "contract CardinalToken"
                    }
                  },
                  "id": 2865,
                  "nodeType": "ExpressionStatement",
                  "src": "17116:51:19"
                }
              ]
            },
            "documentation": {
              "id": 2853,
              "nodeType": "StructuredDocumentation",
              "src": "16849:171:19",
              "text": " @dev Only owner function to set the reference to the Cardinal Token contract\n @param cardinalTokenAddress the address for the Cardinal Token contract"
            },
            "functionSelector": "d2793d4a",
            "id": 2867,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2858,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2857,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "17096:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "17096:9:19"
              }
            ],
            "name": "setCardinalToken",
            "nameLocation": "17034:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2855,
                  "mutability": "mutable",
                  "name": "cardinalTokenAddress",
                  "nameLocation": "17067:20:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "17051:36:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17051:15:19",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17050:38:19"
            },
            "returnParameters": {
              "id": 2859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17106:0:19"
            },
            "scope": 2868,
            "src": "17025:149:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2869,
        "src": "454:16723:19",
        "usedErrors": []
      }
    ],
    "src": "32:17145:19"
  },
  "bytecode": "",
  "bytecodeSha1": "a7138079d652030240fc595e5bc1ea5d5c38255a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.8+commit.dddeac2f"
  },
  "contractName": "CardinalNFT",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "191": [
            2006,
            2028,
            true
          ]
        }
      },
      "11": {},
      "12": {},
      "14": {},
      "15": {},
      "19": {
        "CardinalNFT._afterTokenTransfer": {
          "164": [
            4021,
            4065,
            true
          ],
          "165": [
            4069,
            4119,
            false
          ],
          "166": [
            4139,
            4154,
            false
          ],
          "167": [
            4158,
            4184,
            false
          ],
          "168": [
            4188,
            4206,
            false
          ],
          "169": [
            4230,
            4263,
            false
          ]
        },
        "CardinalNFT.burnMembershipNFT": {
          "163": [
            3034,
            3066,
            false
          ]
        },
        "CardinalNFT.chargeMemberForMembership": {
          "138": [
            6962,
            6988,
            true
          ],
          "139": [
            7054,
            7081,
            false
          ],
          "140": [
            7085,
            7123,
            true
          ],
          "141": [
            7200,
            7265,
            true
          ],
          "142": [
            7269,
            7349,
            false
          ]
        },
        "CardinalNFT.createToken": {
          "157": [
            8767,
            8799,
            false
          ],
          "158": [
            8884,
            8910,
            false
          ]
        },
        "CardinalNFT.getUserMembershipTokenURIs": {
          "143": [
            11979,
            12005,
            false
          ],
          "144": [
            12010,
            12055,
            true
          ],
          "145": [
            12059,
            12098,
            false
          ],
          "146": [
            12301,
            12327,
            false
          ],
          "147": [
            12332,
            12377,
            true
          ],
          "148": [
            12381,
            12420,
            false
          ]
        },
        "CardinalNFT.getUserOriginalCardinalTokenURIs": {
          "149": [
            10893,
            10919,
            false
          ],
          "150": [
            10923,
            10968,
            false
          ],
          "151": [
            11170,
            11196,
            false
          ],
          "152": [
            11200,
            11245,
            false
          ]
        },
        "CardinalNFT.getUserServiceTokenURIs": {
          "159": [
            13146,
            13172,
            false
          ],
          "160": [
            13176,
            13212,
            false
          ],
          "161": [
            13414,
            13440,
            false
          ],
          "162": [
            13444,
            13480,
            false
          ]
        },
        "CardinalNFT.getUserTokenURIs": {
          "155": [
            9885,
            9911,
            false
          ],
          "156": [
            10113,
            10139,
            false
          ]
        },
        "CardinalNFT.mintMembershipNFT": {
          "153": [
            5026,
            5096,
            true
          ],
          "154": [
            5187,
            5272,
            true
          ]
        }
      },
      "20": {},
      "3": {},
      "39": {},
      "5": {
        "ERC721._isApprovedOrOwner": {
          "178": [
            7559,
            7575,
            true
          ]
        },
        "ERC721._mint": {
          "181": [
            9157,
            9173,
            true
          ],
          "182": [
            9228,
            9245,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "184": [
            6746,
            6794,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "183": [
            11615,
            11632,
            true
          ]
        },
        "ERC721._transfer": {
          "179": [
            10579,
            10610,
            true
          ],
          "180": [
            10670,
            10686,
            true
          ]
        },
        "ERC721.approve": {
          "171": [
            3674,
            3685,
            true
          ],
          "172": [
            3755,
            3776,
            true
          ],
          "173": [
            3780,
            3817,
            true
          ]
        },
        "ERC721.balanceOf": {
          "176": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.getApproved": {
          "170": [
            4102,
            4118,
            true
          ]
        },
        "ERC721.ownerOf": {
          "175": [
            2332,
            2351,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "177": [
            5536,
            5577,
            true
          ]
        },
        "ERC721.tokenURI": {
          "185": [
            2924,
            2940,
            true
          ],
          "186": [
            3054,
            3079,
            true
          ]
        },
        "ERC721.transferFrom": {
          "174": [
            4915,
            4956,
            true
          ]
        }
      },
      "6": {},
      "8": {
        "ERC721URIStorage._setTokenURI": {
          "190": [
            1376,
            1392,
            true
          ]
        },
        "ERC721URIStorage.tokenURI": {
          "187": [
            573,
            589,
            true
          ],
          "188": [
            813,
            836,
            false
          ],
          "189": [
            981,
            1008,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "115": [
            2378,
            2395
          ],
          "116": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "38": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "93": [
            1998,
            2071
          ],
          "94": [
            2081,
            2109
          ]
        }
      },
      "11": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "12": {
        "Counters.current": {
          "21": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "44": [
            1032,
            1051
          ]
        }
      },
      "14": {
        "ERC165.supportsInterface": {
          "3": [
            930,
            977
          ]
        }
      },
      "15": {},
      "19": {
        "CardinalNFT._afterTokenTransfer": {
          "130": [
            4287,
            4352
          ],
          "131": [
            4440,
            4469
          ],
          "132": [
            4554,
            4583
          ],
          "133": [
            4629,
            4655
          ],
          "134": [
            4669,
            4730
          ]
        },
        "CardinalNFT.addWhiteListToToken": {
          "39": [
            14607,
            14660
          ]
        },
        "CardinalNFT.burnMembershipNFT": {
          "99": [
            3153,
            3210
          ],
          "100": [
            3229,
            3300
          ],
          "101": [
            3318,
            3342
          ],
          "102": [
            3011,
            3014
          ]
        },
        "CardinalNFT.burnMembershiptNFTManually": {
          "92": [
            3594,
            3620
          ]
        },
        "CardinalNFT.chargeMemberForMembership": {
          "11": [
            6954,
            7036
          ],
          "12": [
            7046,
            7185
          ],
          "13": [
            7365,
            7391
          ],
          "14": [
            7405,
            7413
          ],
          "15": [
            7433,
            7515
          ],
          "16": [
            7525,
            7575
          ]
        },
        "CardinalNFT.createToken": {
          "66": [
            8406,
            8427
          ],
          "67": [
            8487,
            8515
          ],
          "68": [
            8525,
            8560
          ],
          "69": [
            8570,
            8613
          ],
          "70": [
            8623,
            8656
          ],
          "71": [
            8666,
            8699
          ],
          "72": [
            8709,
            8752
          ],
          "73": [
            8815,
            8855
          ],
          "74": [
            8926,
            8960
          ],
          "75": [
            8974,
            9026
          ],
          "76": [
            9047,
            9063
          ]
        },
        "CardinalNFT.getMembershipTokenIds": {
          "89": [
            14194,
            14219
          ]
        },
        "CardinalNFT.getOriginalCardinalTokenIds": {
          "90": [
            13942,
            13973
          ]
        },
        "CardinalNFT.getUserMembershipTokenURIs": {
          "22": [
            12119,
            12136
          ],
          "23": [
            11955,
            11959
          ],
          "24": [
            12498,
            12541
          ],
          "25": [
            12559,
            12576
          ],
          "26": [
            12277,
            12281
          ],
          "27": [
            12619,
            12642
          ]
        },
        "CardinalNFT.getUserOriginalCardinalTokenURIs": {
          "29": [
            10988,
            11005
          ],
          "30": [
            10869,
            10873
          ],
          "31": [
            11322,
            11365
          ],
          "32": [
            11383,
            11400
          ],
          "33": [
            11146,
            11150
          ]
        },
        "CardinalNFT.getUserServiceTokenURIs": {
          "77": [
            13232,
            13249
          ],
          "78": [
            13122,
            13126
          ],
          "79": [
            13557,
            13600
          ],
          "80": [
            13618,
            13635
          ],
          "81": [
            13390,
            13394
          ]
        },
        "CardinalNFT.getUserTokenURIs": {
          "55": [
            9931,
            9948
          ],
          "56": [
            9861,
            9865
          ],
          "57": [
            10216,
            10259
          ],
          "58": [
            10277,
            10294
          ],
          "59": [
            10089,
            10093
          ]
        },
        "CardinalNFT.mintMembershipNFT": {
          "40": [
            5018,
            5169
          ],
          "41": [
            5179,
            5382
          ],
          "42": [
            5401,
            5487
          ],
          "43": [
            5498,
            5519
          ],
          "45": [
            5579,
            5624
          ],
          "46": [
            5634,
            5668
          ],
          "47": [
            5678,
            5706
          ],
          "48": [
            5716,
            5768
          ],
          "49": [
            5778,
            5821
          ],
          "50": [
            5831,
            5864
          ],
          "51": [
            5874,
            5917
          ],
          "52": [
            5928,
            5962
          ]
        },
        "CardinalNFT.setCardinalToken": {
          "88": [
            17116,
            17167
          ]
        },
        "CardinalNFT.setTokenURI": {
          "17": [
            9368,
            9402
          ]
        },
        "CardinalNFT.updateMembershipNFTLastPaid": {
          "18": [
            6433,
            6485
          ]
        },
        "CardinalNFT.updateMembershipPrice": {
          "91": [
            16784,
            16836
          ]
        },
        "CardinalNFT.updateMembershipTokenURI": {
          "61": [
            16471,
            16513
          ]
        },
        "CardinalNFT.updateMembershipTypeId": {
          "95": [
            15914,
            15952
          ]
        },
        "CardinalNFT.updateOriginalCardinalTypeId": {
          "35": [
            15608,
            15658
          ]
        },
        "CardinalNFT.updateServiceTypeId": {
          "54": [
            16193,
            16225
          ]
        },
        "CardinalNFT.updateTokenListingFee": {
          "53": [
            14962,
            15006
          ]
        },
        "CardinalNFT.updateTokenTypeId": {
          "82": [
            15284,
            15320
          ]
        },
        "CardinalNFT.withdrawMembershipNFTFunds": {
          "65": [
            7806,
            7877
          ]
        }
      },
      "20": {},
      "3": {},
      "39": {},
      "5": {
        "ERC721._approve": {
          "97": [
            11242,
            11271
          ],
          "98": [
            11281,
            11332
          ]
        },
        "ERC721._baseURI": {
          "84": [
            3464,
            3473
          ]
        },
        "ERC721._checkOnERC721Received": {
          "135": [
            12820,
            12880
          ],
          "136": [
            12654,
            12712
          ],
          "137": [
            13084,
            13095
          ]
        },
        "ERC721._exists": {
          "96": [
            7240,
            7277
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "105": [
            7551,
            7624
          ],
          "106": [
            7683,
            7779
          ]
        },
        "ERC721._mint": {
          "117": [
            9149,
            9210
          ],
          "118": [
            9220,
            9278
          ],
          "119": [
            9345,
            9363
          ],
          "120": [
            9373,
            9394
          ],
          "121": [
            9405,
            9443
          ],
          "122": [
            9454,
            9498
          ]
        },
        "ERC721._safeTransfer": {
          "126": [
            6700,
            6728
          ],
          "127": [
            6738,
            6849
          ]
        },
        "ERC721._setApprovalForAll": {
          "123": [
            11607,
            11662
          ],
          "124": [
            11672,
            11718
          ],
          "125": [
            11728,
            11774
          ]
        },
        "ERC721._transfer": {
          "107": [
            10571,
            10652
          ],
          "108": [
            10662,
            10727
          ],
          "109": [
            10839,
            10868
          ],
          "110": [
            10879,
            10899
          ],
          "111": [
            10909,
            10927
          ],
          "112": [
            10937,
            10958
          ],
          "113": [
            10969,
            11001
          ],
          "114": [
            11012,
            11050
          ]
        },
        "ERC721.approve": {
          "7": [
            3666,
            3723
          ],
          "9": [
            3734,
            3899
          ],
          "10": [
            3910,
            3931
          ]
        },
        "ERC721.balanceOf": {
          "36": [
            2020,
            2094
          ],
          "37": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4094,
            4167
          ],
          "6": [
            4178,
            4209
          ]
        },
        "ERC721.isApprovedForAll": {
          "1": [
            4615,
            4657
          ]
        },
        "ERC721.name": {
          "4": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "34": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "28": [
            5255,
            5294
          ],
          "63": [
            5528,
            5631
          ],
          "64": [
            5641,
            5680
          ]
        },
        "ERC721.setApprovalForAll": {
          "62": [
            4377,
            4429
          ]
        },
        "ERC721.supportsInterface": {
          "2": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "60": [
            2731,
            2745
          ]
        },
        "ERC721.tokenURI": {
          "128": [
            2916,
            2992
          ],
          "129": [
            3047,
            3140
          ]
        },
        "ERC721.transferFrom": {
          "19": [
            4907,
            5010
          ],
          "20": [
            5021,
            5049
          ]
        }
      },
      "6": {},
      "8": {
        "ERC721URIStorage._setTokenURI": {
          "103": [
            1368,
            1443
          ],
          "104": [
            1453,
            1484
          ]
        },
        "ERC721URIStorage.tokenURI": {
          "83": [
            565,
            643
          ],
          "85": [
            852,
            868
          ],
          "86": [
            1024,
            1072
          ],
          "87": [
            1093,
            1123
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "CardinalToken",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721URIStorage",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Metadata",
    "IUniswapV2Factory",
    "IUniswapV2Router02",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "454:16723:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:5;;;;;;:::i;:::-;;:::i;:::-;;;565:14:40;;558:22;540:41;;528:2;513:18;1570:300:5;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:40;;;1674:51;;1662:2;1647:18;3999:217:5;1528:203:40;3537:401:5;;;;;;:::i;:::-;;:::i;:::-;;6844:756:19;;;;;;:::i;:::-;;:::i;:::-;;;2338:25:40;;;2326:2;2311:18;6844:756:19;2192:177:40;772:34:19;;;;;-1:-1:-1;;;;;772:34:19;;;1809:58;;;;;;:::i;:::-;;;;;;;;;;;;;;9276:133;;;;;;:::i;:::-;;:::i;2017:35::-;;;;;;6325:167;;;;;;:::i;:::-;;:::i;4726:330:5:-;;;;;;:::i;:::-;;:::i;1453:47:19:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;11708:941;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5122:179:5:-;;;;;;:::i;:::-;;:::i;1925:41:19:-;;;;;;10616:857;;;;;;:::i;:::-;;:::i;1278:60::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1278:60:19;;;2191:235:5;;;;;;:::i;:::-;;:::i;15508:157:19:-;;;;;;:::i;:::-;;:::i;1011:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1929:205:5;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;2100:32:19:-;;;;;;14508:159;;;;;;:::i;:::-;;:::i;4957:1039::-;;;:::i;14864:149::-;;;;;;:::i;:::-;;:::i;16111:121::-;;;;;;:::i;:::-;;:::i;1036:85:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;1036:85;;9624:743:19;;;;;;:::i;:::-;;:::i;2365:32::-;;;:::i;2650:102:5:-;;;:::i;16373:147:19:-;;;;;;:::i;:::-;;:::i;4283:153:5:-;;;;;;:::i;:::-;;:::i;597:33:19:-;;;;;;;1154:54;;;;;;:::i;:::-;;;;;;;;;;;;;;2278:35;;;;;;:::i;:::-;;:::i;2188:41::-;;;;;;:::i;:::-;;:::i;5367:320:5:-;;;;;;:::i;:::-;;:::i;7741:143:19:-;;;:::i;8283:787::-;;;;;;:::i;:::-;;:::i;12878:830::-;;;;;;:::i;:::-;;:::i;15194:133::-;;;;;;:::i;:::-;;:::i;467:663:8:-;;;;;;:::i;:::-;;:::i;17025:149:19:-;;;;;;:::i;:::-;;:::i;14112:114::-;;;:::i;:::-;;;;;;;:::i;685:33::-;;;;;-1:-1:-1;;;;;685:33:19;;;1647:58;;;;;;:::i;:::-;;;;;;;;;;;;;;13854:126;;;:::i;4502:162:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4622:25:5;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162;16698:145:19;;;;;;:::i;:::-;;:::i;3514:113::-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;2470:46:19:-;;;;;;15826:133;;;;;;:::i;:::-;;:::i;1570:300:5:-;1672:4;-1:-1:-1;;;;;;1707:40:5;;-1:-1:-1;;;1707:40:5;;:104;;-1:-1:-1;;;;;;;1763:48:5;;-1:-1:-1;;;1763:48:5;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:5;1688:175;1570:300;-1:-1:-1;;1570:300:5:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;4102:16;4110:7;4102;:16::i;:::-;4094:73;;;;-1:-1:-1;;;4094:73:5;;9754:2:40;4094:73:5;;;9736:21:40;9793:2;9773:18;;;9766:30;9832:34;9812:18;;;9805:62;-1:-1:-1;;;9883:18:40;;;9876:42;9935:19;;4094:73:5;;;;;;;;;-1:-1:-1;4185:24:5;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:5;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:5;:2;-1:-1:-1;;;;;3674:11:5;;;3666:57;;;;-1:-1:-1;;;3666:57:5;;10167:2:40;3666:57:5;;;10149:21:40;10206:2;10186:18;;;10179:30;10245:34;10225:18;;;10218:62;-1:-1:-1;;;10296:18:40;;;10289:31;10337:19;;3666:57:5;9965:397:40;3666:57:5;719:10:11;-1:-1:-1;;;;;3755:21:5;;;;:62;;-1:-1:-1;3780:37:5;3797:5;719:10:11;4502:162:5;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:5;;10569:2:40;3734:165:5;;;10551:21:40;10608:2;10588:18;;;10581:30;10647:34;10627:18;;;10620:62;10718:26;10698:18;;;10691:54;10762:19;;3734:165:5;10367:420:40;3734:165:5;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;6844:756:19:-;1108:6:0;;6938:4:19;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6982:6:19::1;-1:-1:-1::0;;;;;6962:26:19::1;:16;6970:7;6962;:16::i;:::-;-1:-1:-1::0;;;;;6962:26:19::1;;6954:82;;;::::0;-1:-1:-1;;;6954:82:19;;11355:2:40;6954:82:19::1;::::0;::::1;11337:21:40::0;11394:2;11374:18;;;11367:30;11433:34;11413:18;;;11406:62;-1:-1:-1;;;11484:18:40;;;11477:41;11535:19;;6954:82:19::1;11153:407:40::0;6954:82:19::1;1108:6:0::0;;-1:-1:-1;;;;;1108:6:0;7054:16:19::1;7062:7:::0;7054::::1;:16::i;:::-;-1:-1:-1::0;;;;;7054:27:19::1;;;:69;;;;-1:-1:-1::0;7105:18:19::1;::::0;-1:-1:-1;;;;;7105:18:19::1;7085:16;7093:7:::0;7085::::1;:16::i;:::-;-1:-1:-1::0;;;;;7085:38:19::1;;;7054:69;7046:139;;;::::0;-1:-1:-1;;;7046:139:19;;11767:2:40;7046:139:19::1;::::0;::::1;11749:21:40::0;11806:2;11786:18;;;11779:30;11845:34;11825:18;;;11818:62;11916:27;11896:18;;;11889:55;11961:19;;7046:139:19::1;11565:421:40::0;7046:139:19::1;7234:31;::::0;7200:13:::1;::::0;:31:::1;::::0;-1:-1:-1;;;7200:31:19;;-1:-1:-1;;;;;1692:32:40;;;7200:31:19::1;::::0;::::1;1674:51:40::0;7200:13:19;;::::1;::::0;:23:::1;::::0;1647:18:40;;7200:31:19::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;:149;;;-1:-1:-1::0;7318:31:19::1;::::0;7269:13:::1;::::0;:46:::1;::::0;-1:-1:-1;;;7269:46:19;;-1:-1:-1;;;;;12410:15:40;;;7269:46:19::1;::::0;::::1;12392:34:40::0;7309:4:19::1;12442:18:40::0;;;12435:43;7269:13:19;;::::1;::::0;:23:::1;::::0;12327:18:40;;7269:46:19::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:80;7200:149;7196:228;;;7365:26;7383:7;7365:17;:26::i;:::-;-1:-1:-1::0;7412:1:19::1;7405:8;;7196:228;7433:13;::::0;7483:31:::1;::::0;7433:82:::1;::::0;-1:-1:-1;;;7433:82:19;;-1:-1:-1;;;;;12747:15:40;;;7433:82:19::1;::::0;::::1;12729:34:40::0;7476:4:19::1;12779:18:40::0;;;12772:43;12831:18;;;12824:34;;;;7433:13:19;::::1;::::0;:26:::1;::::0;12664:18:40;;7433:82:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;7525:32:19::1;::::0;;;:23:::1;:32;::::0;;;;7560:15:::1;7525:50:::0;;:32;6844:756;-1:-1:-1;6844:756:19:o;9276:133::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9368:34:19::1;9381:7;9390:11;9368:12;:34::i;:::-;9276:133:::0;;:::o;6325:167::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6433:32:19::1;::::0;;;:23:::1;:32;::::0;;;;;:52;6325:167::o;4726:330:5:-;4915:41;719:10:11;4948:7:5;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:5;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;11708:941:19:-;11786:15;11813:13;11829:19;:9;918:14:12;;827:112;11829:19:19;11813:35;-1:-1:-1;11858:17:19;;11936:1;11921:240;11945:8;11939:2;:14;11921:240;;11994:11;-1:-1:-1;;;;;11979:26:19;:11;11987:2;11979:7;:11::i;:::-;-1:-1:-1;;;;;11979:26:19;;:120;;;;-1:-1:-1;12033:22:19;;12010:19;;;;:15;:19;;;;;;:45;;:88;;-1:-1:-1;12082:16:19;;12059:19;;;;:15;:19;;;;;;:39;12010:88;11975:176;;;12119:17;12135:1;12119:17;;:::i;:::-;;;11975:176;11955:4;;;;:::i;:::-;;;;11921:240;;;;12171:32;12219:12;12206:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12171:61:19;-1:-1:-1;12258:1:19;12243:358;12267:8;12261:2;:14;12243:358;;12316:11;-1:-1:-1;;;;;12301:26:19;:11;12309:2;12301:7;:11::i;:::-;-1:-1:-1;;;;;12301:26:19;;:120;;;;-1:-1:-1;12355:22:19;;12332:19;;;;:15;:19;;;;;;:45;;:88;;-1:-1:-1;12404:16:19;;12381:19;;;;:15;:19;;;;;;:39;12332:88;12297:294;;;12441:24;12468:12;12477:2;12468:8;:12::i;:::-;12441:39;;12531:10;12498:16;12515:12;12498:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;12559:17;12575:1;12559:17;;:::i;:::-;;;12423:168;12297:294;12277:4;;;;:::i;:::-;;;;12243:358;;;-1:-1:-1;12626:16:19;11708:941;-1:-1:-1;;;;;11708:941:19:o;5122:179:5:-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;10616:857:19:-;10700:15;10727:13;10743:19;:9;918:14:12;;827:112;10743:19:19;10727:35;-1:-1:-1;10772:17:19;;10850:1;10835:195;10859:8;10853:2;:14;10835:195;;10908:11;-1:-1:-1;;;;;10893:26:19;:11;10901:2;10893:7;:11::i;:::-;-1:-1:-1;;;;;10893:26:19;;:75;;;;-1:-1:-1;10946:22:19;;10923:19;;;;:15;:19;;;;;;:45;10893:75;10889:131;;;10988:17;11004:1;10988:17;;:::i;:::-;;;10889:131;10869:4;;;;:::i;:::-;;;;10835:195;;;;11040:32;11088:12;11075:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11040:61:19;-1:-1:-1;11127:1:19;11112:313;11136:8;11130:2;:14;11112:313;;11185:11;-1:-1:-1;;;;;11170:26:19;:11;11178:2;11170:7;:11::i;:::-;-1:-1:-1;;;;;11170:26:19;;:75;;;;-1:-1:-1;11223:22:19;;11200:19;;;;:15;:19;;;;;;:45;11170:75;11166:249;;;11265:24;11292:12;11301:2;11292:8;:12::i;:::-;11265:39;;11355:10;11322:16;11339:12;11322:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;11383:17;11399:1;11383:17;;:::i;:::-;;;11247:168;11166:249;11146:4;;;;:::i;:::-;;;;11112:313;;2191:235:5;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:5;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:5;;14276:2:40;2324:73:5;;;14258:21:40;14315:2;14295:18;;;14288:30;14354:34;14334:18;;;14327:62;-1:-1:-1;;;14405:18:40;;;14398:39;14454:19;;2324:73:5;14074:405:40;15508:157:19;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;15608:22:19::1;:50:::0;15508:157::o;1929:205:5:-;2001:7;-1:-1:-1;;;;;2028:19:5;;2020:74;;;;-1:-1:-1;;;2020:74:5;;14686:2:40;2020:74:5;;;14668:21:40;14725:2;14705:18;;;14698:30;14764:34;14744:18;;;14737:62;-1:-1:-1;;;14815:18:40;;;14808:40;14865:19;;2020:74:5;14484:406:40;2020:74:5;-1:-1:-1;;;;;;2111:16:5;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;14508:159:19:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14607:34:19::1;::::0;;;:25:::1;:34;::::0;;;;:53;;-1:-1:-1;;;;;;14607:53:19::1;-1:-1:-1::0;;;;;14607:53:19;;;::::1;::::0;;;::::1;::::0;;14508:159::o;4957:1039::-;5065:31;;5026:13;;:35;;-1:-1:-1;;;5026:35:19;;5050:10;5026:35;;;1674:51:40;5002:4:19;;5065:31;-1:-1:-1;;;;;5026:13:19;;:23;;1647:18:40;;5026:35:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;5018:151;;;;-1:-1:-1;;;5018:151:19;;15097:2:40;5018:151:19;;;15079:21:40;15136:2;15116:18;;;15109:30;;;15175:34;15155:18;;;15148:62;15246:34;15226:18;;;15219:62;-1:-1:-1;;;15297:19:40;;;15290:35;15342:19;;5018:151:19;14895:472:40;5018:151:19;5241:31;;5187:13;;:50;;-1:-1:-1;;;5187:50:19;;5211:10;5187:50;;;12392:34:40;5231:4:19;12442:18:40;;;12435:43;-1:-1:-1;;;;;5187:13:19;;;;:23;;12327:18:40;;5187:50:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;5179:203;;;;-1:-1:-1;;;5179:203:19;;15574:2:40;5179:203:19;;;15556:21:40;15613:3;15593:18;;;15586:31;15653:34;15633:18;;;15626:62;15724:34;15704:18;;;15697:62;15796:34;15775:19;;;15768:63;-1:-1:-1;;;15847:19:40;;;15840:40;15897:19;;5179:203:19;15372:550:40;5179:203:19;5401:13;;5455:31;;5401:86;;-1:-1:-1;;;5401:86:19;;5428:10;5401:86;;;12729:34:40;5448:4:19;12779:18:40;;;12772:43;12831:18;;;12824:34;;;;-1:-1:-1;;;;;5401:13:19;;;;:26;;12664:18:40;;5401:86:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5498:21;:9;1032:19:12;;1050:1;1032:19;;;945:123;5498:21:19;5529:17;5549:19;:9;918:14:12;;827:112;5549:19:19;5608:16;;5579:26;;;;:15;:26;;;;;;;;:45;;;;5634:19;:30;;;;;:34;5529:39;-1:-1:-1;5678:28:19;5684:10;5529:39;5678:5;:28::i;:::-;5716:34;;;;:23;:34;;;;;5753:15;5716:52;;5802:18;5778:43;;;;5740:9;;5778:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:43::i;:::-;5831:33;5847:4;5854:9;5831:7;:33::i;:::-;5892:18;;5874:43;;-1:-1:-1;;;;;5892:18:19;;5874:17;:43::i;:::-;5928:18;:34;;;;;;;-1:-1:-1;5928:34:19;;;;;;;;;5952:9;4957:1039;-1:-1:-1;4957:1039:19:o;14864:149::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14962:28:19::1;::::0;;;:19:::1;:28;::::0;;;;;:44;14864:149::o;16111:121::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;16193:13:19::1;:32:::0;16111:121::o;9624:743::-;9692:15;9719:13;9735:19;:9;918:14:12;;827:112;9735:19:19;9719:35;-1:-1:-1;9764:17:19;;9842:1;9827:146;9851:8;9845:2;:14;9827:146;;9900:11;-1:-1:-1;;;;;9885:26:19;:11;9893:2;9885:7;:11::i;:::-;-1:-1:-1;;;;;9885:26:19;;9881:82;;;9931:17;9947:1;9931:17;;:::i;:::-;;;9881:82;9861:4;;;;:::i;:::-;;;;9827:146;;;;9983:32;10031:12;10018:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9983:61:19;-1:-1:-1;10070:1:19;10055:264;10079:8;10073:2;:14;10055:264;;10128:11;-1:-1:-1;;;;;10113:26:19;:11;10121:2;10113:7;:11::i;:::-;-1:-1:-1;;;;;10113:26:19;;10109:200;;;10159:24;10186:12;10195:2;10186:8;:12::i;:::-;10159:39;;10249:10;10216:16;10233:12;10216:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;10277:17;10293:1;10277:17;;:::i;:::-;;;10141:168;10109:200;10089:4;;;;:::i;:::-;;;;10055:264;;2365:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2650:102:5:-;2706:13;2738:7;2731:14;;;;;:::i;16373:147:19:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;16471:42:19;;::::1;::::0;:18:::1;::::0;:42:::1;::::0;::::1;::::0;::::1;:::i;4283:153:5:-:0;4377:52;719:10:11;4410:8:5;4420;4377:18;:52::i;2278:35:19:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2278:35:19;:::o;2188:41::-;;;;;;;;;;;;5367:320:5;5536:41;719:10:11;5569:7:5;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:5;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;7741:143:19:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7806:13:19::1;::::0;-1:-1:-1;;;;;7806:13:19::1;:22;7829:7;1108:6:0::0;;-1:-1:-1;;;;;1108:6:0;;1036:85;7829:7:19::1;7838:13;::::0;:38:::1;::::0;-1:-1:-1;;;7838:38:19;;7870:4:::1;7838:38;::::0;::::1;1674:51:40::0;-1:-1:-1;;;;;7838:13:19;;::::1;::::0;:23:::1;::::0;1647:18:40;;7838:38:19::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7806:71;::::0;-1:-1:-1;;;;;;7806:71:19::1;::::0;;;;;;-1:-1:-1;;;;;16119:32:40;;;7806:71:19::1;::::0;::::1;16101:51:40::0;16168:18;;;16161:34;16074:18;;7806:71:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7741:143::o:0;8283:787::-;1108:6:0;;8390:4:19;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8406:21:19::1;:9;1032:19:12::0;;1050:1;1032:19;;;945:123;8406:21:19::1;8437:17;8457:19;:9;918:14:12::0;;827:112;8457:19:19::1;8437:39;;8487:28;8493:10;8505:9;8487:5;:28::i;:::-;8525:26;::::0;;;:15:::1;:26;::::0;;;;;;;:35;;;8570:19:::1;:30:::0;;;;;:43;;;8623:33:::1;8541:9:::0;8647:8;8623:12:::1;:33::i;:::-;8666;8682:4;8689:9;8666:7;:33::i;:::-;8727:18;::::0;8709:43:::1;::::0;-1:-1:-1;;;;;8727:18:19::1;::::0;8709:17:::1;:43::i;:::-;8777:22;;8767:6;:32;8763:274;;;8815:24;:40:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;8815:40:19;;;;;::::1;::::0;;;8763:274:::1;;;8894:16;;8884:6;:26;8880:157;;;8926:18;:34:::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;-1:-1:-1;8974:34:19;;;:23:::1;8926:34;8974::::0;;;;9011:15:::1;8974:52:::0;;8880:157:::1;9054:9:::0;8283:787;-1:-1:-1;;;;8283:787:19:o;12878:830::-;12953:15;12980:13;12996:19;:9;918:14:12;;827:112;12996:19:19;12980:35;-1:-1:-1;13025:17:19;;13103:1;13088:186;13112:8;13106:2;:14;13088:186;;13161:11;-1:-1:-1;;;;;13146:26:19;:11;13154:2;13146:7;:11::i;:::-;-1:-1:-1;;;;;13146:26:19;;:66;;;;-1:-1:-1;13199:13:19;;13176:19;;;;:15;:19;;;;;;:36;13146:66;13142:122;;;13232:17;13248:1;13232:17;;:::i;:::-;;;13142:122;13122:4;;;;:::i;:::-;;;;13088:186;;;;13284:32;13332:12;13319:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13284:61:19;-1:-1:-1;13371:1:19;13356:304;13380:8;13374:2;:14;13356:304;;13429:11;-1:-1:-1;;;;;13414:26:19;:11;13422:2;13414:7;:11::i;:::-;-1:-1:-1;;;;;13414:26:19;;:66;;;;-1:-1:-1;13467:13:19;;13444:19;;;;:15;:19;;;;;;:36;13414:66;13410:240;;;13500:24;13527:12;13536:2;13527:8;:12::i;:::-;13500:39;;13590:10;13557:16;13574:12;13557:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;13618:17;13634:1;13618:17;;:::i;:::-;;;13482:168;13410:240;13390:4;;;;:::i;:::-;;;;13356:304;;15194:133;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;15284:24:19::1;::::0;;;:15:::1;:24;::::0;;;;;:36;15194:133::o;467:663:8:-;540:13;573:16;581:7;573;:16::i;:::-;565:78;;;;-1:-1:-1;;;565:78:8;;16408:2:40;565:78:8;;;16390:21:40;16447:2;16427:18;;;16420:30;16486:34;16466:18;;;16459:62;-1:-1:-1;;;16537:18:40;;;16530:47;16594:19;;565:78:8;16206:413:40;565:78:8;654:23;680:19;;;:10;:19;;;;;654:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:18;730:10;3464:9:5;;;;;;;;;-1:-1:-1;3464:9:5;;;3388:92;730:10:8;709:31;;819:4;813:18;835:1;813:23;809:70;;;-1:-1:-1;859:9:8;467:663;-1:-1:-1;;467:663:8:o;809:70::-;981:23;;:27;977:106;;1055:4;1061:9;1038:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1024:48;;;;467:663;;;:::o;977:106::-;1100:23;1115:7;1100:14;:23::i;17025:149:19:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;17116:13:19::1;:51:::0;;-1:-1:-1;;;;;;17116:51:19::1;-1:-1:-1::0;;;;;17116:51:19;;;::::1;::::0;;;::::1;::::0;;17025:149::o;14112:114::-;14166:16;14201:18;14194:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14112:114;:::o;13854:126::-;13914:16;13949:24;13942:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13854:126;:::o;16698:145::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;16784:31:19::1;:52:::0;16698:145::o;3514:113::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3594:26:19::1;3612:7;3594:17;:26::i;1918:198:0:-:0;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;17301:2:40;1998:73:0::1;::::0;::::1;17283:21:40::0;17340:2;17320:18;;;17313:30;17379:34;17359:18;;;17352:62;-1:-1:-1;;;17430:18:40;;;17423:36;17476:19;;1998:73:0::1;17099:402:40::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;15826:133:19:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;15914:16:19::1;:38:::0;15826:133::o;7159:125:5:-;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:5;:30;;;7159:125::o;11168:171::-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:5;-1:-1:-1;;;;;11242:29:5;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:5;;;;;;;;;;;11168:171;;:::o;2901:472:19:-;2968:6;2963:404;2984:18;:25;2980:29;;2963:404;;;3059:7;3034:18;3053:1;3034:21;;;;;;;;:::i;:::-;;;;;;;;;:32;3030:327;;;3086:16;3105:30;3113:18;3132:1;3113:21;;;;;;;;:::i;:::-;;;;;;;;;3105:7;:30::i;:::-;3086:49;;3153:57;3163:8;3181:4;3188:18;3207:1;3188:21;;;;;;;;:::i;:::-;;;;;;;;;3153:9;:57::i;:::-;3253:18;3272:25;;:27;;3298:1;;3272:27;:::i;:::-;3253:47;;;;;;;;:::i;:::-;;;;;;;;;3229:18;3248:1;3229:21;;;;;;;;:::i;:::-;;;;;;;;;;:71;3318:18;:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3068:289;3030:327;3011:3;;;;:::i;:::-;;;;2963:404;;1277:214:8;1376:16;1384:7;1376;:16::i;:::-;1368:75;;;;-1:-1:-1;;;1368:75:8;;17970:2:40;1368:75:8;;;17952:21:40;18009:2;17989:18;;;17982:30;18048:34;18028:18;;;18021:62;-1:-1:-1;;;18099:18:40;;;18092:44;18153:19;;1368:75:8;17768:410:40;1368:75:8;1453:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;7442:344:5:-;7535:4;7559:16;7567:7;7559;:16::i;:::-;7551:73;;;;-1:-1:-1;;;7551:73:5;;18385:2:40;7551:73:5;;;18367:21:40;18424:2;18404:18;;;18397:30;18463:34;18443:18;;;18436:62;-1:-1:-1;;;18514:18:40;;;18507:42;18566:19;;7551:73:5;18183:408:40;7551:73:5;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:5;:7;-1:-1:-1;;;;;7691:16:5;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:5;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:5;;7691:51;:87;;;-1:-1:-1;;;;;;4622:25:5;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7746:32;4502:162;10452:605;10606:4;-1:-1:-1;;;;;10579:31:5;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:5;;10571:81;;;;-1:-1:-1;;;10571:81:5;;18798:2:40;10571:81:5;;;18780:21:40;18837:2;18817:18;;;18810:30;18876:34;18856:18;;;18849:62;-1:-1:-1;;;18927:18:40;;;18920:35;18972:19;;10571:81:5;18596:401:40;10571:81:5;-1:-1:-1;;;;;10670:16:5;;10662:65;;;;-1:-1:-1;;;10662:65:5;;19204:2:40;10662:65:5;;;19186:21:40;19243:2;19223:18;;;19216:30;19282:34;19262:18;;;19255:62;-1:-1:-1;;;19333:18:40;;;19326:34;19377:19;;10662:65:5;19002:400:40;10662:65:5;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:5;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:5;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:5;-1:-1:-1;;;;;10937:21:5;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;11012:38;11032:4;11038:2;11042:7;11012:19;:38::i;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;9078:427:5:-;-1:-1:-1;;;;;9157:16:5;;9149:61;;;;-1:-1:-1;;;9149:61:5;;19609:2:40;9149:61:5;;;19591:21:40;;;19628:18;;;19621:30;19687:34;19667:18;;;19660:62;19739:18;;9149:61:5;19407:356:40;9149:61:5;9229:16;9237:7;9229;:16::i;:::-;9228:17;9220:58;;;;-1:-1:-1;;;9220:58:5;;19970:2:40;9220:58:5;;;19952:21:40;20009:2;19989:18;;;19982:30;20048;20028:18;;;20021:58;20096:18;;9220:58:5;19768:352:40;9220:58:5;-1:-1:-1;;;;;9345:13:5;;;;;;:9;:13;;;;;:18;;9362:1;;9345:13;:18;;9362:1;;9345:18;:::i;:::-;;;;-1:-1:-1;;9373:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9373:21:5;-1:-1:-1;;;;;9373:21:5;;;;;;;;9410:33;;9373:16;;;9410:33;;9373:16;;9410:33;9454:44;9482:1;9486:2;9490:7;9454:19;:44::i;11474:307::-;11624:8;-1:-1:-1;;;;;11615:17:5;:5;-1:-1:-1;;;;;11615:17:5;;;11607:55;;;;-1:-1:-1;;;11607:55:5;;20327:2:40;11607:55:5;;;20309:21:40;20366:2;20346:18;;;20339:30;20405:27;20385:18;;;20378:55;20450:18;;11607:55:5;20125:349:40;11607:55:5;-1:-1:-1;;;;;11672:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:5;;;;;;;;;;11733:41;;540::40;;;11733::5;;513:18:40;11733:41:5;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:5;;;;;;;:::i;2818:329::-;2891:13;2924:16;2932:7;2924;:16::i;:::-;2916:76;;;;-1:-1:-1;;;2916:76:5;;21100:2:40;2916:76:5;;;21082:21:40;21139:2;21119:18;;;21112:30;21178:34;21158:18;;;21151:62;-1:-1:-1;;;21229:18:40;;;21222:45;21284:19;;2916:76:5;20898:411:40;2916:76:5;3003:21;3027:10;3464:9;;;;;;;;;-1:-1:-1;3464:9:5;;;3388:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:5:o;3909:893:19:-;4049:16;;4021:24;;;;:15;:24;;;;;;:44;;:98;;-1:-1:-1;4097:22:19;;4069:24;;;;:15;:24;;;;;;:50;4021:98;4017:724;;;1108:6:0;;-1:-1:-1;;;;;4139:15:19;;;1108:6:0;;4139:15:19;;;;:45;;-1:-1:-1;4166:18:19;;-1:-1:-1;;;;;4158:26:19;;;4166:18;;4158:26;;4139:45;:67;;;;-1:-1:-1;;;;;;4188:18:19;;;;4139:67;4135:481;;;-1:-1:-1;;;;;4230:29:19;;4262:1;4230:29;;;:23;:29;;;;;;:33;4226:376;;-1:-1:-1;;;;;4319:29:19;;;;;;:23;:29;;;;;;:33;;4351:1;;4319:33;:::i;:::-;-1:-1:-1;;;;;4287:29:19;;;;;;:23;:29;;;;;:65;;;4374:118;;-1:-1:-1;;;;;4440:21:19;;4464:5;4440:21;;;:15;:21;;;;;:29;;-1:-1:-1;;4440:29:19;;;4374:118;4226:376;;;-1:-1:-1;;;;;4554:21:19;;4578:5;4554:21;;;:15;:21;;;;;:29;;-1:-1:-1;;4554:29:19;;;4226:376;-1:-1:-1;;;;;4629:19:19;;;;;;:15;:19;;;;;;;;:26;;-1:-1:-1;;4629:26:19;4651:4;4629:26;;;;;;4699:23;:27;;;;;;;:31;;;:::i;:::-;-1:-1:-1;;;;;4669:27:19;;;;;;:23;:27;;;;;:61;3607:331:5;3537:401;;:::o;12334:778::-;12484:4;-1:-1:-1;;;;;12504:13:5;;1465:19:10;:23;12500:606:5;;12539:72;;-1:-1:-1;;;12539:72:5;;-1:-1:-1;;;;;12539:36:5;;;;;:72;;719:10:11;;12590:4:5;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:5;;;;;;;;-1:-1:-1;;12539:72:5;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:5;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:5;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:5;-1:-1:-1;;;12661:51:5;;-1:-1:-1;12654:58:5;;12500:606;-1:-1:-1;13091:4:5;12334:778;;;;;;:::o;328:703:13:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:13;;;;;;;;;;;;-1:-1:-1;;;627:10:13;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:13;;-1:-1:-1;773:2:13;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:13;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:13;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:13;;;;;;;;-1:-1:-1;972:11:13;981:2;972:11;;:::i;:::-;;;844:150;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:40;-1:-1:-1;;;;;;88:32:40;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:40;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:40;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:40:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:40;;1343:180;-1:-1:-1;1343:180:40:o;1736:131::-;-1:-1:-1;;;;;1811:31:40;;1801:42;;1791:70;;1857:1;1854;1847:12;1872:315;1940:6;1948;2001:2;1989:9;1980:7;1976:23;1972:32;1969:52;;;2017:1;2014;2007:12;1969:52;2056:9;2043:23;2075:31;2100:5;2075:31;:::i;:::-;2125:5;2177:2;2162:18;;;;2149:32;;-1:-1:-1;;;1872:315:40:o;2612:127::-;2673:10;2668:3;2664:20;2661:1;2654:31;2704:4;2701:1;2694:15;2728:4;2725:1;2718:15;2744:632;2809:5;2839:18;2880:2;2872:6;2869:14;2866:40;;;2886:18;;:::i;:::-;2961:2;2955:9;2929:2;3015:15;;-1:-1:-1;;3011:24:40;;;3037:2;3007:33;3003:42;2991:55;;;3061:18;;;3081:22;;;3058:46;3055:72;;;3107:18;;:::i;:::-;3147:10;3143:2;3136:22;3176:6;3167:15;;3206:6;3198;3191:22;3246:3;3237:6;3232:3;3228:16;3225:25;3222:45;;;3263:1;3260;3253:12;3222:45;3313:6;3308:3;3301:4;3293:6;3289:17;3276:44;3368:1;3361:4;3352:6;3344;3340:19;3336:30;3329:41;;;;2744:632;;;;;:::o;3381:222::-;3424:5;3477:3;3470:4;3462:6;3458:17;3454:27;3444:55;;3495:1;3492;3485:12;3444:55;3517:80;3593:3;3584:6;3571:20;3564:4;3556:6;3552:17;3517:80;:::i;3608:390::-;3686:6;3694;3747:2;3735:9;3726:7;3722:23;3718:32;3715:52;;;3763:1;3760;3753:12;3715:52;3799:9;3786:23;3776:33;;3860:2;3849:9;3845:18;3832:32;3887:18;3879:6;3876:30;3873:50;;;3919:1;3916;3909:12;3873:50;3942;3984:7;3975:6;3964:9;3960:22;3942:50;:::i;:::-;3932:60;;;3608:390;;;;;:::o;4003:248::-;4071:6;4079;4132:2;4120:9;4111:7;4107:23;4103:32;4100:52;;;4148:1;4145;4138:12;4100:52;-1:-1:-1;;4171:23:40;;;4241:2;4226:18;;;4213:32;;-1:-1:-1;4003:248:40:o;4256:456::-;4333:6;4341;4349;4402:2;4390:9;4381:7;4377:23;4373:32;4370:52;;;4418:1;4415;4408:12;4370:52;4457:9;4444:23;4476:31;4501:5;4476:31;:::i;:::-;4526:5;-1:-1:-1;4583:2:40;4568:18;;4555:32;4596:33;4555:32;4596:33;:::i;:::-;4256:456;;4648:7;;-1:-1:-1;;;4702:2:40;4687:18;;;;4674:32;;4256:456::o;4717:247::-;4776:6;4829:2;4817:9;4808:7;4804:23;4800:32;4797:52;;;4845:1;4842;4835:12;4797:52;4884:9;4871:23;4903:31;4928:5;4903:31;:::i;4969:803::-;5131:4;5160:2;5200;5189:9;5185:18;5230:2;5219:9;5212:21;5253:6;5288;5282:13;5319:6;5311;5304:22;5357:2;5346:9;5342:18;5335:25;;5419:2;5409:6;5406:1;5402:14;5391:9;5387:30;5383:39;5369:53;;5457:2;5449:6;5445:15;5478:1;5488:255;5502:6;5499:1;5496:13;5488:255;;;5595:2;5591:7;5579:9;5571:6;5567:22;5563:36;5558:3;5551:49;5623:40;5656:6;5647;5641:13;5623:40;:::i;:::-;5613:50;-1:-1:-1;5721:12:40;;;;5686:15;;;;5524:1;5517:9;5488:255;;;-1:-1:-1;5760:6:40;;4969:803;-1:-1:-1;;;;;;;4969:803:40:o;5777:322::-;5846:6;5899:2;5887:9;5878:7;5874:23;5870:32;5867:52;;;5915:1;5912;5905:12;5867:52;5955:9;5942:23;5988:18;5980:6;5977:30;5974:50;;;6020:1;6017;6010:12;5974:50;6043;6085:7;6076:6;6065:9;6061:22;6043:50;:::i;6104:118::-;6190:5;6183:13;6176:21;6169:5;6166:32;6156:60;;6212:1;6209;6202:12;6227:382;6292:6;6300;6353:2;6341:9;6332:7;6328:23;6324:32;6321:52;;;6369:1;6366;6359:12;6321:52;6408:9;6395:23;6427:31;6452:5;6427:31;:::i;:::-;6477:5;-1:-1:-1;6534:2:40;6519:18;;6506:32;6547:30;6506:32;6547:30;:::i;:::-;6596:7;6586:17;;;6227:382;;;;;:::o;6614:795::-;6709:6;6717;6725;6733;6786:3;6774:9;6765:7;6761:23;6757:33;6754:53;;;6803:1;6800;6793:12;6754:53;6842:9;6829:23;6861:31;6886:5;6861:31;:::i;:::-;6911:5;-1:-1:-1;6968:2:40;6953:18;;6940:32;6981:33;6940:32;6981:33;:::i;:::-;7033:7;-1:-1:-1;7087:2:40;7072:18;;7059:32;;-1:-1:-1;7142:2:40;7127:18;;7114:32;7169:18;7158:30;;7155:50;;;7201:1;7198;7191:12;7155:50;7224:22;;7277:4;7269:13;;7265:27;-1:-1:-1;7255:55:40;;7306:1;7303;7296:12;7255:55;7329:74;7395:7;7390:2;7377:16;7372:2;7368;7364:11;7329:74;:::i;:::-;7319:84;;;6614:795;;;;;;;:::o;7414:458::-;7501:6;7509;7517;7570:2;7558:9;7549:7;7545:23;7541:32;7538:52;;;7586:1;7583;7576:12;7538:52;7626:9;7613:23;7659:18;7651:6;7648:30;7645:50;;;7691:1;7688;7681:12;7645:50;7714;7756:7;7747:6;7736:9;7732:22;7714:50;:::i;:::-;7704:60;7811:2;7796:18;;7783:32;;-1:-1:-1;7862:2:40;7847:18;;;7834:32;;7414:458;-1:-1:-1;;;;7414:458:40:o;8137:632::-;8308:2;8360:21;;;8430:13;;8333:18;;;8452:22;;;8279:4;;8308:2;8531:15;;;;8505:2;8490:18;;;8279:4;8574:169;8588:6;8585:1;8582:13;8574:169;;;8649:13;;8637:26;;8718:15;;;;8683:12;;;;8610:1;8603:9;8574:169;;;-1:-1:-1;8760:3:40;;8137:632;-1:-1:-1;;;;;;8137:632:40:o;8774:388::-;8842:6;8850;8903:2;8891:9;8882:7;8878:23;8874:32;8871:52;;;8919:1;8916;8909:12;8871:52;8958:9;8945:23;8977:31;9002:5;8977:31;:::i;:::-;9027:5;-1:-1:-1;9084:2:40;9069:18;;9056:32;9097:33;9056:32;9097:33;:::i;9167:380::-;9246:1;9242:12;;;;9289;;;9310:61;;9364:4;9356:6;9352:17;9342:27;;9310:61;9417:2;9409:6;9406:14;9386:18;9383:38;9380:161;;;9463:10;9458:3;9454:20;9451:1;9444:31;9498:4;9495:1;9488:15;9526:4;9523:1;9516:15;9380:161;;9167:380;;;:::o;10792:356::-;10994:2;10976:21;;;11013:18;;;11006:30;11072:34;11067:2;11052:18;;11045:62;11139:2;11124:18;;10792:356::o;11991:184::-;12061:6;12114:2;12102:9;12093:7;12089:23;12085:32;12082:52;;;12130:1;12127;12120:12;12082:52;-1:-1:-1;12153:16:40;;11991:184;-1:-1:-1;11991:184:40:o;12869:245::-;12936:6;12989:2;12977:9;12968:7;12964:23;12960:32;12957:52;;;13005:1;13002;12995:12;12957:52;13037:9;13031:16;13056:28;13078:5;13056:28;:::i;13119:413::-;13321:2;13303:21;;;13360:2;13340:18;;;13333:30;13399:34;13394:2;13379:18;;13372:62;-1:-1:-1;;;13465:2:40;13450:18;;13443:47;13522:3;13507:19;;13119:413::o;13537:127::-;13598:10;13593:3;13589:20;13586:1;13579:31;13629:4;13626:1;13619:15;13653:4;13650:1;13643:15;13669:128;13709:3;13740:1;13736:6;13733:1;13730:13;13727:39;;;13746:18;;:::i;:::-;-1:-1:-1;13782:9:40;;13669:128::o;13802:135::-;13841:3;-1:-1:-1;;13862:17:40;;13859:43;;;13882:18;;:::i;:::-;-1:-1:-1;13929:1:40;13918:13;;13802:135::o;13942:127::-;14003:10;13998:3;13994:20;13991:1;13984:31;14034:4;14031:1;14024:15;14058:4;14055:1;14048:15;16624:470;16803:3;16841:6;16835:13;16857:53;16903:6;16898:3;16891:4;16883:6;16879:17;16857:53;:::i;:::-;16973:13;;16932:16;;;;16995:57;16973:13;16932:16;17029:4;17017:17;;16995:57;:::i;:::-;17068:20;;16624:470;-1:-1:-1;;;;16624:470:40:o;17506:125::-;17546:4;17574:1;17571;17568:8;17565:34;;;17579:18;;:::i;:::-;-1:-1:-1;17616:9:40;;17506:125::o;17636:127::-;17697:10;17692:3;17688:20;17685:1;17678:31;17728:4;17725:1;17718:15;17752:4;17749:1;17742:15;20479:414;20681:2;20663:21;;;20720:2;20700:18;;;20693:30;20759:34;20754:2;20739:18;;20732:62;-1:-1:-1;;;20825:2:40;20810:18;;20803:48;20883:3;20868:19;;20479:414::o;21314:489::-;-1:-1:-1;;;;;21583:15:40;;;21565:34;;21635:15;;21630:2;21615:18;;21608:43;21682:2;21667:18;;21660:34;;;21730:3;21725:2;21710:18;;21703:31;;;21508:4;;21751:46;;21777:19;;21769:6;21751:46;:::i;:::-;21743:54;21314:489;-1:-1:-1;;;;;;21314:489:40:o;21808:249::-;21877:6;21930:2;21918:9;21909:7;21905:23;21901:32;21898:52;;;21946:1;21943;21936:12;21898:52;21978:9;21972:16;21997:30;22021:5;21997:30;:::i;22062:127::-;22123:10;22118:3;22114:20;22111:1;22104:31;22154:4;22151:1;22144:15;22178:4;22175:1;22168:15;22194:120;22234:1;22260;22250:35;;22265:18;;:::i;:::-;-1:-1:-1;22299:9:40;;22194:120::o;22319:112::-;22351:1;22377;22367:35;;22382:18;;:::i;:::-;-1:-1:-1;22416:9:40;;22319:112::o",
  "language": "Solidity",
  "natspec": {
    "details": "NFT contract that will be used with the marketplace contract",
    "kind": "dev",
    "methods": {
      "addWhiteListToToken(address,uint256)": {
        "details": "Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.",
        "params": {
          "tokenId": "the ID of the NFT that the whitelist spot is for",
          "whiteListAddress": "the address of the user who will be able to purchase the NFT"
        }
      },
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "burnMembershiptNFTManually(uint256)": {
        "details": "Only owner function to burn a membership NFT",
        "params": {
          "tokenId": "the tokenId of the membership NFT to burn"
        }
      },
      "chargeMemberForMembership(address,uint256)": {
        "details": "Only owner function to take funds from an address to pay for the next month of a membership",
        "params": {
          "member": "the address of the member that is being charged for the next month of a membership",
          "tokenId": "the token ID that the member is being charged "
        },
        "returns": {
          "_0": "0 for success, 1 for failure and NFT burn"
        }
      },
      "createToken(string,uint256,uint256)": {
        "details": "Only owner function to mint a new NFT.",
        "params": {
          "listingFee": "the fee the user pays when putting the NFT for sale on the marketplace",
          "tokenURI": "the token URI on IPFS for the NFT metadata",
          "typeId": "the type ID of the NFT to distinguish what type of NFT it is (Original Cardinal, membership, service)"
        },
        "returns": {
          "_0": "the ID of the newly minted NFT"
        }
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getMembershipTokenIds()": {
        "details": "Function to get a list of all the membership NFT IDs.",
        "returns": {
          "_0": "list of the membership NFT IDs"
        }
      },
      "getOriginalCardinalTokenIds()": {
        "details": "Function to get a list of all the Original Cardinal NFT IDs.",
        "returns": {
          "_0": "list of the Original Cardinal NFT IDs"
        }
      },
      "getUserMembershipTokenURIs(address)": {
        "details": "Function to get all token URIs for membership NFTs that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's membership NFTs"
        }
      },
      "getUserOriginalCardinalTokenURIs(address)": {
        "details": "Function to get all token URIs for Original Cardinal NFTs that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's Original Cardinal NFTs"
        }
      },
      "getUserServiceTokenURIs(address)": {
        "details": "Function to get all token URIs for service NFTs that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's service NFTs"
        }
      },
      "getUserTokenURIs(address)": {
        "details": "Function to get all token URIs for tokens that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's NFTs"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mintMembershipNFT()": {
        "details": "Allows someone to mint a membership NFT by paying Cardinal Tokens",
        "returns": {
          "_0": "the ID of the newly minted membership NFT"
        }
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "setCardinalToken(address)": {
        "details": "Only owner function to set the reference to the Cardinal Token contract",
        "params": {
          "cardinalTokenAddress": "the address for the Cardinal Token contract"
        }
      },
      "setTokenURI(uint256,string)": {
        "details": "Setter function for the token URI of an NFT.",
        "params": {
          "newTokenURI": "the token URI to update the NFT with",
          "tokenId": "the ID of the NFT to update the token URI of"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateMembershipNFTLastPaid(uint256,uint256)": {
        "details": "Only owner function to update the timestamp for a membership NFT after it has been paid for for a month.",
        "params": {
          "lastPaidTimestamp": "the timestamp to update the membership NFT to for when it was last paid for",
          "tokenId": "the ID of the membership NFT to have the timestamp updated for"
        }
      },
      "updateMembershipPrice(uint256)": {
        "details": "sets the price of the membership NFTs in Cardinal Tokens",
        "params": {
          "newMembershipPrice": "the new price of the membership NFTs in Cardinal Tokens"
        }
      },
      "updateMembershipTokenURI(string)": {
        "details": "updates the membership NFT token URI",
        "params": {
          "newMembershipTokenURI": "the new type ID of the service NFTs"
        }
      },
      "updateMembershipTypeId(uint256)": {
        "details": "updates the type ID that represents the membership NFTs",
        "params": {
          "newMembershipTypeId": "the new type ID of the membership NFTs"
        }
      },
      "updateOriginalCardinalTypeId(uint256)": {
        "details": "updates the type ID that represents the Original Cardinal NFTs",
        "params": {
          "newOriginalCardinalTypeId": "the new type ID of the Original Cardinal NFTs"
        }
      },
      "updateServiceTypeId(uint256)": {
        "details": "updates the type ID that represents the service NFTs",
        "params": {
          "newServiceTypeId": "the new type ID of the service NFTs"
        }
      },
      "updateTokenListingFee(uint256,uint256)": {
        "details": "updates the listing fee of an NFT.",
        "params": {
          "newListingFee": "the listing fee value for the NFT",
          "tokenId": "the ID of the NFT to update the listing fee of"
        }
      },
      "updateTokenTypeId(uint256,uint256)": {
        "details": "updates the type ID of an NFT.",
        "params": {
          "newTypeId": "the type ID value for the NFT",
          "tokenId": "the ID of the NFT to update the type ID of"
        }
      },
      "withdrawMembershipNFTFunds()": {
        "details": "Only owner function to withdraw the Cardinal Tokens that are paid to this contract for the Membership NFTs."
      }
    },
    "title": "Cardinal House NFT Contract",
    "version": 1
  },
  "offset": [
    454,
    17177
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x342 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xC34E3782 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xE4E0A931 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xEECBBEC4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xEECBBEC4 EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0xFE0596F2 EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0xFFEAB8A4 EQ PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE4E0A931 EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xEBAA42ED EQ PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD2793D4A GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xD2793D4A EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xD473DAB1 EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0xDAA17F49 EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xDCA8BC47 EQ PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC34E3782 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xC79BA39C EQ PUSH2 0x68B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAA46A400 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0xB43AFFDA GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xB43AFFDA EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xBEB48326 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xBEC2A7C5 EQ PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAA46A400 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xB063C954 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xB15D8D5F EQ PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0x8F01785D EQ PUSH2 0x5B1 JUMPI DUP1 PUSH4 0x95914875 EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0x96291DB6 EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x292 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x7417353F GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x7417353F EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x7498D280 EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0x7867CCD1 EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0x86794F66 EQ PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x71AF8374 EQ PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C23A67A GT PUSH2 0x26C JUMPI DUP1 PUSH4 0x5C23A67A EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x66A98EA3 EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x6F48853B EQ PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x46D36230 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x56060A74 EQ PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11AB8DF5 GT PUSH2 0x2FF JUMPI DUP1 PUSH4 0x1C652FB5 GT PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x1C652FB5 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x28DA575B EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x33A41510 EQ PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11AB8DF5 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x17550165 EQ PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xBECD3BB EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xE1BAC89 EQ PUSH2 0x3E5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35A PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DA0 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x2E15 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x366 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x2E56 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D7 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E56 JUMP JUMPDEST PUSH2 0xA2C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x366 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x397 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x426 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F2E JUMP JUMPDEST PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x3D7 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F75 JUMP JUMPDEST PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F97 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD8 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x490 PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x2FF5 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2F97 JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x3D7 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x490 PUSH2 0x4C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x4DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x503 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0x1114 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x1241 JUMP JUMPDEST PUSH2 0x3D7 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E56 JUMP JUMPDEST PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x588 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F75 JUMP JUMPDEST PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0x1713 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x397 JUMP JUMPDEST PUSH2 0x490 PUSH2 0x5BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x377 PUSH2 0x186A JUMP JUMPDEST PUSH2 0x377 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x5E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3057 JUMP JUMPDEST PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x5F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x309A JUMP JUMPDEST PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x3D7 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x612 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x632 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0x194F JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x645 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x658 CALLDATASIZE PUSH1 0x4 PUSH2 0x30D3 JUMP JUMPDEST PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x673 CALLDATASIZE PUSH1 0x4 PUSH2 0x3153 JUMP JUMPDEST PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x490 PUSH2 0x686 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x699 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F75 JUMP JUMPDEST PUSH2 0x1D92 JUMP JUMPDEST PUSH2 0x377 PUSH2 0x6AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0x1DCE JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x6BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x1F3D JUMP JUMPDEST PUSH2 0x6CC PUSH2 0x1F89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x397 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x6FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD8 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6CC PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x722 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x75E CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x771 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0x2065 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x784 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x2098 JUMP JUMPDEST PUSH2 0x3D7 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x7A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0x2130 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7D6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x7F1 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x806 SWAP1 PUSH2 0x3213 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x832 SWAP1 PUSH2 0x3213 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x87F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x854 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x87F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x862 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x894 DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x921 DUP3 PUSH2 0x1114 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x9AB JUMPI POP PUSH2 0x9AB DUP2 CALLER PUSH2 0x722 JUMP JUMPDEST PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0xA27 DUP4 DUP4 PUSH2 0x217C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA6C DUP4 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320646F65736E2774206F776E20746865204E4654 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1039B832B1B4B334B2B217 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAEB DUP4 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0xB1E JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB12 DUP4 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E27742063686172676520746865206F776E6572206F72206D61726B6574 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x706C61636520666F7220746865206D656D626572736869702E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC10 SWAP2 SWAP1 PUSH2 0x3283 JUMP JUMPDEST LT DUP1 PUSH2 0xC9F JUMPI POP PUSH1 0x17 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9D SWAP2 SWAP1 PUSH2 0x3283 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0xCB5 JUMPI PUSH2 0xCAD DUP3 PUSH2 0x21EA JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD44 SWAP2 SWAP1 PUSH2 0x329C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH2 0xD90 DUP3 DUP3 PUSH2 0x22F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0xDDA CALLER DUP3 PUSH2 0x237E JUMP JUMPDEST PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xA27 DUP4 DUP4 DUP4 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xE0E PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0xE93 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE30 DUP3 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xE6E JUMPI POP PUSH1 0x11 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 PUSH2 0xE6E JUMPI POP PUSH1 0x12 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0xE81 JUMPI PUSH2 0xE7E PUSH1 0x1 DUP5 PUSH2 0x3320 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0xE8B DUP2 PUSH2 0x3338 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE16 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEAF JUMPI PUSH2 0xEAF PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEE2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xECD JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0xF91 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF02 DUP3 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xF40 JUMPI POP PUSH1 0x11 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 PUSH2 0xF40 JUMPI POP PUSH1 0x12 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0xF7F JUMPI PUSH1 0x0 PUSH2 0xF50 DUP3 PUSH2 0x1DCE JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xF65 JUMPI PUSH2 0xF65 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0xF7B PUSH1 0x1 DUP6 PUSH2 0x3320 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0xF89 DUP2 PUSH2 0x3338 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEE8 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA27 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xFC3 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0x102F JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFE5 DUP3 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x100A JUMPI POP PUSH1 0x11 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0x101D JUMPI PUSH2 0x101A PUSH1 0x1 DUP5 PUSH2 0x3320 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x1027 DUP2 PUSH2 0x3338 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFCB JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104B PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x107E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1069 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0xF91 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x109E DUP3 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x10C3 JUMPI POP PUSH1 0x11 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0x1102 JUMPI PUSH1 0x0 PUSH2 0x10D3 DUP3 PUSH2 0x1DCE JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x10E8 JUMPI PUSH2 0x10E8 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x10FE PUSH1 0x1 DUP6 PUSH2 0x3320 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x110C DUP2 PUSH2 0x3338 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x7F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x126B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH2 0x1275 PUSH1 0x0 PUSH2 0x2606 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x132B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134F SWAP2 SWAP1 PUSH2 0x3283 JUMP JUMPDEST LT ISZERO PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F7567682043617264696E616C2054 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F6B656E7320746F2070617920666F7220746865206D656D6265727368697020 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x27232A17 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x141D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1431 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1455 SWAP2 SWAP1 PUSH2 0x3283 JUMP JUMPDEST LT ISZERO PUSH2 0x1501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x69 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176656E277420617070726F766564207468697320636F6E747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x637420746F207370656E6420656E6F756768206F6620796F7572204361726469 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E616C20546F6B656E7320746F2070617920666F7220746865206D656D626572 PUSH1 0x84 DUP3 ADD MSTORE PUSH9 0x39B434B81027232A17 PUSH1 0xB9 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x156B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x158F SWAP2 SWAP1 PUSH2 0x329C JUMP JUMPDEST POP PUSH2 0x159E PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A9 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xC SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE SWAP1 POP PUSH2 0x15D5 CALLER DUP3 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x16 DUP1 SLOAD PUSH2 0x167C SWAP2 DUP4 SWAP2 PUSH2 0x15F9 SWAP1 PUSH2 0x3213 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1625 SWAP1 PUSH2 0x3213 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1672 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1647 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1672 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1655 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x1686 ADDRESS DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x169D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD DUP2 SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x173D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x174F PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0x17A0 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1771 DUP3 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x178E JUMPI PUSH2 0x178B PUSH1 0x1 DUP5 PUSH2 0x3320 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x1798 DUP2 PUSH2 0x3338 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1757 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17BC JUMPI PUSH2 0x17BC PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17EF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x17DA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0xF91 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x180F DUP3 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 PUSH2 0x1829 DUP3 PUSH2 0x1DCE JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x183E JUMPI PUSH2 0x183E PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x1854 PUSH1 0x1 DUP6 PUSH2 0x3320 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x1862 DUP2 PUSH2 0x3338 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x16 DUP1 SLOAD PUSH2 0x1877 SWAP1 PUSH2 0x3213 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18A3 SWAP1 PUSH2 0x3213 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x806 SWAP1 PUSH2 0x3213 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD90 SWAP1 PUSH1 0x16 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2CF1 JUMP JUMPDEST PUSH2 0xD90 CALLER DUP4 DUP4 PUSH2 0x2793 JUMP JUMPDEST PUSH1 0x15 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x195F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x195F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198A CALLER DUP4 PUSH2 0x237E JUMP JUMPDEST PUSH2 0x19A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0x19B2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2862 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1A05 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A80 SWAP2 SWAP1 PUSH2 0x3283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ADA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AFE SWAP2 SWAP1 PUSH2 0x329C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH2 0x1B3C PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B47 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B53 CALLER DUP3 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 SWAP1 SSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 SWAP1 SSTORE PUSH2 0x1B7B DUP2 DUP7 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x1B85 ADDRESS DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1B9C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP5 EQ ISZERO PUSH2 0x1BE0 JUMPI PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD DUP2 SWAP1 SSTORE PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x12 SLOAD DUP5 EQ ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD DUP2 SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1C41 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0x1CAD JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C63 DUP3 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1C88 JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0x1C9B JUMPI PUSH2 0x1C98 PUSH1 0x1 DUP5 PUSH2 0x3320 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x1CA5 DUP2 PUSH2 0x3338 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C49 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC9 JUMPI PUSH2 0x1CC9 PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1CFC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1CE7 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0xF91 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D1C DUP3 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1D41 JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0x1D80 JUMPI PUSH1 0x0 PUSH2 0x1D51 DUP3 PUSH2 0x1DCE JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1D66 JUMPI PUSH2 0x1D66 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x1D7C PUSH1 0x1 DUP6 PUSH2 0x3320 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x1D8A DUP2 PUSH2 0x3338 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DD9 DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH2 0x1E3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1E58 SWAP1 PUSH2 0x3213 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E84 SWAP1 PUSH2 0x3213 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1ED1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EA6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1ED1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EB4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1EEF PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1F02 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1F34 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F1C SWAP3 SWAP2 SWAP1 PUSH2 0x3369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2C DUP5 PUSH2 0x2895 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x15 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x87F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1FC3 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x14 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x87F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1FC3 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2060 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x208F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH2 0x1AFE DUP2 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2127 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x1AFE DUP2 PUSH2 0x2606 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x215A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x324E JUMP JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x21B1 DUP3 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0xD90 JUMPI DUP2 PUSH1 0x15 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x220B JUMPI PUSH2 0x220B PUSH2 0x3353 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x22E1 JUMPI PUSH1 0x0 PUSH2 0x2244 PUSH1 0x15 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2234 JUMPI PUSH2 0x2234 PUSH2 0x3353 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1114 JUMP JUMPDEST SWAP1 POP PUSH2 0x226E DUP2 ADDRESS PUSH1 0x15 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x225E JUMPI PUSH2 0x225E PUSH2 0x3353 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH2 0x227E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3398 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x228E JUMPI PUSH2 0x228E PUSH2 0x3353 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x15 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x22AC JUMPI PUSH2 0x22AC PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x15 DUP1 SLOAD DUP1 PUSH2 0x22C9 JUMPI PUSH2 0x22C9 PUSH2 0x33AF JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP JUMPDEST DUP1 PUSH2 0x22EB DUP2 PUSH2 0x3338 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x22FC DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH2 0x235F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0xA27 SWAP3 DUP5 ADD SWAP1 PUSH2 0x2CF1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2389 DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH2 0x23EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F5 DUP4 PUSH2 0x1114 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2430 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2425 DUP5 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x1C2C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1C2C JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2477 DUP3 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x24DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x253D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x2548 PUSH1 0x0 DUP3 PUSH2 0x217C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2571 SWAP1 DUP5 SWAP1 PUSH2 0x3398 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x259F SWAP1 DUP5 SWAP1 PUSH2 0x3320 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 PUSH2 0xA27 DUP4 DUP4 DUP4 PUSH2 0x296D JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x26AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x26B7 DUP2 PUSH2 0x215F JUMP JUMPDEST ISZERO PUSH2 0x2704 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x272D SWAP1 DUP5 SWAP1 PUSH2 0x3320 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 PUSH2 0xD90 PUSH1 0x0 DUP4 DUP4 PUSH2 0x296D JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x27F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x286D DUP5 DUP5 DUP5 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x2879 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2AE6 JUMP JUMPDEST PUSH2 0x19B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x28A0 DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH2 0x2904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x291B PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x293B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2966 JUMP JUMPDEST DUP1 PUSH2 0x2945 DUP5 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2956 SWAP3 SWAP2 SWAP1 PUSH2 0x3369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 PUSH2 0x299A JUMPI POP PUSH1 0x11 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0xA27 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x29CB JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x29DF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2A8D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x2A6C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A27 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3398 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x2A67 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH2 0x2A8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xF SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x2AC8 SWAP2 PUSH2 0x3320 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2BE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2B2A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2B74 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2B71 SWAP2 DUP2 ADD SWAP1 PUSH2 0x3454 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2BCE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2BA2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BA7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2BC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x1C2C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x2C17 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2C41 JUMPI DUP1 PUSH2 0x2C2B DUP2 PUSH2 0x3338 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C3A SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3487 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C1B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C5C JUMPI PUSH2 0x2C5C PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C86 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1C2C JUMPI PUSH2 0x2C9B PUSH1 0x1 DUP4 PUSH2 0x3398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA8 PUSH1 0xA DUP7 PUSH2 0x349B JUMP JUMPDEST PUSH2 0x2CB3 SWAP1 PUSH1 0x30 PUSH2 0x3320 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2CC8 JUMPI PUSH2 0x2CC8 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2CEA PUSH1 0xA DUP7 PUSH2 0x3487 JUMP JUMPDEST SWAP5 POP PUSH2 0x2C8A JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2CFD SWAP1 PUSH2 0x3213 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2D1F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2D65 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2D38 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2D65 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2D65 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2D65 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2D4A JUMP JUMPDEST POP PUSH2 0x2D71 SWAP3 SWAP2 POP PUSH2 0x2D75 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2D71 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2D76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1AFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2966 DUP2 PUSH2 0x2D8A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DD8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2DC0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x19B2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2E01 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2DBD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2966 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2DE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1AFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2E74 DUP2 PUSH2 0x2E41 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2EB3 JUMPI PUSH2 0x2EB3 PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2EDB JUMPI PUSH2 0x2EDB PUSH2 0x2E82 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2EF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2966 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F6B DUP6 DUP3 DUP7 ADD PUSH2 0x2F0E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2FAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2FB7 DUP2 PUSH2 0x2E41 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2FC7 DUP2 PUSH2 0x2E41 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2966 DUP2 PUSH2 0x2E41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x304A JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x3038 DUP6 DUP4 MLOAD PUSH2 0x2DE9 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x301C JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C2C DUP5 DUP3 DUP6 ADD PUSH2 0x2F0E JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1AFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x30B8 DUP2 PUSH2 0x2E41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x30C8 DUP2 PUSH2 0x308C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x30E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x30F4 DUP2 PUSH2 0x2E41 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x3104 DUP2 PUSH2 0x2E41 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x3138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3147 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2E98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x317F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318B DUP7 DUP3 DUP8 ADD PUSH2 0x2F0E JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31D9 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x31BD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3203 DUP2 PUSH2 0x2E41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x30C8 DUP2 PUSH2 0x2E41 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3227 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3248 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2966 DUP2 PUSH2 0x308C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3333 JUMPI PUSH2 0x3333 PUSH2 0x330A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x334C JUMPI PUSH2 0x334C PUSH2 0x330A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x337B DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2DBD JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x338F DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2DBD JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x33AA JUMPI PUSH2 0x33AA PUSH2 0x330A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x344A SWAP1 DUP4 ADD DUP5 PUSH2 0x2DE9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2966 DUP2 PUSH2 0x2D8A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3496 JUMPI PUSH2 0x3496 PUSH2 0x3471 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x34AA JUMPI PUSH2 0x34AA PUSH2 0x3471 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x2A7C74A4F0769DBEB527CCFFF4C2DCE0E1D95A 0xBD COINBASE CREATE 0xA7 0xA7 0xE7 0x2D 0x27 PUSH12 0xB6DB8A64736F6C6343000808 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "6": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "16": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "17": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "POP",
      "path": "19"
    },
    "18": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "21": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "LT",
      "path": "19"
    },
    "22": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x342"
    },
    "25": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "29": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "SHR",
      "path": "19"
    },
    "32": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "33": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "39": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B8"
    },
    "42": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "43": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "44": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC34E3782"
    },
    "49": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "50": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x104"
    },
    "53": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "54": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "55": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE4E0A931"
    },
    "60": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "61": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "65": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "66": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEECBBEC4"
    },
    "71": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "72": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "76": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "77": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEECBBEC4"
    },
    "82": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "83": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x763"
    },
    "86": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "87": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "88": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "94": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x776"
    },
    "97": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "98": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "99": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFE0596F2"
    },
    "104": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "105": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x789"
    },
    "108": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "109": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "110": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFEAB8A4"
    },
    "115": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "116": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x792"
    },
    "119": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "120": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "123": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "124": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "125": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "126": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE4E0A931"
    },
    "131": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "132": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x70C"
    },
    "135": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "136": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "137": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE985E9C5"
    },
    "142": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "143": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x714"
    },
    "146": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "147": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "148": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEBAA42ED"
    },
    "153": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "154": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x750"
    },
    "157": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "158": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "161": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "162": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "163": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "164": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD2793D4A"
    },
    "169": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "170": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "174": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "175": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD2793D4A"
    },
    "180": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "181": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6B1"
    },
    "184": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "185": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "186": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD473DAB1"
    },
    "191": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "192": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6C4"
    },
    "195": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "196": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "197": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDAA17F49"
    },
    "202": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "203": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6D9"
    },
    "206": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "207": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "208": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDCA8BC47"
    },
    "213": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "214": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6EC"
    },
    "217": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "218": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "221": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "222": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "223": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "224": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC34E3782"
    },
    "229": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "230": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x678"
    },
    "233": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "234": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "235": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC79BA39C"
    },
    "240": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "241": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x68B"
    },
    "244": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "245": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "246": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC87B56DD"
    },
    "251": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "252": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x69E"
    },
    "255": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "256": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "259": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "260": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "261": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "262": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xAA46A400"
    },
    "267": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "268": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x171"
    },
    "271": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "272": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "273": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB43AFFDA"
    },
    "278": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "279": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14B"
    },
    "282": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "283": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "284": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB43AFFDA"
    },
    "289": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "290": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x637"
    },
    "293": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "294": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "295": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB88D4FDE"
    },
    "300": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "301": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x64A"
    },
    "304": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "305": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "306": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xBEB48326"
    },
    "311": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "312": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x65D"
    },
    "315": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "316": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "317": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xBEC2A7C5"
    },
    "322": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "323": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x665"
    },
    "326": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "327": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "330": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "331": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "332": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "333": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xAA46A400"
    },
    "338": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "339": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5FA"
    },
    "342": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "343": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "344": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB063C954"
    },
    "349": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "350": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x604"
    },
    "353": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "354": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "355": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB15D8D5F"
    },
    "360": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "361": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x624"
    },
    "364": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "365": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "367": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "368": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "369": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "370": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "371": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8DA5CB5B"
    },
    "376": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "377": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5A0"
    },
    "380": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "381": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "382": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8F01785D"
    },
    "387": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "388": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5B1"
    },
    "391": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "392": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "393": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95914875"
    },
    "398": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "399": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5C4"
    },
    "402": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "403": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "404": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95D89B41"
    },
    "409": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "410": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5CC"
    },
    "413": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "414": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "415": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x96291DB6"
    },
    "420": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "421": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5D4"
    },
    "424": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "425": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "426": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA22CB465"
    },
    "431": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "432": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5E7"
    },
    "435": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "436": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "438": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "439": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "440": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "441": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "442": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x42842E0E"
    },
    "447": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "448": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x292"
    },
    "451": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "452": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "453": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "458": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "459": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x230"
    },
    "462": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "463": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "464": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7417353F"
    },
    "469": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "470": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x20A"
    },
    "473": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "474": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "475": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7417353F"
    },
    "480": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "481": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x55F"
    },
    "484": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "485": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "486": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7498D280"
    },
    "491": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "492": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x572"
    },
    "495": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "496": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "497": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7867CCD1"
    },
    "502": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "503": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x57A"
    },
    "506": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "507": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "508": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x86794F66"
    },
    "513": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "514": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x58D"
    },
    "517": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "518": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "520": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "521": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "522": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "523": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "524": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "529": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "530": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x53B"
    },
    "533": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "534": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "535": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x715018A6"
    },
    "540": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "541": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x54E"
    },
    "544": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "545": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "546": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x71AF8374"
    },
    "551": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "552": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x556"
    },
    "555": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "556": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "558": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "559": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "560": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "561": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "562": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5C23A67A"
    },
    "567": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "568": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26C"
    },
    "571": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "572": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "573": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5C23A67A"
    },
    "578": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "579": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4CC"
    },
    "582": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "583": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "584": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6352211E"
    },
    "589": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "590": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4F5"
    },
    "593": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "594": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "595": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x66A98EA3"
    },
    "600": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "601": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x508"
    },
    "604": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "605": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "606": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6F48853B"
    },
    "611": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "612": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x51B"
    },
    "615": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "616": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "618": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "619": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "620": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "621": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "622": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x42842E0E"
    },
    "627": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "628": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x49D"
    },
    "631": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "632": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "633": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x46D36230"
    },
    "638": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "639": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4B0"
    },
    "642": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "643": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "644": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x56060A74"
    },
    "649": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "650": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4B9"
    },
    "653": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "654": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "656": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "657": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "658": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "659": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "660": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x11AB8DF5"
    },
    "665": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "666": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FF"
    },
    "669": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "670": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "671": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1C652FB5"
    },
    "676": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "GT",
      "path": "19"
    },
    "677": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D9"
    },
    "680": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "681": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "682": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1C652FB5"
    },
    "687": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "688": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x434"
    },
    "691": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "692": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "693": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23B872DD"
    },
    "698": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "699": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x447"
    },
    "702": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "703": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "704": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x28DA575B"
    },
    "709": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "710": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x45A"
    },
    "713": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "714": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "715": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x33A41510"
    },
    "720": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "721": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x47D"
    },
    "724": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "725": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "727": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "728": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "729": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "730": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "731": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x11AB8DF5"
    },
    "736": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "737": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3F8"
    },
    "740": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "741": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "742": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x162094C4"
    },
    "747": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "748": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x418"
    },
    "751": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "752": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "753": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x17550165"
    },
    "758": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "759": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42B"
    },
    "762": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "763": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "765": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "766": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "767": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "768": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "769": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1FFC9A7"
    },
    "774": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "775": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x347"
    },
    "778": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "779": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "780": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6FDDE03"
    },
    "785": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "786": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36F"
    },
    "789": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "790": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "791": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x81812FC"
    },
    "796": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "797": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x384"
    },
    "800": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "801": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "802": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95EA7B3"
    },
    "807": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "808": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3AF"
    },
    "811": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "812": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "813": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xBECD3BB"
    },
    "818": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "819": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C4"
    },
    "822": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "823": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "824": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE1BAC89"
    },
    "829": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "EQ",
      "path": "19"
    },
    "830": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3E5"
    },
    "833": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "834": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "835": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "837": {
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "DUP1",
      "path": "19"
    },
    "838": {
      "first_revert": true,
      "fn": null,
      "offset": [
        454,
        17177
      ],
      "op": "REVERT",
      "path": "19"
    },
    "839": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "840": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35A"
    },
    "843": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x355"
    },
    "846": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "847": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "849": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DA0"
    },
    "852": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "5"
    },
    "853": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "854": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7A5"
    },
    "857": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "5"
    },
    "858": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "859": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "861": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "862": {
      "op": "SWAP1"
    },
    "863": {
      "op": "ISZERO"
    },
    "864": {
      "op": "ISZERO"
    },
    "865": {
      "op": "DUP2"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "869": {
      "op": "ADD"
    },
    "870": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "871": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "873": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "874": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "5"
    },
    "875": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "876": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SUB",
      "path": "5"
    },
    "877": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "878": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "RETURN",
      "path": "5"
    },
    "879": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "880": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x377"
    },
    "883": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7F7"
    },
    "886": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "5"
    },
    "887": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "888": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "890": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "891": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x366"
    },
    "894": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "895": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "896": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E15"
    },
    "899": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "5"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x397"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x392"
    },
    "907": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E28"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "914": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x889"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "919": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "op": "SWAP1"
    },
    "932": {
      "op": "SWAP2"
    },
    "933": {
      "op": "AND"
    },
    "934": {
      "op": "DUP2"
    },
    "935": {
      "op": "MSTORE"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "938": {
      "op": "ADD"
    },
    "939": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x366"
    },
    "942": {
      "op": "JUMP"
    },
    "943": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "944": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C2"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BD"
    },
    "950": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "951": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "953": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E56"
    },
    "956": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x916"
    },
    "961": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "962": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "963": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "STOP",
      "path": "5"
    },
    "964": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "965": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "968": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D2"
    },
    "971": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "972": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "974": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E56"
    },
    "977": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        6844,
        7600
      ],
      "op": "JUMP",
      "path": "19"
    },
    "978": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "979": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA2C"
    },
    "982": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        6844,
        7600
      ],
      "op": "JUMP",
      "path": "19"
    },
    "983": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "984": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "986": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "987": {
      "op": "SWAP1"
    },
    "988": {
      "op": "DUP2"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "992": {
      "op": "ADD"
    },
    "993": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x366"
    },
    "996": {
      "op": "JUMP"
    },
    "997": {
      "offset": [
        772,
        806
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "998": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        772,
        806
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "1000": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        772,
        806
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1001": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        772,
        806
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x397"
    },
    "1004": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        772,
        806
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "SUB"
    },
    "1013": {
      "offset": [
        772,
        806
      ],
      "op": "AND",
      "path": "19"
    },
    "1014": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        772,
        806
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1015": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        772,
        806
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1016": {
      "offset": [
        1809,
        1867
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1017": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1020": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x406"
    },
    "1023": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1024": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1026": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E28"
    },
    "1029": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        1809,
        1867
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1030": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1031": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "1033": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1035": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1036": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1038": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1039": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1040": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1041": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1043": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1044": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1045": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1046": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1047": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        1809,
        1867
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1048": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9276,
        9409
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1049": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9276,
        9409
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1052": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9276,
        9409
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x426"
    },
    "1055": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9276,
        9409
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1056": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9276,
        9409
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1058": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9276,
        9409
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F2E"
    },
    "1061": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "i",
      "offset": [
        9276,
        9409
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1062": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9276,
        9409
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1063": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9276,
        9409
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD5C"
    },
    "1066": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "i",
      "offset": [
        9276,
        9409
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1067": {
      "offset": [
        2017,
        2052
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1068": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2017,
        2052
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1071": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2017,
        2052
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "1073": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2017,
        2052
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1074": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2017,
        2052
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1075": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2017,
        2052
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1076": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6325,
        6492
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1077": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6325,
        6492
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1080": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6325,
        6492
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x442"
    },
    "1083": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6325,
        6492
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1084": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6325,
        6492
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1086": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6325,
        6492
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F75"
    },
    "1089": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "jump": "i",
      "offset": [
        6325,
        6492
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1090": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6325,
        6492
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1091": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6325,
        6492
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD94"
    },
    "1094": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "jump": "i",
      "offset": [
        6325,
        6492
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1095": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1096": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C2"
    },
    "1099": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x455"
    },
    "1102": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1103": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1105": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F97"
    },
    "1108": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1109": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1110": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDD0"
    },
    "1113": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1114": {
      "offset": [
        1453,
        1500
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1115": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35A"
    },
    "1118": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x468"
    },
    "1121": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1122": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1124": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FD8"
    },
    "1127": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        1453,
        1500
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1128": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1129": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "1131": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1133": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1134": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1136": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1137": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1138": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1139": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1141": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1142": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1143": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1144": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "1146": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "AND",
      "path": "19"
    },
    "1147": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1148": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1453,
        1500
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1149": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1150": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x490"
    },
    "1153": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x48B"
    },
    "1156": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1157": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1159": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FD8"
    },
    "1162": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        11708,
        12649
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1163": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1164": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE01"
    },
    "1167": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        11708,
        12649
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1168": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1169": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1171": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1172": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x366"
    },
    "1175": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1176": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1177": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FF5"
    },
    "1180": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        11708,
        12649
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1181": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1182": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C2"
    },
    "1185": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4AB"
    },
    "1188": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1189": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1191": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F97"
    },
    "1194": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1195": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1196": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF9B"
    },
    "1199": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1200": {
      "offset": [
        1925,
        1966
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1201": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1925,
        1966
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1204": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1925,
        1966
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "1206": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1925,
        1966
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1207": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1925,
        1966
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1208": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1925,
        1966
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1209": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10616,
        11473
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1210": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10616,
        11473
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x490"
    },
    "1213": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10616,
        11473
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4C7"
    },
    "1216": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10616,
        11473
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1217": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10616,
        11473
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1219": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10616,
        11473
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FD8"
    },
    "1222": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        10616,
        11473
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1223": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10616,
        11473
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1224": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10616,
        11473
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFB6"
    },
    "1227": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        10616,
        11473
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1228": {
      "offset": [
        1278,
        1338
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1229": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x397"
    },
    "1232": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4DA"
    },
    "1235": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1236": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1238": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E28"
    },
    "1241": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        1278,
        1338
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1242": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1243": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "1245": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1247": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1248": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1250": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1251": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1252": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1253": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1255": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1256": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1257": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "SUB"
    },
    "1266": {
      "offset": [
        1278,
        1338
      ],
      "op": "AND",
      "path": "19"
    },
    "1267": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1268": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        1278,
        1338
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1269": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1270": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x397"
    },
    "1273": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x503"
    },
    "1276": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1277": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1279": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E28"
    },
    "1282": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1283": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1284": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1114"
    },
    "1287": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1288": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        15508,
        15665
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1289": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        15508,
        15665
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1292": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        15508,
        15665
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x516"
    },
    "1295": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        15508,
        15665
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1296": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        15508,
        15665
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1298": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        15508,
        15665
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E28"
    },
    "1301": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "i",
      "offset": [
        15508,
        15665
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1302": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        15508,
        15665
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1303": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        15508,
        15665
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x118B"
    },
    "1306": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "i",
      "offset": [
        15508,
        15665
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1307": {
      "offset": [
        1011,
        1061
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1308": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1311": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x529"
    },
    "1314": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1315": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1317": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E28"
    },
    "1320": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "i",
      "offset": [
        1011,
        1061
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1321": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1322": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "1324": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1326": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1327": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1329": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1330": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1331": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1332": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1334": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1335": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1336": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1337": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1338": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1011,
        1061
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1339": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1340": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D7"
    },
    "1343": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x549"
    },
    "1346": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1347": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1349": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FD8"
    },
    "1352": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1353": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1354": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11BA"
    },
    "1357": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1358": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1359": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C2"
    },
    "1362": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1241"
    },
    "1365": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1366": {
      "offset": [
        2100,
        2132
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1367": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2100,
        2132
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1370": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2100,
        2132
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "1372": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2100,
        2132
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1373": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2100,
        2132
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1374": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2100,
        2132
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1375": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14508,
        14667
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1376": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14508,
        14667
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1379": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14508,
        14667
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x56D"
    },
    "1382": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14508,
        14667
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1383": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14508,
        14667
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1385": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14508,
        14667
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E56"
    },
    "1388": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "jump": "i",
      "offset": [
        14508,
        14667
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1389": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14508,
        14667
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1390": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14508,
        14667
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1277"
    },
    "1393": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "jump": "i",
      "offset": [
        14508,
        14667
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1394": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        4957,
        5996
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1395": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        4957,
        5996
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1398": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        4957,
        5996
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12CF"
    },
    "1401": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        4957,
        5996
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1402": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14864,
        15013
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1403": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14864,
        15013
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1406": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14864,
        15013
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x588"
    },
    "1409": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14864,
        15013
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1410": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14864,
        15013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1412": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14864,
        15013
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F75"
    },
    "1415": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "jump": "i",
      "offset": [
        14864,
        15013
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1416": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14864,
        15013
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1417": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14864,
        15013
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16D7"
    },
    "1420": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "jump": "i",
      "offset": [
        14864,
        15013
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1421": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        16111,
        16232
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1422": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        16111,
        16232
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1425": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        16111,
        16232
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x59B"
    },
    "1428": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        16111,
        16232
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1429": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        16111,
        16232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1431": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        16111,
        16232
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E28"
    },
    "1434": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "jump": "i",
      "offset": [
        16111,
        16232
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1435": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        16111,
        16232
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1436": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        16111,
        16232
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1713"
    },
    "1439": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "jump": "i",
      "offset": [
        16111,
        16232
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1440": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1441": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x7"
    },
    "1443": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "op": "SUB"
    },
    "1452": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1453": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x397"
    },
    "1456": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1457": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9624,
        10367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1458": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9624,
        10367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x490"
    },
    "1461": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9624,
        10367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5BF"
    },
    "1464": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9624,
        10367
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1465": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9624,
        10367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1467": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9624,
        10367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FD8"
    },
    "1470": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        9624,
        10367
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1471": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9624,
        10367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1472": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9624,
        10367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1742"
    },
    "1475": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        9624,
        10367
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1476": {
      "offset": [
        2365,
        2397
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1477": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x377"
    },
    "1480": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x186A"
    },
    "1483": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1484": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1485": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x377"
    },
    "1488": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18F8"
    },
    "1491": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1492": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16373,
        16520
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1493": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16373,
        16520
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1496": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16373,
        16520
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5E2"
    },
    "1499": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16373,
        16520
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1500": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16373,
        16520
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1502": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16373,
        16520
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3057"
    },
    "1505": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "jump": "i",
      "offset": [
        16373,
        16520
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1506": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16373,
        16520
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1507": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16373,
        16520
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1907"
    },
    "1510": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "jump": "i",
      "offset": [
        16373,
        16520
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1511": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1512": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C2"
    },
    "1515": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5F5"
    },
    "1518": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1519": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1521": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x309A"
    },
    "1524": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1525": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1526": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1944"
    },
    "1529": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1530": {
      "offset": [
        597,
        630
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1531": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        597,
        630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "1533": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        597,
        630
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1534": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        597,
        630
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1537": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        597,
        630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1538": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        597,
        630
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1539": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        597,
        630
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1540": {
      "offset": [
        1154,
        1208
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1541": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1544": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x612"
    },
    "1547": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1548": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1550": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E28"
    },
    "1553": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        1154,
        1208
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1554": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1555": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1559": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1560": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1562": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1563": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1564": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1565": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1570": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1571": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1154,
        1208
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1572": {
      "offset": [
        2278,
        2313
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1573": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1576": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x632"
    },
    "1579": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1580": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1582": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E28"
    },
    "1585": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        2278,
        2313
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1586": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1587": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x194F"
    },
    "1590": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        2278,
        2313
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1591": {
      "offset": [
        2188,
        2229
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1592": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1595": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x645"
    },
    "1598": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1599": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1601": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E28"
    },
    "1604": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        2188,
        2229
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1605": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1606": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1970"
    },
    "1609": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        2188,
        2229
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1610": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1611": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C2"
    },
    "1614": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x658"
    },
    "1617": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1618": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1620": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30D3"
    },
    "1623": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1624": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1625": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1980"
    },
    "1628": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1629": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7741,
        7884
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1630": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7741,
        7884
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1633": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7741,
        7884
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19B8"
    },
    "1636": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "i",
      "offset": [
        7741,
        7884
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1637": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8283,
        9070
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1638": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8283,
        9070
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1641": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8283,
        9070
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x673"
    },
    "1644": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8283,
        9070
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1645": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8283,
        9070
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1647": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8283,
        9070
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3153"
    },
    "1650": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        8283,
        9070
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1651": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8283,
        9070
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1652": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8283,
        9070
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B01"
    },
    "1655": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        8283,
        9070
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1656": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12878,
        13708
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1657": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12878,
        13708
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x490"
    },
    "1660": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12878,
        13708
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x686"
    },
    "1663": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12878,
        13708
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1664": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12878,
        13708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1666": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12878,
        13708
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FD8"
    },
    "1669": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        12878,
        13708
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1670": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12878,
        13708
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1671": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12878,
        13708
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C34"
    },
    "1674": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        12878,
        13708
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1675": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15194,
        15327
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1676": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15194,
        15327
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1679": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15194,
        15327
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x699"
    },
    "1682": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15194,
        15327
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1683": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15194,
        15327
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1685": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15194,
        15327
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F75"
    },
    "1688": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "jump": "i",
      "offset": [
        15194,
        15327
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1689": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15194,
        15327
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1690": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15194,
        15327
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D92"
    },
    "1693": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "jump": "i",
      "offset": [
        15194,
        15327
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1694": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1695": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x377"
    },
    "1698": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6AC"
    },
    "1701": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1702": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1704": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2E28"
    },
    "1707": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1708": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1709": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DCE"
    },
    "1712": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1713": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17025,
        17174
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1714": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17025,
        17174
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1717": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17025,
        17174
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6BF"
    },
    "1720": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17025,
        17174
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1721": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17025,
        17174
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1723": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17025,
        17174
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FD8"
    },
    "1726": {
      "fn": "CardinalNFT.setCardinalToken",
      "jump": "i",
      "offset": [
        17025,
        17174
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1727": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17025,
        17174
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1728": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17025,
        17174
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F3D"
    },
    "1731": {
      "fn": "CardinalNFT.setCardinalToken",
      "jump": "i",
      "offset": [
        17025,
        17174
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1732": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1733": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6CC"
    },
    "1736": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F89"
    },
    "1739": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "jump": "i",
      "offset": [
        14112,
        14226
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1740": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1741": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1743": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1744": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x366"
    },
    "1747": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1748": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1749": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31A1"
    },
    "1752": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "jump": "i",
      "offset": [
        14112,
        14226
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1753": {
      "offset": [
        685,
        718
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1754": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        685,
        718
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "1756": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        685,
        718
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1757": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        685,
        718
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x397"
    },
    "1760": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        685,
        718
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1767": {
      "op": "SHL"
    },
    "1768": {
      "op": "SUB"
    },
    "1769": {
      "offset": [
        685,
        718
      ],
      "op": "AND",
      "path": "19"
    },
    "1770": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        685,
        718
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1771": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        685,
        718
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1772": {
      "offset": [
        1647,
        1705
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1773": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1776": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6FA"
    },
    "1779": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1780": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1782": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FD8"
    },
    "1785": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "jump": "i",
      "offset": [
        1647,
        1705
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1786": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1787": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "1789": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1791": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1792": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1794": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1795": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1796": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1797": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1799": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1800": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1801": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1802": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1803": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1647,
        1705
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1804": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13854,
        13980
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1805": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13854,
        13980
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6CC"
    },
    "1808": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13854,
        13980
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FE0"
    },
    "1811": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "jump": "i",
      "offset": [
        13854,
        13980
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1812": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1813": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35A"
    },
    "1816": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x722"
    },
    "1819": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1820": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1822": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31E5"
    },
    "1825": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1826": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1833": {
      "op": "SHL"
    },
    "1834": {
      "op": "SUB"
    },
    "1835": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 1
    },
    "1836": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1837": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "5"
    },
    "1838": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1840": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1841": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1842": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1843": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1845": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1847": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1848": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1849": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1850": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1852": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1853": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1854": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1855": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1856": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1857": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1858": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "1859": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1860": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1861": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1862": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1863": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1864": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1865": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1866": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1867": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1869": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "1870": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1871": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1872": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        16698,
        16843
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1873": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        16698,
        16843
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1876": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        16698,
        16843
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x75E"
    },
    "1879": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        16698,
        16843
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1880": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        16698,
        16843
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1882": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        16698,
        16843
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E28"
    },
    "1885": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "jump": "i",
      "offset": [
        16698,
        16843
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1886": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        16698,
        16843
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1887": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        16698,
        16843
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2036"
    },
    "1890": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "jump": "i",
      "offset": [
        16698,
        16843
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1891": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3514,
        3627
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1892": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3514,
        3627
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1895": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3514,
        3627
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x771"
    },
    "1898": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3514,
        3627
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1899": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3514,
        3627
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1901": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3514,
        3627
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E28"
    },
    "1904": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "jump": "i",
      "offset": [
        3514,
        3627
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1905": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3514,
        3627
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1906": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3514,
        3627
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2065"
    },
    "1909": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "jump": "i",
      "offset": [
        3514,
        3627
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C2"
    },
    "1914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x784"
    },
    "1917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1920": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD8"
    },
    "1923": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2098"
    },
    "1928": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1929": {
      "offset": [
        2470,
        2516
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1930": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2470,
        2516
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D7"
    },
    "1933": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2470,
        2516
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "1935": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2470,
        2516
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1936": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2470,
        2516
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2470,
        2516
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1938": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        15826,
        15959
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1939": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        15826,
        15959
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C2"
    },
    "1942": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        15826,
        15959
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7A0"
    },
    "1945": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        15826,
        15959
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1946": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        15826,
        15959
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1948": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        15826,
        15959
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E28"
    },
    "1951": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "jump": "i",
      "offset": [
        15826,
        15959
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1952": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        15826,
        15959
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1953": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        15826,
        15959
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2130"
    },
    "1956": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "jump": "i",
      "offset": [
        15826,
        15959
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1957": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1958": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "op": "SUB"
    },
    "1968": {
      "op": "NOT"
    },
    "1969": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 2
    },
    "1970": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "5"
    },
    "1971": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1978": {
      "op": "SHL"
    },
    "1979": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "5"
    },
    "1980": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1981": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7D6"
    },
    "1984": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1985": {
      "op": "POP"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1992": {
      "op": "SHL"
    },
    "1993": {
      "op": "SUB"
    },
    "1994": {
      "op": "NOT"
    },
    "1995": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1996": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "5"
    },
    "1997": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2004": {
      "op": "SHL"
    },
    "2005": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "5"
    },
    "2006": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2007": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2008": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7F1"
    },
    "2011": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2012": {
      "op": "POP"
    },
    "2013": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2020": {
      "op": "SHL"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2027": {
      "op": "SHL"
    },
    "2028": {
      "op": "SUB"
    },
    "2029": {
      "op": "NOT"
    },
    "2030": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 3
    },
    "2031": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "14"
    },
    "2032": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "14"
    },
    "2033": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2034": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1688,
        1863
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2035": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "op": "POP"
    },
    "2038": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2039": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2040": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2042": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x0"
    },
    "2044": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2045": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2046": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x806"
    },
    "2049": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2050": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3213"
    },
    "2053": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2054": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2055": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2056": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2058": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2059": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2061": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2062": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2063": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "5"
    },
    "2064": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "5"
    },
    "2065": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2067": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2068": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2070": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2071": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2072": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2073": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2074": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2076": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2077": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2078": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2079": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2080": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2081": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2082": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2083": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2084": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2086": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2087": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2088": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2089": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2090": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x832"
    },
    "2093": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2094": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3213"
    },
    "2097": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2098": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2099": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2100": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2101": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x87F"
    },
    "2104": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2105": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2106": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2108": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "5"
    },
    "2109": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x854"
    },
    "2112": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2113": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2116": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2117": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2118": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2119": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "5"
    },
    "2120": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "5"
    },
    "2121": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2122": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2123": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2124": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2126": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2127": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2128": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x87F"
    },
    "2131": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2132": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2133": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2134": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2135": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2136": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2137": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2139": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2140": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2142": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2144": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2145": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2146": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2147": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2148": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2149": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2150": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2151": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2152": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2154": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2155": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2156": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2158": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2159": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2160": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2161": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "5"
    },
    "2162": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x862"
    },
    "2165": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2166": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2167": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2168": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "5"
    },
    "2169": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2171": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "5"
    },
    "2172": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2173": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2174": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2175": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2176": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2177": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2178": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2179": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2180": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2181": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2182": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2183": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2184": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2185": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2186": {
      "fn": "ERC721.getApproved",
      "offset": [
        4075,
        4082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2188": {
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4118
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 5,
      "value": "0x894"
    },
    "2191": {
      "fn": "ERC721.getApproved",
      "offset": [
        4110,
        4117
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2192": {
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x215F"
    },
    "2195": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4102,
        4118
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2196": {
      "branch": 170,
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4118
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2197": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8FA"
    },
    "2200": {
      "branch": 170,
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2201": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2203": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2204": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2210": {
      "op": "SHL"
    },
    "2211": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2212": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2215": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2217": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2218": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "ADD",
      "path": "5"
    },
    "2219": {
      "op": "MSTORE"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2224": {
      "op": "DUP3"
    },
    "2225": {
      "op": "ADD"
    },
    "2226": {
      "op": "MSTORE"
    },
    "2227": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2262": {
      "op": "DUP3"
    },
    "2263": {
      "op": "ADD"
    },
    "2264": {
      "op": "MSTORE"
    },
    "2265": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2280": {
      "op": "SHL"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2283": {
      "op": "DUP3"
    },
    "2284": {
      "op": "ADD"
    },
    "2285": {
      "op": "MSTORE"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2288": {
      "op": "ADD"
    },
    "2289": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2290": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2292": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2293": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2294": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2295": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SUB",
      "path": "5"
    },
    "2296": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2297": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "2298": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2299": {
      "op": "POP"
    },
    "2300": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x0"
    },
    "2302": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2303": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2304": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2305": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2307": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2309": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2310": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2312": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2313": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2314": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2321": {
      "op": "SHL"
    },
    "2322": {
      "op": "SUB"
    },
    "2323": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "AND",
      "path": "5"
    },
    "2324": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2325": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2326": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2327": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3630
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2329": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x921"
    },
    "2332": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3655
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2333": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1114"
    },
    "2336": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2337": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2338": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2339": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "POP",
      "path": "5"
    },
    "2340": {
      "fn": "ERC721.approve",
      "offset": [
        3680,
        3685
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 7
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2347": {
      "op": "SHL"
    },
    "2348": {
      "op": "SUB"
    },
    "2349": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "5"
    },
    "2350": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3676
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2357": {
      "op": "SHL"
    },
    "2358": {
      "op": "SUB"
    },
    "2359": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "5"
    },
    "2360": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "EQ",
      "path": "5"
    },
    "2361": {
      "branch": 171,
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2362": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x98F"
    },
    "2365": {
      "branch": 171,
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2366": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2368": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2369": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2375": {
      "op": "SHL"
    },
    "2376": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2377": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2380": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2382": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2383": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "2384": {
      "op": "MSTORE"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2389": {
      "op": "DUP3"
    },
    "2390": {
      "op": "ADD"
    },
    "2391": {
      "op": "MSTORE"
    },
    "2392": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2427": {
      "op": "DUP3"
    },
    "2428": {
      "op": "ADD"
    },
    "2429": {
      "op": "MSTORE"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2434": {
      "op": "SHL"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2437": {
      "op": "DUP3"
    },
    "2438": {
      "op": "ADD"
    },
    "2439": {
      "op": "MSTORE"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2442": {
      "op": "ADD"
    },
    "2443": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "2446": {
      "op": "JUMP"
    },
    "2447": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2448": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 8
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2455": {
      "op": "SHL"
    },
    "2456": {
      "op": "SUB"
    },
    "2457": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 9
    },
    "2458": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "AND",
      "path": "5"
    },
    "2459": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "EQ",
      "path": "5"
    },
    "2460": {
      "branch": 172,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2461": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AB"
    },
    "2464": {
      "branch": 172,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2465": {
      "op": "POP"
    },
    "2466": {
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AB"
    },
    "2469": {
      "fn": "ERC721.approve",
      "offset": [
        3797,
        3802
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2470": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2471": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x722"
    },
    "2474": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2475": {
      "branch": 173,
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2476": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA1D"
    },
    "2479": {
      "branch": 173,
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2480": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2482": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2489": {
      "op": "SHL"
    },
    "2490": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2491": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2494": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2496": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2497": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "ADD",
      "path": "5"
    },
    "2498": {
      "op": "MSTORE"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2503": {
      "op": "DUP3"
    },
    "2504": {
      "op": "ADD"
    },
    "2505": {
      "op": "MSTORE"
    },
    "2506": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2541": {
      "op": "DUP3"
    },
    "2542": {
      "op": "ADD"
    },
    "2543": {
      "op": "MSTORE"
    },
    "2544": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2579": {
      "op": "DUP3"
    },
    "2580": {
      "op": "ADD"
    },
    "2581": {
      "op": "MSTORE"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2584": {
      "op": "ADD"
    },
    "2585": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "2588": {
      "op": "JUMP"
    },
    "2589": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2590": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 10,
      "value": "0xA27"
    },
    "2593": {
      "fn": "ERC721.approve",
      "offset": [
        3919,
        3921
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2594": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3930
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2595": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x217C"
    },
    "2598": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2599": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2600": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "2601": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "2602": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "2603": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2604": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2605": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2607": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2608": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6938,
        6942
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2610": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6938,
        6942
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2617": {
      "op": "SHL"
    },
    "2618": {
      "op": "SUB"
    },
    "2619": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2620": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2621": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2622": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA59"
    },
    "2625": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2626": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2628": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2629": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2635": {
      "op": "SHL"
    },
    "2636": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2637": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2638": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2641": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "2644": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2645": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "2648": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2649": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2650": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6982,
        6988
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 11
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2657": {
      "op": "SHL"
    },
    "2658": {
      "op": "SUB"
    },
    "2659": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6962,
        6988
      ],
      "op": "AND",
      "path": "19"
    },
    "2660": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6962,
        6978
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA6C"
    },
    "2663": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6970,
        6977
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2664": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6962,
        6969
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "2667": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        6962,
        6978
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2668": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6962,
        6978
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2675": {
      "op": "SHL"
    },
    "2676": {
      "op": "SUB"
    },
    "2677": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6962,
        6988
      ],
      "op": "AND",
      "path": "19"
    },
    "2678": {
      "branch": 138,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6962,
        6988
      ],
      "op": "EQ",
      "path": "19"
    },
    "2679": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6954,
        7036
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xAD6"
    },
    "2682": {
      "branch": 138,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6954,
        7036
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2683": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6954,
        7036
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2685": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6954,
        7036
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2692": {
      "op": "SHL"
    },
    "2693": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6954,
        7036
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2694": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6954,
        7036
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2697": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6954,
        7036
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2699": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6954,
        7036
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2700": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6954,
        7036
      ],
      "op": "ADD",
      "path": "19"
    },
    "2701": {
      "op": "MSTORE"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2706": {
      "op": "DUP3"
    },
    "2707": {
      "op": "ADD"
    },
    "2708": {
      "op": "MSTORE"
    },
    "2709": {
      "op": "PUSH32",
      "value": "0x54686973206164647265737320646F65736E2774206F776E20746865204E4654"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2744": {
      "op": "DUP3"
    },
    "2745": {
      "op": "ADD"
    },
    "2746": {
      "op": "MSTORE"
    },
    "2747": {
      "op": "PUSH11",
      "value": "0x1039B832B1B4B334B2B217"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "2761": {
      "op": "SHL"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2764": {
      "op": "DUP3"
    },
    "2765": {
      "op": "ADD"
    },
    "2766": {
      "op": "MSTORE"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2769": {
      "op": "ADD"
    },
    "2770": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6954,
        7036
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8F1"
    },
    "2773": {
      "op": "JUMP"
    },
    "2774": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6954,
        7036
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2775": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2777": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "op": "SUB"
    },
    "2786": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2787": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7054,
        7070
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 12,
      "value": "0xAEB"
    },
    "2790": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7062,
        7069
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2791": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7054,
        7061
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "2794": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        7054,
        7070
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2795": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7054,
        7070
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2802": {
      "op": "SHL"
    },
    "2803": {
      "op": "SUB"
    },
    "2804": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7054,
        7081
      ],
      "op": "AND",
      "path": "19"
    },
    "2805": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7054,
        7081
      ],
      "op": "EQ",
      "path": "19"
    },
    "2806": {
      "branch": 139,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7054,
        7081
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2807": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7054,
        7123
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2808": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7054,
        7123
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2809": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7054,
        7123
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB1E"
    },
    "2812": {
      "branch": 139,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7054,
        7123
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2813": {
      "op": "POP"
    },
    "2814": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7105,
        7123
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "2816": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7105,
        7123
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2823": {
      "op": "SHL"
    },
    "2824": {
      "op": "SUB"
    },
    "2825": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7105,
        7123
      ],
      "op": "AND",
      "path": "19"
    },
    "2826": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7085,
        7101
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB12"
    },
    "2829": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7093,
        7100
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2830": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7085,
        7092
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "2833": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        7085,
        7101
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2834": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7085,
        7101
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2841": {
      "op": "SHL"
    },
    "2842": {
      "op": "SUB"
    },
    "2843": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7085,
        7123
      ],
      "op": "AND",
      "path": "19"
    },
    "2844": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7085,
        7123
      ],
      "op": "EQ",
      "path": "19"
    },
    "2845": {
      "branch": 140,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7085,
        7123
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2846": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7054,
        7123
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2847": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7046,
        7185
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB90"
    },
    "2850": {
      "branch": 140,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7046,
        7185
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2851": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7046,
        7185
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2853": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7046,
        7185
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2854": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2860": {
      "op": "SHL"
    },
    "2861": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7046,
        7185
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2862": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7046,
        7185
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2865": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7046,
        7185
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2867": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7046,
        7185
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2868": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7046,
        7185
      ],
      "op": "ADD",
      "path": "19"
    },
    "2869": {
      "op": "MSTORE"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2874": {
      "op": "DUP3"
    },
    "2875": {
      "op": "ADD"
    },
    "2876": {
      "op": "MSTORE"
    },
    "2877": {
      "op": "PUSH32",
      "value": "0x43616E27742063686172676520746865206F776E6572206F72206D61726B6574"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2912": {
      "op": "DUP3"
    },
    "2913": {
      "op": "ADD"
    },
    "2914": {
      "op": "MSTORE"
    },
    "2915": {
      "op": "PUSH32",
      "value": "0x706C61636520666F7220746865206D656D626572736869702E00000000000000"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2950": {
      "op": "DUP3"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "op": "MSTORE"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7046,
        7185
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8F1"
    },
    "2959": {
      "op": "JUMP"
    },
    "2960": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7046,
        7185
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2961": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7234,
        7265
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "2963": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7234,
        7265
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2964": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "2966": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2967": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2969": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2970": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2977": {
      "op": "SHL"
    },
    "2978": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2979": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2986": {
      "op": "SHL"
    },
    "2987": {
      "op": "SUB"
    },
    "2988": {
      "op": "DUP7"
    },
    "2989": {
      "op": "DUP2"
    },
    "2990": {
      "op": "AND"
    },
    "2991": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2993": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2994": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "ADD",
      "path": "19"
    },
    "2995": {
      "op": "MSTORE"
    },
    "2996": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7213
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2997": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7213
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2998": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7213
      ],
      "op": "AND",
      "path": "19"
    },
    "2999": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7213
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3000": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7223
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "3005": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7223
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3008": {
      "op": "ADD"
    },
    "3009": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3011": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3013": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3014": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3015": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3016": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "SUB",
      "path": "19"
    },
    "3017": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3018": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3019": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3020": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3021": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3022": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3023": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3024": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBD8"
    },
    "3027": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3028": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3030": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3031": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3032": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3033": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "POP",
      "path": "19"
    },
    "3034": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "GAS",
      "path": "19"
    },
    "3035": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "3036": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3037": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3038": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3039": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBEC"
    },
    "3042": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3043": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3044": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3046": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3047": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3048": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3049": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3051": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3052": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3053": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "POP",
      "path": "19"
    },
    "3054": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "POP",
      "path": "19"
    },
    "3055": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "POP",
      "path": "19"
    },
    "3056": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "POP",
      "path": "19"
    },
    "3057": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3059": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3060": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3061": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3063": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "NOT",
      "path": "19"
    },
    "3064": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3066": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3067": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "ADD",
      "path": "19"
    },
    "3068": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "AND",
      "path": "19"
    },
    "3069": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3070": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "ADD",
      "path": "19"
    },
    "3071": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3072": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3074": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3075": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "POP",
      "path": "19"
    },
    "3076": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3077": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "ADD",
      "path": "19"
    },
    "3078": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3079": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC10"
    },
    "3082": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3083": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3084": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3283"
    },
    "3087": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        7200,
        7231
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3088": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7231
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3089": {
      "branch": 141,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7265
      ],
      "op": "LT",
      "path": "19"
    },
    "3090": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7349
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3091": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7349
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC9F"
    },
    "3094": {
      "branch": 141,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7349
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3095": {
      "op": "POP"
    },
    "3096": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7318,
        7349
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "3098": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7318,
        7349
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3099": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7282
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "3101": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7282
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3102": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3104": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3105": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3112": {
      "op": "SHL"
    },
    "3113": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3114": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3121": {
      "op": "SHL"
    },
    "3122": {
      "op": "SUB"
    },
    "3123": {
      "op": "DUP7"
    },
    "3124": {
      "op": "DUP2"
    },
    "3125": {
      "op": "AND"
    },
    "3126": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3128": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3129": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "ADD",
      "path": "19"
    },
    "3130": {
      "op": "MSTORE"
    },
    "3131": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7309,
        7313
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3134": {
      "op": "DUP4"
    },
    "3135": {
      "op": "ADD"
    },
    "3136": {
      "op": "MSTORE"
    },
    "3137": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7282
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3138": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7282
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3139": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7282
      ],
      "op": "AND",
      "path": "19"
    },
    "3140": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7282
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3141": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7292
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDD62ED3E"
    },
    "3146": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7292
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3149": {
      "op": "ADD"
    },
    "3150": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3152": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3154": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3155": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3156": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3157": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "SUB",
      "path": "19"
    },
    "3158": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3159": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3160": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3161": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3162": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3163": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3164": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3165": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC65"
    },
    "3168": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3169": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3171": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3172": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3173": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3174": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "POP",
      "path": "19"
    },
    "3175": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "GAS",
      "path": "19"
    },
    "3176": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "3177": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3178": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3179": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3180": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC79"
    },
    "3183": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3184": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3185": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3187": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3188": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3189": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3190": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3192": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3193": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3194": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "POP",
      "path": "19"
    },
    "3195": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "POP",
      "path": "19"
    },
    "3196": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "POP",
      "path": "19"
    },
    "3197": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "POP",
      "path": "19"
    },
    "3198": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3200": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3201": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3202": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3204": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "NOT",
      "path": "19"
    },
    "3205": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3207": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3208": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "ADD",
      "path": "19"
    },
    "3209": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "AND",
      "path": "19"
    },
    "3210": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3211": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "ADD",
      "path": "19"
    },
    "3212": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3213": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3215": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3216": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "POP",
      "path": "19"
    },
    "3217": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3218": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "ADD",
      "path": "19"
    },
    "3219": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3220": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC9D"
    },
    "3223": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3224": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3225": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3283"
    },
    "3228": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        7269,
        7315
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3229": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7315
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3230": {
      "branch": 142,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7269,
        7349
      ],
      "op": "LT",
      "path": "19"
    },
    "3231": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7200,
        7349
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3232": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7196,
        7424
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3233": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7196,
        7424
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCB5"
    },
    "3236": {
      "branch": 142,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7196,
        7424
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3237": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7365,
        7391
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 13,
      "value": "0xCAD"
    },
    "3240": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7383,
        7390
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3241": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7365,
        7382
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21EA"
    },
    "3244": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        7365,
        7391
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3245": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7365,
        7391
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3246": {
      "op": "POP"
    },
    "3247": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7412,
        7413
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 14,
      "value": "0x1"
    },
    "3249": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7405,
        7413
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7F1"
    },
    "3252": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7405,
        7413
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3253": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7196,
        7424
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3254": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7446
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 15,
      "value": "0xA"
    },
    "3256": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7446
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3257": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7483,
        7514
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "3259": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7483,
        7514
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3260": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3262": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3263": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3270": {
      "op": "SHL"
    },
    "3271": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3272": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3279": {
      "op": "SHL"
    },
    "3280": {
      "op": "SUB"
    },
    "3281": {
      "op": "DUP7"
    },
    "3282": {
      "op": "DUP2"
    },
    "3283": {
      "op": "AND"
    },
    "3284": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3286": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3287": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "ADD",
      "path": "19"
    },
    "3288": {
      "op": "MSTORE"
    },
    "3289": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7476,
        7480
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3292": {
      "op": "DUP4"
    },
    "3293": {
      "op": "ADD"
    },
    "3294": {
      "op": "MSTORE"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3297": {
      "op": "DUP3"
    },
    "3298": {
      "op": "ADD"
    },
    "3299": {
      "op": "SWAP3"
    },
    "3300": {
      "op": "SWAP1"
    },
    "3301": {
      "op": "SWAP3"
    },
    "3302": {
      "op": "MSTORE"
    },
    "3303": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7446
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3304": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7446
      ],
      "op": "AND",
      "path": "19"
    },
    "3305": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7446
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3306": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7459
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23B872DD"
    },
    "3311": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7459
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3314": {
      "op": "ADD"
    },
    "3315": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3317": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3319": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3320": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3321": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3322": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "SUB",
      "path": "19"
    },
    "3323": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3324": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3326": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3327": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3328": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3329": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3330": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3331": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3332": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD0C"
    },
    "3335": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3336": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3338": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3339": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3340": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3341": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "POP",
      "path": "19"
    },
    "3342": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "GAS",
      "path": "19"
    },
    "3343": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "CALL",
      "path": "19"
    },
    "3344": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3345": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3346": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3347": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD20"
    },
    "3350": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3351": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3352": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3354": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3355": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3356": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3357": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3359": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3360": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3361": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "POP",
      "path": "19"
    },
    "3362": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "POP",
      "path": "19"
    },
    "3363": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "POP",
      "path": "19"
    },
    "3364": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "POP",
      "path": "19"
    },
    "3365": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3367": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3368": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3369": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3371": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "NOT",
      "path": "19"
    },
    "3372": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3374": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3375": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "ADD",
      "path": "19"
    },
    "3376": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "AND",
      "path": "19"
    },
    "3377": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3378": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "ADD",
      "path": "19"
    },
    "3379": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3380": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3382": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3383": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "POP",
      "path": "19"
    },
    "3384": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3385": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "ADD",
      "path": "19"
    },
    "3386": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3387": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD44"
    },
    "3390": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3391": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3392": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x329C"
    },
    "3395": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        7433,
        7515
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3396": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7433,
        7515
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3397": {
      "op": "POP"
    },
    "3398": {
      "op": "POP"
    },
    "3399": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7557
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 16,
      "value": "0x0"
    },
    "3401": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7557
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3402": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7557
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3403": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7557
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3404": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7548
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "3406": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7557
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3408": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7557
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3409": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7557
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3411": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7557
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3412": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7557
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3413": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7560,
        7575
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "3414": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7575
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3415": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7575
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3416": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        7525,
        7557
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3417": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        6844,
        7600
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3418": {
      "op": "POP"
    },
    "3419": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "o",
      "offset": [
        6844,
        7600
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3420": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9276,
        9409
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3421": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3423": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3430": {
      "op": "SHL"
    },
    "3431": {
      "op": "SUB"
    },
    "3432": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3433": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3434": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3435": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD86"
    },
    "3438": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3439": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3441": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3448": {
      "op": "SHL"
    },
    "3449": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3450": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3451": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3453": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3454": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "3457": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3458": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "3461": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3462": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3463": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9368,
        9402
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 17,
      "value": "0xD90"
    },
    "3466": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9381,
        9388
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3467": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9390,
        9401
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3468": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9368,
        9380
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22F3"
    },
    "3471": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "i",
      "offset": [
        9368,
        9402
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3472": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9368,
        9402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3473": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9276,
        9409
      ],
      "op": "POP",
      "path": "19"
    },
    "3474": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        9276,
        9409
      ],
      "op": "POP",
      "path": "19"
    },
    "3475": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "o",
      "offset": [
        9276,
        9409
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3476": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6325,
        6492
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3477": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3479": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3486": {
      "op": "SHL"
    },
    "3487": {
      "op": "SUB"
    },
    "3488": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3489": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3490": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3491": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDBE"
    },
    "3494": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3495": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3497": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3504": {
      "op": "SHL"
    },
    "3505": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3506": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3507": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3509": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3510": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "3513": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3514": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "3517": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3518": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3519": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6465
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 18,
      "value": "0x0"
    },
    "3521": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6465
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3522": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6465
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3523": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6465
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3524": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6456
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "3526": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6465
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3528": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6465
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3529": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6465
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3531": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6465
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3532": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6465
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3533": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6465
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3534": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        6433,
        6485
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3535": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "jump": "o",
      "offset": [
        6325,
        6492
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3536": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3537": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 19,
      "value": "0xDDA"
    },
    "3540": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3541": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4948,
        4955
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3542": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4933
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x237E"
    },
    "3545": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3546": {
      "branch": 174,
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3547": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF6"
    },
    "3550": {
      "branch": 174,
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3551": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3553": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3554": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3560": {
      "op": "SHL"
    },
    "3561": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3562": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3563": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3565": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "ADD",
      "path": "5"
    },
    "3566": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "3569": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3570": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32B9"
    },
    "3573": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3574": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3575": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5049
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 20,
      "value": "0xA27"
    },
    "3578": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5031,
        5035
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3579": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5037,
        5039
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3580": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5041,
        5048
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3581": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5030
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2464"
    },
    "3584": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5021,
        5049
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3585": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3586": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11786,
        11801
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "3588": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11813,
        11826
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3590": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11829,
        11848
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE0E"
    },
    "3593": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11829,
        11838
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "3595": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12",
      "statement": 21
    },
    "3596": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3597": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3598": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11829,
        11848
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3599": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11813,
        11848
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3600": {
      "op": "POP"
    },
    "3601": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11858,
        11875
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3603": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11858,
        11875
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3604": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11936,
        11937
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3606": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11921,
        12161
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3607": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11945,
        11953
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3608": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11939,
        11941
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3609": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11939,
        11953
      ],
      "op": "GT",
      "path": "19"
    },
    "3610": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11921,
        12161
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE93"
    },
    "3613": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11921,
        12161
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3614": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11994,
        12005
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3621": {
      "op": "SHL"
    },
    "3622": {
      "op": "SUB"
    },
    "3623": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11979,
        12005
      ],
      "op": "AND",
      "path": "19"
    },
    "3624": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11979,
        11990
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE30"
    },
    "3627": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11987,
        11989
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3628": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11979,
        11986
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "3631": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        11979,
        11990
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3632": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11979,
        11990
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3639": {
      "op": "SHL"
    },
    "3640": {
      "op": "SUB"
    },
    "3641": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11979,
        12005
      ],
      "op": "AND",
      "path": "19"
    },
    "3642": {
      "branch": 143,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11979,
        12005
      ],
      "op": "EQ",
      "path": "19"
    },
    "3643": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11979,
        12099
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3644": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11979,
        12099
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3645": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11979,
        12099
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE6E"
    },
    "3648": {
      "branch": 143,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11979,
        12099
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3649": {
      "op": "POP"
    },
    "3650": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12033,
        12055
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "3652": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12033,
        12055
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3653": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12029
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3655": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12029
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3656": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12029
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3657": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12029
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3658": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12025
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3660": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12029
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3662": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12029
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3663": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12029
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3665": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12029
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3666": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12029
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3667": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12029
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3668": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12055
      ],
      "op": "EQ",
      "path": "19"
    },
    "3669": {
      "branch": 144,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12055
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3670": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12098
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE6E"
    },
    "3673": {
      "branch": 144,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12098
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3674": {
      "op": "POP"
    },
    "3675": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12082,
        12098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "3677": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12082,
        12098
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3678": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12078
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3680": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12078
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3681": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12078
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3682": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12078
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3683": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12074
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3685": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12078
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3687": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12078
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3688": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12078
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3690": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12078
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3691": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12078
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3692": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12078
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3693": {
      "branch": 145,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12059,
        12098
      ],
      "op": "EQ",
      "path": "19"
    },
    "3694": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12010,
        12098
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3695": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11975,
        12151
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3696": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11975,
        12151
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE81"
    },
    "3699": {
      "branch": 145,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11975,
        12151
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3700": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12119,
        12136
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 22,
      "value": "0xE7E"
    },
    "3703": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12135,
        12136
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3705": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12119,
        12136
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3706": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12119,
        12136
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3320"
    },
    "3709": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        12119,
        12136
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3710": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12119,
        12136
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3711": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12119,
        12136
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3712": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12119,
        12136
      ],
      "op": "POP",
      "path": "19"
    },
    "3713": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11975,
        12151
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3714": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11955,
        11959
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 23
    },
    "3715": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11955,
        11959
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE8B"
    },
    "3718": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11955,
        11959
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3719": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11955,
        11959
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3338"
    },
    "3722": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        11955,
        11959
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3723": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11955,
        11959
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3724": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11955,
        11959
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3725": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11955,
        11959
      ],
      "op": "POP",
      "path": "19"
    },
    "3726": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11955,
        11959
      ],
      "op": "POP",
      "path": "19"
    },
    "3727": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11921,
        12161
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE16"
    },
    "3730": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11921,
        12161
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3731": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11921,
        12161
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3732": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11921,
        12161
      ],
      "op": "POP",
      "path": "19"
    },
    "3733": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12171,
        12203
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3735": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12219,
        12231
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3736": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3745": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3746": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "GT",
      "path": "19"
    },
    "3747": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3748": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEAF"
    },
    "3751": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3752": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEAF"
    },
    "3755": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E82"
    },
    "3758": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        12206,
        12232
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3759": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3760": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3762": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3763": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3764": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3765": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3766": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3767": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3768": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3770": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "MUL",
      "path": "19"
    },
    "3771": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3773": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "ADD",
      "path": "19"
    },
    "3774": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3775": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "ADD",
      "path": "19"
    },
    "3776": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3778": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3779": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3780": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3781": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEE2"
    },
    "3784": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3785": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3786": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3788": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "ADD",
      "path": "19"
    },
    "3789": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3790": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "3792": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3793": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3794": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3796": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "ADD",
      "path": "19"
    },
    "3797": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3798": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3800": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3801": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "SUB",
      "path": "19"
    },
    "3802": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3803": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3804": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xECD"
    },
    "3807": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3808": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3809": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "POP",
      "path": "19"
    },
    "3810": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12206,
        12232
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3811": {
      "op": "POP"
    },
    "3812": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12171,
        12232
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3813": {
      "op": "POP"
    },
    "3814": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12258,
        12259
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3816": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12243,
        12601
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3817": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12267,
        12275
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3818": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12261,
        12263
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3819": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12261,
        12275
      ],
      "op": "GT",
      "path": "19"
    },
    "3820": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12243,
        12601
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF91"
    },
    "3823": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12243,
        12601
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3824": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12316,
        12327
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3831": {
      "op": "SHL"
    },
    "3832": {
      "op": "SUB"
    },
    "3833": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12301,
        12327
      ],
      "op": "AND",
      "path": "19"
    },
    "3834": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12301,
        12312
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF02"
    },
    "3837": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12309,
        12311
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3838": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12301,
        12308
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "3841": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        12301,
        12312
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3842": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12301,
        12312
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3849": {
      "op": "SHL"
    },
    "3850": {
      "op": "SUB"
    },
    "3851": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12301,
        12327
      ],
      "op": "AND",
      "path": "19"
    },
    "3852": {
      "branch": 146,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12301,
        12327
      ],
      "op": "EQ",
      "path": "19"
    },
    "3853": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12301,
        12421
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3854": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12301,
        12421
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3855": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12301,
        12421
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF40"
    },
    "3858": {
      "branch": 146,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12301,
        12421
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3859": {
      "op": "POP"
    },
    "3860": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12355,
        12377
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "3862": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12355,
        12377
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3863": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12351
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3865": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12351
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3866": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12351
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3867": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12351
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3868": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12347
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3870": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12351
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3872": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12351
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3873": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12351
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3875": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12351
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3876": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12351
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3877": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12351
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3878": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12377
      ],
      "op": "EQ",
      "path": "19"
    },
    "3879": {
      "branch": 147,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12377
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3880": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12420
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF40"
    },
    "3883": {
      "branch": 147,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12420
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3884": {
      "op": "POP"
    },
    "3885": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12404,
        12420
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "3887": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12404,
        12420
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3888": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12400
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3890": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12400
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3891": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12400
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3892": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12400
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3893": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3895": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12400
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3897": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12400
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3898": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12400
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3900": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12400
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3901": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12400
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3902": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12400
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3903": {
      "branch": 148,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12381,
        12420
      ],
      "op": "EQ",
      "path": "19"
    },
    "3904": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12332,
        12420
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3905": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12297,
        12591
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3906": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12297,
        12591
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF7F"
    },
    "3909": {
      "branch": 148,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12297,
        12591
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3910": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12441,
        12465
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3912": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12468,
        12480
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF50"
    },
    "3915": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12477,
        12479
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3916": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12468,
        12476
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DCE"
    },
    "3919": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        12468,
        12480
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3920": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12468,
        12480
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3921": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12441,
        12480
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3922": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12441,
        12480
      ],
      "op": "POP",
      "path": "19"
    },
    "3923": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12531,
        12541
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 24
    },
    "3924": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12514
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3925": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12515,
        12527
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3926": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3927": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3928": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3929": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "LT",
      "path": "19"
    },
    "3930": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF65"
    },
    "3933": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3934": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF65"
    },
    "3937": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3353"
    },
    "3940": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        12498,
        12528
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3941": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3942": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3944": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3945": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3946": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "MUL",
      "path": "19"
    },
    "3947": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3948": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3949": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3950": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "ADD",
      "path": "19"
    },
    "3951": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12528
      ],
      "op": "ADD",
      "path": "19"
    },
    "3952": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12498,
        12541
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3953": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12559,
        12576
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 25,
      "value": "0xF7B"
    },
    "3956": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12575,
        12576
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3958": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12559,
        12576
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3959": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12559,
        12576
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3320"
    },
    "3962": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        12559,
        12576
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3963": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12559,
        12576
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3964": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12559,
        12576
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "3965": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12559,
        12576
      ],
      "op": "POP",
      "path": "19"
    },
    "3966": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12423,
        12591
      ],
      "op": "POP",
      "path": "19"
    },
    "3967": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12297,
        12591
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3968": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12277,
        12281
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 26
    },
    "3969": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12277,
        12281
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF89"
    },
    "3972": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12277,
        12281
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3973": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12277,
        12281
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3338"
    },
    "3976": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        12277,
        12281
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3977": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12277,
        12281
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3978": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12277,
        12281
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3979": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12277,
        12281
      ],
      "op": "POP",
      "path": "19"
    },
    "3980": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12277,
        12281
      ],
      "op": "POP",
      "path": "19"
    },
    "3981": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12243,
        12601
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEE8"
    },
    "3984": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12243,
        12601
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3985": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12243,
        12601
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3986": {
      "op": "POP"
    },
    "3987": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        12626,
        12642
      ],
      "op": "SWAP6",
      "path": "19",
      "statement": 27
    },
    "3988": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        11708,
        12649
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "3989": {
      "op": "POP"
    },
    "3990": {
      "op": "POP"
    },
    "3991": {
      "op": "POP"
    },
    "3992": {
      "op": "POP"
    },
    "3993": {
      "op": "POP"
    },
    "3994": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "o",
      "offset": [
        11708,
        12649
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3995": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3996": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 28,
      "value": "0xA27"
    },
    "3999": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5272,
        5276
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4000": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5278,
        5280
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4001": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5282,
        5289
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4002": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4004": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4005": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4006": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4008": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "ADD",
      "path": "5"
    },
    "4009": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4011": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4012": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4013": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4015": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4016": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4017": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "POP",
      "path": "5"
    },
    "4018": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5271
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1980"
    },
    "4021": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5255,
        5294
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4022": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10616,
        11473
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4023": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10700,
        10715
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "4025": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10727,
        10740
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4027": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10743,
        10762
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFC3"
    },
    "4030": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10743,
        10752
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "4032": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4033": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4034": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4035": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10743,
        10762
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4036": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10727,
        10762
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4037": {
      "op": "POP"
    },
    "4038": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10772,
        10789
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4040": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10772,
        10789
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4041": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10850,
        10851
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4043": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10835,
        11030
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4044": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10859,
        10867
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4045": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10853,
        10855
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4046": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10853,
        10867
      ],
      "op": "GT",
      "path": "19"
    },
    "4047": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10835,
        11030
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x102F"
    },
    "4050": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10835,
        11030
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4051": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10908,
        10919
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4058": {
      "op": "SHL"
    },
    "4059": {
      "op": "SUB"
    },
    "4060": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10893,
        10919
      ],
      "op": "AND",
      "path": "19"
    },
    "4061": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10893,
        10904
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFE5"
    },
    "4064": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10901,
        10903
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4065": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10893,
        10900
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "4068": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        10893,
        10904
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4069": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10893,
        10904
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4076": {
      "op": "SHL"
    },
    "4077": {
      "op": "SUB"
    },
    "4078": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10893,
        10919
      ],
      "op": "AND",
      "path": "19"
    },
    "4079": {
      "branch": 149,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10893,
        10919
      ],
      "op": "EQ",
      "path": "19"
    },
    "4080": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10893,
        10968
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4081": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10893,
        10968
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4082": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10893,
        10968
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100A"
    },
    "4085": {
      "branch": 149,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10893,
        10968
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4086": {
      "op": "POP"
    },
    "4087": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10946,
        10968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "4089": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10946,
        10968
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4090": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10942
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4092": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10942
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4093": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10942
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4094": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10942
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4095": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10938
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "4097": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10942
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4099": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10942
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4100": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10942
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4102": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10942
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4103": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10942
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4104": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10942
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4105": {
      "branch": 150,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10923,
        10968
      ],
      "op": "EQ",
      "path": "19"
    },
    "4106": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10893,
        10968
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4107": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10889,
        11020
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4108": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10889,
        11020
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x101D"
    },
    "4111": {
      "branch": 150,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10889,
        11020
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4112": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10988,
        11005
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 29,
      "value": "0x101A"
    },
    "4115": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11004,
        11005
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4117": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10988,
        11005
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4118": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10988,
        11005
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3320"
    },
    "4121": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        10988,
        11005
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4122": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10988,
        11005
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4123": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10988,
        11005
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4124": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10988,
        11005
      ],
      "op": "POP",
      "path": "19"
    },
    "4125": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10889,
        11020
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4126": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10869,
        10873
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 30
    },
    "4127": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10869,
        10873
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1027"
    },
    "4130": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10869,
        10873
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4131": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10869,
        10873
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3338"
    },
    "4134": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        10869,
        10873
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4135": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10869,
        10873
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4136": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10869,
        10873
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4137": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10869,
        10873
      ],
      "op": "POP",
      "path": "19"
    },
    "4138": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10869,
        10873
      ],
      "op": "POP",
      "path": "19"
    },
    "4139": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10835,
        11030
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFCB"
    },
    "4142": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10835,
        11030
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4143": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10835,
        11030
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4144": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        10835,
        11030
      ],
      "op": "POP",
      "path": "19"
    },
    "4145": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11040,
        11072
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4147": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11088,
        11100
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4148": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4157": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4158": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "GT",
      "path": "19"
    },
    "4159": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4160": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x104B"
    },
    "4163": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4164": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x104B"
    },
    "4167": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E82"
    },
    "4170": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        11075,
        11101
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4171": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4172": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4174": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4175": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4176": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4177": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4178": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4179": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4180": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4182": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "MUL",
      "path": "19"
    },
    "4183": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4185": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "ADD",
      "path": "19"
    },
    "4186": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4187": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "ADD",
      "path": "19"
    },
    "4188": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4190": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4191": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4192": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4193": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x107E"
    },
    "4196": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4197": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4198": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4200": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "ADD",
      "path": "19"
    },
    "4201": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4202": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "4204": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4205": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4206": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4208": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "ADD",
      "path": "19"
    },
    "4209": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4210": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4212": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4213": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "SUB",
      "path": "19"
    },
    "4214": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4215": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4216": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1069"
    },
    "4219": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4220": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4221": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "POP",
      "path": "19"
    },
    "4222": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11075,
        11101
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4223": {
      "op": "POP"
    },
    "4224": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11040,
        11101
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4225": {
      "op": "POP"
    },
    "4226": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11127,
        11128
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4228": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11112,
        11425
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4229": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11136,
        11144
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4230": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11130,
        11132
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4231": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11130,
        11144
      ],
      "op": "GT",
      "path": "19"
    },
    "4232": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11112,
        11425
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF91"
    },
    "4235": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11112,
        11425
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4236": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11185,
        11196
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4243": {
      "op": "SHL"
    },
    "4244": {
      "op": "SUB"
    },
    "4245": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11170,
        11196
      ],
      "op": "AND",
      "path": "19"
    },
    "4246": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11170,
        11181
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x109E"
    },
    "4249": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11178,
        11180
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4250": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11170,
        11177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "4253": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        11170,
        11181
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4254": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11170,
        11181
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4261": {
      "op": "SHL"
    },
    "4262": {
      "op": "SUB"
    },
    "4263": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11170,
        11196
      ],
      "op": "AND",
      "path": "19"
    },
    "4264": {
      "branch": 151,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11170,
        11196
      ],
      "op": "EQ",
      "path": "19"
    },
    "4265": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11170,
        11245
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4266": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11170,
        11245
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4267": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11170,
        11245
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10C3"
    },
    "4270": {
      "branch": 151,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11170,
        11245
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4271": {
      "op": "POP"
    },
    "4272": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11223,
        11245
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "4274": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11223,
        11245
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4275": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4277": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11219
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4278": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11219
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4279": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11219
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4280": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "4282": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4284": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11219
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4285": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4287": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11219
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4288": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11219
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4289": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11219
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4290": {
      "branch": 152,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11200,
        11245
      ],
      "op": "EQ",
      "path": "19"
    },
    "4291": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11170,
        11245
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4292": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11166,
        11415
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4293": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11166,
        11415
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1102"
    },
    "4296": {
      "branch": 152,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11166,
        11415
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4297": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11265,
        11289
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4299": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11292,
        11304
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10D3"
    },
    "4302": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11301,
        11303
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4303": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11292,
        11300
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DCE"
    },
    "4306": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        11292,
        11304
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4307": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11292,
        11304
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4308": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11265,
        11304
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4309": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11265,
        11304
      ],
      "op": "POP",
      "path": "19"
    },
    "4310": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11355,
        11365
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 31
    },
    "4311": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11338
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4312": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11339,
        11351
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4313": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4314": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4315": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4316": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "LT",
      "path": "19"
    },
    "4317": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10E8"
    },
    "4320": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4321": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10E8"
    },
    "4324": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3353"
    },
    "4327": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        11322,
        11352
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4328": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4329": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4331": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4332": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4333": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "MUL",
      "path": "19"
    },
    "4334": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4335": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4336": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4337": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "ADD",
      "path": "19"
    },
    "4338": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11352
      ],
      "op": "ADD",
      "path": "19"
    },
    "4339": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11322,
        11365
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4340": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11383,
        11400
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 32,
      "value": "0x10FE"
    },
    "4343": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11399,
        11400
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4345": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11383,
        11400
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4346": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11383,
        11400
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3320"
    },
    "4349": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        11383,
        11400
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4350": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11383,
        11400
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4351": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11383,
        11400
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4352": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11383,
        11400
      ],
      "op": "POP",
      "path": "19"
    },
    "4353": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11247,
        11415
      ],
      "op": "POP",
      "path": "19"
    },
    "4354": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11166,
        11415
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4355": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11146,
        11150
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 33
    },
    "4356": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11146,
        11150
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x110C"
    },
    "4359": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11146,
        11150
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4360": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11146,
        11150
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3338"
    },
    "4363": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        11146,
        11150
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4364": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11146,
        11150
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4365": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11146,
        11150
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4366": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11146,
        11150
      ],
      "op": "POP",
      "path": "19"
    },
    "4367": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11146,
        11150
      ],
      "op": "POP",
      "path": "19"
    },
    "4368": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11112,
        11425
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1084"
    },
    "4371": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        11112,
        11425
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4372": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4373": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4377": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4378": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4380": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4386": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4387": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4394": {
      "op": "SHL"
    },
    "4395": {
      "op": "SUB"
    },
    "4396": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "5"
    },
    "4397": {
      "branch": 175,
      "fn": "ERC721.ownerOf",
      "offset": [
        2332,
        2351
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 34
    },
    "4398": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7F1"
    },
    "4401": {
      "branch": 175,
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4402": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4404": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4405": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4411": {
      "op": "SHL"
    },
    "4412": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4413": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4416": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4418": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4419": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "5"
    },
    "4420": {
      "op": "MSTORE"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4425": {
      "op": "DUP3"
    },
    "4426": {
      "op": "ADD"
    },
    "4427": {
      "op": "MSTORE"
    },
    "4428": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4463": {
      "op": "DUP3"
    },
    "4464": {
      "op": "ADD"
    },
    "4465": {
      "op": "MSTORE"
    },
    "4466": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "4478": {
      "op": "SHL"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4481": {
      "op": "DUP3"
    },
    "4482": {
      "op": "ADD"
    },
    "4483": {
      "op": "MSTORE"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4486": {
      "op": "ADD"
    },
    "4487": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "4490": {
      "op": "JUMP"
    },
    "4491": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        15508,
        15665
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4492": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4494": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4501": {
      "op": "SHL"
    },
    "4502": {
      "op": "SUB"
    },
    "4503": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4504": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4505": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4506": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B5"
    },
    "4509": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4510": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4512": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4519": {
      "op": "SHL"
    },
    "4520": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4521": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4522": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4524": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4525": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "4528": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4529": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "4532": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4533": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4534": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        15608,
        15630
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 35,
      "value": "0x11"
    },
    "4536": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        15608,
        15658
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4537": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "o",
      "offset": [
        15508,
        15665
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4547": {
      "op": "SHL"
    },
    "4548": {
      "op": "SUB"
    },
    "4549": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 36
    },
    "4550": {
      "branch": 176,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "5"
    },
    "4551": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1225"
    },
    "4554": {
      "branch": 176,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4555": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4557": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4558": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4564": {
      "op": "SHL"
    },
    "4565": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4566": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4569": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4571": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4572": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "5"
    },
    "4573": {
      "op": "MSTORE"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4578": {
      "op": "DUP3"
    },
    "4579": {
      "op": "ADD"
    },
    "4580": {
      "op": "MSTORE"
    },
    "4581": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4616": {
      "op": "DUP3"
    },
    "4617": {
      "op": "ADD"
    },
    "4618": {
      "op": "MSTORE"
    },
    "4619": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4632": {
      "op": "SHL"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4635": {
      "op": "DUP3"
    },
    "4636": {
      "op": "ADD"
    },
    "4637": {
      "op": "MSTORE"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4640": {
      "op": "ADD"
    },
    "4641": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "4644": {
      "op": "JUMP"
    },
    "4645": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4653": {
      "op": "SHL"
    },
    "4654": {
      "op": "SUB"
    },
    "4655": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "5",
      "statement": 37
    },
    "4656": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4658": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4659": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4660": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4661": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4663": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4665": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4666": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4668": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4669": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4670": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4671": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4672": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4673": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4674": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4676": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4683": {
      "op": "SHL"
    },
    "4684": {
      "op": "SUB"
    },
    "4685": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4686": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4687": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4688": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126B"
    },
    "4691": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4692": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4694": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4695": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4701": {
      "op": "SHL"
    },
    "4702": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4703": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4704": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4706": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4707": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "4710": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4711": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "4714": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4715": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4716": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0x1275"
    },
    "4719": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4721": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2606"
    },
    "4724": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4725": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4726": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4727": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14508,
        14667
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4728": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4730": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4737": {
      "op": "SHL"
    },
    "4738": {
      "op": "SUB"
    },
    "4739": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4740": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4741": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4742": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A1"
    },
    "4745": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4746": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4748": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4755": {
      "op": "SHL"
    },
    "4756": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4757": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4758": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4760": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4761": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "4764": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4765": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "4768": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4769": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4770": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14641
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 39,
      "value": "0x0"
    },
    "4772": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14641
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4773": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14641
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4774": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14641
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4775": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14632
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "4777": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14641
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4779": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14641
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4780": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14641
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4782": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14641
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4783": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14641
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4784": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4785": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4792": {
      "op": "SHL"
    },
    "4793": {
      "op": "SUB"
    },
    "4794": {
      "op": "NOT"
    },
    "4795": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "AND",
      "path": "19"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4802": {
      "op": "SHL"
    },
    "4803": {
      "op": "SUB"
    },
    "4804": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4805": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4806": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4807": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "AND",
      "path": "19"
    },
    "4808": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4809": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4810": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4811": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "OR",
      "path": "19"
    },
    "4812": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4813": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        14607,
        14660
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4814": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "jump": "o",
      "offset": [
        14508,
        14667
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4815": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        4957,
        5996
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4816": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5065,
        5096
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 40,
      "value": "0x17"
    },
    "4818": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5065,
        5096
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4819": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5039
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "4821": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5039
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4822": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4824": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4825": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4832": {
      "op": "SHL"
    },
    "4833": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4834": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4835": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5050,
        5060
      ],
      "op": "CALLER",
      "path": "19"
    },
    "4836": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4838": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4839": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "ADD",
      "path": "19"
    },
    "4840": {
      "op": "MSTORE"
    },
    "4841": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5002,
        5006
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4843": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5002,
        5006
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4844": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5065,
        5096
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4851": {
      "op": "SHL"
    },
    "4852": {
      "op": "SUB"
    },
    "4853": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5039
      ],
      "op": "AND",
      "path": "19"
    },
    "4854": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5039
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4855": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5049
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "4860": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5049
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4863": {
      "op": "ADD"
    },
    "4864": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4866": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4868": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4869": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4870": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4871": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "SUB",
      "path": "19"
    },
    "4872": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4873": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4874": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4875": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4876": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4877": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4878": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4879": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1317"
    },
    "4882": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4883": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4885": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4886": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4887": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4888": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "POP",
      "path": "19"
    },
    "4889": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "GAS",
      "path": "19"
    },
    "4890": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4891": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4892": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4893": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4894": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x132B"
    },
    "4897": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4898": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4899": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4901": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4902": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "4903": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4904": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4906": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4907": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4908": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "POP",
      "path": "19"
    },
    "4909": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "POP",
      "path": "19"
    },
    "4910": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "POP",
      "path": "19"
    },
    "4911": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "POP",
      "path": "19"
    },
    "4912": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4914": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4915": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4916": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "4918": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "NOT",
      "path": "19"
    },
    "4919": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "4921": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4922": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "ADD",
      "path": "19"
    },
    "4923": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "AND",
      "path": "19"
    },
    "4924": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4925": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "ADD",
      "path": "19"
    },
    "4926": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4927": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4929": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4930": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "POP",
      "path": "19"
    },
    "4931": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4932": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "ADD",
      "path": "19"
    },
    "4933": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4934": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x134F"
    },
    "4937": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4938": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4939": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3283"
    },
    "4942": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        5026,
        5061
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4943": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5061
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4944": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5096
      ],
      "op": "LT",
      "path": "19"
    },
    "4945": {
      "branch": 153,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5026,
        5096
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4946": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5018,
        5169
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13D1"
    },
    "4949": {
      "branch": 153,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5018,
        5169
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4950": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5018,
        5169
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4952": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5018,
        5169
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4953": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4959": {
      "op": "SHL"
    },
    "4960": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5018,
        5169
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4961": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5018,
        5169
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4964": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5018,
        5169
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4966": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5018,
        5169
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4967": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5018,
        5169
      ],
      "op": "ADD",
      "path": "19"
    },
    "4968": {
      "op": "MSTORE"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4973": {
      "op": "DUP3"
    },
    "4974": {
      "op": "ADD"
    },
    "4975": {
      "op": "DUP2"
    },
    "4976": {
      "op": "SWAP1"
    },
    "4977": {
      "op": "MSTORE"
    },
    "4978": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F7567682043617264696E616C2054"
    },
    "5011": {
      "op": "SWAP1"
    },
    "5012": {
      "op": "DUP3"
    },
    "5013": {
      "op": "ADD"
    },
    "5014": {
      "op": "MSTORE"
    },
    "5015": {
      "op": "PUSH32",
      "value": "0x6F6B656E7320746F2070617920666F7220746865206D656D6265727368697020"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5050": {
      "op": "DUP3"
    },
    "5051": {
      "op": "ADD"
    },
    "5052": {
      "op": "MSTORE"
    },
    "5053": {
      "op": "PUSH4",
      "value": "0x27232A17"
    },
    "5058": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5060": {
      "op": "SHL"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5063": {
      "op": "DUP3"
    },
    "5064": {
      "op": "ADD"
    },
    "5065": {
      "op": "MSTORE"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5068": {
      "op": "ADD"
    },
    "5069": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5018,
        5169
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8F1"
    },
    "5072": {
      "op": "JUMP"
    },
    "5073": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5018,
        5169
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5074": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5241,
        5272
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 41,
      "value": "0x17"
    },
    "5076": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5241,
        5272
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5077": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5200
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "5079": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5200
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5080": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5082": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5083": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5090": {
      "op": "SHL"
    },
    "5091": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5092": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5093": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5211,
        5221
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5094": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5096": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5097": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "ADD",
      "path": "19"
    },
    "5098": {
      "op": "MSTORE"
    },
    "5099": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5231,
        5235
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5102": {
      "op": "DUP3"
    },
    "5103": {
      "op": "ADD"
    },
    "5104": {
      "op": "MSTORE"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5111": {
      "op": "SHL"
    },
    "5112": {
      "op": "SUB"
    },
    "5113": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5200
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5114": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5200
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5115": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5200
      ],
      "op": "AND",
      "path": "19"
    },
    "5116": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5200
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5117": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5210
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDD62ED3E"
    },
    "5122": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5210
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5125": {
      "op": "ADD"
    },
    "5126": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5128": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5130": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5131": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5132": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5133": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "SUB",
      "path": "19"
    },
    "5134": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5135": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5136": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5137": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5138": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5139": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5140": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5141": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x141D"
    },
    "5144": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5145": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5147": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5148": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5149": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5150": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "POP",
      "path": "19"
    },
    "5151": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "GAS",
      "path": "19"
    },
    "5152": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "5153": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5154": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5155": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5156": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1431"
    },
    "5159": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5160": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5161": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5163": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5164": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5165": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5166": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5168": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5169": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5170": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "POP",
      "path": "19"
    },
    "5171": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "POP",
      "path": "19"
    },
    "5172": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "POP",
      "path": "19"
    },
    "5173": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "POP",
      "path": "19"
    },
    "5174": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5176": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5177": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5178": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5180": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "NOT",
      "path": "19"
    },
    "5181": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5183": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5184": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "ADD",
      "path": "19"
    },
    "5185": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "AND",
      "path": "19"
    },
    "5186": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5187": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "ADD",
      "path": "19"
    },
    "5188": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5189": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5191": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5192": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "POP",
      "path": "19"
    },
    "5193": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5194": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "ADD",
      "path": "19"
    },
    "5195": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5196": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1455"
    },
    "5199": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5200": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5201": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3283"
    },
    "5204": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        5187,
        5237
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5205": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5237
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5206": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5272
      ],
      "op": "LT",
      "path": "19"
    },
    "5207": {
      "branch": 154,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5187,
        5272
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5208": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5179,
        5382
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1501"
    },
    "5211": {
      "branch": 154,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5179,
        5382
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5212": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5179,
        5382
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5214": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5179,
        5382
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5215": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5221": {
      "op": "SHL"
    },
    "5222": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5179,
        5382
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5223": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5179,
        5382
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5226": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5179,
        5382
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5228": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5179,
        5382
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5229": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5179,
        5382
      ],
      "op": "ADD",
      "path": "19"
    },
    "5230": {
      "op": "MSTORE"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "5233": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5235": {
      "op": "DUP3"
    },
    "5236": {
      "op": "ADD"
    },
    "5237": {
      "op": "MSTORE"
    },
    "5238": {
      "op": "PUSH32",
      "value": "0x596F7520686176656E277420617070726F766564207468697320636F6E747261"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5273": {
      "op": "DUP3"
    },
    "5274": {
      "op": "ADD"
    },
    "5275": {
      "op": "MSTORE"
    },
    "5276": {
      "op": "PUSH32",
      "value": "0x637420746F207370656E6420656E6F756768206F6620796F7572204361726469"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5311": {
      "op": "DUP3"
    },
    "5312": {
      "op": "ADD"
    },
    "5313": {
      "op": "MSTORE"
    },
    "5314": {
      "op": "PUSH32",
      "value": "0x6E616C20546F6B656E7320746F2070617920666F7220746865206D656D626572"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5349": {
      "op": "DUP3"
    },
    "5350": {
      "op": "ADD"
    },
    "5351": {
      "op": "MSTORE"
    },
    "5352": {
      "op": "PUSH9",
      "value": "0x39B434B81027232A17"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5364": {
      "op": "SHL"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5367": {
      "op": "DUP3"
    },
    "5368": {
      "op": "ADD"
    },
    "5369": {
      "op": "MSTORE"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "5372": {
      "op": "ADD"
    },
    "5373": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5179,
        5382
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8F1"
    },
    "5376": {
      "op": "JUMP"
    },
    "5377": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5179,
        5382
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5378": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5414
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 42,
      "value": "0xA"
    },
    "5380": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5414
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5381": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5455,
        5486
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "5383": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5455,
        5486
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5384": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5386": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5387": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5394": {
      "op": "SHL"
    },
    "5395": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5396": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5397": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5428,
        5438
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5398": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5400": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5401": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "ADD",
      "path": "19"
    },
    "5402": {
      "op": "MSTORE"
    },
    "5403": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5448,
        5452
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5406": {
      "op": "DUP3"
    },
    "5407": {
      "op": "ADD"
    },
    "5408": {
      "op": "MSTORE"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5411": {
      "op": "DUP2"
    },
    "5412": {
      "op": "ADD"
    },
    "5413": {
      "op": "SWAP2"
    },
    "5414": {
      "op": "SWAP1"
    },
    "5415": {
      "op": "SWAP2"
    },
    "5416": {
      "op": "MSTORE"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5423": {
      "op": "SHL"
    },
    "5424": {
      "op": "SUB"
    },
    "5425": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5414
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5426": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5414
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5427": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5414
      ],
      "op": "AND",
      "path": "19"
    },
    "5428": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5414
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5429": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5427
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23B872DD"
    },
    "5434": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5427
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5437": {
      "op": "ADD"
    },
    "5438": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5440": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5442": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5443": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5444": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5445": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "SUB",
      "path": "19"
    },
    "5446": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5447": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5449": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5450": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5451": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5452": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5453": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5454": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5455": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1557"
    },
    "5458": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5459": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5461": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5462": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5463": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5464": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "POP",
      "path": "19"
    },
    "5465": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "GAS",
      "path": "19"
    },
    "5466": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "CALL",
      "path": "19"
    },
    "5467": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5468": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5469": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5470": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x156B"
    },
    "5473": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5474": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5475": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5477": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5478": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5479": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5480": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5482": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5483": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5484": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "POP",
      "path": "19"
    },
    "5485": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "POP",
      "path": "19"
    },
    "5486": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "POP",
      "path": "19"
    },
    "5487": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "POP",
      "path": "19"
    },
    "5488": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5490": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5491": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5492": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5494": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "NOT",
      "path": "19"
    },
    "5495": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5497": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5498": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "ADD",
      "path": "19"
    },
    "5499": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "AND",
      "path": "19"
    },
    "5500": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5501": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "ADD",
      "path": "19"
    },
    "5502": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5503": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5505": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5506": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "POP",
      "path": "19"
    },
    "5507": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5508": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "ADD",
      "path": "19"
    },
    "5509": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5510": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x158F"
    },
    "5513": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5514": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5515": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x329C"
    },
    "5518": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        5401,
        5487
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5519": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5520": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5401,
        5487
      ],
      "op": "POP",
      "path": "19"
    },
    "5521": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5498,
        5519
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 43,
      "value": "0x159E"
    },
    "5524": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5498,
        5507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "5526": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 44
    },
    "5527": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5528": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5530": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "12"
    },
    "5531": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5532": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5533": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5534": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5498,
        5519
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5535": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5529,
        5546
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5537": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5549,
        5568
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15A9"
    },
    "5540": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5549,
        5558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "5542": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5543": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5544": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5545": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5549,
        5568
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5546": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5608,
        5624
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 45,
      "value": "0x12"
    },
    "5548": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5608,
        5624
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5549": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5551": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5552": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5553": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5554": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5594
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "5556": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5558": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5559": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5560": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5561": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5563": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5564": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5565": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5605
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5566": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5624
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5567": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5624
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5568": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5624
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5569": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5579,
        5624
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5570": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5634,
        5653
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 46,
      "value": "0xC"
    },
    "5572": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5573": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5634,
        5664
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5574": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5575": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5634,
        5664
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5576": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5634,
        5664
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5577": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5634,
        5668
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5578": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5529,
        5568
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5579": {
      "op": "POP"
    },
    "5580": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5678,
        5706
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 47,
      "value": "0x15D5"
    },
    "5583": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5684,
        5694
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5584": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5529,
        5568
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5585": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5678,
        5683
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2658"
    },
    "5588": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        5678,
        5706
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5589": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5678,
        5706
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5590": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5750
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 48,
      "value": "0x0"
    },
    "5592": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5750
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5593": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5750
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5594": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5750
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5595": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5739
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "5597": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5750
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5599": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5750
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5600": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5750
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5602": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5750
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5603": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5750
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5604": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5753,
        5768
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "5605": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5768
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5606": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5716,
        5768
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5607": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5802,
        5820
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 49,
      "value": "0x16"
    },
    "5609": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5610": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5611": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x167C"
    },
    "5614": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5615": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5740,
        5749
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5616": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5740,
        5749
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5617": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15F9"
    },
    "5620": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5621": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3213"
    },
    "5624": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5625": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5626": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5627": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5629": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "ADD",
      "path": "19"
    },
    "5630": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5632": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5633": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5634": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DIV",
      "path": "19"
    },
    "5635": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "MUL",
      "path": "19"
    },
    "5636": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5638": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "ADD",
      "path": "19"
    },
    "5639": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5641": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5642": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5643": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5644": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "ADD",
      "path": "19"
    },
    "5645": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5647": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5648": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5649": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5650": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5651": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5652": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5653": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5654": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5655": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5657": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "ADD",
      "path": "19"
    },
    "5658": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5659": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5660": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5661": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1625"
    },
    "5664": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5665": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3213"
    },
    "5668": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5669": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5670": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5671": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5672": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1672"
    },
    "5675": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5676": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5677": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5679": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "LT",
      "path": "19"
    },
    "5680": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1647"
    },
    "5683": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5684": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "5687": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5688": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5689": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5690": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DIV",
      "path": "19"
    },
    "5691": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "MUL",
      "path": "19"
    },
    "5692": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5693": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5694": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5695": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5697": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "ADD",
      "path": "19"
    },
    "5698": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5699": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1672"
    },
    "5702": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5703": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5704": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5705": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "ADD",
      "path": "19"
    },
    "5706": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5707": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5708": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5710": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5711": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5713": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5715": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5716": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5717": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5718": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5719": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5720": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5721": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5722": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5723": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5725": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "ADD",
      "path": "19"
    },
    "5726": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5727": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5729": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "ADD",
      "path": "19"
    },
    "5730": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5731": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5732": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "GT",
      "path": "19"
    },
    "5733": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1655"
    },
    "5736": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5737": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5738": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5739": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SUB",
      "path": "19"
    },
    "5740": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5742": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "AND",
      "path": "19"
    },
    "5743": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5744": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "ADD",
      "path": "19"
    },
    "5745": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5746": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5747": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "POP",
      "path": "19"
    },
    "5748": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "POP",
      "path": "19"
    },
    "5749": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "POP",
      "path": "19"
    },
    "5750": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "POP",
      "path": "19"
    },
    "5751": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "POP",
      "path": "19"
    },
    "5752": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5790
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22F3"
    },
    "5755": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5756": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5778,
        5821
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5757": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5831,
        5864
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 50,
      "value": "0x1686"
    },
    "5760": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5847,
        5851
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5761": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5854,
        5863
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5762": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5831,
        5838
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x916"
    },
    "5765": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        5831,
        5864
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5766": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5831,
        5864
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5767": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5892,
        5910
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 51,
      "value": "0x9"
    },
    "5769": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5892,
        5910
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5770": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5874,
        5917
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x169D"
    },
    "5773": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5874,
        5917
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5780": {
      "op": "SHL"
    },
    "5781": {
      "op": "SUB"
    },
    "5782": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5892,
        5910
      ],
      "op": "AND",
      "path": "19"
    },
    "5783": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5892,
        5910
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5785": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5874,
        5891
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1944"
    },
    "5788": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        5874,
        5917
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5789": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5874,
        5917
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5790": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5946
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 52,
      "value": "0x15"
    },
    "5792": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5793": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5794": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5796": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5797": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "ADD",
      "path": "19"
    },
    "5798": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5799": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5802": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5803": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5804": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5805": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5806": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475"
    },
    "5839": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "ADD",
      "path": "19"
    },
    "5840": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5841": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5842": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5928,
        5962
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5843": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5952,
        5961
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5844": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        4957,
        5996
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5845": {
      "op": "POP"
    },
    "5846": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "o",
      "offset": [
        4957,
        5996
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5847": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14864,
        15013
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5848": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "5850": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5857": {
      "op": "SHL"
    },
    "5858": {
      "op": "SUB"
    },
    "5859": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5860": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5861": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5862": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1701"
    },
    "5865": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5866": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5868": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5875": {
      "op": "SHL"
    },
    "5876": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5877": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5878": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5881": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "5884": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5885": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "5888": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5890": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        14990
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 53,
      "value": "0x0"
    },
    "5892": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        14990
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5893": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        14990
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5894": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        14990
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5895": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        14981
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "5897": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        14990
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5899": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        14990
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5900": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        14990
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5902": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        14990
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5903": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        14990
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5904": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        14990
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5905": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        14962,
        15006
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5906": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "jump": "o",
      "offset": [
        14864,
        15013
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5907": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        16111,
        16232
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5908": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "5910": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5917": {
      "op": "SHL"
    },
    "5918": {
      "op": "SUB"
    },
    "5919": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5920": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5921": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5922": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173D"
    },
    "5925": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5926": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5928": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5935": {
      "op": "SHL"
    },
    "5936": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5937": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5938": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5940": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5941": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "5944": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5945": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "5948": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5949": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5950": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        16193,
        16206
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 54,
      "value": "0x13"
    },
    "5952": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        16193,
        16225
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5953": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "jump": "o",
      "offset": [
        16111,
        16232
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5954": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9624,
        10367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5955": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9692,
        9707
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "5957": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9719,
        9732
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5959": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9735,
        9754
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x174F"
    },
    "5962": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9735,
        9744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "5964": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5965": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5966": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5967": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9735,
        9754
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5968": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9719,
        9754
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5969": {
      "op": "POP"
    },
    "5970": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9764,
        9781
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5972": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9764,
        9781
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5973": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9842,
        9843
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5975": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9827,
        9973
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5976": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9851,
        9859
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5977": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9845,
        9847
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5978": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9845,
        9859
      ],
      "op": "GT",
      "path": "19"
    },
    "5979": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9827,
        9973
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17A0"
    },
    "5982": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9827,
        9973
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5983": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9900,
        9911
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5990": {
      "op": "SHL"
    },
    "5991": {
      "op": "SUB"
    },
    "5992": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9885,
        9911
      ],
      "op": "AND",
      "path": "19"
    },
    "5993": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9885,
        9896
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1771"
    },
    "5996": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9893,
        9895
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5997": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9885,
        9892
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "6000": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        9885,
        9896
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6001": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9885,
        9896
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6008": {
      "op": "SHL"
    },
    "6009": {
      "op": "SUB"
    },
    "6010": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9885,
        9911
      ],
      "op": "AND",
      "path": "19"
    },
    "6011": {
      "branch": 155,
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9885,
        9911
      ],
      "op": "EQ",
      "path": "19"
    },
    "6012": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9881,
        9963
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6013": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9881,
        9963
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x178E"
    },
    "6016": {
      "branch": 155,
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9881,
        9963
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6017": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9931,
        9948
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 55,
      "value": "0x178B"
    },
    "6020": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9947,
        9948
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6022": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9931,
        9948
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6023": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9931,
        9948
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3320"
    },
    "6026": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        9931,
        9948
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6027": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9931,
        9948
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6028": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9931,
        9948
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6029": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9931,
        9948
      ],
      "op": "POP",
      "path": "19"
    },
    "6030": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9881,
        9963
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6031": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9861,
        9865
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 56
    },
    "6032": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9861,
        9865
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1798"
    },
    "6035": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9861,
        9865
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6036": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9861,
        9865
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3338"
    },
    "6039": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        9861,
        9865
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6040": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9861,
        9865
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6041": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9861,
        9865
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6042": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9861,
        9865
      ],
      "op": "POP",
      "path": "19"
    },
    "6043": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9861,
        9865
      ],
      "op": "POP",
      "path": "19"
    },
    "6044": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9827,
        9973
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1757"
    },
    "6047": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9827,
        9973
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6048": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9827,
        9973
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6049": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9827,
        9973
      ],
      "op": "POP",
      "path": "19"
    },
    "6050": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9983,
        10015
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6052": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10031,
        10043
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6053": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6062": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6063": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "GT",
      "path": "19"
    },
    "6064": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6065": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17BC"
    },
    "6068": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6069": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17BC"
    },
    "6072": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E82"
    },
    "6075": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        10018,
        10044
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6076": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6077": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6079": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6080": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6081": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6082": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6083": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6084": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6085": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6087": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "MUL",
      "path": "19"
    },
    "6088": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6090": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "ADD",
      "path": "19"
    },
    "6091": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6092": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "ADD",
      "path": "19"
    },
    "6093": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6095": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6096": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6097": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6098": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17EF"
    },
    "6101": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6102": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6103": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6105": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "ADD",
      "path": "19"
    },
    "6106": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6107": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "6109": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6110": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6111": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6113": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "ADD",
      "path": "19"
    },
    "6114": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6115": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6117": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6118": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "SUB",
      "path": "19"
    },
    "6119": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6120": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6121": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17DA"
    },
    "6124": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6125": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6126": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "POP",
      "path": "19"
    },
    "6127": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10018,
        10044
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6128": {
      "op": "POP"
    },
    "6129": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        9983,
        10044
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6130": {
      "op": "POP"
    },
    "6131": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10070,
        10071
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6133": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10055,
        10319
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6134": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10079,
        10087
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6135": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10073,
        10075
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6136": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10073,
        10087
      ],
      "op": "GT",
      "path": "19"
    },
    "6137": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10055,
        10319
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF91"
    },
    "6140": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10055,
        10319
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6141": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10128,
        10139
      ],
      "op": "DUP7",
      "path": "19"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6148": {
      "op": "SHL"
    },
    "6149": {
      "op": "SUB"
    },
    "6150": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10113,
        10139
      ],
      "op": "AND",
      "path": "19"
    },
    "6151": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10113,
        10124
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x180F"
    },
    "6154": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10121,
        10123
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6155": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10113,
        10120
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "6158": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        10113,
        10124
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6159": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10113,
        10124
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6166": {
      "op": "SHL"
    },
    "6167": {
      "op": "SUB"
    },
    "6168": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10113,
        10139
      ],
      "op": "AND",
      "path": "19"
    },
    "6169": {
      "branch": 156,
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10113,
        10139
      ],
      "op": "EQ",
      "path": "19"
    },
    "6170": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10109,
        10309
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6171": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10109,
        10309
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1858"
    },
    "6174": {
      "branch": 156,
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10109,
        10309
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6175": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10159,
        10183
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6177": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10186,
        10198
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1829"
    },
    "6180": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10195,
        10197
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6181": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10186,
        10194
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DCE"
    },
    "6184": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        10186,
        10198
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6185": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10186,
        10198
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6186": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10159,
        10198
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6187": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10159,
        10198
      ],
      "op": "POP",
      "path": "19"
    },
    "6188": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10249,
        10259
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 57
    },
    "6189": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10232
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6190": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10233,
        10245
      ],
      "op": "DUP6",
      "path": "19"
    },
    "6191": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6192": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6193": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6194": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "LT",
      "path": "19"
    },
    "6195": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x183E"
    },
    "6198": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6199": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x183E"
    },
    "6202": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3353"
    },
    "6205": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        10216,
        10246
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6206": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6207": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6209": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6210": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6211": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "MUL",
      "path": "19"
    },
    "6212": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6213": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6214": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6215": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "ADD",
      "path": "19"
    },
    "6216": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10246
      ],
      "op": "ADD",
      "path": "19"
    },
    "6217": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10216,
        10259
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6218": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10277,
        10294
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 58,
      "value": "0x1854"
    },
    "6221": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10293,
        10294
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6223": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10277,
        10294
      ],
      "op": "DUP6",
      "path": "19"
    },
    "6224": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10277,
        10294
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3320"
    },
    "6227": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        10277,
        10294
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6228": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10277,
        10294
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6229": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10277,
        10294
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6230": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10277,
        10294
      ],
      "op": "POP",
      "path": "19"
    },
    "6231": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10141,
        10309
      ],
      "op": "POP",
      "path": "19"
    },
    "6232": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10109,
        10309
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6233": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10089,
        10093
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 59
    },
    "6234": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10089,
        10093
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1862"
    },
    "6237": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10089,
        10093
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6238": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10089,
        10093
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3338"
    },
    "6241": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        10089,
        10093
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6242": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10089,
        10093
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6243": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10089,
        10093
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6244": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10089,
        10093
      ],
      "op": "POP",
      "path": "19"
    },
    "6245": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10089,
        10093
      ],
      "op": "POP",
      "path": "19"
    },
    "6246": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10055,
        10319
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17F5"
    },
    "6249": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        10055,
        10319
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6250": {
      "offset": [
        2365,
        2397
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6251": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x16"
    },
    "6253": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6254": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6255": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1877"
    },
    "6258": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6259": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3213"
    },
    "6262": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6263": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6264": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6265": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6267": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "ADD",
      "path": "19"
    },
    "6268": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6270": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6271": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6272": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DIV",
      "path": "19"
    },
    "6273": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "MUL",
      "path": "19"
    },
    "6274": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6276": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "ADD",
      "path": "19"
    },
    "6277": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6279": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6280": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6281": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6282": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "ADD",
      "path": "19"
    },
    "6283": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6285": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6286": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6287": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6288": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6289": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6290": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6291": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6292": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6293": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6295": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "ADD",
      "path": "19"
    },
    "6296": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6297": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6298": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6299": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18A3"
    },
    "6302": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6303": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3213"
    },
    "6306": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6307": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6308": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6309": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6310": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18F0"
    },
    "6313": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6314": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6315": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6317": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "LT",
      "path": "19"
    },
    "6318": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18C5"
    },
    "6321": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6322": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "6325": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6326": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6327": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6328": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DIV",
      "path": "19"
    },
    "6329": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "MUL",
      "path": "19"
    },
    "6330": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6331": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6332": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6333": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6335": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "ADD",
      "path": "19"
    },
    "6336": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6337": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18F0"
    },
    "6340": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6341": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6342": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6343": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "ADD",
      "path": "19"
    },
    "6344": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6345": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6346": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6348": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6349": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6351": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6353": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6354": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6355": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6356": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6357": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6358": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6359": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6360": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6361": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6363": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "ADD",
      "path": "19"
    },
    "6364": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6365": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6367": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "ADD",
      "path": "19"
    },
    "6368": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6369": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6370": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "GT",
      "path": "19"
    },
    "6371": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18D3"
    },
    "6374": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6375": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6376": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6377": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SUB",
      "path": "19"
    },
    "6378": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6380": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "AND",
      "path": "19"
    },
    "6381": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6382": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "ADD",
      "path": "19"
    },
    "6383": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6384": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6385": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "POP",
      "path": "19"
    },
    "6386": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "POP",
      "path": "19"
    },
    "6387": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "POP",
      "path": "19"
    },
    "6388": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "POP",
      "path": "19"
    },
    "6389": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "POP",
      "path": "19"
    },
    "6390": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2365,
        2397
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6391": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "o",
      "offset": [
        2365,
        2397
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6392": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6393": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6395": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 60,
      "value": "0x1"
    },
    "6397": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6398": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6399": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x806"
    },
    "6402": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6403": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3213"
    },
    "6406": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6407": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16373,
        16520
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6408": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6410": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6417": {
      "op": "SHL"
    },
    "6418": {
      "op": "SUB"
    },
    "6419": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6420": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6421": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6422": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1931"
    },
    "6425": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6426": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6428": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6429": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6435": {
      "op": "SHL"
    },
    "6436": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6437": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6438": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6440": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6441": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "6444": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6445": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "6448": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6449": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6450": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16471,
        16513
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 61
    },
    "6451": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16471,
        16513
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6452": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16471,
        16513
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD90"
    },
    "6455": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16471,
        16513
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6456": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16471,
        16489
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x16"
    },
    "6458": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16471,
        16489
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6459": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16471,
        16513
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6461": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16471,
        16513
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6462": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16471,
        16513
      ],
      "op": "ADD",
      "path": "19"
    },
    "6463": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16471,
        16513
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6464": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        16471,
        16513
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2CF1"
    },
    "6467": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "jump": "i",
      "offset": [
        16471,
        16513
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6468": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6469": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4429
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 62,
      "value": "0xD90"
    },
    "6472": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6473": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4410,
        4418
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6474": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4420,
        4428
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6475": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4395
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2793"
    },
    "6478": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4429
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6479": {
      "offset": [
        2278,
        2313
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6480": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "6482": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6483": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6484": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6485": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6486": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "LT",
      "path": "19"
    },
    "6487": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x195F"
    },
    "6490": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6491": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6493": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6494": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "REVERT",
      "path": "19"
    },
    "6495": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6496": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6498": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6499": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6500": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6501": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6503": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6504": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6505": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6506": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "ADD",
      "path": "19"
    },
    "6507": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6508": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2278,
        2313
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6509": {
      "op": "POP"
    },
    "6510": {
      "offset": [
        2278,
        2313
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6511": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        2278,
        2313
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6512": {
      "offset": [
        2188,
        2229
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6513": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x14"
    },
    "6515": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6516": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6517": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6518": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6519": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "LT",
      "path": "19"
    },
    "6520": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x195F"
    },
    "6523": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6524": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6526": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6527": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2188,
        2229
      ],
      "op": "REVERT",
      "path": "19"
    },
    "6528": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6529": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 63,
      "value": "0x198A"
    },
    "6532": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6533": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5576
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6534": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5554
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x237E"
    },
    "6537": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6538": {
      "branch": 177,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6539": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A6"
    },
    "6542": {
      "branch": 177,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6543": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6545": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6552": {
      "op": "SHL"
    },
    "6553": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6554": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6555": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6557": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "ADD",
      "path": "5"
    },
    "6558": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "6561": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6562": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32B9"
    },
    "6565": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6566": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6567": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 64,
      "value": "0x19B2"
    },
    "6570": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5655,
        5659
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6571": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5661,
        5663
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6573": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5674,
        5679
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6574": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2862"
    },
    "6577": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6578": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6579": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "6580": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "6581": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "6582": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "6583": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6584": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7741,
        7884
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6585": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6587": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6594": {
      "op": "SHL"
    },
    "6595": {
      "op": "SUB"
    },
    "6596": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6597": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6598": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6599": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E2"
    },
    "6602": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6603": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6605": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6606": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6612": {
      "op": "SHL"
    },
    "6613": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6614": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6615": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6617": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6618": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "6621": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6622": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "6625": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6626": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6627": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7819
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 65,
      "value": "0xA"
    },
    "6629": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7819
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6636": {
      "op": "SHL"
    },
    "6637": {
      "op": "SUB"
    },
    "6638": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7819
      ],
      "op": "AND",
      "path": "19"
    },
    "6639": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7828
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA9059CBB"
    },
    "6644": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7829,
        7836
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A05"
    },
    "6647": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6649": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6656": {
      "op": "SHL"
    },
    "6657": {
      "op": "SUB"
    },
    "6658": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6659": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6660": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6661": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7829,
        7836
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6662": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7851
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "6664": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7851
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6665": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6667": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6668": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6673": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6675": {
      "op": "SHL"
    },
    "6676": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6677": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6678": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7870,
        7874
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "6679": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6681": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6682": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "ADD",
      "path": "19"
    },
    "6683": {
      "op": "MSTORE"
    },
    "6684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6690": {
      "op": "SHL"
    },
    "6691": {
      "op": "SUB"
    },
    "6692": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7851
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6693": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7851
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6694": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7851
      ],
      "op": "AND",
      "path": "19"
    },
    "6695": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7851
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6696": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7861
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "6701": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7861
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6704": {
      "op": "ADD"
    },
    "6705": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6707": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6709": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6710": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6711": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6712": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "SUB",
      "path": "19"
    },
    "6713": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6714": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP7",
      "path": "19"
    },
    "6715": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6716": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "6717": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6718": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6719": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6720": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A48"
    },
    "6723": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6724": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6726": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6727": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "REVERT",
      "path": "19"
    },
    "6728": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6729": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "POP",
      "path": "19"
    },
    "6730": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "GAS",
      "path": "19"
    },
    "6731": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "6732": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6733": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6734": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6735": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A5C"
    },
    "6738": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6739": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6740": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6742": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6743": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "6744": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6745": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6747": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "REVERT",
      "path": "19"
    },
    "6748": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6749": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "POP",
      "path": "19"
    },
    "6750": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "POP",
      "path": "19"
    },
    "6751": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "POP",
      "path": "19"
    },
    "6752": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "POP",
      "path": "19"
    },
    "6753": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6755": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6756": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6757": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6759": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "NOT",
      "path": "19"
    },
    "6760": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6762": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6763": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "ADD",
      "path": "19"
    },
    "6764": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "AND",
      "path": "19"
    },
    "6765": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6766": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "ADD",
      "path": "19"
    },
    "6767": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6768": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6770": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6771": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "POP",
      "path": "19"
    },
    "6772": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6773": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "ADD",
      "path": "19"
    },
    "6774": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6775": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A80"
    },
    "6778": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6779": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6780": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3283"
    },
    "6783": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "i",
      "offset": [
        7838,
        7876
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6784": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7838,
        7876
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6785": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6787": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6794": {
      "op": "SHL"
    },
    "6795": {
      "op": "SUB"
    },
    "6796": {
      "op": "NOT"
    },
    "6797": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "6799": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP6",
      "path": "19"
    },
    "6800": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6801": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "SHL",
      "path": "19"
    },
    "6802": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "AND",
      "path": "19"
    },
    "6803": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6804": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6811": {
      "op": "SHL"
    },
    "6812": {
      "op": "SUB"
    },
    "6813": {
      "op": "SWAP1"
    },
    "6814": {
      "op": "SWAP3"
    },
    "6815": {
      "op": "AND"
    },
    "6816": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6818": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6819": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "ADD",
      "path": "19"
    },
    "6820": {
      "op": "MSTORE"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6823": {
      "op": "DUP3"
    },
    "6824": {
      "op": "ADD"
    },
    "6825": {
      "op": "MSTORE"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6828": {
      "op": "ADD"
    },
    "6829": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6831": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6833": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6834": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6835": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6836": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "SUB",
      "path": "19"
    },
    "6837": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6838": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6840": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP8",
      "path": "19"
    },
    "6841": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6842": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "6843": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6844": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6845": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6846": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AC6"
    },
    "6849": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6850": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6852": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6853": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "REVERT",
      "path": "19"
    },
    "6854": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6855": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "POP",
      "path": "19"
    },
    "6856": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "GAS",
      "path": "19"
    },
    "6857": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "CALL",
      "path": "19"
    },
    "6858": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6859": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6860": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6861": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1ADA"
    },
    "6864": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6865": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6866": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6868": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6869": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "6870": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6871": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6873": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "REVERT",
      "path": "19"
    },
    "6874": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6875": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "POP",
      "path": "19"
    },
    "6876": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "POP",
      "path": "19"
    },
    "6877": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "POP",
      "path": "19"
    },
    "6878": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "POP",
      "path": "19"
    },
    "6879": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6881": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6882": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6883": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6885": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "NOT",
      "path": "19"
    },
    "6886": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6888": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6889": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "ADD",
      "path": "19"
    },
    "6890": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "AND",
      "path": "19"
    },
    "6891": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6892": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "ADD",
      "path": "19"
    },
    "6893": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6894": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6896": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6897": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "POP",
      "path": "19"
    },
    "6898": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6899": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "ADD",
      "path": "19"
    },
    "6900": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6901": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AFE"
    },
    "6904": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6905": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6906": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x329C"
    },
    "6909": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "i",
      "offset": [
        7806,
        7877
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6910": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6911": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        7806,
        7877
      ],
      "op": "POP",
      "path": "19"
    },
    "6912": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "o",
      "offset": [
        7741,
        7884
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6913": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8283,
        9070
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6914": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6916": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6917": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8390,
        8394
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6919": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8390,
        8394
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6926": {
      "op": "SHL"
    },
    "6927": {
      "op": "SUB"
    },
    "6928": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6929": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6930": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6931": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2E"
    },
    "6934": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6935": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6937": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6944": {
      "op": "SHL"
    },
    "6945": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6946": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6947": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6949": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6950": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "6953": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6954": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "6957": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6958": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6959": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8406,
        8427
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 66,
      "value": "0x1B3C"
    },
    "6962": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8406,
        8415
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "6964": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6965": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6966": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6968": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "12"
    },
    "6969": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6970": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6971": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6972": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8406,
        8427
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6973": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8437,
        8454
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6975": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8457,
        8476
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B47"
    },
    "6978": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8457,
        8466
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "6980": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6981": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6982": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6983": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8457,
        8476
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6984": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8437,
        8476
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6985": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8437,
        8476
      ],
      "op": "POP",
      "path": "19"
    },
    "6986": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8487,
        8515
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 67,
      "value": "0x1B53"
    },
    "6989": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8493,
        8503
      ],
      "op": "CALLER",
      "path": "19"
    },
    "6990": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8505,
        8514
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6991": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8487,
        8492
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2658"
    },
    "6994": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        8487,
        8515
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6995": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8487,
        8515
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6996": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 68,
      "value": "0x0"
    },
    "6998": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6999": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7000": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7001": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8540
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "7003": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7005": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7006": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7007": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7008": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7010": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7011": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7012": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8551
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7013": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8560
      ],
      "op": "DUP8",
      "path": "19"
    },
    "7014": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8560
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7015": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8525,
        8560
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7016": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8570,
        8589
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 69,
      "value": "0xC"
    },
    "7018": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8570,
        8600
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7019": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8570,
        8600
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7020": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8570,
        8600
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7021": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8570,
        8600
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7022": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8570,
        8600
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7023": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8570,
        8613
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7024": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8570,
        8613
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7025": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8570,
        8613
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7026": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8623,
        8656
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 70,
      "value": "0x1B7B"
    },
    "7029": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8541,
        8550
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7030": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8647,
        8655
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7031": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8623,
        8635
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22F3"
    },
    "7034": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        8623,
        8656
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7035": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8623,
        8656
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7036": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8666,
        8699
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 71,
      "value": "0x1B85"
    },
    "7039": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8682,
        8686
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "7040": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8689,
        8698
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7041": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8666,
        8673
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x916"
    },
    "7044": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        8666,
        8699
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7045": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8666,
        8699
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7046": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8727,
        8745
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 72,
      "value": "0x9"
    },
    "7048": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8727,
        8745
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7049": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8709,
        8752
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B9C"
    },
    "7052": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8709,
        8752
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7059": {
      "op": "SHL"
    },
    "7060": {
      "op": "SUB"
    },
    "7061": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8727,
        8745
      ],
      "op": "AND",
      "path": "19"
    },
    "7062": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8727,
        8745
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7064": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8709,
        8726
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1944"
    },
    "7067": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        8709,
        8752
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7068": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8709,
        8752
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7069": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8777,
        8799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "7071": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8777,
        8799
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7072": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8767,
        8773
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7073": {
      "branch": 157,
      "fn": "CardinalNFT.createToken",
      "offset": [
        8767,
        8799
      ],
      "op": "EQ",
      "path": "19"
    },
    "7074": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8763,
        9037
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7075": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8763,
        9037
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BE0"
    },
    "7078": {
      "branch": 157,
      "fn": "CardinalNFT.createToken",
      "offset": [
        8763,
        9037
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7079": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8839
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 73,
      "value": "0x14"
    },
    "7081": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7082": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7083": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7085": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7086": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "ADD",
      "path": "19"
    },
    "7087": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7088": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7091": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7092": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7093": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7094": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7095": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
    },
    "7128": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "ADD",
      "path": "19"
    },
    "7129": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7130": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7131": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8815,
        8855
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7132": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8763,
        9037
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C2C"
    },
    "7135": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8763,
        9037
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7136": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8763,
        9037
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7137": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8894,
        8910
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "7139": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8894,
        8910
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7140": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8884,
        8890
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7141": {
      "branch": 158,
      "fn": "CardinalNFT.createToken",
      "offset": [
        8884,
        8910
      ],
      "op": "EQ",
      "path": "19"
    },
    "7142": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8880,
        9037
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7143": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8880,
        9037
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C2C"
    },
    "7146": {
      "branch": 158,
      "fn": "CardinalNFT.createToken",
      "offset": [
        8880,
        9037
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7147": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8944
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 74,
      "value": "0x15"
    },
    "7149": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7150": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7151": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7153": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7154": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "ADD",
      "path": "19"
    },
    "7155": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7156": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7157": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7158": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475"
    },
    "7191": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "ADD",
      "path": "19"
    },
    "7192": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7193": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7194": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7197": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8974,
        9008
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 75
    },
    "7198": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8974,
        9008
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7199": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8974,
        9008
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7200": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8974,
        8997
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "7202": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8926,
        8960
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7204": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8974,
        9008
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7205": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8974,
        9008
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7207": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8974,
        9008
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7208": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8974,
        9008
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7209": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        9011,
        9026
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "7210": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8974,
        9026
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7211": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8974,
        9026
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7212": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8880,
        9037
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7213": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        9054,
        9063
      ],
      "op": "SWAP5",
      "path": "19",
      "statement": 76
    },
    "7214": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        8283,
        9070
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "7215": {
      "op": "POP"
    },
    "7216": {
      "op": "POP"
    },
    "7217": {
      "op": "POP"
    },
    "7218": {
      "op": "POP"
    },
    "7219": {
      "fn": "CardinalNFT.createToken",
      "jump": "o",
      "offset": [
        8283,
        9070
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7220": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12878,
        13708
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7221": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12953,
        12968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "7223": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12980,
        12993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7225": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12996,
        13015
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C41"
    },
    "7228": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12996,
        13005
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "7230": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7231": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7232": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7233": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12996,
        13015
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7234": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        12980,
        13015
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7235": {
      "op": "POP"
    },
    "7236": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13025,
        13042
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7238": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13025,
        13042
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7239": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13103,
        13104
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7241": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13088,
        13274
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7242": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13112,
        13120
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7243": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13106,
        13108
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7244": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13106,
        13120
      ],
      "op": "GT",
      "path": "19"
    },
    "7245": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13088,
        13274
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CAD"
    },
    "7248": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13088,
        13274
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7249": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13161,
        13172
      ],
      "op": "DUP6",
      "path": "19"
    },
    "7250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7256": {
      "op": "SHL"
    },
    "7257": {
      "op": "SUB"
    },
    "7258": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13146,
        13172
      ],
      "op": "AND",
      "path": "19"
    },
    "7259": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13146,
        13157
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C63"
    },
    "7262": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13154,
        13156
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7263": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13146,
        13153
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "7266": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        13146,
        13157
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7267": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13146,
        13157
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7274": {
      "op": "SHL"
    },
    "7275": {
      "op": "SUB"
    },
    "7276": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13146,
        13172
      ],
      "op": "AND",
      "path": "19"
    },
    "7277": {
      "branch": 159,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13146,
        13172
      ],
      "op": "EQ",
      "path": "19"
    },
    "7278": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13146,
        13212
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7279": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13146,
        13212
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7280": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13146,
        13212
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C88"
    },
    "7283": {
      "branch": 159,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13146,
        13212
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7284": {
      "op": "POP"
    },
    "7285": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13199,
        13212
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "7287": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13199,
        13212
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7288": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13195
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7290": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13195
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7291": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13195
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7292": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13195
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7293": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13191
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "7295": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13195
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7297": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13195
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7298": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13195
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7300": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13195
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7301": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13195
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7302": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13195
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7303": {
      "branch": 160,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13176,
        13212
      ],
      "op": "EQ",
      "path": "19"
    },
    "7304": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13146,
        13212
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7305": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13142,
        13264
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7306": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13142,
        13264
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C9B"
    },
    "7309": {
      "branch": 160,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13142,
        13264
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7310": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13232,
        13249
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 77,
      "value": "0x1C98"
    },
    "7313": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13248,
        13249
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7315": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13232,
        13249
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7316": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13232,
        13249
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3320"
    },
    "7319": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        13232,
        13249
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7320": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13232,
        13249
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7321": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13232,
        13249
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7322": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13232,
        13249
      ],
      "op": "POP",
      "path": "19"
    },
    "7323": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13142,
        13264
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7324": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13122,
        13126
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 78
    },
    "7325": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13122,
        13126
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CA5"
    },
    "7328": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13122,
        13126
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7329": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13122,
        13126
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3338"
    },
    "7332": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        13122,
        13126
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7333": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13122,
        13126
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7334": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13122,
        13126
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7335": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13122,
        13126
      ],
      "op": "POP",
      "path": "19"
    },
    "7336": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13122,
        13126
      ],
      "op": "POP",
      "path": "19"
    },
    "7337": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13088,
        13274
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C49"
    },
    "7340": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13088,
        13274
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7341": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13088,
        13274
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7342": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13088,
        13274
      ],
      "op": "POP",
      "path": "19"
    },
    "7343": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13284,
        13316
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7345": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13332,
        13344
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7346": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7355": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7356": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "GT",
      "path": "19"
    },
    "7357": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7358": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CC9"
    },
    "7361": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7362": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CC9"
    },
    "7365": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E82"
    },
    "7368": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        13319,
        13345
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7369": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7370": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7372": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7373": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7374": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7375": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7376": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7377": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7378": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7380": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "MUL",
      "path": "19"
    },
    "7381": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7383": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "ADD",
      "path": "19"
    },
    "7384": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7385": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "ADD",
      "path": "19"
    },
    "7386": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7388": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7389": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7390": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7391": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CFC"
    },
    "7394": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7395": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7396": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7398": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "ADD",
      "path": "19"
    },
    "7399": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7400": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "7402": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7403": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7404": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7406": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "ADD",
      "path": "19"
    },
    "7407": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7408": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7410": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7411": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "SUB",
      "path": "19"
    },
    "7412": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7413": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7414": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CE7"
    },
    "7417": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7418": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7419": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "POP",
      "path": "19"
    },
    "7420": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13319,
        13345
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7421": {
      "op": "POP"
    },
    "7422": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13284,
        13345
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7423": {
      "op": "POP"
    },
    "7424": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13371,
        13372
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7426": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13356,
        13660
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7427": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13380,
        13388
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7428": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13374,
        13376
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7429": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13374,
        13388
      ],
      "op": "GT",
      "path": "19"
    },
    "7430": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13356,
        13660
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF91"
    },
    "7433": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13356,
        13660
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7434": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13429,
        13440
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7441": {
      "op": "SHL"
    },
    "7442": {
      "op": "SUB"
    },
    "7443": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13414,
        13440
      ],
      "op": "AND",
      "path": "19"
    },
    "7444": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13414,
        13425
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D1C"
    },
    "7447": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13422,
        13424
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7448": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13414,
        13421
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "7451": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        13414,
        13425
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7452": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13414,
        13425
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7459": {
      "op": "SHL"
    },
    "7460": {
      "op": "SUB"
    },
    "7461": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13414,
        13440
      ],
      "op": "AND",
      "path": "19"
    },
    "7462": {
      "branch": 161,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13414,
        13440
      ],
      "op": "EQ",
      "path": "19"
    },
    "7463": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13414,
        13480
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7464": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13414,
        13480
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7465": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13414,
        13480
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D41"
    },
    "7468": {
      "branch": 161,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13414,
        13480
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7469": {
      "op": "POP"
    },
    "7470": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13467,
        13480
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "7472": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13467,
        13480
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7473": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13463
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7475": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13463
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7476": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13463
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7477": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13463
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7478": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13459
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "7480": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13463
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7482": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13463
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7483": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13463
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7485": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13463
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7486": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13463
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7487": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13463
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7488": {
      "branch": 162,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13444,
        13480
      ],
      "op": "EQ",
      "path": "19"
    },
    "7489": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13414,
        13480
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7490": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13410,
        13650
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7491": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13410,
        13650
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D80"
    },
    "7494": {
      "branch": 162,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13410,
        13650
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7495": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13500,
        13524
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7497": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13527,
        13539
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D51"
    },
    "7500": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13536,
        13538
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7501": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13527,
        13535
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DCE"
    },
    "7504": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        13527,
        13539
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7505": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13527,
        13539
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7506": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13500,
        13539
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7507": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13500,
        13539
      ],
      "op": "POP",
      "path": "19"
    },
    "7508": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13590,
        13600
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 79
    },
    "7509": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13573
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7510": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13574,
        13586
      ],
      "op": "DUP6",
      "path": "19"
    },
    "7511": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7512": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7513": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7514": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "LT",
      "path": "19"
    },
    "7515": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D66"
    },
    "7518": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7519": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D66"
    },
    "7522": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3353"
    },
    "7525": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        13557,
        13587
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7526": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7527": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7529": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7530": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7531": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "MUL",
      "path": "19"
    },
    "7532": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7533": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7534": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7535": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "ADD",
      "path": "19"
    },
    "7536": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13587
      ],
      "op": "ADD",
      "path": "19"
    },
    "7537": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13557,
        13600
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7538": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13618,
        13635
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 80,
      "value": "0x1D7C"
    },
    "7541": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13634,
        13635
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7543": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13618,
        13635
      ],
      "op": "DUP6",
      "path": "19"
    },
    "7544": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13618,
        13635
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3320"
    },
    "7547": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        13618,
        13635
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7548": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13618,
        13635
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7549": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13618,
        13635
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "7550": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13618,
        13635
      ],
      "op": "POP",
      "path": "19"
    },
    "7551": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13482,
        13650
      ],
      "op": "POP",
      "path": "19"
    },
    "7552": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13410,
        13650
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7553": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13390,
        13394
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 81
    },
    "7554": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13390,
        13394
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D8A"
    },
    "7557": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13390,
        13394
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7558": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13390,
        13394
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3338"
    },
    "7561": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        13390,
        13394
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7562": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13390,
        13394
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7563": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13390,
        13394
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7564": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13390,
        13394
      ],
      "op": "POP",
      "path": "19"
    },
    "7565": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13390,
        13394
      ],
      "op": "POP",
      "path": "19"
    },
    "7566": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13356,
        13660
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D02"
    },
    "7569": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        13356,
        13660
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7570": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15194,
        15327
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7571": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "7573": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7580": {
      "op": "SHL"
    },
    "7581": {
      "op": "SUB"
    },
    "7582": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7583": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "7584": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7585": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DBC"
    },
    "7588": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7589": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7591": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7598": {
      "op": "SHL"
    },
    "7599": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7600": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7601": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7603": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7604": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "7607": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7608": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "7611": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7612": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7613": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15308
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 82,
      "value": "0x0"
    },
    "7615": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15308
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7616": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15308
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7617": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15308
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7618": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15299
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "7620": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7622": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15308
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7623": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15308
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7625": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15308
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7626": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15308
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7627": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15308
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7628": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        15284,
        15320
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7629": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "jump": "o",
      "offset": [
        15194,
        15327
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7630": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7631": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        540,
        553
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "7633": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        589
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 83,
      "value": "0x1DD9"
    },
    "7636": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        581,
        588
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7637": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        580
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x215F"
    },
    "7640": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        573,
        589
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7641": {
      "branch": 187,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        589
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7642": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E3F"
    },
    "7645": {
      "branch": 187,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7646": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7648": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7655": {
      "op": "SHL"
    },
    "7656": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7657": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7660": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7662": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7663": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "ADD",
      "path": "8"
    },
    "7664": {
      "op": "MSTORE"
    },
    "7665": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7669": {
      "op": "DUP3"
    },
    "7670": {
      "op": "ADD"
    },
    "7671": {
      "op": "MSTORE"
    },
    "7672": {
      "op": "PUSH32",
      "value": "0x45524337323155524953746F726167653A2055524920717565727920666F7220"
    },
    "7705": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7707": {
      "op": "DUP3"
    },
    "7708": {
      "op": "ADD"
    },
    "7709": {
      "op": "MSTORE"
    },
    "7710": {
      "op": "PUSH17",
      "value": "0x3737B732BC34B9BA32B73A103A37B5B2B7"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "7730": {
      "op": "SHL"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7733": {
      "op": "DUP3"
    },
    "7734": {
      "op": "ADD"
    },
    "7735": {
      "op": "MSTORE"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7738": {
      "op": "ADD"
    },
    "7739": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8F1"
    },
    "7742": {
      "op": "JUMP"
    },
    "7743": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7744": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        677
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7746": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7747": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7748": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7749": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        690
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "7751": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7753": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7754": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7756": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7757": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7758": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7759": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7760": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E58"
    },
    "7763": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7764": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3213"
    },
    "7767": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7768": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7769": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7770": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "7772": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "7773": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7775": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7776": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7777": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DIV",
      "path": "8"
    },
    "7778": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MUL",
      "path": "8"
    },
    "7779": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7781": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "7782": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7784": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7785": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7786": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7787": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "7788": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7790": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7791": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7792": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7793": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7794": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7795": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7796": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7797": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7798": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7800": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "7801": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7802": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7803": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7804": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E84"
    },
    "7807": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7808": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3213"
    },
    "7811": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7812": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7813": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7814": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7815": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1ED1"
    },
    "7818": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7819": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7820": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "7822": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "LT",
      "path": "8"
    },
    "7823": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EA6"
    },
    "7826": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7827": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "7830": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7831": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7832": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7833": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DIV",
      "path": "8"
    },
    "7834": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MUL",
      "path": "8"
    },
    "7835": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7836": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7837": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7838": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7840": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "7841": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7842": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1ED1"
    },
    "7845": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7846": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7847": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7848": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "7849": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7850": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7851": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7853": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7854": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7856": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7858": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7859": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7860": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7861": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7862": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7863": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7864": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7865": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7866": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "7868": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "7869": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7870": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7872": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "7873": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7874": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7875": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "GT",
      "path": "8"
    },
    "7876": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EB4"
    },
    "7879": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7880": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7881": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7882": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SUB",
      "path": "8"
    },
    "7883": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "7885": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "AND",
      "path": "8"
    },
    "7886": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7887": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "7888": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7889": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7890": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "7891": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "7892": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "7893": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "7894": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "7895": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7896": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "7897": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7899": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        730,
        740
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EEF"
    },
    "7902": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 84,
      "value": "0x40"
    },
    "7904": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7905": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7906": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7908": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7909": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "7910": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7911": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7912": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7915": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7916": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7917": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7918": {
      "fn": "ERC721._baseURI",
      "offset": [
        3388,
        3480
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7919": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        730,
        740
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7920": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        740
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7921": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        740
      ],
      "op": "POP",
      "path": "8"
    },
    "7922": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        823
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7923": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        813,
        831
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7924": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        835,
        836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7926": {
      "branch": 188,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        813,
        836
      ],
      "op": "EQ",
      "path": "8"
    },
    "7927": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7928": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F02"
    },
    "7931": {
      "branch": 188,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7932": {
      "op": "POP"
    },
    "7933": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        859,
        868
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 85
    },
    "7934": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7935": {
      "op": "POP"
    },
    "7936": {
      "op": "POP"
    },
    "7937": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "o",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7938": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7939": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1004
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7940": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1004
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7941": {
      "branch": 189,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1008
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7942": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F34"
    },
    "7945": {
      "branch": 189,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7946": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1055,
        1059
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 86
    },
    "7947": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1061,
        1070
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7948": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7950": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7951": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7953": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "ADD",
      "path": "8"
    },
    "7954": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F1C"
    },
    "7957": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7958": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7959": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7960": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3369"
    },
    "7963": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        1038,
        1071
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7964": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7965": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7967": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7968": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7970": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7971": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7972": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SUB",
      "path": "8"
    },
    "7973": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SUB",
      "path": "8"
    },
    "7974": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7975": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7976": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7977": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7979": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7980": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7981": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "7982": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "7983": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "7984": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7985": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7986": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "POP",
      "path": "8"
    },
    "7987": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "o",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7988": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7989": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1100,
        1123
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 87,
      "value": "0x1C2C"
    },
    "7992": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1115,
        1122
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7993": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1100,
        1114
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2895"
    },
    "7996": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        1100,
        1123
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7997": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17025,
        17174
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7998": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "8000": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8007": {
      "op": "SHL"
    },
    "8008": {
      "op": "SUB"
    },
    "8009": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8010": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "8011": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8012": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F67"
    },
    "8015": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8016": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8018": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8025": {
      "op": "SHL"
    },
    "8026": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8027": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8028": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8030": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8031": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "8034": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8035": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "8038": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8039": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8040": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17129
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 88,
      "value": "0xA"
    },
    "8042": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8043": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8050": {
      "op": "SHL"
    },
    "8051": {
      "op": "SUB"
    },
    "8052": {
      "op": "NOT"
    },
    "8053": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "AND",
      "path": "19"
    },
    "8054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8060": {
      "op": "SHL"
    },
    "8061": {
      "op": "SUB"
    },
    "8062": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8063": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8064": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8065": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "AND",
      "path": "19"
    },
    "8066": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8067": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8068": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8069": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "OR",
      "path": "19"
    },
    "8070": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8071": {
      "fn": "CardinalNFT.setCardinalToken",
      "offset": [
        17116,
        17167
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "8072": {
      "fn": "CardinalNFT.setCardinalToken",
      "jump": "o",
      "offset": [
        17025,
        17174
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8073": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8074": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14166,
        14182
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "8076": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14201,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 89,
      "value": "0x15"
    },
    "8078": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8079": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8080": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8081": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8083": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "MUL",
      "path": "19"
    },
    "8084": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8086": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "ADD",
      "path": "19"
    },
    "8087": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8089": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8090": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8091": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8092": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "ADD",
      "path": "19"
    },
    "8093": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8095": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8096": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8097": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8098": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8099": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8100": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8101": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8102": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8103": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8105": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "ADD",
      "path": "19"
    },
    "8106": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8107": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8108": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8109": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8110": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8111": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x87F"
    },
    "8114": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8115": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8117": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "MUL",
      "path": "19"
    },
    "8118": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8119": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "ADD",
      "path": "19"
    },
    "8120": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8121": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8122": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8124": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8125": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8127": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8129": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8130": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8131": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8132": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8133": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8134": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8135": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8136": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8138": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "ADD",
      "path": "19"
    },
    "8139": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8140": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8142": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "ADD",
      "path": "19"
    },
    "8143": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8144": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8145": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8146": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "GT",
      "path": "19"
    },
    "8147": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FC3"
    },
    "8150": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8151": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "POP",
      "path": "19"
    },
    "8152": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "POP",
      "path": "19"
    },
    "8153": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "POP",
      "path": "19"
    },
    "8154": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "POP",
      "path": "19"
    },
    "8155": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "POP",
      "path": "19"
    },
    "8156": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8157": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14194,
        14219
      ],
      "op": "POP",
      "path": "19"
    },
    "8158": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        14112,
        14226
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8159": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "jump": "o",
      "offset": [
        14112,
        14226
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8160": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13854,
        13980
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8161": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13914,
        13930
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "8163": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13949,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 90,
      "value": "0x14"
    },
    "8165": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8166": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8167": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8168": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8170": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "MUL",
      "path": "19"
    },
    "8171": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8173": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "ADD",
      "path": "19"
    },
    "8174": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8176": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8177": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8178": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8179": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "ADD",
      "path": "19"
    },
    "8180": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8182": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8183": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8184": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8185": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8186": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8187": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8188": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8189": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8190": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8192": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "ADD",
      "path": "19"
    },
    "8193": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8194": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8195": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8196": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8197": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8198": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x87F"
    },
    "8201": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8202": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8204": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "MUL",
      "path": "19"
    },
    "8205": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8206": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "ADD",
      "path": "19"
    },
    "8207": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8208": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8209": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8211": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8212": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8214": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8216": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8217": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8218": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8219": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8220": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8221": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8222": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8224": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "ADD",
      "path": "19"
    },
    "8225": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8226": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8228": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "ADD",
      "path": "19"
    },
    "8229": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8230": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8231": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8232": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "GT",
      "path": "19"
    },
    "8233": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FC3"
    },
    "8236": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8237": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "POP",
      "path": "19"
    },
    "8238": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "POP",
      "path": "19"
    },
    "8239": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "POP",
      "path": "19"
    },
    "8240": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "POP",
      "path": "19"
    },
    "8241": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "POP",
      "path": "19"
    },
    "8242": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8243": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13942,
        13973
      ],
      "op": "POP",
      "path": "19"
    },
    "8244": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        13854,
        13980
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8245": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "jump": "o",
      "offset": [
        13854,
        13980
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8246": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        16698,
        16843
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8247": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "8249": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8256": {
      "op": "SHL"
    },
    "8257": {
      "op": "SUB"
    },
    "8258": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8259": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "8260": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8261": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2060"
    },
    "8264": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8265": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8267": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8274": {
      "op": "SHL"
    },
    "8275": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8276": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8277": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8279": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8280": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "8283": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8284": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "8287": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8288": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8289": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        16784,
        16815
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 91,
      "value": "0x17"
    },
    "8291": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        16784,
        16836
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "8292": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "jump": "o",
      "offset": [
        16698,
        16843
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8293": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3514,
        3627
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8294": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "8296": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8303": {
      "op": "SHL"
    },
    "8304": {
      "op": "SUB"
    },
    "8305": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8306": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "8307": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8308": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208F"
    },
    "8311": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8312": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8314": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8315": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8319": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8321": {
      "op": "SHL"
    },
    "8322": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8323": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8324": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8326": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8327": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "8330": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8331": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "8334": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8335": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8336": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3594,
        3620
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 92,
      "value": "0x1AFE"
    },
    "8339": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3612,
        3619
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8340": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        3594,
        3611
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21EA"
    },
    "8343": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "jump": "i",
      "offset": [
        3594,
        3620
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8344": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8345": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "8347": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8354": {
      "op": "SHL"
    },
    "8355": {
      "op": "SUB"
    },
    "8356": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8357": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "8358": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8359": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C2"
    },
    "8362": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8363": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8372": {
      "op": "SHL"
    },
    "8373": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8374": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8375": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8378": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "8381": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8382": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "8385": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8393": {
      "op": "SHL"
    },
    "8394": {
      "op": "SUB"
    },
    "8395": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 93
    },
    "8396": {
      "branch": 191,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "8397": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2127"
    },
    "8400": {
      "branch": 191,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8401": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8403": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8410": {
      "op": "SHL"
    },
    "8411": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8415": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "8419": {
      "op": "MSTORE"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8422": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8424": {
      "op": "DUP3"
    },
    "8425": {
      "op": "ADD"
    },
    "8426": {
      "op": "MSTORE"
    },
    "8427": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8462": {
      "op": "DUP3"
    },
    "8463": {
      "op": "ADD"
    },
    "8464": {
      "op": "MSTORE"
    },
    "8465": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8472": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8474": {
      "op": "SHL"
    },
    "8475": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8477": {
      "op": "DUP3"
    },
    "8478": {
      "op": "ADD"
    },
    "8479": {
      "op": "MSTORE"
    },
    "8480": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8482": {
      "op": "ADD"
    },
    "8483": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "8486": {
      "op": "JUMP"
    },
    "8487": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8488": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 94,
      "value": "0x1AFE"
    },
    "8491": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8492": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2606"
    },
    "8495": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8496": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        15826,
        15959
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8497": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "8499": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8506": {
      "op": "SHL"
    },
    "8507": {
      "op": "SUB"
    },
    "8508": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8509": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "8510": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8511": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215A"
    },
    "8514": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8515": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8517": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8518": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8524": {
      "op": "SHL"
    },
    "8525": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8526": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8527": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8529": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8530": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "8533": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8534": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324E"
    },
    "8537": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8538": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8539": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        15914,
        15930
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 95,
      "value": "0x12"
    },
    "8541": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        15914,
        15952
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "8542": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "jump": "o",
      "offset": [
        15826,
        15959
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8543": {
      "fn": "ERC721._exists",
      "offset": [
        7159,
        7284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8544": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8546": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 96
    },
    "8547": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8548": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8549": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "8551": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8553": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8554": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8556": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8557": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8558": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8565": {
      "op": "SHL"
    },
    "8566": {
      "op": "SUB"
    },
    "8567": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "5"
    },
    "8568": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8569": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8570": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8571": {
      "fn": "ERC721._exists",
      "jump": "o",
      "offset": [
        7159,
        7284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8572": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8573": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 97,
      "value": "0x0"
    },
    "8575": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8576": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8577": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8578": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11257
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "8580": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8582": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8583": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8585": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8586": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8587": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8588": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8595": {
      "op": "SHL"
    },
    "8596": {
      "op": "SUB"
    },
    "8597": {
      "op": "NOT"
    },
    "8598": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "5"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8605": {
      "op": "SHL"
    },
    "8606": {
      "op": "SUB"
    },
    "8607": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8608": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "5"
    },
    "8609": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8610": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8611": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "OR",
      "path": "5"
    },
    "8612": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8613": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8614": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8615": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8616": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8617": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 98,
      "value": "0x21B1"
    },
    "8620": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8621": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11309
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1114"
    },
    "8624": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8625": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8632": {
      "op": "SHL"
    },
    "8633": {
      "op": "SUB"
    },
    "8634": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "AND",
      "path": "5"
    },
    "8635": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8668": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8670": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8671": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8673": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8674": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8675": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8676": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SUB",
      "path": "5"
    },
    "8677": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8678": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "LOG4",
      "path": "5"
    },
    "8679": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "5"
    },
    "8680": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "5"
    },
    "8681": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8682": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2901,
        3373
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8683": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2968,
        2974
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8685": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2963,
        3367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8686": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2984,
        3002
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "8688": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2984,
        3009
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8689": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2980,
        3009
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8690": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2980,
        3009
      ],
      "op": "LT",
      "path": "19"
    },
    "8691": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2963,
        3367
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8692": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2963,
        3367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD90"
    },
    "8695": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2963,
        3367
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8696": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3059,
        3066
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8697": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3052
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "8699": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3053,
        3054
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8700": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8701": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8702": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8703": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "LT",
      "path": "19"
    },
    "8704": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x220B"
    },
    "8707": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8708": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x220B"
    },
    "8711": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3353"
    },
    "8714": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3034,
        3055
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8715": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8716": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8717": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8719": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8720": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8722": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8724": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8725": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "ADD",
      "path": "19"
    },
    "8726": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3055
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8727": {
      "branch": 163,
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3034,
        3066
      ],
      "op": "EQ",
      "path": "19"
    },
    "8728": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3030,
        3357
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8729": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3030,
        3357
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22E1"
    },
    "8732": {
      "branch": 163,
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3030,
        3357
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8733": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3086,
        3102
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8735": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3105,
        3135
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2244"
    },
    "8738": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "8740": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3132,
        3133
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8741": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8742": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8743": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8744": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "LT",
      "path": "19"
    },
    "8745": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2234"
    },
    "8748": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8749": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2234"
    },
    "8752": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3353"
    },
    "8755": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3113,
        3134
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8756": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8757": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8758": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8760": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8761": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8763": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8765": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8766": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "ADD",
      "path": "19"
    },
    "8767": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3113,
        3134
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8768": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3105,
        3112
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1114"
    },
    "8771": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3105,
        3135
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8772": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3105,
        3135
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8773": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3086,
        3135
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8774": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3086,
        3135
      ],
      "op": "POP",
      "path": "19"
    },
    "8775": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3153,
        3210
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 99,
      "value": "0x226E"
    },
    "8778": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3163,
        3171
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8779": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3181,
        3185
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "8780": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3206
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "8782": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3207,
        3208
      ],
      "op": "DUP6",
      "path": "19"
    },
    "8783": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8784": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8785": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8786": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "LT",
      "path": "19"
    },
    "8787": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x225E"
    },
    "8790": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8791": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x225E"
    },
    "8794": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3353"
    },
    "8797": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3188,
        3209
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8798": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8799": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8800": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8802": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8803": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8805": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8807": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8808": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "ADD",
      "path": "19"
    },
    "8809": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3188,
        3209
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8810": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3153,
        3162
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2464"
    },
    "8813": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3153,
        3210
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8814": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3153,
        3210
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8815": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3271
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 100,
      "value": "0x15"
    },
    "8817": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3272,
        3297
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8818": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3272,
        3297
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8819": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3272,
        3299
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x227E"
    },
    "8822": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3272,
        3299
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8823": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3298,
        3299
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8825": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3298,
        3299
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8826": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3272,
        3299
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3398"
    },
    "8829": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3272,
        3299
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8830": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3272,
        3299
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8831": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8832": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8833": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8834": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "LT",
      "path": "19"
    },
    "8835": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x228E"
    },
    "8838": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8839": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x228E"
    },
    "8842": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3353"
    },
    "8845": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3253,
        3300
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8846": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8847": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8848": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8850": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8851": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8853": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8855": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8856": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "ADD",
      "path": "19"
    },
    "8857": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3253,
        3300
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8858": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "8860": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3248,
        3249
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8861": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8862": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8863": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8864": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "LT",
      "path": "19"
    },
    "8865": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22AC"
    },
    "8868": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8869": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22AC"
    },
    "8872": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3353"
    },
    "8875": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3229,
        3250
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8876": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8877": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8879": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8880": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8881": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8882": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8884": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8885": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8886": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8887": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3250
      ],
      "op": "ADD",
      "path": "19"
    },
    "8888": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3229,
        3300
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "8889": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3336
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 101,
      "value": "0x15"
    },
    "8891": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8892": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8893": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8894": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22C9"
    },
    "8897": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8898": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22C9"
    },
    "8901": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33AF"
    },
    "8904": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3318,
        3342
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8905": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8906": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8908": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8909": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "SUB",
      "path": "19"
    },
    "8910": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8911": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8912": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8913": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8915": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8916": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8918": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8920": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8921": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "ADD",
      "path": "19"
    },
    "8922": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8924": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8925": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "8926": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8927": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3318,
        3342
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "8928": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3068,
        3357
      ],
      "op": "POP",
      "path": "19"
    },
    "8929": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3030,
        3357
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8930": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3011,
        3014
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 102
    },
    "8931": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3011,
        3014
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22EB"
    },
    "8934": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3011,
        3014
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8935": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3011,
        3014
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3338"
    },
    "8938": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3011,
        3014
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8939": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3011,
        3014
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8940": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3011,
        3014
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8941": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3011,
        3014
      ],
      "op": "POP",
      "path": "19"
    },
    "8942": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3011,
        3014
      ],
      "op": "POP",
      "path": "19"
    },
    "8943": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2963,
        3367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21ED"
    },
    "8946": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        2963,
        3367
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8947": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1277,
        1491
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8948": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1392
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 103,
      "value": "0x22FC"
    },
    "8951": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1384,
        1391
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8952": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1383
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x215F"
    },
    "8955": {
      "fn": "ERC721URIStorage._setTokenURI",
      "jump": "i",
      "offset": [
        1376,
        1392
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8956": {
      "branch": 190,
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1392
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8957": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x235F"
    },
    "8960": {
      "branch": 190,
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8961": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8963": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8964": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8970": {
      "op": "SHL"
    },
    "8971": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8972": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8975": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "8977": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8978": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "ADD",
      "path": "8"
    },
    "8979": {
      "op": "MSTORE"
    },
    "8980": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8984": {
      "op": "DUP3"
    },
    "8985": {
      "op": "ADD"
    },
    "8986": {
      "op": "MSTORE"
    },
    "8987": {
      "op": "PUSH32",
      "value": "0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E"
    },
    "9020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9022": {
      "op": "DUP3"
    },
    "9023": {
      "op": "ADD"
    },
    "9024": {
      "op": "MSTORE"
    },
    "9025": {
      "op": "PUSH14",
      "value": "0x32BC34B9BA32B73A103A37B5B2B7"
    },
    "9040": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "9042": {
      "op": "SHL"
    },
    "9043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9045": {
      "op": "DUP3"
    },
    "9046": {
      "op": "ADD"
    },
    "9047": {
      "op": "MSTORE"
    },
    "9048": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9050": {
      "op": "ADD"
    },
    "9051": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8F1"
    },
    "9054": {
      "op": "JUMP"
    },
    "9055": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9056": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 104,
      "value": "0x0"
    },
    "9058": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP3",
      "path": "8"
    },
    "9059": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9060": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "9061": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1463
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "9063": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "9065": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9066": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9067": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "9068": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "9070": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9071": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "9072": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "9073": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "DUP3",
      "path": "8"
    },
    "9074": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "9075": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA27"
    },
    "9078": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "9079": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "DUP5",
      "path": "8"
    },
    "9080": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "ADD",
      "path": "8"
    },
    "9081": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9082": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2CF1"
    },
    "9085": {
      "fn": "ERC721URIStorage._setTokenURI",
      "jump": "i",
      "offset": [
        1453,
        1484
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9086": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9087": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7539
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9089": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7575
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 105,
      "value": "0x2389"
    },
    "9092": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7567,
        7574
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9093": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7566
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x215F"
    },
    "9096": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7559,
        7575
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9097": {
      "branch": 178,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7575
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9098": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23EA"
    },
    "9101": {
      "branch": 178,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9102": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9111": {
      "op": "SHL"
    },
    "9112": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9113": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9116": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9118": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9119": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "ADD",
      "path": "5"
    },
    "9120": {
      "op": "MSTORE"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9125": {
      "op": "DUP3"
    },
    "9126": {
      "op": "ADD"
    },
    "9127": {
      "op": "MSTORE"
    },
    "9128": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "9161": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9163": {
      "op": "DUP3"
    },
    "9164": {
      "op": "ADD"
    },
    "9165": {
      "op": "MSTORE"
    },
    "9166": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "9179": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "9181": {
      "op": "SHL"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9184": {
      "op": "DUP3"
    },
    "9185": {
      "op": "ADD"
    },
    "9186": {
      "op": "MSTORE"
    },
    "9187": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9189": {
      "op": "ADD"
    },
    "9190": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "9193": {
      "op": "JUMP"
    },
    "9194": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9195": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9197": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23F5"
    },
    "9200": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7672
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9201": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1114"
    },
    "9204": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9205": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9206": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9207": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "POP",
      "path": "5"
    },
    "9208": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7702,
        7707
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 106
    },
    "9209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9215": {
      "op": "SHL"
    },
    "9216": {
      "op": "SUB"
    },
    "9217": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "5"
    },
    "9218": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7698
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9225": {
      "op": "SHL"
    },
    "9226": {
      "op": "SUB"
    },
    "9227": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "5"
    },
    "9228": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "EQ",
      "path": "5"
    },
    "9229": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9230": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2430"
    },
    "9233": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9234": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "POP",
      "path": "5"
    },
    "9235": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9242": {
      "op": "SHL"
    },
    "9243": {
      "op": "SUB"
    },
    "9244": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "5"
    },
    "9245": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2425"
    },
    "9248": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7723,
        7730
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9249": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x889"
    },
    "9252": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9253": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9260": {
      "op": "SHL"
    },
    "9261": {
      "op": "SUB"
    },
    "9262": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "5"
    },
    "9263": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "EQ",
      "path": "5"
    },
    "9264": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9265": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9266": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C2C"
    },
    "9269": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9270": {
      "op": "POP"
    },
    "9271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9277": {
      "op": "SHL"
    },
    "9278": {
      "op": "SUB"
    },
    "9279": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9280": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9281": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "5"
    },
    "9282": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9284": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9285": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9286": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9287": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "9289": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9291": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9292": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9293": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9294": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9296": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9297": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9298": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9299": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "9300": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP9",
      "path": "5"
    },
    "9301": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "9302": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9303": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9304": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9305": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9306": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9307": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9308": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9309": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "9311": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "9312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7778
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C2C"
    },
    "9315": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9316": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        11057
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9317": {
      "fn": "ERC721._transfer",
      "offset": [
        10606,
        10610
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 107
    },
    "9318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9324": {
      "op": "SHL"
    },
    "9325": {
      "op": "SUB"
    },
    "9326": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "5"
    },
    "9327": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2477"
    },
    "9330": {
      "fn": "ERC721._transfer",
      "offset": [
        10594,
        10601
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9331": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10593
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1114"
    },
    "9334": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9335": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9342": {
      "op": "SHL"
    },
    "9343": {
      "op": "SUB"
    },
    "9344": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "5"
    },
    "9345": {
      "branch": 179,
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "EQ",
      "path": "5"
    },
    "9346": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24DB"
    },
    "9349": {
      "branch": 179,
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9350": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9352": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9353": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9357": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9359": {
      "op": "SHL"
    },
    "9360": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9361": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9364": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9366": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9367": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "ADD",
      "path": "5"
    },
    "9368": {
      "op": "MSTORE"
    },
    "9369": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "9371": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9373": {
      "op": "DUP3"
    },
    "9374": {
      "op": "ADD"
    },
    "9375": {
      "op": "MSTORE"
    },
    "9376": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "9409": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9411": {
      "op": "DUP3"
    },
    "9412": {
      "op": "ADD"
    },
    "9413": {
      "op": "MSTORE"
    },
    "9414": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "9420": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "9422": {
      "op": "SHL"
    },
    "9423": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9425": {
      "op": "DUP3"
    },
    "9426": {
      "op": "ADD"
    },
    "9427": {
      "op": "MSTORE"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9430": {
      "op": "ADD"
    },
    "9431": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "9434": {
      "op": "JUMP"
    },
    "9435": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9442": {
      "op": "SHL"
    },
    "9443": {
      "op": "SUB"
    },
    "9444": {
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 108
    },
    "9445": {
      "branch": 180,
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "AND",
      "path": "5"
    },
    "9446": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253D"
    },
    "9449": {
      "branch": 180,
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9450": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9452": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9459": {
      "op": "SHL"
    },
    "9460": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9461": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9464": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9466": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9467": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "ADD",
      "path": "5"
    },
    "9468": {
      "op": "MSTORE"
    },
    "9469": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9471": {
      "op": "DUP1"
    },
    "9472": {
      "op": "DUP3"
    },
    "9473": {
      "op": "ADD"
    },
    "9474": {
      "op": "MSTORE"
    },
    "9475": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "9508": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9510": {
      "op": "DUP3"
    },
    "9511": {
      "op": "ADD"
    },
    "9512": {
      "op": "MSTORE"
    },
    "9513": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9518": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9520": {
      "op": "SHL"
    },
    "9521": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9523": {
      "op": "DUP3"
    },
    "9524": {
      "op": "ADD"
    },
    "9525": {
      "op": "MSTORE"
    },
    "9526": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9528": {
      "op": "ADD"
    },
    "9529": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "9532": {
      "op": "JUMP"
    },
    "9533": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9534": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 109,
      "value": "0x2548"
    },
    "9537": {
      "fn": "ERC721._transfer",
      "offset": [
        10856,
        10857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9539": {
      "fn": "ERC721._transfer",
      "offset": [
        10860,
        10867
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9540": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x217C"
    },
    "9543": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9544": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9551": {
      "op": "SHL"
    },
    "9552": {
      "op": "SUB"
    },
    "9553": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 110
    },
    "9554": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "AND",
      "path": "5"
    },
    "9555": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9557": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9558": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9559": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9560": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10888
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "9562": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9564": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9565": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9567": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9568": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9569": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9570": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9571": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "9573": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9574": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9575": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2571"
    },
    "9578": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9579": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9580": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9581": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3398"
    },
    "9584": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9585": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9586": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9587": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9588": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9589": {
      "op": "POP"
    },
    "9590": {
      "op": "POP"
    },
    "9591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9597": {
      "op": "SHL"
    },
    "9598": {
      "op": "SUB"
    },
    "9599": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 111
    },
    "9600": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "AND",
      "path": "5"
    },
    "9601": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9603": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9604": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9605": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9606": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10918
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "9608": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9610": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9611": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9613": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9614": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9615": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9616": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9617": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "9619": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9620": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9621": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x259F"
    },
    "9624": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9625": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9626": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9627": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3320"
    },
    "9630": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9631": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9632": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9633": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9634": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9635": {
      "op": "POP"
    },
    "9636": {
      "op": "POP"
    },
    "9637": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 112,
      "value": "0x0"
    },
    "9639": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9640": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9641": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9642": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10944
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "9644": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9646": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9647": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9649": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9650": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9651": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9652": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9653": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9660": {
      "op": "SHL"
    },
    "9661": {
      "op": "SUB"
    },
    "9662": {
      "op": "NOT"
    },
    "9663": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "5"
    },
    "9664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9670": {
      "op": "SHL"
    },
    "9671": {
      "op": "SUB"
    },
    "9672": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP7",
      "path": "5"
    },
    "9673": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9674": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "5"
    },
    "9675": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9676": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9677": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "OR",
      "path": "5"
    },
    "9678": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9679": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9680": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9681": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 113
    },
    "9682": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9683": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9684": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "9685": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9686": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "DUP8",
      "path": "5"
    },
    "9687": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "AND",
      "path": "5"
    },
    "9688": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9689": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9722": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9723": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "LOG4",
      "path": "5"
    },
    "9724": {
      "fn": "ERC721._transfer",
      "offset": [
        11012,
        11050
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 114,
      "value": "0xA27"
    },
    "9727": {
      "fn": "ERC721._transfer",
      "offset": [
        11032,
        11036
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9728": {
      "fn": "ERC721._transfer",
      "offset": [
        11038,
        11040
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9729": {
      "fn": "ERC721._transfer",
      "offset": [
        11042,
        11049
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9730": {
      "fn": "ERC721._transfer",
      "offset": [
        11012,
        11031
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x296D"
    },
    "9733": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11012,
        11050
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9734": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9735": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "9737": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9738": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9745": {
      "op": "SHL"
    },
    "9746": {
      "op": "SUB"
    },
    "9747": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 115
    },
    "9748": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9749": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9756": {
      "op": "SHL"
    },
    "9757": {
      "op": "SUB"
    },
    "9758": {
      "op": "NOT"
    },
    "9759": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9760": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9761": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9762": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "9763": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9764": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9765": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9766": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 116,
      "value": "0x40"
    },
    "9768": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9769": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9770": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "9771": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9772": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9773": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9774": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9775": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9808": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9809": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9811": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9812": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9813": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "9814": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "9815": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9816": {
      "fn": "ERC721._mint",
      "offset": [
        9078,
        9505
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9823": {
      "op": "SHL"
    },
    "9824": {
      "op": "SUB"
    },
    "9825": {
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 117
    },
    "9826": {
      "branch": 181,
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "AND",
      "path": "5"
    },
    "9827": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26AE"
    },
    "9830": {
      "branch": 181,
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9831": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9833": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9840": {
      "op": "SHL"
    },
    "9841": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9842": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9845": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9847": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9848": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "ADD",
      "path": "5"
    },
    "9849": {
      "op": "DUP2"
    },
    "9850": {
      "op": "SWAP1"
    },
    "9851": {
      "op": "MSTORE"
    },
    "9852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9854": {
      "op": "DUP3"
    },
    "9855": {
      "op": "ADD"
    },
    "9856": {
      "op": "MSTORE"
    },
    "9857": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9892": {
      "op": "DUP3"
    },
    "9893": {
      "op": "ADD"
    },
    "9894": {
      "op": "MSTORE"
    },
    "9895": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9897": {
      "op": "ADD"
    },
    "9898": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "9901": {
      "op": "JUMP"
    },
    "9902": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9903": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9245
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 118,
      "value": "0x26B7"
    },
    "9906": {
      "fn": "ERC721._mint",
      "offset": [
        9237,
        9244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9907": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9236
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x215F"
    },
    "9910": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9229,
        9245
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9911": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9245
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9912": {
      "branch": 182,
      "fn": "ERC721._mint",
      "offset": [
        9228,
        9245
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9913": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2704"
    },
    "9916": {
      "branch": 182,
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9917": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9919": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9920": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9924": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9926": {
      "op": "SHL"
    },
    "9927": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9928": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9931": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9933": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9934": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "ADD",
      "path": "5"
    },
    "9935": {
      "op": "MSTORE"
    },
    "9936": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "9938": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9940": {
      "op": "DUP3"
    },
    "9941": {
      "op": "ADD"
    },
    "9942": {
      "op": "MSTORE"
    },
    "9943": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "9976": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9978": {
      "op": "DUP3"
    },
    "9979": {
      "op": "ADD"
    },
    "9980": {
      "op": "MSTORE"
    },
    "9981": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9983": {
      "op": "ADD"
    },
    "9984": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "9987": {
      "op": "JUMP"
    },
    "9988": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9995": {
      "op": "SHL"
    },
    "9996": {
      "op": "SUB"
    },
    "9997": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 119
    },
    "9998": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "AND",
      "path": "5"
    },
    "9999": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10001": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10002": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10003": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10004": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9354
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "10006": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10008": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10009": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10011": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10012": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10013": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10014": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10015": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "10017": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10018": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10019": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x272D"
    },
    "10022": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10023": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10024": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10025": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3320"
    },
    "10028": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10029": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10030": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10031": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10032": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "10033": {
      "op": "POP"
    },
    "10034": {
      "op": "POP"
    },
    "10035": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 120,
      "value": "0x0"
    },
    "10037": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10038": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10039": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10040": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9380
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "10042": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10044": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10045": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10047": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10048": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10049": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10050": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10051": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10058": {
      "op": "SHL"
    },
    "10059": {
      "op": "SUB"
    },
    "10060": {
      "op": "NOT"
    },
    "10061": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "5"
    },
    "10062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10068": {
      "op": "SHL"
    },
    "10069": {
      "op": "SUB"
    },
    "10070": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP7",
      "path": "5"
    },
    "10071": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "5"
    },
    "10072": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10073": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10074": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "OR",
      "path": "5"
    },
    "10075": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10076": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10077": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "10078": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 121
    },
    "10079": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10080": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10081": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10082": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10083": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10116": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10117": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10118": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10119": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "LOG4",
      "path": "5"
    },
    "10120": {
      "fn": "ERC721._mint",
      "offset": [
        9454,
        9498
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 122,
      "value": "0xD90"
    },
    "10123": {
      "fn": "ERC721._mint",
      "offset": [
        9482,
        9483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10125": {
      "fn": "ERC721._mint",
      "offset": [
        9486,
        9488
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10126": {
      "fn": "ERC721._mint",
      "offset": [
        9490,
        9497
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10127": {
      "fn": "ERC721._mint",
      "offset": [
        9454,
        9473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x296D"
    },
    "10130": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9454,
        9498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10131": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10132": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11624,
        11632
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 123
    },
    "10133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10139": {
      "op": "SHL"
    },
    "10140": {
      "op": "SUB"
    },
    "10141": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "5"
    },
    "10142": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11620
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10149": {
      "op": "SHL"
    },
    "10150": {
      "op": "SUB"
    },
    "10151": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "5"
    },
    "10152": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "EQ",
      "path": "5"
    },
    "10153": {
      "branch": 183,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10154": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27F5"
    },
    "10157": {
      "branch": 183,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10158": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10160": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10167": {
      "op": "SHL"
    },
    "10168": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10169": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10172": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10174": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10175": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "ADD",
      "path": "5"
    },
    "10176": {
      "op": "MSTORE"
    },
    "10177": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "10179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10181": {
      "op": "DUP3"
    },
    "10182": {
      "op": "ADD"
    },
    "10183": {
      "op": "MSTORE"
    },
    "10184": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "10217": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10219": {
      "op": "DUP3"
    },
    "10220": {
      "op": "ADD"
    },
    "10221": {
      "op": "MSTORE"
    },
    "10222": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10224": {
      "op": "ADD"
    },
    "10225": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "10228": {
      "op": "JUMP"
    },
    "10229": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10236": {
      "op": "SHL"
    },
    "10237": {
      "op": "SUB"
    },
    "10238": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 124
    },
    "10239": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10240": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "AND",
      "path": "5"
    },
    "10241": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10243": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10244": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10245": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10246": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "10248": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10250": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10251": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10252": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10253": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10255": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10256": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10257": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10258": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "10259": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP8",
      "path": "5"
    },
    "10260": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "AND",
      "path": "5"
    },
    "10261": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10262": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10263": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10264": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "10265": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10266": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10267": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10268": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10269": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10270": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10271": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10272": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10273": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10275": {
      "op": "NOT"
    },
    "10276": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "AND",
      "path": "5"
    },
    "10277": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP7",
      "path": "5"
    },
    "10278": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10279": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10280": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10281": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10282": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "OR",
      "path": "5"
    },
    "10283": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10284": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10285": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "10286": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 125
    },
    "10287": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10288": {
      "op": "SWAP2"
    },
    "10289": {
      "op": "DUP3"
    },
    "10290": {
      "op": "MSTORE"
    },
    "10291": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "10324": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10325": {
      "op": "ADD"
    },
    "10326": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10328": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10329": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10330": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10331": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SUB",
      "path": "5"
    },
    "10332": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10333": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "LOG3",
      "path": "5"
    },
    "10334": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "5"
    },
    "10335": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "5"
    },
    "10336": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "5"
    },
    "10337": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10338": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6549,
        6856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10339": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 126,
      "value": "0x286D"
    },
    "10342": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6710,
        6714
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10343": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6716,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10344": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6720,
        6727
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10345": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6709
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2464"
    },
    "10348": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10349": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10350": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 127,
      "value": "0x2879"
    },
    "10353": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6769,
        6773
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10354": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6775,
        6777
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10355": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6786
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10356": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6788,
        6793
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10357": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6768
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AE6"
    },
    "10360": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10361": {
      "branch": 184,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10362": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19B2"
    },
    "10365": {
      "branch": 184,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10366": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10368": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10369": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10375": {
      "op": "SHL"
    },
    "10376": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10377": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10378": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10380": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "ADD",
      "path": "5"
    },
    "10381": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "10384": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10385": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33C5"
    },
    "10388": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10389": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10390": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2891,
        2904
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "10392": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2940
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 128,
      "value": "0x28A0"
    },
    "10395": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2932,
        2939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10396": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2931
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x215F"
    },
    "10399": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2924,
        2940
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10400": {
      "branch": 185,
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2940
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10401": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2904"
    },
    "10404": {
      "branch": 185,
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10405": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10407": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10414": {
      "op": "SHL"
    },
    "10415": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10416": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10419": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10421": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10422": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "ADD",
      "path": "5"
    },
    "10423": {
      "op": "MSTORE"
    },
    "10424": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "10426": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10428": {
      "op": "DUP3"
    },
    "10429": {
      "op": "ADD"
    },
    "10430": {
      "op": "MSTORE"
    },
    "10431": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "10464": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10466": {
      "op": "DUP3"
    },
    "10467": {
      "op": "ADD"
    },
    "10468": {
      "op": "MSTORE"
    },
    "10469": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "10485": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "10487": {
      "op": "SHL"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10490": {
      "op": "DUP3"
    },
    "10491": {
      "op": "ADD"
    },
    "10492": {
      "op": "MSTORE"
    },
    "10493": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10495": {
      "op": "ADD"
    },
    "10496": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "10499": {
      "op": "JUMP"
    },
    "10500": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10501": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3024
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10503": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x291B"
    },
    "10506": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10508": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10509": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10510": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10512": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10513": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "10514": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10515": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10516": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10519": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10520": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10521": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10522": {
      "fn": "ERC721._baseURI",
      "offset": [
        3388,
        3480
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10523": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10524": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10525": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "POP",
      "path": "5"
    },
    "10526": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3078,
        3079
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 129,
      "value": "0x0"
    },
    "10528": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3060,
        3067
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10529": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3075
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10530": {
      "branch": 186,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3079
      ],
      "op": "GT",
      "path": "5"
    },
    "10531": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x293B"
    },
    "10534": {
      "branch": 186,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10535": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10537": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10538": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10539": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10541": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "ADD",
      "path": "5"
    },
    "10542": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10544": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10545": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10546": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10548": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10549": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10550": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "POP",
      "path": "5"
    },
    "10551": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2966"
    },
    "10554": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10555": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10556": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3106,
        3113
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10557": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2945"
    },
    "10560": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3122
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10561": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BF3"
    },
    "10564": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10565": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10566": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10568": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10569": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10571": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "ADD",
      "path": "5"
    },
    "10572": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2956"
    },
    "10575": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10576": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10577": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10578": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3369"
    },
    "10581": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10582": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10583": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10585": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10586": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10588": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10589": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10590": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "5"
    },
    "10591": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "5"
    },
    "10592": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10593": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10594": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10595": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10597": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10598": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10599": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3140
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "10600": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10601": {
      "op": "POP"
    },
    "10602": {
      "op": "POP"
    },
    "10603": {
      "op": "POP"
    },
    "10604": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10605": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        3909,
        4802
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10606": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4049,
        4065
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "10608": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4049,
        4065
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10609": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4045
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10611": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4045
      ],
      "op": "DUP3",
      "path": "19"
    },
    "10612": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4045
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10613": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4045
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10614": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4036
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "10616": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4045
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "10618": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4045
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10619": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4045
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10621": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4045
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10622": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4045
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "10623": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4045
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10624": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4065
      ],
      "op": "EQ",
      "path": "19"
    },
    "10625": {
      "branch": 164,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4065
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10626": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4119
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x299A"
    },
    "10629": {
      "branch": 164,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4119
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "10630": {
      "op": "POP"
    },
    "10631": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4097,
        4119
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "10633": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4097,
        4119
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10634": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10636": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4093
      ],
      "op": "DUP3",
      "path": "19"
    },
    "10637": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4093
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10638": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4093
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10639": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4084
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "10641": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "10643": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4093
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10644": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10646": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4093
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10647": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4093
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "10648": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4093
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10649": {
      "branch": 165,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4069,
        4119
      ],
      "op": "EQ",
      "path": "19"
    },
    "10650": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4021,
        4119
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10651": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4017,
        4741
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "10652": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4017,
        4741
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA27"
    },
    "10655": {
      "branch": 165,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4017,
        4741
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "10656": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "10658": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10665": {
      "op": "SHL"
    },
    "10666": {
      "op": "SUB"
    },
    "10667": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4154
      ],
      "op": "DUP5",
      "path": "19"
    },
    "10668": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4154
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10669": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4154
      ],
      "op": "AND",
      "path": "19"
    },
    "10670": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10671": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "10672": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4154
      ],
      "op": "EQ",
      "path": "19"
    },
    "10673": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4154
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10674": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4154
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "10675": {
      "branch": 166,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4154
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10676": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4184
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29CB"
    },
    "10679": {
      "branch": 166,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4184
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "10680": {
      "op": "POP"
    },
    "10681": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4166,
        4184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "10683": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4166,
        4184
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10690": {
      "op": "SHL"
    },
    "10691": {
      "op": "SUB"
    },
    "10692": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4158,
        4184
      ],
      "op": "DUP5",
      "path": "19"
    },
    "10693": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4158,
        4184
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10694": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4158,
        4184
      ],
      "op": "AND",
      "path": "19"
    },
    "10695": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4166,
        4184
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "10696": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4166,
        4184
      ],
      "op": "AND",
      "path": "19"
    },
    "10697": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4158,
        4184
      ],
      "op": "EQ",
      "path": "19"
    },
    "10698": {
      "branch": 167,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4158,
        4184
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "10699": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4184
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10700": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4206
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10701": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4206
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "10702": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4206
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29DF"
    },
    "10705": {
      "branch": 167,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4206
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "10706": {
      "op": "POP"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10713": {
      "op": "SHL"
    },
    "10714": {
      "op": "SUB"
    },
    "10715": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4188,
        4206
      ],
      "op": "DUP4",
      "path": "19"
    },
    "10716": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4188,
        4206
      ],
      "op": "AND",
      "path": "19"
    },
    "10717": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4188,
        4206
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "10718": {
      "branch": 168,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4188,
        4206
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "10719": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4139,
        4206
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10720": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4135,
        4616
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "10721": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4135,
        4616
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A8D"
    },
    "10724": {
      "branch": 168,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4135,
        4616
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "10725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10731": {
      "op": "SHL"
    },
    "10732": {
      "op": "SUB"
    },
    "10733": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4259
      ],
      "op": "DUP4",
      "path": "19"
    },
    "10734": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4259
      ],
      "op": "AND",
      "path": "19"
    },
    "10735": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4262,
        4263
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10737": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4259
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10738": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4259
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10739": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4259
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10740": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4253
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "10742": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4259
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "10744": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4259
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10745": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4259
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10747": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4259
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10748": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4259
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "10749": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4259
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10750": {
      "branch": 169,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4230,
        4263
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "10751": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4226,
        4602
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A6C"
    },
    "10754": {
      "branch": 169,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4226,
        4602
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "10755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10761": {
      "op": "SHL"
    },
    "10762": {
      "op": "SUB"
    },
    "10763": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 130
    },
    "10764": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "AND",
      "path": "19"
    },
    "10765": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10767": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10768": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10769": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10770": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4342
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "10772": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "10774": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10775": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10777": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10778": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "10779": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4348
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10780": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4352
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A27"
    },
    "10783": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4352
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10784": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4351,
        4352
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "10786": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4351,
        4352
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10787": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4352
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3398"
    },
    "10790": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "jump": "i",
      "offset": [
        4319,
        4352
      ],
      "op": "JUMP",
      "path": "19"
    },
    "10791": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4319,
        4352
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10798": {
      "op": "SHL"
    },
    "10799": {
      "op": "SUB"
    },
    "10800": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4316
      ],
      "op": "DUP5",
      "path": "19"
    },
    "10801": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4316
      ],
      "op": "AND",
      "path": "19"
    },
    "10802": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4316
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10804": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4316
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10805": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4316
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10806": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4316
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10807": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4310
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "10809": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4316
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "10811": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4316
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10812": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4316
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10814": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4316
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10815": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4316
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "10816": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4352
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10817": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4352
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10818": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4287,
        4352
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "10819": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4374,
        4492
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A67"
    },
    "10822": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4374,
        4492
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "10823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10829": {
      "op": "SHL"
    },
    "10830": {
      "op": "SUB"
    },
    "10831": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4461
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 131
    },
    "10832": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4461
      ],
      "op": "AND",
      "path": "19"
    },
    "10833": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4464,
        4469
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10835": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4461
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10836": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4461
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10837": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4461
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10838": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "10840": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4461
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "10842": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4461
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10843": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4461
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10845": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4461
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10846": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4461
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "10847": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4469
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10848": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4469
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10849": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10851": {
      "op": "NOT"
    },
    "10852": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4469
      ],
      "op": "AND",
      "path": "19"
    },
    "10853": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4469
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10854": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4440,
        4469
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "10855": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4374,
        4492
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10856": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4226,
        4602
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A8D"
    },
    "10859": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4226,
        4602
      ],
      "op": "JUMP",
      "path": "19"
    },
    "10860": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4226,
        4602
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10867": {
      "op": "SHL"
    },
    "10868": {
      "op": "SUB"
    },
    "10869": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 132
    },
    "10870": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "19"
    },
    "10871": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4578,
        4583
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10873": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10874": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10875": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10876": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4569
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "10878": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "10880": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10881": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10883": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10884": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4575
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "10885": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4583
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10886": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4583
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10887": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10889": {
      "op": "NOT"
    },
    "10890": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4583
      ],
      "op": "AND",
      "path": "19"
    },
    "10891": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4583
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10892": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4554,
        4583
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "10893": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4226,
        4602
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10900": {
      "op": "SHL"
    },
    "10901": {
      "op": "SUB"
    },
    "10902": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 133
    },
    "10903": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "AND",
      "path": "19"
    },
    "10904": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10906": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10907": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10908": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10909": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4644
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "10911": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "10913": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10914": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10915": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10916": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10918": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10919": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "DUP4",
      "path": "19"
    },
    "10920": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4648
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "10921": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4655
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10922": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4655
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10923": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10925": {
      "op": "NOT"
    },
    "10926": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4655
      ],
      "op": "AND",
      "path": "19"
    },
    "10927": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4651,
        4655
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "10929": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4655
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10930": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4655
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10931": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4655
      ],
      "op": "OR",
      "path": "19"
    },
    "10932": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4655
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10933": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4655
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "10934": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4629,
        4655
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "10935": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4722
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 134,
      "value": "0xF"
    },
    "10937": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4726
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10938": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4726
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "10939": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4726
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10940": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4726
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10941": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4726
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "10942": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4726
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "10943": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4726
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10944": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4730
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2AC8"
    },
    "10947": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4730
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "10948": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4730
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3320"
    },
    "10951": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "jump": "i",
      "offset": [
        4699,
        4730
      ],
      "op": "JUMP",
      "path": "19"
    },
    "10952": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4699,
        4730
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10959": {
      "op": "SHL"
    },
    "10960": {
      "op": "SUB"
    },
    "10961": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4696
      ],
      "op": "DUP4",
      "path": "19"
    },
    "10962": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4696
      ],
      "op": "AND",
      "path": "19"
    },
    "10963": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10965": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4696
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10966": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4696
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10967": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4696
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10968": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4692
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "10970": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "10972": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4696
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10973": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10975": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4696
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10976": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4696
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "10977": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4669,
        4730
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "10978": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "10979": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "10980": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "10981": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12484,
        12488
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10991": {
      "op": "SHL"
    },
    "10992": {
      "op": "SUB"
    },
    "10993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "AND",
      "path": "5"
    },
    "10995": {
      "op": "EXTCODESIZE"
    },
    "10996": {
      "op": "ISZERO"
    },
    "10997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BE8"
    },
    "11000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11004": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "11009": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11011": {
      "op": "SHL"
    },
    "11012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11013": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11020": {
      "op": "SHL"
    },
    "11021": {
      "op": "SUB"
    },
    "11022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "DUP6",
      "path": "5"
    },
    "11023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "AND",
      "path": "5"
    },
    "11024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x150B7A02"
    },
    "11030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B2A"
    },
    "11034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11035": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "11036": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11037": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "DUP10",
      "path": "5"
    },
    "11038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "DUP9",
      "path": "5"
    },
    "11040": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "DUP9",
      "path": "5"
    },
    "11042": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "11045": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "11046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3417"
    },
    "11049": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11050": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11053": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11056": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11057": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11058": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SUB",
      "path": "5"
    },
    "11059": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11060": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11062": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP8",
      "path": "5"
    },
    "11063": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11064": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "11065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11068": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B44"
    },
    "11071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11075": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "REVERT",
      "path": "5"
    },
    "11076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "11078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "GAS",
      "path": "5"
    },
    "11079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "CALL",
      "path": "5"
    },
    "11080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "11082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "11083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "11084": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11085": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B74"
    },
    "11089": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11090": {
      "op": "POP"
    },
    "11091": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11093": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11094": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "11097": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "11098": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11099": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11100": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "11101": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11103": {
      "op": "NOT"
    },
    "11104": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "AND",
      "path": "5"
    },
    "11105": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11106": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "11107": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11108": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11109": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11110": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B71"
    },
    "11113": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11114": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "11116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11117": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3454"
    },
    "11120": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "11124": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11125": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BCE"
    },
    "11128": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11129": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "11130": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11131": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11132": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11133": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BA2"
    },
    "11136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11137": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11140": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11141": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "5"
    },
    "11142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "11144": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "NOT",
      "path": "5"
    },
    "11145": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "11147": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "11148": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "5"
    },
    "11149": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "AND",
      "path": "5"
    },
    "11150": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "5"
    },
    "11152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11154": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11155": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "11156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "11159": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP5",
      "path": "5"
    },
    "11164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "5"
    },
    "11165": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "11166": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BA7"
    },
    "11169": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11171": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "11173": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11174": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "5"
    },
    "11175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11176": {
      "op": "POP"
    },
    "11177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BC6"
    },
    "11182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 135,
      "value": "0x40"
    },
    "11185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11192": {
      "op": "SHL"
    },
    "11193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "11197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "ADD",
      "path": "5"
    },
    "11198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F1"
    },
    "11201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33C5"
    },
    "11205": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12820,
        12880
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12992,
        12998
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11208": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12986,
        12999
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12977,
        12983
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12973,
        12975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12969,
        12984
      ],
      "op": "ADD",
      "path": "5"
    },
    "11213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12962,
        13000
      ],
      "op": "REVERT",
      "path": "5"
    },
    "11214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11221": {
      "op": "SHL"
    },
    "11222": {
      "op": "SUB"
    },
    "11223": {
      "op": "NOT"
    },
    "11224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "AND",
      "path": "5",
      "statement": 136
    },
    "11225": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "11230": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11232": {
      "op": "SHL"
    },
    "11233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "EQ",
      "path": "5"
    },
    "11234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11235": {
      "op": "POP"
    },
    "11236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C2C"
    },
    "11239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11241": {
      "op": "POP"
    },
    "11242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13091,
        13095
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 137,
      "value": "0x1"
    },
    "11244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "11245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "5"
    },
    "11247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "5"
    },
    "11248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "5"
    },
    "11249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "5"
    },
    "11250": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11251": {
      "op": "JUMPDEST"
    },
    "11252": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11254": {
      "op": "DUP2"
    },
    "11255": {
      "op": "PUSH2",
      "value": "0x2C17"
    },
    "11258": {
      "op": "JUMPI"
    },
    "11259": {
      "op": "POP"
    },
    "11260": {
      "op": "POP"
    },
    "11261": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11263": {
      "op": "DUP1"
    },
    "11264": {
      "op": "MLOAD"
    },
    "11265": {
      "op": "DUP1"
    },
    "11266": {
      "op": "DUP3"
    },
    "11267": {
      "op": "ADD"
    },
    "11268": {
      "op": "SWAP1"
    },
    "11269": {
      "op": "SWAP2"
    },
    "11270": {
      "op": "MSTORE"
    },
    "11271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11273": {
      "op": "DUP2"
    },
    "11274": {
      "op": "MSTORE"
    },
    "11275": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11277": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "11279": {
      "op": "SHL"
    },
    "11280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11282": {
      "op": "DUP3"
    },
    "11283": {
      "op": "ADD"
    },
    "11284": {
      "op": "MSTORE"
    },
    "11285": {
      "op": "SWAP1"
    },
    "11286": {
      "jump": "o",
      "op": "JUMP"
    },
    "11287": {
      "op": "JUMPDEST"
    },
    "11288": {
      "op": "DUP2"
    },
    "11289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11291": {
      "op": "JUMPDEST"
    },
    "11292": {
      "op": "DUP2"
    },
    "11293": {
      "op": "ISZERO"
    },
    "11294": {
      "op": "PUSH2",
      "value": "0x2C41"
    },
    "11297": {
      "op": "JUMPI"
    },
    "11298": {
      "op": "DUP1"
    },
    "11299": {
      "op": "PUSH2",
      "value": "0x2C2B"
    },
    "11302": {
      "op": "DUP2"
    },
    "11303": {
      "op": "PUSH2",
      "value": "0x3338"
    },
    "11306": {
      "jump": "i",
      "op": "JUMP"
    },
    "11307": {
      "op": "JUMPDEST"
    },
    "11308": {
      "op": "SWAP2"
    },
    "11309": {
      "op": "POP"
    },
    "11310": {
      "op": "PUSH2",
      "value": "0x2C3A"
    },
    "11313": {
      "op": "SWAP1"
    },
    "11314": {
      "op": "POP"
    },
    "11315": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "11317": {
      "op": "DUP4"
    },
    "11318": {
      "op": "PUSH2",
      "value": "0x3487"
    },
    "11321": {
      "jump": "i",
      "op": "JUMP"
    },
    "11322": {
      "op": "JUMPDEST"
    },
    "11323": {
      "op": "SWAP2"
    },
    "11324": {
      "op": "POP"
    },
    "11325": {
      "op": "PUSH2",
      "value": "0x2C1B"
    },
    "11328": {
      "op": "JUMP"
    },
    "11329": {
      "op": "JUMPDEST"
    },
    "11330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11332": {
      "op": "DUP2"
    },
    "11333": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11342": {
      "op": "DUP2"
    },
    "11343": {
      "op": "GT"
    },
    "11344": {
      "op": "ISZERO"
    },
    "11345": {
      "op": "PUSH2",
      "value": "0x2C5C"
    },
    "11348": {
      "op": "JUMPI"
    },
    "11349": {
      "op": "PUSH2",
      "value": "0x2C5C"
    },
    "11352": {
      "op": "PUSH2",
      "value": "0x2E82"
    },
    "11355": {
      "jump": "i",
      "op": "JUMP"
    },
    "11356": {
      "op": "JUMPDEST"
    },
    "11357": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11359": {
      "op": "MLOAD"
    },
    "11360": {
      "op": "SWAP1"
    },
    "11361": {
      "op": "DUP1"
    },
    "11362": {
      "op": "DUP3"
    },
    "11363": {
      "op": "MSTORE"
    },
    "11364": {
      "op": "DUP1"
    },
    "11365": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11367": {
      "op": "ADD"
    },
    "11368": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11370": {
      "op": "NOT"
    },
    "11371": {
      "op": "AND"
    },
    "11372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11374": {
      "op": "ADD"
    },
    "11375": {
      "op": "DUP3"
    },
    "11376": {
      "op": "ADD"
    },
    "11377": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11379": {
      "op": "MSTORE"
    },
    "11380": {
      "op": "DUP1"
    },
    "11381": {
      "op": "ISZERO"
    },
    "11382": {
      "op": "PUSH2",
      "value": "0x2C86"
    },
    "11385": {
      "op": "JUMPI"
    },
    "11386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11388": {
      "op": "DUP3"
    },
    "11389": {
      "op": "ADD"
    },
    "11390": {
      "op": "DUP2"
    },
    "11391": {
      "op": "DUP1"
    },
    "11392": {
      "op": "CALLDATASIZE"
    },
    "11393": {
      "op": "DUP4"
    },
    "11394": {
      "op": "CALLDATACOPY"
    },
    "11395": {
      "op": "ADD"
    },
    "11396": {
      "op": "SWAP1"
    },
    "11397": {
      "op": "POP"
    },
    "11398": {
      "op": "JUMPDEST"
    },
    "11399": {
      "op": "POP"
    },
    "11400": {
      "op": "SWAP1"
    },
    "11401": {
      "op": "POP"
    },
    "11402": {
      "op": "JUMPDEST"
    },
    "11403": {
      "op": "DUP5"
    },
    "11404": {
      "op": "ISZERO"
    },
    "11405": {
      "op": "PUSH2",
      "value": "0x1C2C"
    },
    "11408": {
      "op": "JUMPI"
    },
    "11409": {
      "op": "PUSH2",
      "value": "0x2C9B"
    },
    "11412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11414": {
      "op": "DUP4"
    },
    "11415": {
      "op": "PUSH2",
      "value": "0x3398"
    },
    "11418": {
      "jump": "i",
      "op": "JUMP"
    },
    "11419": {
      "op": "JUMPDEST"
    },
    "11420": {
      "op": "SWAP2"
    },
    "11421": {
      "op": "POP"
    },
    "11422": {
      "op": "PUSH2",
      "value": "0x2CA8"
    },
    "11425": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "11427": {
      "op": "DUP7"
    },
    "11428": {
      "op": "PUSH2",
      "value": "0x349B"
    },
    "11431": {
      "jump": "i",
      "op": "JUMP"
    },
    "11432": {
      "op": "JUMPDEST"
    },
    "11433": {
      "op": "PUSH2",
      "value": "0x2CB3"
    },
    "11436": {
      "op": "SWAP1"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "11439": {
      "op": "PUSH2",
      "value": "0x3320"
    },
    "11442": {
      "jump": "i",
      "op": "JUMP"
    },
    "11443": {
      "op": "JUMPDEST"
    },
    "11444": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11446": {
      "op": "SHL"
    },
    "11447": {
      "op": "DUP2"
    },
    "11448": {
      "op": "DUP4"
    },
    "11449": {
      "op": "DUP2"
    },
    "11450": {
      "op": "MLOAD"
    },
    "11451": {
      "op": "DUP2"
    },
    "11452": {
      "op": "LT"
    },
    "11453": {
      "op": "PUSH2",
      "value": "0x2CC8"
    },
    "11456": {
      "op": "JUMPI"
    },
    "11457": {
      "op": "PUSH2",
      "value": "0x2CC8"
    },
    "11460": {
      "op": "PUSH2",
      "value": "0x3353"
    },
    "11463": {
      "jump": "i",
      "op": "JUMP"
    },
    "11464": {
      "op": "JUMPDEST"
    },
    "11465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11467": {
      "op": "ADD"
    },
    "11468": {
      "op": "ADD"
    },
    "11469": {
      "op": "SWAP1"
    },
    "11470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11474": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11476": {
      "op": "SHL"
    },
    "11477": {
      "op": "SUB"
    },
    "11478": {
      "op": "NOT"
    },
    "11479": {
      "op": "AND"
    },
    "11480": {
      "op": "SWAP1"
    },
    "11481": {
      "op": "DUP2"
    },
    "11482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11484": {
      "op": "BYTE"
    },
    "11485": {
      "op": "SWAP1"
    },
    "11486": {
      "op": "MSTORE8"
    },
    "11487": {
      "op": "POP"
    },
    "11488": {
      "op": "PUSH2",
      "value": "0x2CEA"
    },
    "11491": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "11493": {
      "op": "DUP7"
    },
    "11494": {
      "op": "PUSH2",
      "value": "0x3487"
    },
    "11497": {
      "jump": "i",
      "op": "JUMP"
    },
    "11498": {
      "op": "JUMPDEST"
    },
    "11499": {
      "op": "SWAP5"
    },
    "11500": {
      "op": "POP"
    },
    "11501": {
      "op": "PUSH2",
      "value": "0x2C8A"
    },
    "11504": {
      "op": "JUMP"
    },
    "11505": {
      "op": "JUMPDEST"
    },
    "11506": {
      "op": "DUP3"
    },
    "11507": {
      "op": "DUP1"
    },
    "11508": {
      "op": "SLOAD"
    },
    "11509": {
      "op": "PUSH2",
      "value": "0x2CFD"
    },
    "11512": {
      "op": "SWAP1"
    },
    "11513": {
      "op": "PUSH2",
      "value": "0x3213"
    },
    "11516": {
      "jump": "i",
      "op": "JUMP"
    },
    "11517": {
      "op": "JUMPDEST"
    },
    "11518": {
      "op": "SWAP1"
    },
    "11519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11521": {
      "op": "MSTORE"
    },
    "11522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11526": {
      "op": "KECCAK256"
    },
    "11527": {
      "op": "SWAP1"
    },
    "11528": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11530": {
      "op": "ADD"
    },
    "11531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11533": {
      "op": "SWAP1"
    },
    "11534": {
      "op": "DIV"
    },
    "11535": {
      "op": "DUP2"
    },
    "11536": {
      "op": "ADD"
    },
    "11537": {
      "op": "SWAP3"
    },
    "11538": {
      "op": "DUP3"
    },
    "11539": {
      "op": "PUSH2",
      "value": "0x2D1F"
    },
    "11542": {
      "op": "JUMPI"
    },
    "11543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11545": {
      "op": "DUP6"
    },
    "11546": {
      "op": "SSTORE"
    },
    "11547": {
      "op": "PUSH2",
      "value": "0x2D65"
    },
    "11550": {
      "op": "JUMP"
    },
    "11551": {
      "op": "JUMPDEST"
    },
    "11552": {
      "op": "DUP3"
    },
    "11553": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11555": {
      "op": "LT"
    },
    "11556": {
      "op": "PUSH2",
      "value": "0x2D38"
    },
    "11559": {
      "op": "JUMPI"
    },
    "11560": {
      "op": "DUP1"
    },
    "11561": {
      "op": "MLOAD"
    },
    "11562": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11564": {
      "op": "NOT"
    },
    "11565": {
      "op": "AND"
    },
    "11566": {
      "op": "DUP4"
    },
    "11567": {
      "op": "DUP1"
    },
    "11568": {
      "op": "ADD"
    },
    "11569": {
      "op": "OR"
    },
    "11570": {
      "op": "DUP6"
    },
    "11571": {
      "op": "SSTORE"
    },
    "11572": {
      "op": "PUSH2",
      "value": "0x2D65"
    },
    "11575": {
      "op": "JUMP"
    },
    "11576": {
      "op": "JUMPDEST"
    },
    "11577": {
      "op": "DUP3"
    },
    "11578": {
      "op": "DUP1"
    },
    "11579": {
      "op": "ADD"
    },
    "11580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11582": {
      "op": "ADD"
    },
    "11583": {
      "op": "DUP6"
    },
    "11584": {
      "op": "SSTORE"
    },
    "11585": {
      "op": "DUP3"
    },
    "11586": {
      "op": "ISZERO"
    },
    "11587": {
      "op": "PUSH2",
      "value": "0x2D65"
    },
    "11590": {
      "op": "JUMPI"
    },
    "11591": {
      "op": "SWAP2"
    },
    "11592": {
      "op": "DUP3"
    },
    "11593": {
      "op": "ADD"
    },
    "11594": {
      "op": "JUMPDEST"
    },
    "11595": {
      "op": "DUP3"
    },
    "11596": {
      "op": "DUP2"
    },
    "11597": {
      "op": "GT"
    },
    "11598": {
      "op": "ISZERO"
    },
    "11599": {
      "op": "PUSH2",
      "value": "0x2D65"
    },
    "11602": {
      "op": "JUMPI"
    },
    "11603": {
      "op": "DUP3"
    },
    "11604": {
      "op": "MLOAD"
    },
    "11605": {
      "op": "DUP3"
    },
    "11606": {
      "op": "SSTORE"
    },
    "11607": {
      "op": "SWAP2"
    },
    "11608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11610": {
      "op": "ADD"
    },
    "11611": {
      "op": "SWAP2"
    },
    "11612": {
      "op": "SWAP1"
    },
    "11613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11615": {
      "op": "ADD"
    },
    "11616": {
      "op": "SWAP1"
    },
    "11617": {
      "op": "PUSH2",
      "value": "0x2D4A"
    },
    "11620": {
      "op": "JUMP"
    },
    "11621": {
      "op": "JUMPDEST"
    },
    "11622": {
      "op": "POP"
    },
    "11623": {
      "op": "PUSH2",
      "value": "0x2D71"
    },
    "11626": {
      "op": "SWAP3"
    },
    "11627": {
      "op": "SWAP2"
    },
    "11628": {
      "op": "POP"
    },
    "11629": {
      "op": "PUSH2",
      "value": "0x2D75"
    },
    "11632": {
      "jump": "i",
      "op": "JUMP"
    },
    "11633": {
      "op": "JUMPDEST"
    },
    "11634": {
      "op": "POP"
    },
    "11635": {
      "op": "SWAP1"
    },
    "11636": {
      "jump": "o",
      "op": "JUMP"
    },
    "11637": {
      "op": "JUMPDEST"
    },
    "11638": {
      "op": "JUMPDEST"
    },
    "11639": {
      "op": "DUP1"
    },
    "11640": {
      "op": "DUP3"
    },
    "11641": {
      "op": "GT"
    },
    "11642": {
      "op": "ISZERO"
    },
    "11643": {
      "op": "PUSH2",
      "value": "0x2D71"
    },
    "11646": {
      "op": "JUMPI"
    },
    "11647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11649": {
      "op": "DUP2"
    },
    "11650": {
      "op": "SSTORE"
    },
    "11651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11653": {
      "op": "ADD"
    },
    "11654": {
      "op": "PUSH2",
      "value": "0x2D76"
    },
    "11657": {
      "op": "JUMP"
    },
    "11658": {
      "op": "JUMPDEST"
    },
    "11659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11663": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11665": {
      "op": "SHL"
    },
    "11666": {
      "op": "SUB"
    },
    "11667": {
      "op": "NOT"
    },
    "11668": {
      "op": "DUP2"
    },
    "11669": {
      "op": "AND"
    },
    "11670": {
      "op": "DUP2"
    },
    "11671": {
      "op": "EQ"
    },
    "11672": {
      "op": "PUSH2",
      "value": "0x1AFE"
    },
    "11675": {
      "op": "JUMPI"
    },
    "11676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11678": {
      "op": "DUP1"
    },
    "11679": {
      "op": "REVERT"
    },
    "11680": {
      "op": "JUMPDEST"
    },
    "11681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11685": {
      "op": "DUP3"
    },
    "11686": {
      "op": "DUP5"
    },
    "11687": {
      "op": "SUB"
    },
    "11688": {
      "op": "SLT"
    },
    "11689": {
      "op": "ISZERO"
    },
    "11690": {
      "op": "PUSH2",
      "value": "0x2DB2"
    },
    "11693": {
      "op": "JUMPI"
    },
    "11694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11696": {
      "op": "DUP1"
    },
    "11697": {
      "op": "REVERT"
    },
    "11698": {
      "op": "JUMPDEST"
    },
    "11699": {
      "op": "DUP2"
    },
    "11700": {
      "op": "CALLDATALOAD"
    },
    "11701": {
      "op": "PUSH2",
      "value": "0x2966"
    },
    "11704": {
      "op": "DUP2"
    },
    "11705": {
      "op": "PUSH2",
      "value": "0x2D8A"
    },
    "11708": {
      "jump": "i",
      "op": "JUMP"
    },
    "11709": {
      "op": "JUMPDEST"
    },
    "11710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11712": {
      "op": "JUMPDEST"
    },
    "11713": {
      "op": "DUP4"
    },
    "11714": {
      "op": "DUP2"
    },
    "11715": {
      "op": "LT"
    },
    "11716": {
      "op": "ISZERO"
    },
    "11717": {
      "op": "PUSH2",
      "value": "0x2DD8"
    },
    "11720": {
      "op": "JUMPI"
    },
    "11721": {
      "op": "DUP2"
    },
    "11722": {
      "op": "DUP2"
    },
    "11723": {
      "op": "ADD"
    },
    "11724": {
      "op": "MLOAD"
    },
    "11725": {
      "op": "DUP4"
    },
    "11726": {
      "op": "DUP3"
    },
    "11727": {
      "op": "ADD"
    },
    "11728": {
      "op": "MSTORE"
    },
    "11729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11731": {
      "op": "ADD"
    },
    "11732": {
      "op": "PUSH2",
      "value": "0x2DC0"
    },
    "11735": {
      "op": "JUMP"
    },
    "11736": {
      "op": "JUMPDEST"
    },
    "11737": {
      "op": "DUP4"
    },
    "11738": {
      "op": "DUP2"
    },
    "11739": {
      "op": "GT"
    },
    "11740": {
      "op": "ISZERO"
    },
    "11741": {
      "op": "PUSH2",
      "value": "0x19B2"
    },
    "11744": {
      "op": "JUMPI"
    },
    "11745": {
      "op": "POP"
    },
    "11746": {
      "op": "POP"
    },
    "11747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11749": {
      "op": "SWAP2"
    },
    "11750": {
      "op": "ADD"
    },
    "11751": {
      "op": "MSTORE"
    },
    "11752": {
      "jump": "o",
      "op": "JUMP"
    },
    "11753": {
      "op": "JUMPDEST"
    },
    "11754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11756": {
      "op": "DUP2"
    },
    "11757": {
      "op": "MLOAD"
    },
    "11758": {
      "op": "DUP1"
    },
    "11759": {
      "op": "DUP5"
    },
    "11760": {
      "op": "MSTORE"
    },
    "11761": {
      "op": "PUSH2",
      "value": "0x2E01"
    },
    "11764": {
      "op": "DUP2"
    },
    "11765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11767": {
      "op": "DUP7"
    },
    "11768": {
      "op": "ADD"
    },
    "11769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11771": {
      "op": "DUP7"
    },
    "11772": {
      "op": "ADD"
    },
    "11773": {
      "op": "PUSH2",
      "value": "0x2DBD"
    },
    "11776": {
      "jump": "i",
      "op": "JUMP"
    },
    "11777": {
      "op": "JUMPDEST"
    },
    "11778": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11780": {
      "op": "ADD"
    },
    "11781": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11783": {
      "op": "NOT"
    },
    "11784": {
      "op": "AND"
    },
    "11785": {
      "op": "SWAP3"
    },
    "11786": {
      "op": "SWAP1"
    },
    "11787": {
      "op": "SWAP3"
    },
    "11788": {
      "op": "ADD"
    },
    "11789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11791": {
      "op": "ADD"
    },
    "11792": {
      "op": "SWAP3"
    },
    "11793": {
      "op": "SWAP2"
    },
    "11794": {
      "op": "POP"
    },
    "11795": {
      "op": "POP"
    },
    "11796": {
      "jump": "o",
      "op": "JUMP"
    },
    "11797": {
      "op": "JUMPDEST"
    },
    "11798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11800": {
      "op": "DUP2"
    },
    "11801": {
      "op": "MSTORE"
    },
    "11802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11804": {
      "op": "PUSH2",
      "value": "0x2966"
    },
    "11807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11809": {
      "op": "DUP4"
    },
    "11810": {
      "op": "ADD"
    },
    "11811": {
      "op": "DUP5"
    },
    "11812": {
      "op": "PUSH2",
      "value": "0x2DE9"
    },
    "11815": {
      "jump": "i",
      "op": "JUMP"
    },
    "11816": {
      "op": "JUMPDEST"
    },
    "11817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11821": {
      "op": "DUP3"
    },
    "11822": {
      "op": "DUP5"
    },
    "11823": {
      "op": "SUB"
    },
    "11824": {
      "op": "SLT"
    },
    "11825": {
      "op": "ISZERO"
    },
    "11826": {
      "op": "PUSH2",
      "value": "0x2E3A"
    },
    "11829": {
      "op": "JUMPI"
    },
    "11830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11832": {
      "op": "DUP1"
    },
    "11833": {
      "op": "REVERT"
    },
    "11834": {
      "op": "JUMPDEST"
    },
    "11835": {
      "op": "POP"
    },
    "11836": {
      "op": "CALLDATALOAD"
    },
    "11837": {
      "op": "SWAP2"
    },
    "11838": {
      "op": "SWAP1"
    },
    "11839": {
      "op": "POP"
    },
    "11840": {
      "jump": "o",
      "op": "JUMP"
    },
    "11841": {
      "op": "JUMPDEST"
    },
    "11842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11848": {
      "op": "SHL"
    },
    "11849": {
      "op": "SUB"
    },
    "11850": {
      "op": "DUP2"
    },
    "11851": {
      "op": "AND"
    },
    "11852": {
      "op": "DUP2"
    },
    "11853": {
      "op": "EQ"
    },
    "11854": {
      "op": "PUSH2",
      "value": "0x1AFE"
    },
    "11857": {
      "op": "JUMPI"
    },
    "11858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11860": {
      "op": "DUP1"
    },
    "11861": {
      "op": "REVERT"
    },
    "11862": {
      "op": "JUMPDEST"
    },
    "11863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11865": {
      "op": "DUP1"
    },
    "11866": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11868": {
      "op": "DUP4"
    },
    "11869": {
      "op": "DUP6"
    },
    "11870": {
      "op": "SUB"
    },
    "11871": {
      "op": "SLT"
    },
    "11872": {
      "op": "ISZERO"
    },
    "11873": {
      "op": "PUSH2",
      "value": "0x2E69"
    },
    "11876": {
      "op": "JUMPI"
    },
    "11877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11879": {
      "op": "DUP1"
    },
    "11880": {
      "op": "REVERT"
    },
    "11881": {
      "op": "JUMPDEST"
    },
    "11882": {
      "op": "DUP3"
    },
    "11883": {
      "op": "CALLDATALOAD"
    },
    "11884": {
      "op": "PUSH2",
      "value": "0x2E74"
    },
    "11887": {
      "op": "DUP2"
    },
    "11888": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "11891": {
      "jump": "i",
      "op": "JUMP"
    },
    "11892": {
      "op": "JUMPDEST"
    },
    "11893": {
      "op": "SWAP5"
    },
    "11894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11896": {
      "op": "SWAP4"
    },
    "11897": {
      "op": "SWAP1"
    },
    "11898": {
      "op": "SWAP4"
    },
    "11899": {
      "op": "ADD"
    },
    "11900": {
      "op": "CALLDATALOAD"
    },
    "11901": {
      "op": "SWAP4"
    },
    "11902": {
      "op": "POP"
    },
    "11903": {
      "op": "POP"
    },
    "11904": {
      "op": "POP"
    },
    "11905": {
      "jump": "o",
      "op": "JUMP"
    },
    "11906": {
      "op": "JUMPDEST"
    },
    "11907": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11912": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11914": {
      "op": "SHL"
    },
    "11915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11917": {
      "op": "MSTORE"
    },
    "11918": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "11920": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11922": {
      "op": "MSTORE"
    },
    "11923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11927": {
      "op": "REVERT"
    },
    "11928": {
      "op": "JUMPDEST"
    },
    "11929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11931": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11940": {
      "op": "DUP1"
    },
    "11941": {
      "op": "DUP5"
    },
    "11942": {
      "op": "GT"
    },
    "11943": {
      "op": "ISZERO"
    },
    "11944": {
      "op": "PUSH2",
      "value": "0x2EB3"
    },
    "11947": {
      "op": "JUMPI"
    },
    "11948": {
      "op": "PUSH2",
      "value": "0x2EB3"
    },
    "11951": {
      "op": "PUSH2",
      "value": "0x2E82"
    },
    "11954": {
      "jump": "i",
      "op": "JUMP"
    },
    "11955": {
      "op": "JUMPDEST"
    },
    "11956": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11958": {
      "op": "MLOAD"
    },
    "11959": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11961": {
      "op": "DUP6"
    },
    "11962": {
      "op": "ADD"
    },
    "11963": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11965": {
      "op": "NOT"
    },
    "11966": {
      "op": "SWAP1"
    },
    "11967": {
      "op": "DUP2"
    },
    "11968": {
      "op": "AND"
    },
    "11969": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "11971": {
      "op": "ADD"
    },
    "11972": {
      "op": "AND"
    },
    "11973": {
      "op": "DUP2"
    },
    "11974": {
      "op": "ADD"
    },
    "11975": {
      "op": "SWAP1"
    },
    "11976": {
      "op": "DUP3"
    },
    "11977": {
      "op": "DUP3"
    },
    "11978": {
      "op": "GT"
    },
    "11979": {
      "op": "DUP2"
    },
    "11980": {
      "op": "DUP4"
    },
    "11981": {
      "op": "LT"
    },
    "11982": {
      "op": "OR"
    },
    "11983": {
      "op": "ISZERO"
    },
    "11984": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "11987": {
      "op": "JUMPI"
    },
    "11988": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "11991": {
      "op": "PUSH2",
      "value": "0x2E82"
    },
    "11994": {
      "jump": "i",
      "op": "JUMP"
    },
    "11995": {
      "op": "JUMPDEST"
    },
    "11996": {
      "op": "DUP2"
    },
    "11997": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11999": {
      "op": "MSTORE"
    },
    "12000": {
      "op": "DUP1"
    },
    "12001": {
      "op": "SWAP4"
    },
    "12002": {
      "op": "POP"
    },
    "12003": {
      "op": "DUP6"
    },
    "12004": {
      "op": "DUP2"
    },
    "12005": {
      "op": "MSTORE"
    },
    "12006": {
      "op": "DUP7"
    },
    "12007": {
      "op": "DUP7"
    },
    "12008": {
      "op": "DUP7"
    },
    "12009": {
      "op": "ADD"
    },
    "12010": {
      "op": "GT"
    },
    "12011": {
      "op": "ISZERO"
    },
    "12012": {
      "op": "PUSH2",
      "value": "0x2EF4"
    },
    "12015": {
      "op": "JUMPI"
    },
    "12016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12018": {
      "op": "DUP1"
    },
    "12019": {
      "op": "REVERT"
    },
    "12020": {
      "op": "JUMPDEST"
    },
    "12021": {
      "op": "DUP6"
    },
    "12022": {
      "op": "DUP6"
    },
    "12023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12025": {
      "op": "DUP4"
    },
    "12026": {
      "op": "ADD"
    },
    "12027": {
      "op": "CALLDATACOPY"
    },
    "12028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12032": {
      "op": "DUP8"
    },
    "12033": {
      "op": "DUP4"
    },
    "12034": {
      "op": "ADD"
    },
    "12035": {
      "op": "ADD"
    },
    "12036": {
      "op": "MSTORE"
    },
    "12037": {
      "op": "POP"
    },
    "12038": {
      "op": "POP"
    },
    "12039": {
      "op": "POP"
    },
    "12040": {
      "op": "SWAP4"
    },
    "12041": {
      "op": "SWAP3"
    },
    "12042": {
      "op": "POP"
    },
    "12043": {
      "op": "POP"
    },
    "12044": {
      "op": "POP"
    },
    "12045": {
      "jump": "o",
      "op": "JUMP"
    },
    "12046": {
      "op": "JUMPDEST"
    },
    "12047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12049": {
      "op": "DUP3"
    },
    "12050": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12052": {
      "op": "DUP4"
    },
    "12053": {
      "op": "ADD"
    },
    "12054": {
      "op": "SLT"
    },
    "12055": {
      "op": "PUSH2",
      "value": "0x2F1F"
    },
    "12058": {
      "op": "JUMPI"
    },
    "12059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12061": {
      "op": "DUP1"
    },
    "12062": {
      "op": "REVERT"
    },
    "12063": {
      "op": "JUMPDEST"
    },
    "12064": {
      "op": "PUSH2",
      "value": "0x2966"
    },
    "12067": {
      "op": "DUP4"
    },
    "12068": {
      "op": "DUP4"
    },
    "12069": {
      "op": "CALLDATALOAD"
    },
    "12070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12072": {
      "op": "DUP6"
    },
    "12073": {
      "op": "ADD"
    },
    "12074": {
      "op": "PUSH2",
      "value": "0x2E98"
    },
    "12077": {
      "jump": "i",
      "op": "JUMP"
    },
    "12078": {
      "op": "JUMPDEST"
    },
    "12079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12081": {
      "op": "DUP1"
    },
    "12082": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12084": {
      "op": "DUP4"
    },
    "12085": {
      "op": "DUP6"
    },
    "12086": {
      "op": "SUB"
    },
    "12087": {
      "op": "SLT"
    },
    "12088": {
      "op": "ISZERO"
    },
    "12089": {
      "op": "PUSH2",
      "value": "0x2F41"
    },
    "12092": {
      "op": "JUMPI"
    },
    "12093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12095": {
      "op": "DUP1"
    },
    "12096": {
      "op": "REVERT"
    },
    "12097": {
      "op": "JUMPDEST"
    },
    "12098": {
      "op": "DUP3"
    },
    "12099": {
      "op": "CALLDATALOAD"
    },
    "12100": {
      "op": "SWAP2"
    },
    "12101": {
      "op": "POP"
    },
    "12102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12104": {
      "op": "DUP4"
    },
    "12105": {
      "op": "ADD"
    },
    "12106": {
      "op": "CALLDATALOAD"
    },
    "12107": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12116": {
      "op": "DUP2"
    },
    "12117": {
      "op": "GT"
    },
    "12118": {
      "op": "ISZERO"
    },
    "12119": {
      "op": "PUSH2",
      "value": "0x2F5F"
    },
    "12122": {
      "op": "JUMPI"
    },
    "12123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12125": {
      "op": "DUP1"
    },
    "12126": {
      "op": "REVERT"
    },
    "12127": {
      "op": "JUMPDEST"
    },
    "12128": {
      "op": "PUSH2",
      "value": "0x2F6B"
    },
    "12131": {
      "op": "DUP6"
    },
    "12132": {
      "op": "DUP3"
    },
    "12133": {
      "op": "DUP7"
    },
    "12134": {
      "op": "ADD"
    },
    "12135": {
      "op": "PUSH2",
      "value": "0x2F0E"
    },
    "12138": {
      "jump": "i",
      "op": "JUMP"
    },
    "12139": {
      "op": "JUMPDEST"
    },
    "12140": {
      "op": "SWAP2"
    },
    "12141": {
      "op": "POP"
    },
    "12142": {
      "op": "POP"
    },
    "12143": {
      "op": "SWAP3"
    },
    "12144": {
      "op": "POP"
    },
    "12145": {
      "op": "SWAP3"
    },
    "12146": {
      "op": "SWAP1"
    },
    "12147": {
      "op": "POP"
    },
    "12148": {
      "jump": "o",
      "op": "JUMP"
    },
    "12149": {
      "op": "JUMPDEST"
    },
    "12150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12152": {
      "op": "DUP1"
    },
    "12153": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12155": {
      "op": "DUP4"
    },
    "12156": {
      "op": "DUP6"
    },
    "12157": {
      "op": "SUB"
    },
    "12158": {
      "op": "SLT"
    },
    "12159": {
      "op": "ISZERO"
    },
    "12160": {
      "op": "PUSH2",
      "value": "0x2F88"
    },
    "12163": {
      "op": "JUMPI"
    },
    "12164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12166": {
      "op": "DUP1"
    },
    "12167": {
      "op": "REVERT"
    },
    "12168": {
      "op": "JUMPDEST"
    },
    "12169": {
      "op": "POP"
    },
    "12170": {
      "op": "POP"
    },
    "12171": {
      "op": "DUP1"
    },
    "12172": {
      "op": "CALLDATALOAD"
    },
    "12173": {
      "op": "SWAP3"
    },
    "12174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12176": {
      "op": "SWAP1"
    },
    "12177": {
      "op": "SWAP2"
    },
    "12178": {
      "op": "ADD"
    },
    "12179": {
      "op": "CALLDATALOAD"
    },
    "12180": {
      "op": "SWAP2"
    },
    "12181": {
      "op": "POP"
    },
    "12182": {
      "jump": "o",
      "op": "JUMP"
    },
    "12183": {
      "op": "JUMPDEST"
    },
    "12184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12186": {
      "op": "DUP1"
    },
    "12187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12189": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12191": {
      "op": "DUP5"
    },
    "12192": {
      "op": "DUP7"
    },
    "12193": {
      "op": "SUB"
    },
    "12194": {
      "op": "SLT"
    },
    "12195": {
      "op": "ISZERO"
    },
    "12196": {
      "op": "PUSH2",
      "value": "0x2FAC"
    },
    "12199": {
      "op": "JUMPI"
    },
    "12200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12202": {
      "op": "DUP1"
    },
    "12203": {
      "op": "REVERT"
    },
    "12204": {
      "op": "JUMPDEST"
    },
    "12205": {
      "op": "DUP4"
    },
    "12206": {
      "op": "CALLDATALOAD"
    },
    "12207": {
      "op": "PUSH2",
      "value": "0x2FB7"
    },
    "12210": {
      "op": "DUP2"
    },
    "12211": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "12214": {
      "jump": "i",
      "op": "JUMP"
    },
    "12215": {
      "op": "JUMPDEST"
    },
    "12216": {
      "op": "SWAP3"
    },
    "12217": {
      "op": "POP"
    },
    "12218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12220": {
      "op": "DUP5"
    },
    "12221": {
      "op": "ADD"
    },
    "12222": {
      "op": "CALLDATALOAD"
    },
    "12223": {
      "op": "PUSH2",
      "value": "0x2FC7"
    },
    "12226": {
      "op": "DUP2"
    },
    "12227": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "12230": {
      "jump": "i",
      "op": "JUMP"
    },
    "12231": {
      "op": "JUMPDEST"
    },
    "12232": {
      "op": "SWAP3"
    },
    "12233": {
      "op": "SWAP6"
    },
    "12234": {
      "op": "SWAP3"
    },
    "12235": {
      "op": "SWAP5"
    },
    "12236": {
      "op": "POP"
    },
    "12237": {
      "op": "POP"
    },
    "12238": {
      "op": "POP"
    },
    "12239": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12241": {
      "op": "SWAP2"
    },
    "12242": {
      "op": "SWAP1"
    },
    "12243": {
      "op": "SWAP2"
    },
    "12244": {
      "op": "ADD"
    },
    "12245": {
      "op": "CALLDATALOAD"
    },
    "12246": {
      "op": "SWAP1"
    },
    "12247": {
      "jump": "o",
      "op": "JUMP"
    },
    "12248": {
      "op": "JUMPDEST"
    },
    "12249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12253": {
      "op": "DUP3"
    },
    "12254": {
      "op": "DUP5"
    },
    "12255": {
      "op": "SUB"
    },
    "12256": {
      "op": "SLT"
    },
    "12257": {
      "op": "ISZERO"
    },
    "12258": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "12261": {
      "op": "JUMPI"
    },
    "12262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12264": {
      "op": "DUP1"
    },
    "12265": {
      "op": "REVERT"
    },
    "12266": {
      "op": "JUMPDEST"
    },
    "12267": {
      "op": "DUP2"
    },
    "12268": {
      "op": "CALLDATALOAD"
    },
    "12269": {
      "op": "PUSH2",
      "value": "0x2966"
    },
    "12272": {
      "op": "DUP2"
    },
    "12273": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "12276": {
      "jump": "i",
      "op": "JUMP"
    },
    "12277": {
      "op": "JUMPDEST"
    },
    "12278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12282": {
      "op": "DUP1"
    },
    "12283": {
      "op": "DUP4"
    },
    "12284": {
      "op": "ADD"
    },
    "12285": {
      "op": "DUP2"
    },
    "12286": {
      "op": "DUP5"
    },
    "12287": {
      "op": "MSTORE"
    },
    "12288": {
      "op": "DUP1"
    },
    "12289": {
      "op": "DUP6"
    },
    "12290": {
      "op": "MLOAD"
    },
    "12291": {
      "op": "DUP1"
    },
    "12292": {
      "op": "DUP4"
    },
    "12293": {
      "op": "MSTORE"
    },
    "12294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12296": {
      "op": "DUP7"
    },
    "12297": {
      "op": "ADD"
    },
    "12298": {
      "op": "SWAP2"
    },
    "12299": {
      "op": "POP"
    },
    "12300": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12302": {
      "op": "DUP2"
    },
    "12303": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12305": {
      "op": "SHL"
    },
    "12306": {
      "op": "DUP8"
    },
    "12307": {
      "op": "ADD"
    },
    "12308": {
      "op": "ADD"
    },
    "12309": {
      "op": "SWAP3"
    },
    "12310": {
      "op": "POP"
    },
    "12311": {
      "op": "DUP4"
    },
    "12312": {
      "op": "DUP8"
    },
    "12313": {
      "op": "ADD"
    },
    "12314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12316": {
      "op": "JUMPDEST"
    },
    "12317": {
      "op": "DUP3"
    },
    "12318": {
      "op": "DUP2"
    },
    "12319": {
      "op": "LT"
    },
    "12320": {
      "op": "ISZERO"
    },
    "12321": {
      "op": "PUSH2",
      "value": "0x304A"
    },
    "12324": {
      "op": "JUMPI"
    },
    "12325": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12327": {
      "op": "NOT"
    },
    "12328": {
      "op": "DUP9"
    },
    "12329": {
      "op": "DUP7"
    },
    "12330": {
      "op": "SUB"
    },
    "12331": {
      "op": "ADD"
    },
    "12332": {
      "op": "DUP5"
    },
    "12333": {
      "op": "MSTORE"
    },
    "12334": {
      "op": "PUSH2",
      "value": "0x3038"
    },
    "12337": {
      "op": "DUP6"
    },
    "12338": {
      "op": "DUP4"
    },
    "12339": {
      "op": "MLOAD"
    },
    "12340": {
      "op": "PUSH2",
      "value": "0x2DE9"
    },
    "12343": {
      "jump": "i",
      "op": "JUMP"
    },
    "12344": {
      "op": "JUMPDEST"
    },
    "12345": {
      "op": "SWAP5"
    },
    "12346": {
      "op": "POP"
    },
    "12347": {
      "op": "SWAP3"
    },
    "12348": {
      "op": "DUP6"
    },
    "12349": {
      "op": "ADD"
    },
    "12350": {
      "op": "SWAP3"
    },
    "12351": {
      "op": "SWAP1"
    },
    "12352": {
      "op": "DUP6"
    },
    "12353": {
      "op": "ADD"
    },
    "12354": {
      "op": "SWAP1"
    },
    "12355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12357": {
      "op": "ADD"
    },
    "12358": {
      "op": "PUSH2",
      "value": "0x301C"
    },
    "12361": {
      "op": "JUMP"
    },
    "12362": {
      "op": "JUMPDEST"
    },
    "12363": {
      "op": "POP"
    },
    "12364": {
      "op": "SWAP3"
    },
    "12365": {
      "op": "SWAP8"
    },
    "12366": {
      "op": "SWAP7"
    },
    "12367": {
      "op": "POP"
    },
    "12368": {
      "op": "POP"
    },
    "12369": {
      "op": "POP"
    },
    "12370": {
      "op": "POP"
    },
    "12371": {
      "op": "POP"
    },
    "12372": {
      "op": "POP"
    },
    "12373": {
      "op": "POP"
    },
    "12374": {
      "jump": "o",
      "op": "JUMP"
    },
    "12375": {
      "op": "JUMPDEST"
    },
    "12376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12380": {
      "op": "DUP3"
    },
    "12381": {
      "op": "DUP5"
    },
    "12382": {
      "op": "SUB"
    },
    "12383": {
      "op": "SLT"
    },
    "12384": {
      "op": "ISZERO"
    },
    "12385": {
      "op": "PUSH2",
      "value": "0x3069"
    },
    "12388": {
      "op": "JUMPI"
    },
    "12389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12391": {
      "op": "DUP1"
    },
    "12392": {
      "op": "REVERT"
    },
    "12393": {
      "op": "JUMPDEST"
    },
    "12394": {
      "op": "DUP2"
    },
    "12395": {
      "op": "CALLDATALOAD"
    },
    "12396": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12405": {
      "op": "DUP2"
    },
    "12406": {
      "op": "GT"
    },
    "12407": {
      "op": "ISZERO"
    },
    "12408": {
      "op": "PUSH2",
      "value": "0x3080"
    },
    "12411": {
      "op": "JUMPI"
    },
    "12412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12414": {
      "op": "DUP1"
    },
    "12415": {
      "op": "REVERT"
    },
    "12416": {
      "op": "JUMPDEST"
    },
    "12417": {
      "op": "PUSH2",
      "value": "0x1C2C"
    },
    "12420": {
      "op": "DUP5"
    },
    "12421": {
      "op": "DUP3"
    },
    "12422": {
      "op": "DUP6"
    },
    "12423": {
      "op": "ADD"
    },
    "12424": {
      "op": "PUSH2",
      "value": "0x2F0E"
    },
    "12427": {
      "jump": "i",
      "op": "JUMP"
    },
    "12428": {
      "op": "JUMPDEST"
    },
    "12429": {
      "op": "DUP1"
    },
    "12430": {
      "op": "ISZERO"
    },
    "12431": {
      "op": "ISZERO"
    },
    "12432": {
      "op": "DUP2"
    },
    "12433": {
      "op": "EQ"
    },
    "12434": {
      "op": "PUSH2",
      "value": "0x1AFE"
    },
    "12437": {
      "op": "JUMPI"
    },
    "12438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12440": {
      "op": "DUP1"
    },
    "12441": {
      "op": "REVERT"
    },
    "12442": {
      "op": "JUMPDEST"
    },
    "12443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12445": {
      "op": "DUP1"
    },
    "12446": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12448": {
      "op": "DUP4"
    },
    "12449": {
      "op": "DUP6"
    },
    "12450": {
      "op": "SUB"
    },
    "12451": {
      "op": "SLT"
    },
    "12452": {
      "op": "ISZERO"
    },
    "12453": {
      "op": "PUSH2",
      "value": "0x30AD"
    },
    "12456": {
      "op": "JUMPI"
    },
    "12457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12459": {
      "op": "DUP1"
    },
    "12460": {
      "op": "REVERT"
    },
    "12461": {
      "op": "JUMPDEST"
    },
    "12462": {
      "op": "DUP3"
    },
    "12463": {
      "op": "CALLDATALOAD"
    },
    "12464": {
      "op": "PUSH2",
      "value": "0x30B8"
    },
    "12467": {
      "op": "DUP2"
    },
    "12468": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "12471": {
      "jump": "i",
      "op": "JUMP"
    },
    "12472": {
      "op": "JUMPDEST"
    },
    "12473": {
      "op": "SWAP2"
    },
    "12474": {
      "op": "POP"
    },
    "12475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12477": {
      "op": "DUP4"
    },
    "12478": {
      "op": "ADD"
    },
    "12479": {
      "op": "CALLDATALOAD"
    },
    "12480": {
      "op": "PUSH2",
      "value": "0x30C8"
    },
    "12483": {
      "op": "DUP2"
    },
    "12484": {
      "op": "PUSH2",
      "value": "0x308C"
    },
    "12487": {
      "jump": "i",
      "op": "JUMP"
    },
    "12488": {
      "op": "JUMPDEST"
    },
    "12489": {
      "op": "DUP1"
    },
    "12490": {
      "op": "SWAP2"
    },
    "12491": {
      "op": "POP"
    },
    "12492": {
      "op": "POP"
    },
    "12493": {
      "op": "SWAP3"
    },
    "12494": {
      "op": "POP"
    },
    "12495": {
      "op": "SWAP3"
    },
    "12496": {
      "op": "SWAP1"
    },
    "12497": {
      "op": "POP"
    },
    "12498": {
      "jump": "o",
      "op": "JUMP"
    },
    "12499": {
      "op": "JUMPDEST"
    },
    "12500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12502": {
      "op": "DUP1"
    },
    "12503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12505": {
      "op": "DUP1"
    },
    "12506": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12508": {
      "op": "DUP6"
    },
    "12509": {
      "op": "DUP8"
    },
    "12510": {
      "op": "SUB"
    },
    "12511": {
      "op": "SLT"
    },
    "12512": {
      "op": "ISZERO"
    },
    "12513": {
      "op": "PUSH2",
      "value": "0x30E9"
    },
    "12516": {
      "op": "JUMPI"
    },
    "12517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12519": {
      "op": "DUP1"
    },
    "12520": {
      "op": "REVERT"
    },
    "12521": {
      "op": "JUMPDEST"
    },
    "12522": {
      "op": "DUP5"
    },
    "12523": {
      "op": "CALLDATALOAD"
    },
    "12524": {
      "op": "PUSH2",
      "value": "0x30F4"
    },
    "12527": {
      "op": "DUP2"
    },
    "12528": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "12531": {
      "jump": "i",
      "op": "JUMP"
    },
    "12532": {
      "op": "JUMPDEST"
    },
    "12533": {
      "op": "SWAP4"
    },
    "12534": {
      "op": "POP"
    },
    "12535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12537": {
      "op": "DUP6"
    },
    "12538": {
      "op": "ADD"
    },
    "12539": {
      "op": "CALLDATALOAD"
    },
    "12540": {
      "op": "PUSH2",
      "value": "0x3104"
    },
    "12543": {
      "op": "DUP2"
    },
    "12544": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "12547": {
      "jump": "i",
      "op": "JUMP"
    },
    "12548": {
      "op": "JUMPDEST"
    },
    "12549": {
      "op": "SWAP3"
    },
    "12550": {
      "op": "POP"
    },
    "12551": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12553": {
      "op": "DUP6"
    },
    "12554": {
      "op": "ADD"
    },
    "12555": {
      "op": "CALLDATALOAD"
    },
    "12556": {
      "op": "SWAP2"
    },
    "12557": {
      "op": "POP"
    },
    "12558": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12560": {
      "op": "DUP6"
    },
    "12561": {
      "op": "ADD"
    },
    "12562": {
      "op": "CALLDATALOAD"
    },
    "12563": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12572": {
      "op": "DUP2"
    },
    "12573": {
      "op": "GT"
    },
    "12574": {
      "op": "ISZERO"
    },
    "12575": {
      "op": "PUSH2",
      "value": "0x3127"
    },
    "12578": {
      "op": "JUMPI"
    },
    "12579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12581": {
      "op": "DUP1"
    },
    "12582": {
      "op": "REVERT"
    },
    "12583": {
      "op": "JUMPDEST"
    },
    "12584": {
      "op": "DUP6"
    },
    "12585": {
      "op": "ADD"
    },
    "12586": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12588": {
      "op": "DUP2"
    },
    "12589": {
      "op": "ADD"
    },
    "12590": {
      "op": "DUP8"
    },
    "12591": {
      "op": "SGT"
    },
    "12592": {
      "op": "PUSH2",
      "value": "0x3138"
    },
    "12595": {
      "op": "JUMPI"
    },
    "12596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12598": {
      "op": "DUP1"
    },
    "12599": {
      "op": "REVERT"
    },
    "12600": {
      "op": "JUMPDEST"
    },
    "12601": {
      "op": "PUSH2",
      "value": "0x3147"
    },
    "12604": {
      "op": "DUP8"
    },
    "12605": {
      "op": "DUP3"
    },
    "12606": {
      "op": "CALLDATALOAD"
    },
    "12607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12609": {
      "op": "DUP5"
    },
    "12610": {
      "op": "ADD"
    },
    "12611": {
      "op": "PUSH2",
      "value": "0x2E98"
    },
    "12614": {
      "jump": "i",
      "op": "JUMP"
    },
    "12615": {
      "op": "JUMPDEST"
    },
    "12616": {
      "op": "SWAP2"
    },
    "12617": {
      "op": "POP"
    },
    "12618": {
      "op": "POP"
    },
    "12619": {
      "op": "SWAP3"
    },
    "12620": {
      "op": "SWAP6"
    },
    "12621": {
      "op": "SWAP2"
    },
    "12622": {
      "op": "SWAP5"
    },
    "12623": {
      "op": "POP"
    },
    "12624": {
      "op": "SWAP3"
    },
    "12625": {
      "op": "POP"
    },
    "12626": {
      "jump": "o",
      "op": "JUMP"
    },
    "12627": {
      "op": "JUMPDEST"
    },
    "12628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12630": {
      "op": "DUP1"
    },
    "12631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12633": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12635": {
      "op": "DUP5"
    },
    "12636": {
      "op": "DUP7"
    },
    "12637": {
      "op": "SUB"
    },
    "12638": {
      "op": "SLT"
    },
    "12639": {
      "op": "ISZERO"
    },
    "12640": {
      "op": "PUSH2",
      "value": "0x3168"
    },
    "12643": {
      "op": "JUMPI"
    },
    "12644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12646": {
      "op": "DUP1"
    },
    "12647": {
      "op": "REVERT"
    },
    "12648": {
      "op": "JUMPDEST"
    },
    "12649": {
      "op": "DUP4"
    },
    "12650": {
      "op": "CALLDATALOAD"
    },
    "12651": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12660": {
      "op": "DUP2"
    },
    "12661": {
      "op": "GT"
    },
    "12662": {
      "op": "ISZERO"
    },
    "12663": {
      "op": "PUSH2",
      "value": "0x317F"
    },
    "12666": {
      "op": "JUMPI"
    },
    "12667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12669": {
      "op": "DUP1"
    },
    "12670": {
      "op": "REVERT"
    },
    "12671": {
      "op": "JUMPDEST"
    },
    "12672": {
      "op": "PUSH2",
      "value": "0x318B"
    },
    "12675": {
      "op": "DUP7"
    },
    "12676": {
      "op": "DUP3"
    },
    "12677": {
      "op": "DUP8"
    },
    "12678": {
      "op": "ADD"
    },
    "12679": {
      "op": "PUSH2",
      "value": "0x2F0E"
    },
    "12682": {
      "jump": "i",
      "op": "JUMP"
    },
    "12683": {
      "op": "JUMPDEST"
    },
    "12684": {
      "op": "SWAP7"
    },
    "12685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12687": {
      "op": "DUP7"
    },
    "12688": {
      "op": "ADD"
    },
    "12689": {
      "op": "CALLDATALOAD"
    },
    "12690": {
      "op": "SWAP7"
    },
    "12691": {
      "op": "POP"
    },
    "12692": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12694": {
      "op": "SWAP1"
    },
    "12695": {
      "op": "SWAP6"
    },
    "12696": {
      "op": "ADD"
    },
    "12697": {
      "op": "CALLDATALOAD"
    },
    "12698": {
      "op": "SWAP5"
    },
    "12699": {
      "op": "SWAP4"
    },
    "12700": {
      "op": "POP"
    },
    "12701": {
      "op": "POP"
    },
    "12702": {
      "op": "POP"
    },
    "12703": {
      "op": "POP"
    },
    "12704": {
      "jump": "o",
      "op": "JUMP"
    },
    "12705": {
      "op": "JUMPDEST"
    },
    "12706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12708": {
      "op": "DUP1"
    },
    "12709": {
      "op": "DUP3"
    },
    "12710": {
      "op": "MSTORE"
    },
    "12711": {
      "op": "DUP3"
    },
    "12712": {
      "op": "MLOAD"
    },
    "12713": {
      "op": "DUP3"
    },
    "12714": {
      "op": "DUP3"
    },
    "12715": {
      "op": "ADD"
    },
    "12716": {
      "op": "DUP2"
    },
    "12717": {
      "op": "SWAP1"
    },
    "12718": {
      "op": "MSTORE"
    },
    "12719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12721": {
      "op": "SWAP2"
    },
    "12722": {
      "op": "SWAP1"
    },
    "12723": {
      "op": "DUP5"
    },
    "12724": {
      "op": "DUP3"
    },
    "12725": {
      "op": "ADD"
    },
    "12726": {
      "op": "SWAP1"
    },
    "12727": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12729": {
      "op": "DUP6"
    },
    "12730": {
      "op": "ADD"
    },
    "12731": {
      "op": "SWAP1"
    },
    "12732": {
      "op": "DUP5"
    },
    "12733": {
      "op": "JUMPDEST"
    },
    "12734": {
      "op": "DUP2"
    },
    "12735": {
      "op": "DUP2"
    },
    "12736": {
      "op": "LT"
    },
    "12737": {
      "op": "ISZERO"
    },
    "12738": {
      "op": "PUSH2",
      "value": "0x31D9"
    },
    "12741": {
      "op": "JUMPI"
    },
    "12742": {
      "op": "DUP4"
    },
    "12743": {
      "op": "MLOAD"
    },
    "12744": {
      "op": "DUP4"
    },
    "12745": {
      "op": "MSTORE"
    },
    "12746": {
      "op": "SWAP3"
    },
    "12747": {
      "op": "DUP5"
    },
    "12748": {
      "op": "ADD"
    },
    "12749": {
      "op": "SWAP3"
    },
    "12750": {
      "op": "SWAP2"
    },
    "12751": {
      "op": "DUP5"
    },
    "12752": {
      "op": "ADD"
    },
    "12753": {
      "op": "SWAP2"
    },
    "12754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12756": {
      "op": "ADD"
    },
    "12757": {
      "op": "PUSH2",
      "value": "0x31BD"
    },
    "12760": {
      "op": "JUMP"
    },
    "12761": {
      "op": "JUMPDEST"
    },
    "12762": {
      "op": "POP"
    },
    "12763": {
      "op": "SWAP1"
    },
    "12764": {
      "op": "SWAP7"
    },
    "12765": {
      "op": "SWAP6"
    },
    "12766": {
      "op": "POP"
    },
    "12767": {
      "op": "POP"
    },
    "12768": {
      "op": "POP"
    },
    "12769": {
      "op": "POP"
    },
    "12770": {
      "op": "POP"
    },
    "12771": {
      "op": "POP"
    },
    "12772": {
      "jump": "o",
      "op": "JUMP"
    },
    "12773": {
      "op": "JUMPDEST"
    },
    "12774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12776": {
      "op": "DUP1"
    },
    "12777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12779": {
      "op": "DUP4"
    },
    "12780": {
      "op": "DUP6"
    },
    "12781": {
      "op": "SUB"
    },
    "12782": {
      "op": "SLT"
    },
    "12783": {
      "op": "ISZERO"
    },
    "12784": {
      "op": "PUSH2",
      "value": "0x31F8"
    },
    "12787": {
      "op": "JUMPI"
    },
    "12788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12790": {
      "op": "DUP1"
    },
    "12791": {
      "op": "REVERT"
    },
    "12792": {
      "op": "JUMPDEST"
    },
    "12793": {
      "op": "DUP3"
    },
    "12794": {
      "op": "CALLDATALOAD"
    },
    "12795": {
      "op": "PUSH2",
      "value": "0x3203"
    },
    "12798": {
      "op": "DUP2"
    },
    "12799": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "12802": {
      "jump": "i",
      "op": "JUMP"
    },
    "12803": {
      "op": "JUMPDEST"
    },
    "12804": {
      "op": "SWAP2"
    },
    "12805": {
      "op": "POP"
    },
    "12806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12808": {
      "op": "DUP4"
    },
    "12809": {
      "op": "ADD"
    },
    "12810": {
      "op": "CALLDATALOAD"
    },
    "12811": {
      "op": "PUSH2",
      "value": "0x30C8"
    },
    "12814": {
      "op": "DUP2"
    },
    "12815": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "12818": {
      "jump": "i",
      "op": "JUMP"
    },
    "12819": {
      "op": "JUMPDEST"
    },
    "12820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12822": {
      "op": "DUP2"
    },
    "12823": {
      "op": "DUP2"
    },
    "12824": {
      "op": "SHR"
    },
    "12825": {
      "op": "SWAP1"
    },
    "12826": {
      "op": "DUP3"
    },
    "12827": {
      "op": "AND"
    },
    "12828": {
      "op": "DUP1"
    },
    "12829": {
      "op": "PUSH2",
      "value": "0x3227"
    },
    "12832": {
      "op": "JUMPI"
    },
    "12833": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "12835": {
      "op": "DUP3"
    },
    "12836": {
      "op": "AND"
    },
    "12837": {
      "op": "SWAP2"
    },
    "12838": {
      "op": "POP"
    },
    "12839": {
      "op": "JUMPDEST"
    },
    "12840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12842": {
      "op": "DUP3"
    },
    "12843": {
      "op": "LT"
    },
    "12844": {
      "op": "DUP2"
    },
    "12845": {
      "op": "EQ"
    },
    "12846": {
      "op": "ISZERO"
    },
    "12847": {
      "op": "PUSH2",
      "value": "0x3248"
    },
    "12850": {
      "op": "JUMPI"
    },
    "12851": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12856": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12858": {
      "op": "SHL"
    },
    "12859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12861": {
      "op": "MSTORE"
    },
    "12862": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12864": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12866": {
      "op": "MSTORE"
    },
    "12867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12871": {
      "op": "REVERT"
    },
    "12872": {
      "op": "JUMPDEST"
    },
    "12873": {
      "op": "POP"
    },
    "12874": {
      "op": "SWAP2"
    },
    "12875": {
      "op": "SWAP1"
    },
    "12876": {
      "op": "POP"
    },
    "12877": {
      "jump": "o",
      "op": "JUMP"
    },
    "12878": {
      "op": "JUMPDEST"
    },
    "12879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12881": {
      "op": "DUP1"
    },
    "12882": {
      "op": "DUP3"
    },
    "12883": {
      "op": "MSTORE"
    },
    "12884": {
      "op": "DUP2"
    },
    "12885": {
      "op": "DUP2"
    },
    "12886": {
      "op": "ADD"
    },
    "12887": {
      "op": "MSTORE"
    },
    "12888": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "12921": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12923": {
      "op": "DUP3"
    },
    "12924": {
      "op": "ADD"
    },
    "12925": {
      "op": "MSTORE"
    },
    "12926": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12928": {
      "op": "ADD"
    },
    "12929": {
      "op": "SWAP1"
    },
    "12930": {
      "jump": "o",
      "op": "JUMP"
    },
    "12931": {
      "op": "JUMPDEST"
    },
    "12932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12936": {
      "op": "DUP3"
    },
    "12937": {
      "op": "DUP5"
    },
    "12938": {
      "op": "SUB"
    },
    "12939": {
      "op": "SLT"
    },
    "12940": {
      "op": "ISZERO"
    },
    "12941": {
      "op": "PUSH2",
      "value": "0x3295"
    },
    "12944": {
      "op": "JUMPI"
    },
    "12945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12947": {
      "op": "DUP1"
    },
    "12948": {
      "op": "REVERT"
    },
    "12949": {
      "op": "JUMPDEST"
    },
    "12950": {
      "op": "POP"
    },
    "12951": {
      "op": "MLOAD"
    },
    "12952": {
      "op": "SWAP2"
    },
    "12953": {
      "op": "SWAP1"
    },
    "12954": {
      "op": "POP"
    },
    "12955": {
      "jump": "o",
      "op": "JUMP"
    },
    "12956": {
      "op": "JUMPDEST"
    },
    "12957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12961": {
      "op": "DUP3"
    },
    "12962": {
      "op": "DUP5"
    },
    "12963": {
      "op": "SUB"
    },
    "12964": {
      "op": "SLT"
    },
    "12965": {
      "op": "ISZERO"
    },
    "12966": {
      "op": "PUSH2",
      "value": "0x32AE"
    },
    "12969": {
      "op": "JUMPI"
    },
    "12970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12972": {
      "op": "DUP1"
    },
    "12973": {
      "op": "REVERT"
    },
    "12974": {
      "op": "JUMPDEST"
    },
    "12975": {
      "op": "DUP2"
    },
    "12976": {
      "op": "MLOAD"
    },
    "12977": {
      "op": "PUSH2",
      "value": "0x2966"
    },
    "12980": {
      "op": "DUP2"
    },
    "12981": {
      "op": "PUSH2",
      "value": "0x308C"
    },
    "12984": {
      "jump": "i",
      "op": "JUMP"
    },
    "12985": {
      "op": "JUMPDEST"
    },
    "12986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12988": {
      "op": "DUP1"
    },
    "12989": {
      "op": "DUP3"
    },
    "12990": {
      "op": "MSTORE"
    },
    "12991": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "12993": {
      "op": "SWAP1"
    },
    "12994": {
      "op": "DUP3"
    },
    "12995": {
      "op": "ADD"
    },
    "12996": {
      "op": "MSTORE"
    },
    "12997": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "13030": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13032": {
      "op": "DUP3"
    },
    "13033": {
      "op": "ADD"
    },
    "13034": {
      "op": "MSTORE"
    },
    "13035": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "13053": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "13055": {
      "op": "SHL"
    },
    "13056": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13058": {
      "op": "DUP3"
    },
    "13059": {
      "op": "ADD"
    },
    "13060": {
      "op": "MSTORE"
    },
    "13061": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13063": {
      "op": "ADD"
    },
    "13064": {
      "op": "SWAP1"
    },
    "13065": {
      "jump": "o",
      "op": "JUMP"
    },
    "13066": {
      "op": "JUMPDEST"
    },
    "13067": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13072": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13074": {
      "op": "SHL"
    },
    "13075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13077": {
      "op": "MSTORE"
    },
    "13078": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13080": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13082": {
      "op": "MSTORE"
    },
    "13083": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13087": {
      "op": "REVERT"
    },
    "13088": {
      "op": "JUMPDEST"
    },
    "13089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13091": {
      "op": "DUP3"
    },
    "13092": {
      "op": "NOT"
    },
    "13093": {
      "op": "DUP3"
    },
    "13094": {
      "op": "GT"
    },
    "13095": {
      "op": "ISZERO"
    },
    "13096": {
      "op": "PUSH2",
      "value": "0x3333"
    },
    "13099": {
      "op": "JUMPI"
    },
    "13100": {
      "op": "PUSH2",
      "value": "0x3333"
    },
    "13103": {
      "op": "PUSH2",
      "value": "0x330A"
    },
    "13106": {
      "jump": "i",
      "op": "JUMP"
    },
    "13107": {
      "op": "JUMPDEST"
    },
    "13108": {
      "op": "POP"
    },
    "13109": {
      "op": "ADD"
    },
    "13110": {
      "op": "SWAP1"
    },
    "13111": {
      "jump": "o",
      "op": "JUMP"
    },
    "13112": {
      "op": "JUMPDEST"
    },
    "13113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13117": {
      "op": "NOT"
    },
    "13118": {
      "op": "DUP3"
    },
    "13119": {
      "op": "EQ"
    },
    "13120": {
      "op": "ISZERO"
    },
    "13121": {
      "op": "PUSH2",
      "value": "0x334C"
    },
    "13124": {
      "op": "JUMPI"
    },
    "13125": {
      "op": "PUSH2",
      "value": "0x334C"
    },
    "13128": {
      "op": "PUSH2",
      "value": "0x330A"
    },
    "13131": {
      "jump": "i",
      "op": "JUMP"
    },
    "13132": {
      "op": "JUMPDEST"
    },
    "13133": {
      "op": "POP"
    },
    "13134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13136": {
      "op": "ADD"
    },
    "13137": {
      "op": "SWAP1"
    },
    "13138": {
      "jump": "o",
      "op": "JUMP"
    },
    "13139": {
      "op": "JUMPDEST"
    },
    "13140": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13145": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13147": {
      "op": "SHL"
    },
    "13148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13150": {
      "op": "MSTORE"
    },
    "13151": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13153": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13155": {
      "op": "MSTORE"
    },
    "13156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13160": {
      "op": "REVERT"
    },
    "13161": {
      "op": "JUMPDEST"
    },
    "13162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13164": {
      "op": "DUP4"
    },
    "13165": {
      "op": "MLOAD"
    },
    "13166": {
      "op": "PUSH2",
      "value": "0x337B"
    },
    "13169": {
      "op": "DUP2"
    },
    "13170": {
      "op": "DUP5"
    },
    "13171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13173": {
      "op": "DUP9"
    },
    "13174": {
      "op": "ADD"
    },
    "13175": {
      "op": "PUSH2",
      "value": "0x2DBD"
    },
    "13178": {
      "jump": "i",
      "op": "JUMP"
    },
    "13179": {
      "op": "JUMPDEST"
    },
    "13180": {
      "op": "DUP4"
    },
    "13181": {
      "op": "MLOAD"
    },
    "13182": {
      "op": "SWAP1"
    },
    "13183": {
      "op": "DUP4"
    },
    "13184": {
      "op": "ADD"
    },
    "13185": {
      "op": "SWAP1"
    },
    "13186": {
      "op": "PUSH2",
      "value": "0x338F"
    },
    "13189": {
      "op": "DUP2"
    },
    "13190": {
      "op": "DUP4"
    },
    "13191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13193": {
      "op": "DUP9"
    },
    "13194": {
      "op": "ADD"
    },
    "13195": {
      "op": "PUSH2",
      "value": "0x2DBD"
    },
    "13198": {
      "jump": "i",
      "op": "JUMP"
    },
    "13199": {
      "op": "JUMPDEST"
    },
    "13200": {
      "op": "ADD"
    },
    "13201": {
      "op": "SWAP5"
    },
    "13202": {
      "op": "SWAP4"
    },
    "13203": {
      "op": "POP"
    },
    "13204": {
      "op": "POP"
    },
    "13205": {
      "op": "POP"
    },
    "13206": {
      "op": "POP"
    },
    "13207": {
      "jump": "o",
      "op": "JUMP"
    },
    "13208": {
      "op": "JUMPDEST"
    },
    "13209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13211": {
      "op": "DUP3"
    },
    "13212": {
      "op": "DUP3"
    },
    "13213": {
      "op": "LT"
    },
    "13214": {
      "op": "ISZERO"
    },
    "13215": {
      "op": "PUSH2",
      "value": "0x33AA"
    },
    "13218": {
      "op": "JUMPI"
    },
    "13219": {
      "op": "PUSH2",
      "value": "0x33AA"
    },
    "13222": {
      "op": "PUSH2",
      "value": "0x330A"
    },
    "13225": {
      "jump": "i",
      "op": "JUMP"
    },
    "13226": {
      "op": "JUMPDEST"
    },
    "13227": {
      "op": "POP"
    },
    "13228": {
      "op": "SUB"
    },
    "13229": {
      "op": "SWAP1"
    },
    "13230": {
      "jump": "o",
      "op": "JUMP"
    },
    "13231": {
      "op": "JUMPDEST"
    },
    "13232": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13237": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13239": {
      "op": "SHL"
    },
    "13240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13242": {
      "op": "MSTORE"
    },
    "13243": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13245": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13247": {
      "op": "MSTORE"
    },
    "13248": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13252": {
      "op": "REVERT"
    },
    "13253": {
      "op": "JUMPDEST"
    },
    "13254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13256": {
      "op": "DUP1"
    },
    "13257": {
      "op": "DUP3"
    },
    "13258": {
      "op": "MSTORE"
    },
    "13259": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13261": {
      "op": "SWAP1"
    },
    "13262": {
      "op": "DUP3"
    },
    "13263": {
      "op": "ADD"
    },
    "13264": {
      "op": "MSTORE"
    },
    "13265": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "13298": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13300": {
      "op": "DUP3"
    },
    "13301": {
      "op": "ADD"
    },
    "13302": {
      "op": "MSTORE"
    },
    "13303": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "13322": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "13324": {
      "op": "SHL"
    },
    "13325": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13327": {
      "op": "DUP3"
    },
    "13328": {
      "op": "ADD"
    },
    "13329": {
      "op": "MSTORE"
    },
    "13330": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13332": {
      "op": "ADD"
    },
    "13333": {
      "op": "SWAP1"
    },
    "13334": {
      "jump": "o",
      "op": "JUMP"
    },
    "13335": {
      "op": "JUMPDEST"
    },
    "13336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13342": {
      "op": "SHL"
    },
    "13343": {
      "op": "SUB"
    },
    "13344": {
      "op": "DUP6"
    },
    "13345": {
      "op": "DUP2"
    },
    "13346": {
      "op": "AND"
    },
    "13347": {
      "op": "DUP3"
    },
    "13348": {
      "op": "MSTORE"
    },
    "13349": {
      "op": "DUP5"
    },
    "13350": {
      "op": "AND"
    },
    "13351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13353": {
      "op": "DUP3"
    },
    "13354": {
      "op": "ADD"
    },
    "13355": {
      "op": "MSTORE"
    },
    "13356": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13358": {
      "op": "DUP2"
    },
    "13359": {
      "op": "ADD"
    },
    "13360": {
      "op": "DUP4"
    },
    "13361": {
      "op": "SWAP1"
    },
    "13362": {
      "op": "MSTORE"
    },
    "13363": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13365": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13367": {
      "op": "DUP3"
    },
    "13368": {
      "op": "ADD"
    },
    "13369": {
      "op": "DUP2"
    },
    "13370": {
      "op": "SWAP1"
    },
    "13371": {
      "op": "MSTORE"
    },
    "13372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13374": {
      "op": "SWAP1"
    },
    "13375": {
      "op": "PUSH2",
      "value": "0x344A"
    },
    "13378": {
      "op": "SWAP1"
    },
    "13379": {
      "op": "DUP4"
    },
    "13380": {
      "op": "ADD"
    },
    "13381": {
      "op": "DUP5"
    },
    "13382": {
      "op": "PUSH2",
      "value": "0x2DE9"
    },
    "13385": {
      "jump": "i",
      "op": "JUMP"
    },
    "13386": {
      "op": "JUMPDEST"
    },
    "13387": {
      "op": "SWAP7"
    },
    "13388": {
      "op": "SWAP6"
    },
    "13389": {
      "op": "POP"
    },
    "13390": {
      "op": "POP"
    },
    "13391": {
      "op": "POP"
    },
    "13392": {
      "op": "POP"
    },
    "13393": {
      "op": "POP"
    },
    "13394": {
      "op": "POP"
    },
    "13395": {
      "jump": "o",
      "op": "JUMP"
    },
    "13396": {
      "op": "JUMPDEST"
    },
    "13397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13401": {
      "op": "DUP3"
    },
    "13402": {
      "op": "DUP5"
    },
    "13403": {
      "op": "SUB"
    },
    "13404": {
      "op": "SLT"
    },
    "13405": {
      "op": "ISZERO"
    },
    "13406": {
      "op": "PUSH2",
      "value": "0x3466"
    },
    "13409": {
      "op": "JUMPI"
    },
    "13410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13412": {
      "op": "DUP1"
    },
    "13413": {
      "op": "REVERT"
    },
    "13414": {
      "op": "JUMPDEST"
    },
    "13415": {
      "op": "DUP2"
    },
    "13416": {
      "op": "MLOAD"
    },
    "13417": {
      "op": "PUSH2",
      "value": "0x2966"
    },
    "13420": {
      "op": "DUP2"
    },
    "13421": {
      "op": "PUSH2",
      "value": "0x2D8A"
    },
    "13424": {
      "jump": "i",
      "op": "JUMP"
    },
    "13425": {
      "op": "JUMPDEST"
    },
    "13426": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13431": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13433": {
      "op": "SHL"
    },
    "13434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13436": {
      "op": "MSTORE"
    },
    "13437": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "13439": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13441": {
      "op": "MSTORE"
    },
    "13442": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13446": {
      "op": "REVERT"
    },
    "13447": {
      "op": "JUMPDEST"
    },
    "13448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13450": {
      "op": "DUP3"
    },
    "13451": {
      "op": "PUSH2",
      "value": "0x3496"
    },
    "13454": {
      "op": "JUMPI"
    },
    "13455": {
      "op": "PUSH2",
      "value": "0x3496"
    },
    "13458": {
      "op": "PUSH2",
      "value": "0x3471"
    },
    "13461": {
      "jump": "i",
      "op": "JUMP"
    },
    "13462": {
      "op": "JUMPDEST"
    },
    "13463": {
      "op": "POP"
    },
    "13464": {
      "op": "DIV"
    },
    "13465": {
      "op": "SWAP1"
    },
    "13466": {
      "jump": "o",
      "op": "JUMP"
    },
    "13467": {
      "op": "JUMPDEST"
    },
    "13468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13470": {
      "op": "DUP3"
    },
    "13471": {
      "op": "PUSH2",
      "value": "0x34AA"
    },
    "13474": {
      "op": "JUMPI"
    },
    "13475": {
      "op": "PUSH2",
      "value": "0x34AA"
    },
    "13478": {
      "op": "PUSH2",
      "value": "0x3471"
    },
    "13481": {
      "jump": "i",
      "op": "JUMP"
    },
    "13482": {
      "op": "JUMPDEST"
    },
    "13483": {
      "op": "POP"
    },
    "13484": {
      "op": "MOD"
    },
    "13485": {
      "op": "SWAP1"
    },
    "13486": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "24a831083ad0e29352f520f91989354da007a83c",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./CardinalToken.sol\";\n\n/**\n * @title Cardinal House NFT Contract\n * @dev NFT contract that will be used with the marketplace contract\n */\ncontract CardinalNFT is ERC721URIStorage, Ownable {\n    using Counters for Counters.Counter;\n\n    // Counter to give each NFT a unique ID.\n    Counters.Counter public _tokenIds;\n\n    // Address of the Cardinal NFT marketplace.\n    address public marketplaceAddress;\n\n    // Contract for the Cardinal Token (CRNL).\n    CardinalToken public cardinalToken;\n\n    // Each NFT will be associated with an ID that determines the type of NFT it is\n    // This makes it easy to identify sets of NFTs like Original Cardinal NFTs, membership NFTs, and service NFTs\n    mapping(uint256 => uint256) public tokenIdToTypeId;\n\n    // Each NFT will have a unique listing fee that is kept track of in this mapping.\n    mapping(uint256 => uint256) public tokenIdToListingFee;\n    \n    // Mapping of token ID to address for whitelist spots.\n    mapping(uint256 => address) public tokenIdToWhitelistAddress;\n\n    // Mapping to determine if an address has a membership (either Original Cardinal NFT or membership NFT)\n    mapping(address => bool) public addressIsMember;\n\n    // Mapping to determine the number of membership NFTs an address has (especially if they have Original Cardinal NFT and membership NFT)\n    mapping(address => uint256) public addressToMemberNFTCount;\n\n    // Maps each membership NFT ID to the last block timestamp that the membership was paid for.\n    mapping(uint256 => uint256) public membershipNFTToLastPaid;\n\n    // The type ID for the Original Cardinal NFTs.\n    uint256 public originalCardinalTypeId = 1;\n\n    // The type ID for the membership NFTs.\n    uint256 public membershipTypeId = 2;\n\n    // The type ID for the service NFTs.\n    uint256 public serviceTypeId = 3;\n\n    // Array of the Original Cardinal token IDs.\n    uint256[] public originalCardinalTokenIds;\n\n    // Array of the membership token IDs.\n    uint256[] public membershipTokenIds;\n\n    // The token URI for all membership NFTs\n    string public membershipTokenURI;\n\n    // The current price of the membership NFT in Cardinal Tokens\n    uint256 public membershipPriceInCardinalTokens;\n\n    constructor(address _marketplaceAddress, address payable _cardinalTokenAddress) ERC721(\"CardinalHouseNFT\", \"CRNLNFT\") {\n        marketplaceAddress = _marketplaceAddress;\n        cardinalToken = CardinalToken(_cardinalTokenAddress);\n    }\n\n    /**\n    * @dev Only owner function to burn a membership NFT\n    * @param tokenId the tokenId of the membership NFT to burn\n     */\n    function burnMembershipNFT(uint256 tokenId) private {\n        for (uint i = 0; i < membershipTokenIds.length; i++) {\n            if (membershipTokenIds[i] == tokenId) {\n                address NFTOwner = ownerOf(membershipTokenIds[i]);\n                _transfer(NFTOwner, address(this), membershipTokenIds[i]);\n\n                membershipTokenIds[i] = membershipTokenIds[membershipTokenIds.length-1];\n                membershipTokenIds.pop();\n            }\n        }\n    }\n\n    /**\n    * @dev Only owner function to burn a membership NFT\n    * @param tokenId the tokenId of the membership NFT to burn\n     */\n    function burnMembershiptNFTManually(uint256 tokenId) public onlyOwner {\n        burnMembershipNFT(tokenId);\n    }\n\n    /**\n     * @dev After a token transfer, update the addressToMember mapping if the NFT is an Original Cardinal or membership NFT\n     * @param from the sender's address\n     * @param to the recipient's address\n     * @param tokenId the tokenId that was transferred\n     */\n    function _afterTokenTransfer(address from, address to, uint256 tokenId) internal virtual override {\n        if (tokenIdToTypeId[tokenId] == membershipTypeId || tokenIdToTypeId[tokenId] == originalCardinalTypeId) {\n            if (from != owner() && from != marketplaceAddress && from != address(0)) {\n                if (addressToMemberNFTCount[from] > 0) {\n                    addressToMemberNFTCount[from] = addressToMemberNFTCount[from] - 1;\n                    if (addressToMemberNFTCount[from] == 0) {\n                        addressIsMember[from] = false;\n                    }\n                }\n                else {\n                    addressIsMember[from] = false;\n                }\n            }\n            addressIsMember[to] = true;\n            addressToMemberNFTCount[to] = addressToMemberNFTCount[to] + 1;\n        }\n\n        super._afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n    * @dev Allows someone to mint a membership NFT by paying Cardinal Tokens\n    * @return the ID of the newly minted membership NFT\n     */\n    function mintMembershipNFT() public returns (uint) {\n        require(cardinalToken.balanceOf(msg.sender) >= membershipPriceInCardinalTokens, \"You don't have enough Cardinal Tokens to pay for the membership NFT.\");\n        require(cardinalToken.allowance(msg.sender, address(this)) >= membershipPriceInCardinalTokens, \"You haven't approved this contract to spend enough of your Cardinal Tokens to pay for the membership NFT.\");\n        \n        cardinalToken.transferFrom(msg.sender, address(this), membershipPriceInCardinalTokens);\n\n        _tokenIds.increment();\n        uint256 newItemId = _tokenIds.current();\n\n        tokenIdToTypeId[newItemId] = membershipTypeId;\n        tokenIdToListingFee[newItemId] = 0;\n        _mint(msg.sender, newItemId);\n        membershipNFTToLastPaid[newItemId] = block.timestamp;\n        _setTokenURI(newItemId, membershipTokenURI);\n        approve(address(this), newItemId);\n        setApprovalForAll(marketplaceAddress, true);\n\n        membershipTokenIds.push(newItemId);\n\n        return newItemId;\n    }\n\n    /**\n    * @dev Only owner function to update the timestamp for a membership NFT after it has been paid for for a month.\n    * @param tokenId the ID of the membership NFT to have the timestamp updated for\n    * @param lastPaidTimestamp the timestamp to update the membership NFT to for when it was last paid for\n     */\n    function updateMembershipNFTLastPaid(uint256 tokenId, uint256 lastPaidTimestamp) public onlyOwner {\n        membershipNFTToLastPaid[tokenId] = lastPaidTimestamp;\n    }\n\n    /**\n    * @dev Only owner function to take funds from an address to pay for the next month of a membership\n    * @param member the address of the member that is being charged for the next month of a membership\n    * @param tokenId the token ID that the member is being charged \n    * @return 0 for success, 1 for failure and NFT burn\n     */\n    function chargeMemberForMembership(address member, uint256 tokenId) public onlyOwner returns (uint) {\n        require(ownerOf(tokenId) == member, \"This address doesn't own the NFT specified.\");\n        require(ownerOf(tokenId) != owner() && ownerOf(tokenId) != marketplaceAddress, \"Can't charge the owner or marketplace for the membership.\");\n\n        if (cardinalToken.balanceOf(member) < membershipPriceInCardinalTokens || cardinalToken.allowance(member, address(this)) < membershipPriceInCardinalTokens) {\n            burnMembershipNFT(tokenId);\n            return 1;\n        }\n        cardinalToken.transferFrom(member, address(this), membershipPriceInCardinalTokens);\n        membershipNFTToLastPaid[tokenId] = block.timestamp;\n        return 0;\n    }\n\n    /**\n    * @dev Only owner function to withdraw the Cardinal Tokens that are paid to this contract for the Membership NFTs.\n     */\n    function withdrawMembershipNFTFunds() public onlyOwner {\n        cardinalToken.transfer(owner(), cardinalToken.balanceOf(address(this)));\n    }\n\n    /**\n    * @dev Only owner function to mint a new NFT.\n    * @param tokenURI the token URI on IPFS for the NFT metadata\n    * @param typeId the type ID of the NFT to distinguish what type of NFT it is (Original Cardinal, membership, service)\n    * @param listingFee the fee the user pays when putting the NFT for sale on the marketplace\n    * @return the ID of the newly minted NFT\n     */\n    function createToken(string memory tokenURI, uint256 typeId, uint256 listingFee) public onlyOwner returns (uint) {\n        _tokenIds.increment();\n        uint256 newItemId = _tokenIds.current();\n\n        _mint(msg.sender, newItemId);\n        tokenIdToTypeId[newItemId] = typeId;\n        tokenIdToListingFee[newItemId] = listingFee;\n        _setTokenURI(newItemId, tokenURI);\n        approve(address(this), newItemId);\n        setApprovalForAll(marketplaceAddress, true);\n\n        if (typeId == originalCardinalTypeId) {\n            originalCardinalTokenIds.push(newItemId);\n        }\n        else if (typeId == membershipTypeId) {\n            membershipTokenIds.push(newItemId);\n            membershipNFTToLastPaid[newItemId] = block.timestamp;\n        }\n\n        return newItemId;\n    }\n\n    /**\n    * @dev Setter function for the token URI of an NFT.\n    * @param tokenId the ID of the NFT to update the token URI of\n    * @param newTokenURI the token URI to update the NFT with\n     */\n    function setTokenURI(uint256 tokenId, string memory newTokenURI) public onlyOwner {\n        _setTokenURI(tokenId, newTokenURI);\n    }\n\n    /**\n    * @dev Function to get all token URIs for tokens that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's NFTs\n     */\n    function getUserTokenURIs(address userAddress) public view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get all token URIs for Original Cardinal NFTs that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's Original Cardinal NFTs\n     */\n    function getUserOriginalCardinalTokenURIs(address userAddress) public view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == originalCardinalTypeId) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == originalCardinalTypeId) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get all token URIs for membership NFTs that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's membership NFTs\n     */\n    function getUserMembershipTokenURIs(address userAddress) public view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && (tokenIdToTypeId[id] == originalCardinalTypeId || tokenIdToTypeId[id] == membershipTypeId)) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && (tokenIdToTypeId[id] == originalCardinalTypeId || tokenIdToTypeId[id] == membershipTypeId)) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get all token URIs for service NFTs that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's service NFTs\n     */\n    function getUserServiceTokenURIs(address userAddress) public view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == serviceTypeId) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == serviceTypeId) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get a list of all the Original Cardinal NFT IDs.\n    * @return list of the Original Cardinal NFT IDs\n     */\n    function getOriginalCardinalTokenIds() public view returns (uint256[] memory) {\n        return originalCardinalTokenIds;\n    }\n\n    /**\n    * @dev Function to get a list of all the membership NFT IDs.\n    * @return list of the membership NFT IDs\n     */\n    function getMembershipTokenIds() public view returns (uint256[] memory) {\n        return membershipTokenIds;\n    }\n\n    /**\n    * @dev Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.\n    * @param whiteListAddress the address of the user who will be able to purchase the NFT\n    * @param tokenId the ID of the NFT that the whitelist spot is for\n     */\n    function addWhiteListToToken(address whiteListAddress, uint256 tokenId) public onlyOwner {\n        tokenIdToWhitelistAddress[tokenId] = whiteListAddress;\n    }\n\n    /**\n    * @dev updates the listing fee of an NFT.\n    * @param tokenId the ID of the NFT to update the listing fee of\n    * @param newListingFee the listing fee value for the NFT\n     */\n    function updateTokenListingFee(uint256 tokenId, uint256 newListingFee) public onlyOwner {\n        tokenIdToListingFee[tokenId] = newListingFee;\n    }\n\n    /**\n    * @dev updates the type ID of an NFT.\n    * @param tokenId the ID of the NFT to update the type ID of\n    * @param newTypeId the type ID value for the NFT\n     */\n    function updateTokenTypeId(uint256 tokenId, uint256 newTypeId) public onlyOwner {\n        tokenIdToTypeId[tokenId] = newTypeId;\n    }\n\n    /**\n    * @dev updates the type ID that represents the Original Cardinal NFTs\n    * @param newOriginalCardinalTypeId the new type ID of the Original Cardinal NFTs\n     */\n    function updateOriginalCardinalTypeId(uint256 newOriginalCardinalTypeId) public onlyOwner {\n        originalCardinalTypeId = newOriginalCardinalTypeId;\n    }\n\n    /**\n    * @dev updates the type ID that represents the membership NFTs\n    * @param newMembershipTypeId the new type ID of the membership NFTs\n     */\n    function updateMembershipTypeId(uint256 newMembershipTypeId) public onlyOwner {\n        membershipTypeId = newMembershipTypeId;\n    }\n\n    /**\n    * @dev updates the type ID that represents the service NFTs\n    * @param newServiceTypeId the new type ID of the service NFTs\n     */\n    function updateServiceTypeId(uint256 newServiceTypeId) public onlyOwner {\n        serviceTypeId = newServiceTypeId;\n    }\n\n    /**\n    * @dev updates the membership NFT token URI\n    * @param newMembershipTokenURI the new type ID of the service NFTs\n     */\n    function updateMembershipTokenURI(string memory newMembershipTokenURI) public onlyOwner {\n        membershipTokenURI = newMembershipTokenURI;\n    }\n\n    /**\n    * @dev sets the price of the membership NFTs in Cardinal Tokens\n    * @param newMembershipPrice the new price of the membership NFTs in Cardinal Tokens\n     */\n    function updateMembershipPrice(uint256 newMembershipPrice) public onlyOwner {\n        membershipPriceInCardinalTokens = newMembershipPrice;\n    }\n\n    /**\n    * @dev Only owner function to set the reference to the Cardinal Token contract\n    * @param cardinalTokenAddress the address for the Cardinal Token contract\n    */\n    function setCardinalToken(address payable cardinalTokenAddress) public onlyOwner {\n        cardinalToken = CardinalToken(cardinalTokenAddress);\n    }\n\n}",
  "sourceMap": "454:16723:19:-:0;;;1965:1;1925:41;;2051:1;2017:35;;2131:1;2100:32;;2523:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:5;;;;;;;;;;;-1:-1:-1;;;1390:113:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:5;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:5;:::i;:::-;-1:-1:-1;1479:17:5;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;2651:18:19::1;:40:::0;;-1:-1:-1;;;;;2651:40:19;;::::1;-1:-1:-1::0;;;;;;2651:40:19;;::::1;;::::0;;;2701:13:::1;:52:::0;;;;;::::1;::::0;::::1;;::::0;;454:16723;;640:96:11;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;454:16723:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;454:16723:19;;;-1:-1:-1;454:16723:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:40;-1:-1:-1;;;;;89:31:40;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:393::-;237:6;245;298:2;286:9;277:7;273:23;269:32;266:52;;;314:1;311;304:12;266:52;346:9;340:16;365:31;390:5;365:31;:::i;:::-;465:2;450:18;;444:25;415:5;;-1:-1:-1;478:33:40;444:25;478:33;:::i;:::-;530:7;520:17;;;150:393;;;;;:::o;548:380::-;627:1;623:12;;;;670;;;691:61;;745:4;737:6;733:17;723:27;;691:61;798:2;790:6;787:14;767:18;764:38;761:161;;;844:10;839:3;835:20;832:1;825:31;879:4;876:1;869:15;907:4;904:1;897:15;761:161;;548:380;;;:::o;:::-;454:16723:19;;;;;;",
  "sourcePath": "contracts/CardinalNFT.sol",
  "type": "contract"
}