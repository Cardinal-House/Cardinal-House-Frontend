{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_marketplaceAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_USDC",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "membershipPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currTimeStamp",
          "type": "uint256"
        }
      ],
      "name": "memberChargedForMembership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "discountAmount",
          "type": "uint256"
        }
      ],
      "name": "memberDiscountSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "membershipNFTBurnt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "membershipNFTMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMembershipPrice",
          "type": "uint256"
        }
      ],
      "name": "membershipPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        }
      ],
      "name": "tokenURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "typeIdThatWasUpdated",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newTypeId",
          "type": "uint256"
        }
      ],
      "name": "typeIdUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_tokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "memberAddress",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "whiteListAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "addWhiteListToToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressIsAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressIsMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToMemberNFTCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToMembershipDiscount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burnMembershiptNFTManually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currTimeStamp",
          "type": "uint256"
        }
      ],
      "name": "chargeMemberForMembership",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "typeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "listingFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currTimeStamp",
          "type": "uint256"
        }
      ],
      "name": "createToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembershipTokenIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOriginalCardinalTokenIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserMembershipTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserOriginalCardinalTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserServiceTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserTokenIDs",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketplaceAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "membershipNFTToLastPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "membershipPriceInUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "membershipTokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "membershipTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "membershipTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintMembershipNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "originalCardinalTokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "originalCardinalTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "memberAddress",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "serviceTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adminAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAdmin",
          "type": "bool"
        }
      ],
      "name": "setAdminUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "memberAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "discountAmount",
          "type": "uint256"
        }
      ],
      "name": "setMemberDiscount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_USDC",
          "type": "address"
        }
      ],
      "name": "setUSDCContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToListingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToTypeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToWhitelistAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastPaidTimestamp",
          "type": "uint256"
        }
      ],
      "name": "updateMembershipNFTLastPaid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newLastPaid",
          "type": "uint256"
        }
      ],
      "name": "updateMembershipNFTToLastPaid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMembershipPrice",
          "type": "uint256"
        }
      ],
      "name": "updateMembershipPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newMembershipTokenURI",
          "type": "string"
        }
      ],
      "name": "updateMembershipTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMembershipTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateMembershipTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newOriginalCardinalTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateOriginalCardinalTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newServiceTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateServiceTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newListingFee",
          "type": "uint256"
        }
      ],
      "name": "updateTokenListingFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newTypeId",
          "type": "uint256"
        }
      ],
      "name": "updateTokenTypeId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawMembershipNFTFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "10": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "12": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "13": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
    "15": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
    "16": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "18": "contracts/CardinalNFT.sol",
    "2": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "4": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
    "5": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "7": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "8": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
    "9": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol"
  },
  "ast": {
    "absolutePath": "contracts/CardinalNFT.sol",
    "exportedSymbols": {
      "Address": [
        6778
      ],
      "CardinalNFT": [
        1876
      ],
      "Context": [
        5601
      ],
      "Counters": [
        5579
      ],
      "ERC165": [
        6802
      ],
      "ERC721": [
        5039
      ],
      "ERC721Enumerable": [
        5377
      ],
      "ERC721URIStorage": [
        5505
      ],
      "IERC165": [
        6870
      ],
      "IERC20": [
        4173
      ],
      "IERC721": [
        6438
      ],
      "IERC721Enumerable": [
        6833
      ],
      "IERC721Metadata": [
        6483
      ],
      "IERC721Receiver": [
        6456
      ],
      "Ownable": [
        2803
      ],
      "Strings": [
        3006
      ]
    },
    "id": 1877,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 325,
        "literals": [
          "solidity",
          "0.8",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:18"
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 326,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1877,
        "sourceUnit": 5580,
        "src": "56:52:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 327,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1877,
        "sourceUnit": 5506,
        "src": "109:78:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 328,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1877,
        "sourceUnit": 5378,
        "src": "188:78:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 329,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1877,
        "sourceUnit": 5040,
        "src": "267:57:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 330,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1877,
        "sourceUnit": 2804,
        "src": "325:52:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 331,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1877,
        "sourceUnit": 4174,
        "src": "378:56:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 333,
              "name": "ERC721URIStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5505,
              "src": "575:16:18"
            },
            "id": 334,
            "nodeType": "InheritanceSpecifier",
            "src": "575:16:18"
          },
          {
            "baseName": {
              "id": 335,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5377,
              "src": "593:16:18"
            },
            "id": 336,
            "nodeType": "InheritanceSpecifier",
            "src": "593:16:18"
          },
          {
            "baseName": {
              "id": 337,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2803,
              "src": "611:7:18"
            },
            "id": 338,
            "nodeType": "InheritanceSpecifier",
            "src": "611:7:18"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 332,
          "nodeType": "StructuredDocumentation",
          "src": "436:114:18",
          "text": " @title Cardinal House NFT Contract\n @dev NFT contract that will be used with the marketplace contract"
        },
        "fullyImplemented": true,
        "id": 1876,
        "linearizedBaseContracts": [
          1876,
          2803,
          5377,
          6833,
          5505,
          5039,
          6483,
          6438,
          6802,
          6870,
          5601
        ],
        "name": "CardinalNFT",
        "nameLocation": "560:11:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 342,
            "libraryName": {
              "id": 339,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5579,
              "src": "631:8:18"
            },
            "nodeType": "UsingForDirective",
            "src": "625:36:18",
            "typeName": {
              "id": 341,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 340,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5511,
                "src": "644:16:18"
              },
              "referencedDeclaration": 5511,
              "src": "644:16:18",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$5511_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "aa46a400",
            "id": 345,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "736:9:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "712:33:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$5511_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 344,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 343,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5511,
                "src": "712:16:18"
              },
              "referencedDeclaration": 5511,
              "src": "712:16:18",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$5511_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "daa17f49",
            "id": 347,
            "mutability": "mutable",
            "name": "marketplaceAddress",
            "nameLocation": "815:18:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "800:33:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 346,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "800:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89a30271",
            "id": 350,
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "905:4:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "891:18:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4173",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 349,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 348,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4173,
                "src": "891:6:18"
              },
              "referencedDeclaration": 4173,
              "src": "891:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4173",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f48853b",
            "id": 354,
            "mutability": "mutable",
            "name": "tokenIdToTypeId",
            "nameLocation": "1149:15:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "1114:50:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 353,
              "keyType": {
                "id": 351,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:27:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 352,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1133:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b063c954",
            "id": 358,
            "mutability": "mutable",
            "name": "tokenIdToListingFee",
            "nameLocation": "1292:19:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "1257:54:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 357,
              "keyType": {
                "id": 355,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1265:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1257:27:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 356,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1276:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c23a67a",
            "id": 362,
            "mutability": "mutable",
            "name": "tokenIdToWhitelistAddress",
            "nameLocation": "1416:25:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "1381:60:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 361,
              "keyType": {
                "id": 359,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1389:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1381:27:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 360,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1400:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "28da575b",
            "id": 366,
            "mutability": "mutable",
            "name": "addressIsMember",
            "nameLocation": "1588:15:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "1556:47:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 365,
              "keyType": {
                "id": 363,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1564:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1556:24:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 364,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1575:4:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dca8bc47",
            "id": 370,
            "mutability": "mutable",
            "name": "addressToMemberNFTCount",
            "nameLocation": "1785:23:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "1750:58:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 369,
              "keyType": {
                "id": 367,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1758:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1750:27:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 368,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1769:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "11ab8df5",
            "id": 374,
            "mutability": "mutable",
            "name": "membershipNFTToLastPaid",
            "nameLocation": "1947:23:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "1912:58:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 373,
              "keyType": {
                "id": 371,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1920:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1912:27:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 372,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1931:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b5c4b23d",
            "id": 378,
            "mutability": "mutable",
            "name": "addressIsAdmin",
            "nameLocation": "2114:14:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "2081:47:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 377,
              "keyType": {
                "id": 375,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2090:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2081:25:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 376,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2101:4:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2517fc07",
            "id": 382,
            "mutability": "mutable",
            "name": "addressToMembershipDiscount",
            "nameLocation": "2234:27:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "2198:63:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 381,
              "keyType": {
                "id": 379,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2207:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2198:28:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 380,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2218:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46d36230",
            "id": 385,
            "mutability": "mutable",
            "name": "originalCardinalTypeId",
            "nameLocation": "2334:22:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "2319:41:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 383,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2319:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 384,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2359:1:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17550165",
            "id": 388,
            "mutability": "mutable",
            "name": "membershipTypeId",
            "nameLocation": "2426:16:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "2411:35:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 386,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2411:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 387,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2445:1:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "71af8374",
            "id": 391,
            "mutability": "mutable",
            "name": "serviceTypeId",
            "nameLocation": "2509:13:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "2494:32:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 389,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2494:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 390,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2525:1:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b43affda",
            "id": 394,
            "mutability": "mutable",
            "name": "originalCardinalTokenIds",
            "nameLocation": "2599:24:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "2582:41:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 392,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2582:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 393,
              "nodeType": "ArrayTypeName",
              "src": "2582:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b15d8d5f",
            "id": 397,
            "mutability": "mutable",
            "name": "membershipTokenIds",
            "nameLocation": "2689:18:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "2672:35:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 395,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2672:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 396,
              "nodeType": "ArrayTypeName",
              "src": "2672:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95914875",
            "id": 399,
            "mutability": "mutable",
            "name": "membershipTokenURI",
            "nameLocation": "2773:18:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "2759:32:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 398,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2759:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0fec3ecc",
            "id": 401,
            "mutability": "mutable",
            "name": "membershipPriceInUSDC",
            "nameLocation": "2868:21:18",
            "nodeType": "VariableDeclaration",
            "scope": 1876,
            "src": "2853:36:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 400,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2853:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 407,
            "name": "membershipNFTMinted",
            "nameLocation": "2902:19:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 403,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2938:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "2922:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2922:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 405,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2961:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "2945:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2921:48:18"
            },
            "src": "2896:74:18"
          },
          {
            "anonymous": false,
            "id": 417,
            "name": "memberChargedForMembership",
            "nameLocation": "2981:26:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 409,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "3024:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "3008:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3008:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 411,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3048:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "3032:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3032:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 413,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "membershipPrice",
                  "nameLocation": "3065:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "3057:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 415,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currTimeStamp",
                  "nameLocation": "3090:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "3082:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3007:97:18"
            },
            "src": "2975:130:18"
          },
          {
            "anonymous": false,
            "id": 423,
            "name": "membershipNFTBurnt",
            "nameLocation": "3116:18:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3151:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "3135:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 421,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3174:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "3158:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:48:18"
            },
            "src": "3110:73:18"
          },
          {
            "anonymous": false,
            "id": 429,
            "name": "tokenURIUpdated",
            "nameLocation": "3194:15:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3226:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "3210:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 427,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newTokenURI",
                  "nameLocation": "3242:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "3235:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3235:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3209:45:18"
            },
            "src": "3188:67:18"
          },
          {
            "anonymous": false,
            "id": 433,
            "name": "membershipPriceUpdated",
            "nameLocation": "3266:22:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newMembershipPrice",
                  "nameLocation": "3305:18:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "3289:34:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3288:36:18"
            },
            "src": "3260:65:18"
          },
          {
            "anonymous": false,
            "id": 439,
            "name": "typeIdUpdated",
            "nameLocation": "3336:13:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "typeIdThatWasUpdated",
                  "nameLocation": "3365:20:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "3350:35:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newTypeId",
                  "nameLocation": "3403:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "3387:25:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3387:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3349:64:18"
            },
            "src": "3330:84:18"
          },
          {
            "anonymous": false,
            "id": 445,
            "name": "memberDiscountSet",
            "nameLocation": "3425:17:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "3459:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "3443:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3443:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "discountAmount",
                  "nameLocation": "3483:14:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "3467:30:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3467:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3442:56:18"
            },
            "src": "3419:80:18"
          },
          {
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "3599:87:18",
              "statements": [
                {
                  "expression": {
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 456,
                      "name": "marketplaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 347,
                      "src": "3609:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 457,
                      "name": "_marketplaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "3630:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3609:40:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "3609:40:18"
                },
                {
                  "expression": {
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 460,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "3659:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4173",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 462,
                          "name": "_USDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 449,
                          "src": "3673:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 461,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4173,
                        "src": "3666:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4173_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3666:13:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4173",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3659:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4173",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "3659:20:18"
                }
              ]
            },
            "id": 467,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "43617264696e616c486f7573654e4654",
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3568:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6ee88678998c54718817266dc4a98fb48d8777ef8dc15d90449d31aedae09c52",
                      "typeString": "literal_string \"CardinalHouseNFT\""
                    },
                    "value": "CardinalHouseNFT"
                  },
                  {
                    "hexValue": "43524e4c4e4654",
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3588:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_837df6b24b44e841af94bf28f10c6aad119ef15fb5f6eaccbd21edaaec5c8586",
                      "typeString": "literal_string \"CRNLNFT\""
                    },
                    "value": "CRNLNFT"
                  }
                ],
                "id": 454,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 451,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5039,
                  "src": "3561:6:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "3561:37:18"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "_marketplaceAddress",
                  "nameLocation": "3525:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "3517:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3517:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "_USDC",
                  "nameLocation": "3554:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "3546:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3546:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3516:44:18"
            },
            "returnParameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3599:0:18"
            },
            "scope": 1876,
            "src": "3505:181:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 533,
              "nodeType": "Block",
              "src": "3879:481:18",
              "statements": [
                {
                  "body": {
                    "id": 531,
                    "nodeType": "Block",
                    "src": "3942:412:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 484,
                              "name": "membershipTokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "3960:18:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 486,
                            "indexExpression": {
                              "id": 485,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "3979:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3960:21:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 487,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 470,
                            "src": "3985:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3960:32:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 530,
                        "nodeType": "IfStatement",
                        "src": "3956:388:18",
                        "trueBody": {
                          "id": 529,
                          "nodeType": "Block",
                          "src": "3994:350:18",
                          "statements": [
                            {
                              "assignments": [
                                490
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 490,
                                  "mutability": "mutable",
                                  "name": "NFTOwner",
                                  "nameLocation": "4020:8:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 529,
                                  "src": "4012:16:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 489,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4012:7:18",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 496,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 492,
                                      "name": "membershipTokenIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 397,
                                      "src": "4039:18:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 494,
                                    "indexExpression": {
                                      "id": 493,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 474,
                                      "src": "4058:1:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4039:21:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 491,
                                  "name": "ownerOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4319,
                                  "src": "4031:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view returns (address)"
                                  }
                                },
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4031:30:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4012:49:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 498,
                                    "name": "NFTOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 490,
                                    "src": "4089:8:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 501,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "4107:4:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                                          "typeString": "contract CardinalNFT"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                                          "typeString": "contract CardinalNFT"
                                        }
                                      ],
                                      "id": 500,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4099:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 499,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4099:7:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4099:13:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 503,
                                      "name": "membershipTokenIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 397,
                                      "src": "4114:18:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 505,
                                    "indexExpression": {
                                      "id": 504,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 474,
                                      "src": "4133:1:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4114:21:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 497,
                                  "name": "_transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4898,
                                  "src": "4079:9:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4079:57:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 507,
                              "nodeType": "ExpressionStatement",
                              "src": "4079:57:18"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 509,
                                    "name": "NFTOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 490,
                                    "src": "4179:8:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 510,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 470,
                                    "src": "4189:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 508,
                                  "name": "membershipNFTBurnt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 423,
                                  "src": "4160:18:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4160:37:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 512,
                              "nodeType": "EmitStatement",
                              "src": "4155:42:18"
                            },
                            {
                              "expression": {
                                "id": 522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 513,
                                    "name": "membershipTokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 397,
                                    "src": "4216:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 515,
                                  "indexExpression": {
                                    "id": 514,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 474,
                                    "src": "4235:1:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4216:21:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 516,
                                    "name": "membershipTokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 397,
                                    "src": "4240:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 521,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 520,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 517,
                                        "name": "membershipTokenIds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 397,
                                        "src": "4259:18:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 518,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "4259:25:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 519,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4285:1:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4259:27:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4240:47:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4216:71:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 523,
                              "nodeType": "ExpressionStatement",
                              "src": "4216:71:18"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 524,
                                    "name": "membershipTokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 397,
                                    "src": "4305:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 526,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "src": "4305:22:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                    "typeString": "function (uint256[] storage pointer)"
                                  }
                                },
                                "id": 527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4305:24:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 528,
                              "nodeType": "ExpressionStatement",
                              "src": "4305:24:18"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 477,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "3906:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 478,
                        "name": "membershipTokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "3910:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3910:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3906:29:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 532,
                  "initializationExpression": {
                    "assignments": [
                      474
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3899:1:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "3894:6:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3894:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 476,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3903:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3894:10:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3937:3:18",
                      "subExpression": {
                        "id": 481,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "3937:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 483,
                    "nodeType": "ExpressionStatement",
                    "src": "3937:3:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "3889:465:18"
                }
              ]
            },
            "documentation": {
              "id": 468,
              "nodeType": "StructuredDocumentation",
              "src": "3692:130:18",
              "text": " @dev Only owner function to burn a membership NFT\n @param tokenId the tokenId of the membership NFT to burn"
            },
            "id": 534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnMembershipNFT",
            "nameLocation": "3836:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3862:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 534,
                  "src": "3854:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3854:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3853:17:18"
            },
            "returnParameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3879:0:18"
            },
            "scope": 1876,
            "src": "3827:533:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 546,
              "nodeType": "Block",
              "src": "4573:43:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 543,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "4601:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 542,
                      "name": "burnMembershipNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "4583:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4583:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "4583:26:18"
                }
              ]
            },
            "documentation": {
              "id": 535,
              "nodeType": "StructuredDocumentation",
              "src": "4366:130:18",
              "text": " @dev Only owner function to burn a membership NFT\n @param tokenId the tokenId of the membership NFT to burn"
            },
            "functionSelector": "eecbbec4",
            "id": 547,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 540,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 539,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "4563:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "4563:9:18"
              }
            ],
            "name": "burnMembershiptNFTManually",
            "nameLocation": "4510:26:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4545:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 547,
                  "src": "4537:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4537:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4536:17:18"
            },
            "returnParameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4573:0:18"
            },
            "scope": 1876,
            "src": "4501:115:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5038
            ],
            "body": {
              "id": 649,
              "nodeType": "Block",
              "src": "4996:795:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 558,
                          "name": "tokenIdToTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 354,
                          "src": "5010:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 560,
                        "indexExpression": {
                          "id": 559,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 554,
                          "src": "5026:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5010:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 561,
                        "name": "membershipTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 388,
                        "src": "5038:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5010:44:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 563,
                          "name": "tokenIdToTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 354,
                          "src": "5058:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 565,
                        "indexExpression": {
                          "id": 564,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 554,
                          "src": "5074:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5058:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 566,
                        "name": "originalCardinalTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "5086:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5058:50:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5010:98:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 640,
                  "nodeType": "IfStatement",
                  "src": "5006:724:18",
                  "trueBody": {
                    "id": 639,
                    "nodeType": "Block",
                    "src": "5110:620:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 569,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 550,
                                "src": "5128:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 570,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2731,
                                  "src": "5136:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5136:7:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5128:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 573,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 550,
                                "src": "5147:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 574,
                                "name": "marketplaceAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 347,
                                "src": "5155:18:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5147:26:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5128:45:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 577,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 550,
                              "src": "5177:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 580,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5193:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5185:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 578,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5185:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5185:10:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5177:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5128:67:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 622,
                        "nodeType": "IfStatement",
                        "src": "5124:481:18",
                        "trueBody": {
                          "id": 621,
                          "nodeType": "Block",
                          "src": "5197:408:18",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 584,
                                    "name": "addressToMemberNFTCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 370,
                                    "src": "5219:23:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 586,
                                  "indexExpression": {
                                    "id": 585,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 550,
                                    "src": "5243:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5219:29:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5251:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5219:33:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 619,
                                "nodeType": "Block",
                                "src": "5521:70:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 617,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 613,
                                          "name": "addressIsMember",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 366,
                                          "src": "5543:15:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                            "typeString": "mapping(address => bool)"
                                          }
                                        },
                                        "id": 615,
                                        "indexExpression": {
                                          "id": 614,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 550,
                                          "src": "5559:4:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "5543:21:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "66616c7365",
                                        "id": 616,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5567:5:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      "src": "5543:29:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 618,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5543:29:18"
                                  }
                                ]
                              },
                              "id": 620,
                              "nodeType": "IfStatement",
                              "src": "5215:376:18",
                              "trueBody": {
                                "id": 612,
                                "nodeType": "Block",
                                "src": "5254:245:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 597,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 589,
                                          "name": "addressToMemberNFTCount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 370,
                                          "src": "5276:23:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 591,
                                        "indexExpression": {
                                          "id": 590,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 550,
                                          "src": "5300:4:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "5276:29:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 596,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "baseExpression": {
                                            "id": 592,
                                            "name": "addressToMemberNFTCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 370,
                                            "src": "5308:23:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 594,
                                          "indexExpression": {
                                            "id": 593,
                                            "name": "from",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 550,
                                            "src": "5332:4:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5308:29:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 595,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5340:1:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "5308:33:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5276:65:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 598,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5276:65:18"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 603,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 599,
                                          "name": "addressToMemberNFTCount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 370,
                                          "src": "5367:23:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 601,
                                        "indexExpression": {
                                          "id": 600,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 550,
                                          "src": "5391:4:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5367:29:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 602,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5400:1:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5367:34:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 611,
                                    "nodeType": "IfStatement",
                                    "src": "5363:118:18",
                                    "trueBody": {
                                      "id": 610,
                                      "nodeType": "Block",
                                      "src": "5403:78:18",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 608,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "id": 604,
                                                "name": "addressIsMember",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 366,
                                                "src": "5429:15:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                  "typeString": "mapping(address => bool)"
                                                }
                                              },
                                              "id": 606,
                                              "indexExpression": {
                                                "id": 605,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 550,
                                                "src": "5445:4:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "5429:21:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "hexValue": "66616c7365",
                                              "id": 607,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "bool",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5453:5:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "value": "false"
                                            },
                                            "src": "5429:29:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 609,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5429:29:18"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 623,
                              "name": "addressIsMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "5618:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 625,
                            "indexExpression": {
                              "id": 624,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 552,
                              "src": "5634:2:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5618:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5640:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5618:26:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 628,
                        "nodeType": "ExpressionStatement",
                        "src": "5618:26:18"
                      },
                      {
                        "expression": {
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 629,
                              "name": "addressToMemberNFTCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 370,
                              "src": "5658:23:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 631,
                            "indexExpression": {
                              "id": 630,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 552,
                              "src": "5682:2:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5658:27:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 632,
                                "name": "addressToMemberNFTCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 370,
                                "src": "5688:23:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 634,
                              "indexExpression": {
                                "id": 633,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 552,
                                "src": "5712:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5688:27:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5718:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5688:31:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5658:61:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 638,
                        "nodeType": "ExpressionStatement",
                        "src": "5658:61:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 644,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "5766:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 645,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "5772:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 646,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "5776:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 641,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5740:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CardinalNFT_$1876_$",
                          "typeString": "type(contract super CardinalNFT)"
                        }
                      },
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5038,
                      "src": "5740:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:44:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "5740:44:18"
                }
              ]
            },
            "documentation": {
              "id": 548,
              "nodeType": "StructuredDocumentation",
              "src": "4622:271:18",
              "text": " @dev After a token transfer, update the addressToMember mapping if the NFT is an Original Cardinal or membership NFT\n @param from the sender's address\n @param to the recipient's address\n @param tokenId the tokenId that was transferred"
            },
            "id": 650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "4907:19:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 556,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4987:8:18"
            },
            "parameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4935:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "4927:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4927:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 552,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4949:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "4941:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4941:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 554,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4961:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "4953:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4953:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4926:43:18"
            },
            "returnParameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4996:0:18"
            },
            "scope": 1876,
            "src": "4898:893:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 792,
              "nodeType": "Block",
              "src": "5988:1281:18",
              "statements": [
                {
                  "assignments": [
                    657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 657,
                      "mutability": "mutable",
                      "name": "currMembershipPriceInUSDC",
                      "nameLocation": "6006:25:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "5998:33:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 656,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5998:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 659,
                  "initialValue": {
                    "id": 658,
                    "name": "membershipPriceInUSDC",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 401,
                    "src": "6034:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5998:57:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 660,
                        "name": "addressToMembershipDiscount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "6070:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 663,
                      "indexExpression": {
                        "expression": {
                          "id": 661,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6098:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6098:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6070:39:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6112:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6070:43:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 678,
                  "nodeType": "IfStatement",
                  "src": "6066:171:18",
                  "trueBody": {
                    "id": 677,
                    "nodeType": "Block",
                    "src": "6115:122:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 666,
                            "name": "currMembershipPriceInUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "6129:25:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 667,
                                "name": "membershipPriceInUSDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 401,
                                "src": "6157:21:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 668,
                                  "name": "addressToMembershipDiscount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 382,
                                  "src": "6181:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 671,
                                "indexExpression": {
                                  "expression": {
                                    "id": 669,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6209:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6209:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6181:39:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6157:63:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6223:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "6157:69:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6129:97:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 676,
                        "nodeType": "ExpressionStatement",
                        "src": "6129:97:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 682,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6270:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6270:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 680,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "6255:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4173",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4112,
                            "src": "6255:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6255:26:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 685,
                          "name": "currMembershipPriceInUSDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "6285:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6255:55:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f756768205553444320746f2070617920666f7220746865206d656d62657273686970204e46542e",
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6312:59:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8660bc0cc15f6188a1aefd14a68c7979317d0c166a1c2daa71cef8432dc3e8e9",
                          "typeString": "literal_string \"You don't have enough USDC to pay for the membership NFT.\""
                        },
                        "value": "You don't have enough USDC to pay for the membership NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8660bc0cc15f6188a1aefd14a68c7979317d0c166a1c2daa71cef8432dc3e8e9",
                          "typeString": "literal_string \"You don't have enough USDC to pay for the membership NFT.\""
                        }
                      ],
                      "id": 679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6247:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6247:125:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "6247:125:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 693,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6405:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6405:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 697,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6425:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                                    "typeString": "contract CardinalNFT"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                                    "typeString": "contract CardinalNFT"
                                  }
                                ],
                                "id": 696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6417:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 695,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6417:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6417:13:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 691,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "6390:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4173",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4132,
                            "src": "6390:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6390:41:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 700,
                          "name": "currMembershipPriceInUSDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "6435:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6390:70:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520686176656e277420617070726f766564207468697320636f6e747261637420746f207370656e6420656e6f756768206f6620796f7572205553444320746f2070617920666f7220746865206d656d62657273686970204e46542e",
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6462:96:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43bfc9f7c5b107f79b50cc45a624157b5af62ab48e697e5b9873732696342dca",
                          "typeString": "literal_string \"You haven't approved this contract to spend enough of your USDC to pay for the membership NFT.\""
                        },
                        "value": "You haven't approved this contract to spend enough of your USDC to pay for the membership NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43bfc9f7c5b107f79b50cc45a624157b5af62ab48e697e5b9873732696342dca",
                          "typeString": "literal_string \"You haven't approved this contract to spend enough of your USDC to pay for the membership NFT.\""
                        }
                      ],
                      "id": 690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6382:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6382:177:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 704,
                  "nodeType": "ExpressionStatement",
                  "src": "6382:177:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 708,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6596:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6596:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 712,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6616:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6608:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 710,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6608:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6608:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 714,
                        "name": "currMembershipPriceInUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "6623:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 705,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "6578:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4173",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4154,
                      "src": "6578:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6578:71:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "6578:71:18"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 717,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "6660:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5511_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 719,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5537,
                      "src": "6660:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5511_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5511_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6660:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "6660:21:18"
                },
                {
                  "assignments": [
                    723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 723,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "6699:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "6691:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 722,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6691:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 727,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 724,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "6711:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5511_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 725,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5523,
                      "src": "6711:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5511_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5511_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6711:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6691:39:18"
                },
                {
                  "expression": {
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 728,
                        "name": "tokenIdToTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "6741:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 730,
                      "indexExpression": {
                        "id": 729,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "6757:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6741:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 731,
                      "name": "membershipTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "6770:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6741:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "6741:45:18"
                },
                {
                  "expression": {
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 734,
                        "name": "tokenIdToListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "6796:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 736,
                      "indexExpression": {
                        "id": 735,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "6816:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6796:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6829:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6796:34:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "6796:34:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 741,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6846:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6846:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 743,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "6858:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 740,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4763,
                      "src": "6840:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6840:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "6840:28:18"
                },
                {
                  "expression": {
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 746,
                        "name": "membershipNFTToLastPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "6878:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 748,
                      "indexExpression": {
                        "id": 747,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "6902:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6878:34:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 749,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6915:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6915:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6878:52:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "6878:52:18"
                },
                {
                  "expression": {
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 753,
                        "name": "addressToMembershipDiscount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "6940:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 756,
                      "indexExpression": {
                        "expression": {
                          "id": 754,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6968:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6968:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6940:39:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6982:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6940:43:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 759,
                  "nodeType": "ExpressionStatement",
                  "src": "6940:43:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 761,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "7006:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 762,
                        "name": "membershipTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "7017:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 760,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5474,
                      "src": "6993:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6993:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "6993:43:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 768,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7062:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7054:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 766,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7054:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7054:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 770,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "7069:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 765,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4433,
                      "src": "7046:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7046:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "7046:33:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 774,
                        "name": "marketplaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "7107:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7127:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 773,
                      "name": "setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4471,
                      "src": "7089:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7089:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "7089:43:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 781,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "7167:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 778,
                        "name": "membershipTokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "7143:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7143:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7143:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 783,
                  "nodeType": "ExpressionStatement",
                  "src": "7143:34:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 785,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7213:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7213:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 787,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "7225:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 784,
                      "name": "membershipNFTMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "7193:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7193:42:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 789,
                  "nodeType": "EmitStatement",
                  "src": "7188:47:18"
                },
                {
                  "expression": {
                    "id": 790,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 723,
                    "src": "7253:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 655,
                  "id": 791,
                  "nodeType": "Return",
                  "src": "7246:16:18"
                }
              ]
            },
            "documentation": {
              "id": 651,
              "nodeType": "StructuredDocumentation",
              "src": "5797:133:18",
              "text": " @dev Allows someone to mint a membership NFT by paying USDC\n @return the ID of the newly minted membership NFT"
            },
            "functionSelector": "7498d280",
            "id": 793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintMembershipNFT",
            "nameLocation": "5944:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5961:2:18"
            },
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "5982:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5982:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5981:6:18"
            },
            "scope": 1876,
            "src": "5935:1334:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 809,
              "nodeType": "Block",
              "src": "7698:69:18",
              "statements": [
                {
                  "expression": {
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 803,
                        "name": "membershipNFTToLastPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "7708:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 805,
                      "indexExpression": {
                        "id": 804,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 796,
                        "src": "7732:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7708:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 806,
                      "name": "lastPaidTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 798,
                      "src": "7743:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7708:52:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "7708:52:18"
                }
              ]
            },
            "documentation": {
              "id": 794,
              "nodeType": "StructuredDocumentation",
              "src": "7275:318:18",
              "text": " @dev Only owner function to update the timestamp for a membership NFT after it has been paid for for a month.\n @param tokenId the ID of the membership NFT to have the timestamp updated for\n @param lastPaidTimestamp the timestamp to update the membership NFT to for when it was last paid for"
            },
            "functionSelector": "1c652fb5",
            "id": 810,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 801,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 800,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "7688:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "7688:9:18"
              }
            ],
            "name": "updateMembershipNFTLastPaid",
            "nameLocation": "7607:27:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7643:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "7635:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7635:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "lastPaidTimestamp",
                  "nameLocation": "7660:17:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "7652:25:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7652:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7634:44:18"
            },
            "returnParameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7698:0:18"
            },
            "scope": 1876,
            "src": "7598:169:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "8348:1140:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 826,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "8374:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 825,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4319,
                            "src": "8366:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8366:16:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 828,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "8386:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8366:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206164647265737320646f65736e2774206f776e20746865204e4654207370656369666965642e",
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8394:45:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_655a88e2cd124c545f32cef045bc3f8aca7e11950295592b0824fb0a1e8e26dc",
                          "typeString": "literal_string \"This address doesn't own the NFT specified.\""
                        },
                        "value": "This address doesn't own the NFT specified."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_655a88e2cd124c545f32cef045bc3f8aca7e11950295592b0824fb0a1e8e26dc",
                          "typeString": "literal_string \"This address doesn't own the NFT specified.\""
                        }
                      ],
                      "id": 824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8358:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8358:82:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 832,
                  "nodeType": "ExpressionStatement",
                  "src": "8358:82:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 835,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 815,
                                "src": "8466:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 834,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4319,
                              "src": "8458:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8458:16:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 837,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2731,
                              "src": "8478:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8478:7:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8458:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 841,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 815,
                                "src": "8497:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 840,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4319,
                              "src": "8489:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8489:16:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 843,
                            "name": "marketplaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "8509:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8489:38:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8458:69:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e27742063686172676520746865206f776e6572206f72206d61726b6574706c61636520666f7220746865206d656d626572736869702e",
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8529:59:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69025aa7d9144b4895576b86225b0f405885f990436c7832db0d661450aeb25e",
                          "typeString": "literal_string \"Can't charge the owner or marketplace for the membership.\""
                        },
                        "value": "Can't charge the owner or marketplace for the membership."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69025aa7d9144b4895576b86225b0f405885f990436c7832db0d661450aeb25e",
                          "typeString": "literal_string \"Can't charge the owner or marketplace for the membership.\""
                        }
                      ],
                      "id": 833,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8450:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8450:139:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 848,
                  "nodeType": "ExpressionStatement",
                  "src": "8450:139:18"
                },
                {
                  "assignments": [
                    850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 850,
                      "mutability": "mutable",
                      "name": "currMembershipPriceInUSDC",
                      "nameLocation": "8608:25:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 940,
                      "src": "8600:33:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 849,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8600:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 852,
                  "initialValue": {
                    "id": 851,
                    "name": "membershipPriceInUSDC",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 401,
                    "src": "8636:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8600:57:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 853,
                        "name": "addressToMembershipDiscount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "8672:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 855,
                      "indexExpression": {
                        "id": 854,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "8700:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8672:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8710:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8672:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 869,
                  "nodeType": "IfStatement",
                  "src": "8668:163:18",
                  "trueBody": {
                    "id": 868,
                    "nodeType": "Block",
                    "src": "8713:118:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 858,
                            "name": "currMembershipPriceInUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 850,
                            "src": "8727:25:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 859,
                                "name": "membershipPriceInUSDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 401,
                                "src": "8755:21:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 860,
                                  "name": "addressToMembershipDiscount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 382,
                                  "src": "8779:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 862,
                                "indexExpression": {
                                  "id": 861,
                                  "name": "member",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 813,
                                  "src": "8807:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8779:35:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8755:59:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8817:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "8755:65:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8727:93:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 867,
                        "nodeType": "ExpressionStatement",
                        "src": "8727:93:18"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 872,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "8860:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 870,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "8845:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4173",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4112,
                          "src": "8845:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8845:22:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 874,
                        "name": "currMembershipPriceInUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "8870:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8845:50:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 878,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "8914:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 881,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8930:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                                  "typeString": "contract CardinalNFT"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                                  "typeString": "contract CardinalNFT"
                                }
                              ],
                              "id": 880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8922:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 879,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8922:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8922:13:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 876,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "8899:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4173",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4132,
                          "src": "8899:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8899:37:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 884,
                        "name": "currMembershipPriceInUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "8939:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8899:65:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8845:119:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 894,
                  "nodeType": "IfStatement",
                  "src": "8841:198:18",
                  "trueBody": {
                    "id": 893,
                    "nodeType": "Block",
                    "src": "8966:73:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 888,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "8998:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 887,
                            "name": "burnMembershipNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "8980:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8980:26:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 890,
                        "nodeType": "ExpressionStatement",
                        "src": "8980:26:18"
                      },
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9027:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 823,
                        "id": 892,
                        "nodeType": "Return",
                        "src": "9020:8:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 898,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "9067:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 901,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9083:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9075:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 899,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9075:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9075:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 903,
                        "name": "currMembershipPriceInUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "9090:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 895,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "9049:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4173",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4154,
                      "src": "9049:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9049:67:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "9049:67:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 906,
                      "name": "currTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "9131:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9147:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9131:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 923,
                    "nodeType": "Block",
                    "src": "9237:75:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 916,
                              "name": "membershipNFTToLastPaid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "9251:23:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 918,
                            "indexExpression": {
                              "id": 917,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "9275:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9251:32:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 919,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9286:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "9286:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9251:50:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 922,
                        "nodeType": "ExpressionStatement",
                        "src": "9251:50:18"
                      }
                    ]
                  },
                  "id": 924,
                  "nodeType": "IfStatement",
                  "src": "9127:185:18",
                  "trueBody": {
                    "id": 915,
                    "nodeType": "Block",
                    "src": "9150:73:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 909,
                              "name": "membershipNFTToLastPaid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "9164:23:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 911,
                            "indexExpression": {
                              "id": 910,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "9188:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9164:32:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 912,
                            "name": "currTimeStamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "9199:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9164:48:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 914,
                        "nodeType": "ExpressionStatement",
                        "src": "9164:48:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 925,
                        "name": "addressToMembershipDiscount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "9322:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 927,
                      "indexExpression": {
                        "id": 926,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "9350:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9322:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9360:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9322:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "9322:39:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 932,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "9404:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 933,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "9412:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 934,
                        "name": "currMembershipPriceInUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "9421:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 935,
                        "name": "currTimeStamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "9448:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 931,
                      "name": "memberChargedForMembership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "9377:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9377:85:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 937,
                  "nodeType": "EmitStatement",
                  "src": "9372:90:18"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9480:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 823,
                  "id": 939,
                  "nodeType": "Return",
                  "src": "9473:8:18"
                }
              ]
            },
            "documentation": {
              "id": 811,
              "nodeType": "StructuredDocumentation",
              "src": "7773:445:18",
              "text": " @dev Only owner function to take funds from an address to pay for the next month of a membership\n @param member the address of the member that is being charged for the next month of a membership\n @param tokenId the token ID that the member is being charged\n @param currTimeStamp the current timestamp for the transaction to avoid relying on block.timestamp\n @return 0 for success, 1 for failure and NFT burn"
            },
            "functionSelector": "bb3b407b",
            "id": 941,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 820,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 819,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "8323:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "8323:9:18"
              }
            ],
            "name": "chargeMemberForMembership",
            "nameLocation": "8232:25:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "8266:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "8258:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8258:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8282:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "8274:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8274:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "currTimeStamp",
                  "nameLocation": "8299:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "8291:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8291:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8257:56:18"
            },
            "returnParameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "8342:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8342:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8341:6:18"
            },
            "scope": 1876,
            "src": "8223:1265:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "9675:70:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 950,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2731,
                          "src": "9699:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9699:7:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 956,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9731:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                                  "typeString": "contract CardinalNFT"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                                  "typeString": "contract CardinalNFT"
                                }
                              ],
                              "id": 955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9723:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 954,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9723:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9723:13:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 952,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "9708:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4173",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4112,
                          "src": "9708:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9708:29:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 947,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "9685:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4173",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4122,
                      "src": "9685:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9685:53:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "9685:53:18"
                }
              ]
            },
            "documentation": {
              "id": 942,
              "nodeType": "StructuredDocumentation",
              "src": "9494:119:18",
              "text": " @dev Only owner function to withdraw the USDC that are paid to this contract for the Membership NFTs."
            },
            "functionSelector": "beb48326",
            "id": 962,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 945,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 944,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "9665:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "9665:9:18"
              }
            ],
            "name": "withdrawMembershipNFTFunds",
            "nameLocation": "9627:26:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9653:2:18"
            },
            "returnParameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9675:0:18"
            },
            "scope": 1876,
            "src": "9618:127:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1068,
              "nodeType": "Block",
              "src": "10393:834:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 978,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "10403:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5511_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 980,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5537,
                      "src": "10403:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5511_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5511_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10403:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 982,
                  "nodeType": "ExpressionStatement",
                  "src": "10403:21:18"
                },
                {
                  "assignments": [
                    984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 984,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "10442:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1068,
                      "src": "10434:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 983,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10434:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 988,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 985,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "10454:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5511_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 986,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5523,
                      "src": "10454:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5511_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5511_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10454:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10434:39:18"
                },
                {
                  "expression": {
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 989,
                        "name": "tokenIdToTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "10484:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 991,
                      "indexExpression": {
                        "id": 990,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "10500:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10484:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 992,
                      "name": "typeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 967,
                      "src": "10513:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10484:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "10484:35:18"
                },
                {
                  "expression": {
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 995,
                        "name": "tokenIdToListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "10529:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 997,
                      "indexExpression": {
                        "id": 996,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "10549:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10529:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 998,
                      "name": "listingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "10562:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10529:43:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "10529:43:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1002,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10588:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10588:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1004,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "10600:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1001,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4763,
                      "src": "10582:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10582:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "10582:28:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1008,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "10633:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1009,
                        "name": "newTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "10644:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1007,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5474,
                      "src": "10620:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10620:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "10620:36:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1015,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10682:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                              "typeString": "contract CardinalNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalNFT_$1876",
                              "typeString": "contract CardinalNFT"
                            }
                          ],
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10674:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1013,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10674:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10674:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1017,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "10689:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1012,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4433,
                      "src": "10666:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10666:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "10666:33:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1021,
                        "name": "marketplaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "10727:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10747:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1020,
                      "name": "setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4471,
                      "src": "10709:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10709:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "10709:43:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1025,
                      "name": "typeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 967,
                      "src": "10767:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1026,
                      "name": "originalCardinalTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 385,
                      "src": "10777:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10767:32:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1035,
                        "name": "typeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "10884:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1036,
                        "name": "membershipTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 388,
                        "src": "10894:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10884:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1064,
                    "nodeType": "IfStatement",
                    "src": "10880:314:18",
                    "trueBody": {
                      "id": 1063,
                      "nodeType": "Block",
                      "src": "10912:282:18",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1041,
                                "name": "newItemId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 984,
                                "src": "10950:9:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1038,
                                "name": "membershipTokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 397,
                                "src": "10926:18:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "push",
                              "nodeType": "MemberAccess",
                              "src": "10926:23:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                "typeString": "function (uint256[] storage pointer,uint256)"
                              }
                            },
                            "id": 1042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10926:34:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1043,
                          "nodeType": "ExpressionStatement",
                          "src": "10926:34:18"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1044,
                              "name": "currTimeStamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "10979:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10995:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10979:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 1061,
                            "nodeType": "Block",
                            "src": "11099:85:18",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1059,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 1054,
                                      "name": "membershipNFTToLastPaid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 374,
                                      "src": "11117:23:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 1056,
                                    "indexExpression": {
                                      "id": 1055,
                                      "name": "newItemId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 984,
                                      "src": "11141:9:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "11117:34:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 1057,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "11154:5:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1058,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "11154:15:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11117:52:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1060,
                                "nodeType": "ExpressionStatement",
                                "src": "11117:52:18"
                              }
                            ]
                          },
                          "id": 1062,
                          "nodeType": "IfStatement",
                          "src": "10975:209:18",
                          "trueBody": {
                            "id": 1053,
                            "nodeType": "Block",
                            "src": "10998:83:18",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1051,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 1047,
                                      "name": "membershipNFTToLastPaid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 374,
                                      "src": "11016:23:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 1049,
                                    "indexExpression": {
                                      "id": 1048,
                                      "name": "newItemId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 984,
                                      "src": "11040:9:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "11016:34:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 1050,
                                    "name": "currTimeStamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 971,
                                    "src": "11053:13:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11016:50:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1052,
                                "nodeType": "ExpressionStatement",
                                "src": "11016:50:18"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "id": 1065,
                  "nodeType": "IfStatement",
                  "src": "10763:431:18",
                  "trueBody": {
                    "id": 1034,
                    "nodeType": "Block",
                    "src": "10801:65:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1031,
                              "name": "newItemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "10845:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1028,
                              "name": "originalCardinalTokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "10815:24:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10815:29:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10815:40:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1033,
                        "nodeType": "ExpressionStatement",
                        "src": "10815:40:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1066,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 984,
                    "src": "11211:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 977,
                  "id": 1067,
                  "nodeType": "Return",
                  "src": "11204:16:18"
                }
              ]
            },
            "documentation": {
              "id": 963,
              "nodeType": "StructuredDocumentation",
              "src": "9751:496:18",
              "text": " @dev Only owner function to mint a new NFT.\n @param newTokenURI the token URI on IPFS for the NFT metadata\n @param typeId the type ID of the NFT to distinguish what type of NFT it is (Original Cardinal, membership, service)\n @param listingFee the fee the user pays when putting the NFT for sale on the marketplace\n @param currTimeStamp the current timestamp for the transaction to avoid relying on block.timestamp\n @return the ID of the newly minted NFT"
            },
            "functionSelector": "4623c740",
            "id": 1069,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 974,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 973,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "10368:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "10368:9:18"
              }
            ],
            "name": "createToken",
            "nameLocation": "10261:11:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "newTokenURI",
                  "nameLocation": "10287:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "10273:25:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10273:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 967,
                  "mutability": "mutable",
                  "name": "typeId",
                  "nameLocation": "10308:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "10300:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10300:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "listingFee",
                  "nameLocation": "10324:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "10316:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10316:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 971,
                  "mutability": "mutable",
                  "name": "currTimeStamp",
                  "nameLocation": "10344:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "10336:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10336:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10272:86:18"
            },
            "returnParameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "10387:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10387:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10386:6:18"
            },
            "scope": 1876,
            "src": "10252:975:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1089,
              "nodeType": "Block",
              "src": "11517:103:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1080,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "11540:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1081,
                        "name": "newTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "11549:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1079,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5474,
                      "src": "11527:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11527:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1083,
                  "nodeType": "ExpressionStatement",
                  "src": "11527:34:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1085,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "11592:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1086,
                        "name": "newTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "11601:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1084,
                      "name": "tokenURIUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "11576:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11576:37:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1088,
                  "nodeType": "EmitStatement",
                  "src": "11571:42:18"
                }
              ]
            },
            "documentation": {
              "id": 1070,
              "nodeType": "StructuredDocumentation",
              "src": "11233:195:18",
              "text": " @dev Setter function for the token URI of an NFT.\n @param tokenId the ID of the NFT to update the token URI of\n @param newTokenURI the token URI to update the NFT with"
            },
            "functionSelector": "162094c4",
            "id": 1090,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1077,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1076,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "11507:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "11507:9:18"
              }
            ],
            "name": "setTokenURI",
            "nameLocation": "11442:11:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11462:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1090,
                  "src": "11454:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11454:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "newTokenURI",
                  "nameLocation": "11485:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1090,
                  "src": "11471:25:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11471:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11453:44:18"
            },
            "returnParameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11517:0:18"
            },
            "scope": 1876,
            "src": "11433:187:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1148,
              "nodeType": "Block",
              "src": "11922:386:18",
              "statements": [
                {
                  "assignments": [
                    1100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1100,
                      "mutability": "mutable",
                      "name": "userTokenCount",
                      "nameLocation": "11940:14:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1148,
                      "src": "11932:22:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1099,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11932:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1104,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1102,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "11967:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1101,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4291,
                      "src": "11957:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11957:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11932:47:18"
                },
                {
                  "assignments": [
                    1106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1106,
                      "mutability": "mutable",
                      "name": "currTokenId",
                      "nameLocation": "11997:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1148,
                      "src": "11989:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1105,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11989:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1108,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12011:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11989:23:18"
                },
                {
                  "assignments": [
                    1113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1113,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "12038:16:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1148,
                      "src": "12022:32:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1111,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12022:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1112,
                        "nodeType": "ArrayTypeName",
                        "src": "12022:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1119,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1117,
                        "name": "userTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1100,
                        "src": "12070:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "12057:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1114,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12061:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1115,
                        "nodeType": "ArrayTypeName",
                        "src": "12061:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12057:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12022:63:18"
                },
                {
                  "body": {
                    "id": 1144,
                    "nodeType": "Block",
                    "src": "12137:131:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1129,
                            "name": "currTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1106,
                            "src": "12151:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1131,
                                "name": "userAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1093,
                                "src": "12185:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1132,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1121,
                                "src": "12198:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1130,
                              "name": "tokenOfOwnerByIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5117,
                              "src": "12165:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 1133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12165:35:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12151:49:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1135,
                        "nodeType": "ExpressionStatement",
                        "src": "12151:49:18"
                      },
                      {
                        "expression": {
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1136,
                              "name": "userNFTTokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1113,
                              "src": "12214:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 1138,
                            "indexExpression": {
                              "id": 1137,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "12231:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12214:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1140,
                                "name": "currTokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1106,
                                "src": "12245:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1139,
                              "name": "tokenURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1875
                              ],
                              "referencedDeclaration": 1875,
                              "src": "12236:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) view returns (string memory)"
                              }
                            },
                            "id": 1141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12236:21:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "12214:43:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1143,
                        "nodeType": "ExpressionStatement",
                        "src": "12214:43:18"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1123,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1121,
                      "src": "12112:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1124,
                      "name": "userTokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "12116:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12112:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1145,
                  "initializationExpression": {
                    "assignments": [
                      1121
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1121,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12109:1:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 1145,
                        "src": "12101:9:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12101:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1122,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12101:9:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12132:3:18",
                      "subExpression": {
                        "id": 1126,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "12132:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1128,
                    "nodeType": "ExpressionStatement",
                    "src": "12132:3:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "12096:172:18"
                },
                {
                  "expression": {
                    "id": 1146,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1113,
                    "src": "12285:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1098,
                  "id": 1147,
                  "nodeType": "Return",
                  "src": "12278:23:18"
                }
              ]
            },
            "documentation": {
              "id": 1091,
              "nodeType": "StructuredDocumentation",
              "src": "11626:204:18",
              "text": " @dev Function to get all token URIs for tokens that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's NFTs"
            },
            "functionSelector": "8f01785d",
            "id": 1149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTokenURIs",
            "nameLocation": "11844:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1093,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "11869:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "11861:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11861:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11860:21:18"
            },
            "returnParameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "11905:15:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1095,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "11905:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1096,
                    "nodeType": "ArrayTypeName",
                    "src": "11905:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11904:17:18"
            },
            "scope": 1876,
            "src": "11835:473:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1197,
              "nodeType": "Block",
              "src": "12607:303:18",
              "statements": [
                {
                  "assignments": [
                    1159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1159,
                      "mutability": "mutable",
                      "name": "userTokenCount",
                      "nameLocation": "12625:14:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1197,
                      "src": "12617:22:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1158,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12617:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1163,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1161,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "12652:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1160,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4291,
                      "src": "12642:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12642:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12617:47:18"
                },
                {
                  "assignments": [
                    1168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1168,
                      "mutability": "mutable",
                      "name": "userNFTTokenIDs",
                      "nameLocation": "12691:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1197,
                      "src": "12674:32:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12674:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1167,
                        "nodeType": "ArrayTypeName",
                        "src": "12674:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1174,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1172,
                        "name": "userTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1159,
                        "src": "12723:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "12709:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1169,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12713:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1170,
                        "nodeType": "ArrayTypeName",
                        "src": "12713:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12709:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12674:64:18"
                },
                {
                  "body": {
                    "id": 1193,
                    "nodeType": "Block",
                    "src": "12790:81:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1184,
                              "name": "userNFTTokenIDs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1168,
                              "src": "12804:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1186,
                            "indexExpression": {
                              "id": 1185,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1176,
                              "src": "12820:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12804:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1188,
                                "name": "userAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1152,
                                "src": "12845:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1189,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1176,
                                "src": "12858:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1187,
                              "name": "tokenOfOwnerByIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5117,
                              "src": "12825:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 1190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12825:35:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12804:56:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1192,
                        "nodeType": "ExpressionStatement",
                        "src": "12804:56:18"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1178,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1176,
                      "src": "12765:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1179,
                      "name": "userTokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1159,
                      "src": "12769:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12765:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1194,
                  "initializationExpression": {
                    "assignments": [
                      1176
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1176,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12762:1:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 1194,
                        "src": "12754:9:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12754:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1177,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12754:9:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12785:3:18",
                      "subExpression": {
                        "id": 1181,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1176,
                        "src": "12785:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1183,
                    "nodeType": "ExpressionStatement",
                    "src": "12785:3:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "12749:122:18"
                },
                {
                  "expression": {
                    "id": 1195,
                    "name": "userNFTTokenIDs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1168,
                    "src": "12888:15:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 1157,
                  "id": 1196,
                  "nodeType": "Return",
                  "src": "12881:22:18"
                }
              ]
            },
            "documentation": {
              "id": 1150,
              "nodeType": "StructuredDocumentation",
              "src": "12314:201:18",
              "text": " @dev Function to get all token IDs for tokens that a given user owns.\n @param userAddress the user's address to get token IDs of\n @return list of token IDs for a user's NFTs"
            },
            "functionSelector": "595ee598",
            "id": 1198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTokenIDs",
            "nameLocation": "12529:15:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "12553:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1198,
                  "src": "12545:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12545:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12544:21:18"
            },
            "returnParameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1198,
                  "src": "12589:16:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1154,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12589:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1155,
                    "nodeType": "ArrayTypeName",
                    "src": "12589:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12588:18:18"
            },
            "scope": 1876,
            "src": "12520:390:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1304,
              "nodeType": "Block",
              "src": "13266:756:18",
              "statements": [
                {
                  "assignments": [
                    1208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1208,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "13281:8:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1304,
                      "src": "13276:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1207,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13276:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1212,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1209,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "13292:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5511_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5523,
                      "src": "13292:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5511_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5511_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13292:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13276:35:18"
                },
                {
                  "assignments": [
                    1214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1214,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "13326:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1304,
                      "src": "13321:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1213,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13321:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1216,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13341:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13321:21:18"
                },
                {
                  "assignments": [
                    1218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1218,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "13357:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1304,
                      "src": "13352:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1217,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13352:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1220,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13372:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13352:21:18"
                },
                {
                  "body": {
                    "id": 1248,
                    "nodeType": "Block",
                    "src": "13424:155:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1232,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1222,
                                  "src": "13450:2:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1231,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4319,
                                "src": "13442:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 1233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13442:11:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1234,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "13457:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "13442:26:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1236,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 354,
                                "src": "13472:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1238,
                              "indexExpression": {
                                "id": 1237,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "13488:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13472:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1239,
                              "name": "originalCardinalTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 385,
                              "src": "13495:22:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13472:45:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13442:75:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1247,
                        "nodeType": "IfStatement",
                        "src": "13438:131:18",
                        "trueBody": {
                          "id": 1246,
                          "nodeType": "Block",
                          "src": "13519:50:18",
                          "statements": [
                            {
                              "expression": {
                                "id": 1244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1242,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1214,
                                  "src": "13537:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13553:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "13537:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1245,
                              "nodeType": "ExpressionStatement",
                              "src": "13537:17:18"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1225,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1222,
                      "src": "13402:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1226,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1208,
                      "src": "13408:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13402:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1249,
                  "initializationExpression": {
                    "assignments": [
                      1222
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1222,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "13394:2:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "13389:7:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1221,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13389:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1224,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13399:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13389:11:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13418:4:18",
                      "subExpression": {
                        "id": 1228,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1222,
                        "src": "13418:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1230,
                    "nodeType": "ExpressionStatement",
                    "src": "13418:4:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "13384:195:18"
                },
                {
                  "assignments": [
                    1254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1254,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "13605:16:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1304,
                      "src": "13589:32:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1252,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "13589:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1253,
                        "nodeType": "ArrayTypeName",
                        "src": "13589:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1260,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1258,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1214,
                        "src": "13637:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13624:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1255,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "13628:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1256,
                        "nodeType": "ArrayTypeName",
                        "src": "13628:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13624:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13589:61:18"
                },
                {
                  "body": {
                    "id": 1300,
                    "nodeType": "Block",
                    "src": "13701:273:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1272,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1262,
                                  "src": "13727:2:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1271,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4319,
                                "src": "13719:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 1273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13719:11:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1274,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "13734:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "13719:26:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1276,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 354,
                                "src": "13749:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1278,
                              "indexExpression": {
                                "id": 1277,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1262,
                                "src": "13765:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13749:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1279,
                              "name": "originalCardinalTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 385,
                              "src": "13772:22:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13749:45:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13719:75:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1299,
                        "nodeType": "IfStatement",
                        "src": "13715:249:18",
                        "trueBody": {
                          "id": 1298,
                          "nodeType": "Block",
                          "src": "13796:168:18",
                          "statements": [
                            {
                              "assignments": [
                                1283
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1283,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "13828:10:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1298,
                                  "src": "13814:24:18",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 1282,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13814:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1287,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1285,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1262,
                                    "src": "13850:2:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1284,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    1875
                                  ],
                                  "referencedDeclaration": 1875,
                                  "src": "13841:8:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 1286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13841:12:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "13814:39:18"
                            },
                            {
                              "expression": {
                                "id": 1292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1288,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1254,
                                    "src": "13871:16:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 1290,
                                  "indexExpression": {
                                    "id": 1289,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1218,
                                    "src": "13888:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13871:30:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1291,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "13904:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "13871:43:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 1293,
                              "nodeType": "ExpressionStatement",
                              "src": "13871:43:18"
                            },
                            {
                              "expression": {
                                "id": 1296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1294,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1218,
                                  "src": "13932:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13948:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "13932:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1297,
                              "nodeType": "ExpressionStatement",
                              "src": "13932:17:18"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1265,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1262,
                      "src": "13679:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1266,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1208,
                      "src": "13685:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13679:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1301,
                  "initializationExpression": {
                    "assignments": [
                      1262
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1262,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "13671:2:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 1301,
                        "src": "13666:7:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1261,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13666:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1264,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13676:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13666:11:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13695:4:18",
                      "subExpression": {
                        "id": 1268,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1262,
                        "src": "13695:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1270,
                    "nodeType": "ExpressionStatement",
                    "src": "13695:4:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "13661:313:18"
                },
                {
                  "expression": {
                    "id": 1302,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1254,
                    "src": "13999:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1206,
                  "id": 1303,
                  "nodeType": "Return",
                  "src": "13992:23:18"
                }
              ]
            },
            "documentation": {
              "id": 1199,
              "nodeType": "StructuredDocumentation",
              "src": "12920:238:18",
              "text": " @dev Function to get all token URIs for Original Cardinal NFTs that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's Original Cardinal NFTs"
            },
            "functionSelector": "56060a74",
            "id": 1305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserOriginalCardinalTokenURIs",
            "nameLocation": "13172:32:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "13213:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "13205:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13205:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13204:21:18"
            },
            "returnParameters": {
              "id": 1206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "13249:15:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1203,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "13249:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1204,
                    "nodeType": "ArrayTypeName",
                    "src": "13249:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13248:17:18"
            },
            "scope": 1876,
            "src": "13163:859:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1425,
              "nodeType": "Block",
              "src": "14354:846:18",
              "statements": [
                {
                  "assignments": [
                    1315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1315,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "14369:8:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1425,
                      "src": "14364:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1314,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14364:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1319,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1316,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "14380:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5511_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1317,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5523,
                      "src": "14380:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5511_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5511_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14380:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14364:35:18"
                },
                {
                  "assignments": [
                    1321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1321,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "14414:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1425,
                      "src": "14409:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1320,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14409:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1323,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14429:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14409:21:18"
                },
                {
                  "assignments": [
                    1325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1325,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "14445:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1425,
                      "src": "14440:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1324,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14440:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1327,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14460:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14440:21:18"
                },
                {
                  "body": {
                    "id": 1362,
                    "nodeType": "Block",
                    "src": "14512:200:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1339,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1329,
                                  "src": "14538:2:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1338,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4319,
                                "src": "14530:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 1340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14530:11:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1341,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1308,
                              "src": "14545:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "14530:26:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1347,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 1343,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 354,
                                      "src": "14561:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 1345,
                                    "indexExpression": {
                                      "id": 1344,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1329,
                                      "src": "14577:2:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14561:19:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 1346,
                                    "name": "originalCardinalTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 385,
                                    "src": "14584:22:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14561:45:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 1348,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 354,
                                      "src": "14610:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 1350,
                                    "indexExpression": {
                                      "id": 1349,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1329,
                                      "src": "14626:2:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14610:19:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 1351,
                                    "name": "membershipTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 388,
                                    "src": "14633:16:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14610:39:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "14561:88:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1354,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14560:90:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14530:120:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1361,
                        "nodeType": "IfStatement",
                        "src": "14526:176:18",
                        "trueBody": {
                          "id": 1360,
                          "nodeType": "Block",
                          "src": "14652:50:18",
                          "statements": [
                            {
                              "expression": {
                                "id": 1358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1356,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1321,
                                  "src": "14670:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14686:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "14670:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1359,
                              "nodeType": "ExpressionStatement",
                              "src": "14670:17:18"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1332,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1329,
                      "src": "14490:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1333,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1315,
                      "src": "14496:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14490:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1363,
                  "initializationExpression": {
                    "assignments": [
                      1329
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1329,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "14482:2:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 1363,
                        "src": "14477:7:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1328,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14477:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1331,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14487:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14477:11:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14506:4:18",
                      "subExpression": {
                        "id": 1335,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1329,
                        "src": "14506:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1337,
                    "nodeType": "ExpressionStatement",
                    "src": "14506:4:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "14472:240:18"
                },
                {
                  "assignments": [
                    1368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1368,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "14738:16:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1425,
                      "src": "14722:32:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1366,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14722:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1367,
                        "nodeType": "ArrayTypeName",
                        "src": "14722:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1374,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1372,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1321,
                        "src": "14770:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14757:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1369,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14761:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1370,
                        "nodeType": "ArrayTypeName",
                        "src": "14761:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 1373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14757:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14722:61:18"
                },
                {
                  "body": {
                    "id": 1421,
                    "nodeType": "Block",
                    "src": "14834:318:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1386,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1376,
                                  "src": "14860:2:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1385,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4319,
                                "src": "14852:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 1387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14852:11:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1388,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1308,
                              "src": "14867:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "14852:26:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 1390,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 354,
                                      "src": "14883:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 1392,
                                    "indexExpression": {
                                      "id": 1391,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1376,
                                      "src": "14899:2:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14883:19:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 1393,
                                    "name": "originalCardinalTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 385,
                                    "src": "14906:22:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14883:45:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1399,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 1395,
                                      "name": "tokenIdToTypeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 354,
                                      "src": "14932:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 1397,
                                    "indexExpression": {
                                      "id": 1396,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1376,
                                      "src": "14948:2:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14932:19:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 1398,
                                    "name": "membershipTypeId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 388,
                                    "src": "14955:16:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14932:39:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "14883:88:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1401,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14882:90:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14852:120:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1420,
                        "nodeType": "IfStatement",
                        "src": "14848:294:18",
                        "trueBody": {
                          "id": 1419,
                          "nodeType": "Block",
                          "src": "14974:168:18",
                          "statements": [
                            {
                              "assignments": [
                                1404
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1404,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "15006:10:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1419,
                                  "src": "14992:24:18",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 1403,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14992:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1408,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1406,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1376,
                                    "src": "15028:2:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1405,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    1875
                                  ],
                                  "referencedDeclaration": 1875,
                                  "src": "15019:8:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 1407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15019:12:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14992:39:18"
                            },
                            {
                              "expression": {
                                "id": 1413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1409,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1368,
                                    "src": "15049:16:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 1411,
                                  "indexExpression": {
                                    "id": 1410,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1325,
                                    "src": "15066:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15049:30:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1412,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1404,
                                  "src": "15082:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "15049:43:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 1414,
                              "nodeType": "ExpressionStatement",
                              "src": "15049:43:18"
                            },
                            {
                              "expression": {
                                "id": 1417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1415,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1325,
                                  "src": "15110:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1416,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15126:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "15110:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1418,
                              "nodeType": "ExpressionStatement",
                              "src": "15110:17:18"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1379,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1376,
                      "src": "14812:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1380,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1315,
                      "src": "14818:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14812:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1422,
                  "initializationExpression": {
                    "assignments": [
                      1376
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1376,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "14804:2:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 1422,
                        "src": "14799:7:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1375,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14799:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1378,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14809:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14799:11:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14828:4:18",
                      "subExpression": {
                        "id": 1382,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1376,
                        "src": "14828:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1384,
                    "nodeType": "ExpressionStatement",
                    "src": "14828:4:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "14794:358:18"
                },
                {
                  "expression": {
                    "id": 1423,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1368,
                    "src": "15177:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1313,
                  "id": 1424,
                  "nodeType": "Return",
                  "src": "15170:23:18"
                }
              ]
            },
            "documentation": {
              "id": 1306,
              "nodeType": "StructuredDocumentation",
              "src": "14028:224:18",
              "text": " @dev Function to get all token URIs for membership NFTs that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's membership NFTs"
            },
            "functionSelector": "33a41510",
            "id": 1426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserMembershipTokenURIs",
            "nameLocation": "14266:26:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "14301:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1426,
                  "src": "14293:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14293:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14292:21:18"
            },
            "returnParameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1426,
                  "src": "14337:15:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1310,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "14337:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1311,
                    "nodeType": "ArrayTypeName",
                    "src": "14337:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14336:17:18"
            },
            "scope": 1876,
            "src": "14257:943:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1532,
              "nodeType": "Block",
              "src": "15523:738:18",
              "statements": [
                {
                  "assignments": [
                    1436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1436,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "15538:8:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1532,
                      "src": "15533:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1435,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15533:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1440,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1437,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "15549:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5511_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1438,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5523,
                      "src": "15549:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5511_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5511_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15549:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15533:35:18"
                },
                {
                  "assignments": [
                    1442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1442,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "15583:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1532,
                      "src": "15578:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1441,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15578:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1444,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15598:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15578:21:18"
                },
                {
                  "assignments": [
                    1446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1446,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "15614:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1532,
                      "src": "15609:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1445,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15609:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1448,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15629:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15609:21:18"
                },
                {
                  "body": {
                    "id": 1476,
                    "nodeType": "Block",
                    "src": "15681:146:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1460,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1450,
                                  "src": "15707:2:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1459,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4319,
                                "src": "15699:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 1461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15699:11:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1462,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1429,
                              "src": "15714:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "15699:26:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1464,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 354,
                                "src": "15729:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1466,
                              "indexExpression": {
                                "id": 1465,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1450,
                                "src": "15745:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15729:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1467,
                              "name": "serviceTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "15752:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15729:36:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15699:66:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1475,
                        "nodeType": "IfStatement",
                        "src": "15695:122:18",
                        "trueBody": {
                          "id": 1474,
                          "nodeType": "Block",
                          "src": "15767:50:18",
                          "statements": [
                            {
                              "expression": {
                                "id": 1472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1470,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1442,
                                  "src": "15785:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1471,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15801:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "15785:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1473,
                              "nodeType": "ExpressionStatement",
                              "src": "15785:17:18"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1453,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1450,
                      "src": "15659:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1454,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1436,
                      "src": "15665:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15659:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1477,
                  "initializationExpression": {
                    "assignments": [
                      1450
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1450,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "15651:2:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "15646:7:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1449,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15646:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1452,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15656:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15646:11:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15675:4:18",
                      "subExpression": {
                        "id": 1456,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1450,
                        "src": "15675:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1458,
                    "nodeType": "ExpressionStatement",
                    "src": "15675:4:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "15641:186:18"
                },
                {
                  "assignments": [
                    1482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1482,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "15853:16:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1532,
                      "src": "15837:32:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1480,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "15837:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1481,
                        "nodeType": "ArrayTypeName",
                        "src": "15837:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1488,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1486,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "15885:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15872:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1483,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "15876:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1484,
                        "nodeType": "ArrayTypeName",
                        "src": "15876:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15872:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15837:61:18"
                },
                {
                  "body": {
                    "id": 1528,
                    "nodeType": "Block",
                    "src": "15949:264:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1500,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1490,
                                  "src": "15975:2:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1499,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4319,
                                "src": "15967:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 1501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15967:11:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1502,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1429,
                              "src": "15982:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "15967:26:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1504,
                                "name": "tokenIdToTypeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 354,
                                "src": "15997:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1506,
                              "indexExpression": {
                                "id": 1505,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1490,
                                "src": "16013:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15997:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1507,
                              "name": "serviceTypeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "16020:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15997:36:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15967:66:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1527,
                        "nodeType": "IfStatement",
                        "src": "15963:240:18",
                        "trueBody": {
                          "id": 1526,
                          "nodeType": "Block",
                          "src": "16035:168:18",
                          "statements": [
                            {
                              "assignments": [
                                1511
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1511,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "16067:10:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1526,
                                  "src": "16053:24:18",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 1510,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "16053:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1515,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1513,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1490,
                                    "src": "16089:2:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1512,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    1875
                                  ],
                                  "referencedDeclaration": 1875,
                                  "src": "16080:8:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 1514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16080:12:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16053:39:18"
                            },
                            {
                              "expression": {
                                "id": 1520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1516,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1482,
                                    "src": "16110:16:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 1518,
                                  "indexExpression": {
                                    "id": 1517,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1446,
                                    "src": "16127:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16110:30:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1519,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1511,
                                  "src": "16143:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "16110:43:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 1521,
                              "nodeType": "ExpressionStatement",
                              "src": "16110:43:18"
                            },
                            {
                              "expression": {
                                "id": 1524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1522,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1446,
                                  "src": "16171:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16187:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "16171:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1525,
                              "nodeType": "ExpressionStatement",
                              "src": "16171:17:18"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1493,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1490,
                      "src": "15927:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1494,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1436,
                      "src": "15933:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15927:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1529,
                  "initializationExpression": {
                    "assignments": [
                      1490
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1490,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "15919:2:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 1529,
                        "src": "15914:7:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1489,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15914:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1492,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15924:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15914:11:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15943:4:18",
                      "subExpression": {
                        "id": 1496,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1490,
                        "src": "15943:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1498,
                    "nodeType": "ExpressionStatement",
                    "src": "15943:4:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "15909:304:18"
                },
                {
                  "expression": {
                    "id": 1530,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1482,
                    "src": "16238:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1434,
                  "id": 1531,
                  "nodeType": "Return",
                  "src": "16231:23:18"
                }
              ]
            },
            "documentation": {
              "id": 1427,
              "nodeType": "StructuredDocumentation",
              "src": "15206:218:18",
              "text": " @dev Function to get all token URIs for service NFTs that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's service NFTs"
            },
            "functionSelector": "c34e3782",
            "id": 1533,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserServiceTokenURIs",
            "nameLocation": "15438:23:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1429,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "15470:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1533,
                  "src": "15462:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15462:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15461:21:18"
            },
            "returnParameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1533,
                  "src": "15506:15:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1431,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "15506:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1432,
                    "nodeType": "ArrayTypeName",
                    "src": "15506:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15505:17:18"
            },
            "scope": 1876,
            "src": "15429:832:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1542,
              "nodeType": "Block",
              "src": "16487:48:18",
              "statements": [
                {
                  "expression": {
                    "id": 1540,
                    "name": "originalCardinalTokenIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 394,
                    "src": "16504:24:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1539,
                  "id": 1541,
                  "nodeType": "Return",
                  "src": "16497:31:18"
                }
              ]
            },
            "documentation": {
              "id": 1534,
              "nodeType": "StructuredDocumentation",
              "src": "16267:135:18",
              "text": " @dev Function to get a list of all the Original Cardinal NFT IDs.\n @return list of the Original Cardinal NFT IDs"
            },
            "functionSelector": "e4e0a931",
            "id": 1543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOriginalCardinalTokenIds",
            "nameLocation": "16416:27:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16443:2:18"
            },
            "returnParameters": {
              "id": 1539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1538,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1543,
                  "src": "16469:16:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1536,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16469:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1537,
                    "nodeType": "ArrayTypeName",
                    "src": "16469:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16468:18:18"
            },
            "scope": 1876,
            "src": "16407:128:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1552,
              "nodeType": "Block",
              "src": "16741:42:18",
              "statements": [
                {
                  "expression": {
                    "id": 1550,
                    "name": "membershipTokenIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 397,
                    "src": "16758:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1549,
                  "id": 1551,
                  "nodeType": "Return",
                  "src": "16751:25:18"
                }
              ]
            },
            "documentation": {
              "id": 1544,
              "nodeType": "StructuredDocumentation",
              "src": "16541:121:18",
              "text": " @dev Function to get a list of all the membership NFT IDs.\n @return list of the membership NFT IDs"
            },
            "functionSelector": "d473dab1",
            "id": 1553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipTokenIds",
            "nameLocation": "16676:21:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16697:2:18"
            },
            "returnParameters": {
              "id": 1549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1548,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "16723:16:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1546,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16723:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1547,
                    "nodeType": "ArrayTypeName",
                    "src": "16723:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16722:18:18"
            },
            "scope": 1876,
            "src": "16667:116:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1569,
              "nodeType": "Block",
              "src": "17194:63:18",
              "statements": [
                {
                  "expression": {
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1563,
                        "name": "membershipNFTToLastPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "17204:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1565,
                      "indexExpression": {
                        "id": 1564,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1556,
                        "src": "17228:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17204:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1566,
                      "name": "newLastPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1558,
                      "src": "17239:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17204:46:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1568,
                  "nodeType": "ExpressionStatement",
                  "src": "17204:46:18"
                }
              ]
            },
            "documentation": {
              "id": 1554,
              "nodeType": "StructuredDocumentation",
              "src": "16789:304:18",
              "text": " @dev Only owner function to update the timestamp for when a user last paid for their membership.\n @param tokenId the token ID to update the membership last paid timestamp for\n @param newLastPaid the new timestamp that represents when the user last paid for their membership NFT"
            },
            "functionSelector": "ad00920e",
            "id": 1570,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1561,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1560,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "17184:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "17184:9:18"
              }
            ],
            "name": "updateMembershipNFTToLastPaid",
            "nameLocation": "17107:29:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "17145:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1570,
                  "src": "17137:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17137:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1558,
                  "mutability": "mutable",
                  "name": "newLastPaid",
                  "nameLocation": "17162:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1570,
                  "src": "17154:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17154:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17136:38:18"
            },
            "returnParameters": {
              "id": 1562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17194:0:18"
            },
            "scope": 1876,
            "src": "17098:159:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1586,
              "nodeType": "Block",
              "src": "17630:70:18",
              "statements": [
                {
                  "expression": {
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1580,
                        "name": "tokenIdToWhitelistAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "17640:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1582,
                      "indexExpression": {
                        "id": 1581,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1575,
                        "src": "17666:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17640:34:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1583,
                      "name": "whiteListAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1573,
                      "src": "17677:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17640:53:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1585,
                  "nodeType": "ExpressionStatement",
                  "src": "17640:53:18"
                }
              ]
            },
            "documentation": {
              "id": 1571,
              "nodeType": "StructuredDocumentation",
              "src": "17263:271:18",
              "text": " @dev Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.\n @param whiteListAddress the address of the user who will be able to purchase the NFT\n @param tokenId the ID of the NFT that the whitelist spot is for"
            },
            "functionSelector": "7417353f",
            "id": 1587,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1578,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1577,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "17620:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "17620:9:18"
              }
            ],
            "name": "addWhiteListToToken",
            "nameLocation": "17548:19:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1573,
                  "mutability": "mutable",
                  "name": "whiteListAddress",
                  "nameLocation": "17576:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "17568:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17568:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1575,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "17602:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "17594:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17594:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17567:43:18"
            },
            "returnParameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17630:0:18"
            },
            "scope": 1876,
            "src": "17539:161:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1603,
              "nodeType": "Block",
              "src": "17987:61:18",
              "statements": [
                {
                  "expression": {
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1597,
                        "name": "tokenIdToListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "17997:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1599,
                      "indexExpression": {
                        "id": 1598,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1590,
                        "src": "18017:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17997:28:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1600,
                      "name": "newListingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1592,
                      "src": "18028:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17997:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1602,
                  "nodeType": "ExpressionStatement",
                  "src": "17997:44:18"
                }
              ]
            },
            "documentation": {
              "id": 1588,
              "nodeType": "StructuredDocumentation",
              "src": "17706:186:18",
              "text": " @dev updates the listing fee of an NFT.\n @param tokenId the ID of the NFT to update the listing fee of\n @param newListingFee the listing fee value for the NFT"
            },
            "functionSelector": "7867ccd1",
            "id": 1604,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1595,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1594,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "17977:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "17977:9:18"
              }
            ],
            "name": "updateTokenListingFee",
            "nameLocation": "17906:21:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1590,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "17936:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1604,
                  "src": "17928:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17928:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1592,
                  "mutability": "mutable",
                  "name": "newListingFee",
                  "nameLocation": "17953:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1604,
                  "src": "17945:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17945:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17927:40:18"
            },
            "returnParameters": {
              "id": 1596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17987:0:18"
            },
            "scope": 1876,
            "src": "17897:151:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1620,
              "nodeType": "Block",
              "src": "18311:53:18",
              "statements": [
                {
                  "expression": {
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1614,
                        "name": "tokenIdToTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "18321:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1616,
                      "indexExpression": {
                        "id": 1615,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1607,
                        "src": "18337:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18321:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1617,
                      "name": "newTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1609,
                      "src": "18348:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18321:36:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "18321:36:18"
                }
              ]
            },
            "documentation": {
              "id": 1605,
              "nodeType": "StructuredDocumentation",
              "src": "18054:170:18",
              "text": " @dev updates the type ID of an NFT.\n @param tokenId the ID of the NFT to update the type ID of\n @param newTypeId the type ID value for the NFT"
            },
            "functionSelector": "c79ba39c",
            "id": 1621,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1612,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1611,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "18301:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "18301:9:18"
              }
            ],
            "name": "updateTokenTypeId",
            "nameLocation": "18238:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1607,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "18264:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1621,
                  "src": "18256:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18256:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1609,
                  "mutability": "mutable",
                  "name": "newTypeId",
                  "nameLocation": "18281:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1621,
                  "src": "18273:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18273:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18255:36:18"
            },
            "returnParameters": {
              "id": 1613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18311:0:18"
            },
            "scope": 1876,
            "src": "18229:135:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1638,
              "nodeType": "Block",
              "src": "18637:148:18",
              "statements": [
                {
                  "expression": {
                    "id": 1631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1629,
                      "name": "originalCardinalTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 385,
                      "src": "18647:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1630,
                      "name": "newOriginalCardinalTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1624,
                      "src": "18672:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18647:50:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1632,
                  "nodeType": "ExpressionStatement",
                  "src": "18647:50:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6f726967696e616c43617264696e616c547970654964",
                        "id": 1634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18726:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8edf162dc3544f87029d9e513f737889806b84fd1e554b0a8797c5cb644469",
                          "typeString": "literal_string \"originalCardinalTypeId\""
                        },
                        "value": "originalCardinalTypeId"
                      },
                      {
                        "id": 1635,
                        "name": "newOriginalCardinalTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "18752:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9c8edf162dc3544f87029d9e513f737889806b84fd1e554b0a8797c5cb644469",
                          "typeString": "literal_string \"originalCardinalTypeId\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1633,
                      "name": "typeIdUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "18712:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 1636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18712:66:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1637,
                  "nodeType": "EmitStatement",
                  "src": "18707:71:18"
                }
              ]
            },
            "documentation": {
              "id": 1622,
              "nodeType": "StructuredDocumentation",
              "src": "18370:170:18",
              "text": " @dev updates the type ID that represents the Original Cardinal NFTs\n @param newOriginalCardinalTypeId the new type ID of the Original Cardinal NFTs"
            },
            "functionSelector": "66a98ea3",
            "id": 1639,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1627,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1626,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "18627:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "18627:9:18"
              }
            ],
            "name": "updateOriginalCardinalTypeId",
            "nameLocation": "18554:28:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1624,
                  "mutability": "mutable",
                  "name": "newOriginalCardinalTypeId",
                  "nameLocation": "18591:25:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1639,
                  "src": "18583:33:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18583:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18582:35:18"
            },
            "returnParameters": {
              "id": 1628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18637:0:18"
            },
            "scope": 1876,
            "src": "18545:240:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1656,
              "nodeType": "Block",
              "src": "19026:124:18",
              "statements": [
                {
                  "expression": {
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1647,
                      "name": "membershipTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "19036:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1648,
                      "name": "newMembershipTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1642,
                      "src": "19055:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19036:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1650,
                  "nodeType": "ExpressionStatement",
                  "src": "19036:38:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6d656d62657273686970547970654964",
                        "id": 1652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19103:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a92a1f69e7ee067d3ecb64b21d801262daa7d1ac496602a457fa1c6f02434d6",
                          "typeString": "literal_string \"membershipTypeId\""
                        },
                        "value": "membershipTypeId"
                      },
                      {
                        "id": 1653,
                        "name": "newMembershipTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1642,
                        "src": "19123:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5a92a1f69e7ee067d3ecb64b21d801262daa7d1ac496602a457fa1c6f02434d6",
                          "typeString": "literal_string \"membershipTypeId\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1651,
                      "name": "typeIdUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "19089:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 1654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19089:54:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1655,
                  "nodeType": "EmitStatement",
                  "src": "19084:59:18"
                }
              ]
            },
            "documentation": {
              "id": 1640,
              "nodeType": "StructuredDocumentation",
              "src": "18791:150:18",
              "text": " @dev updates the type ID that represents the membership NFTs\n @param newMembershipTypeId the new type ID of the membership NFTs"
            },
            "functionSelector": "ffeab8a4",
            "id": 1657,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1645,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1644,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "19016:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "19016:9:18"
              }
            ],
            "name": "updateMembershipTypeId",
            "nameLocation": "18955:22:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "newMembershipTypeId",
                  "nameLocation": "18986:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1657,
                  "src": "18978:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18978:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18977:29:18"
            },
            "returnParameters": {
              "id": 1646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19026:0:18"
            },
            "scope": 1876,
            "src": "18946:204:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1674,
              "nodeType": "Block",
              "src": "19376:112:18",
              "statements": [
                {
                  "expression": {
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1665,
                      "name": "serviceTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "19386:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1666,
                      "name": "newServiceTypeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1660,
                      "src": "19402:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19386:32:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1668,
                  "nodeType": "ExpressionStatement",
                  "src": "19386:32:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "73657276696365547970654964",
                        "id": 1670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19447:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6677363f62fb8d164a2ecd73cb1ca3e466c93136888b7ac0c89692d526e12fd4",
                          "typeString": "literal_string \"serviceTypeId\""
                        },
                        "value": "serviceTypeId"
                      },
                      {
                        "id": 1671,
                        "name": "newServiceTypeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1660,
                        "src": "19464:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6677363f62fb8d164a2ecd73cb1ca3e466c93136888b7ac0c89692d526e12fd4",
                          "typeString": "literal_string \"serviceTypeId\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1669,
                      "name": "typeIdUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "19433:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 1672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19433:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1673,
                  "nodeType": "EmitStatement",
                  "src": "19428:53:18"
                }
              ]
            },
            "documentation": {
              "id": 1658,
              "nodeType": "StructuredDocumentation",
              "src": "19156:141:18",
              "text": " @dev updates the type ID that represents the service NFTs\n @param newServiceTypeId the new type ID of the service NFTs"
            },
            "functionSelector": "86794f66",
            "id": 1675,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1663,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1662,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "19366:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "19366:9:18"
              }
            ],
            "name": "updateServiceTypeId",
            "nameLocation": "19311:19:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1660,
                  "mutability": "mutable",
                  "name": "newServiceTypeId",
                  "nameLocation": "19339:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1675,
                  "src": "19331:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19331:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19330:26:18"
            },
            "returnParameters": {
              "id": 1664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19376:0:18"
            },
            "scope": 1876,
            "src": "19302:186:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1687,
              "nodeType": "Block",
              "src": "19719:59:18",
              "statements": [
                {
                  "expression": {
                    "id": 1685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1683,
                      "name": "membershipTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "19729:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1684,
                      "name": "newMembershipTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1678,
                      "src": "19750:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "19729:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1686,
                  "nodeType": "ExpressionStatement",
                  "src": "19729:42:18"
                }
              ]
            },
            "documentation": {
              "id": 1676,
              "nodeType": "StructuredDocumentation",
              "src": "19494:130:18",
              "text": " @dev updates the membership NFT token URI\n @param newMembershipTokenURI the new type ID of the service NFTs"
            },
            "functionSelector": "96291db6",
            "id": 1688,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1681,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1680,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "19709:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "19709:9:18"
              }
            ],
            "name": "updateMembershipTokenURI",
            "nameLocation": "19638:24:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1678,
                  "mutability": "mutable",
                  "name": "newMembershipTokenURI",
                  "nameLocation": "19677:21:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1688,
                  "src": "19663:35:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1677,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19663:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19662:37:18"
            },
            "returnParameters": {
              "id": 1682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19719:0:18"
            },
            "scope": 1876,
            "src": "19629:149:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1704,
              "nodeType": "Block",
              "src": "20012:116:18",
              "statements": [
                {
                  "expression": {
                    "id": 1698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1696,
                      "name": "membershipPriceInUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "20022:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1697,
                      "name": "newMembershipPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1691,
                      "src": "20046:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20022:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1699,
                  "nodeType": "ExpressionStatement",
                  "src": "20022:42:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1701,
                        "name": "newMembershipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1691,
                        "src": "20102:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1700,
                      "name": "membershipPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "20079:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20079:42:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1703,
                  "nodeType": "EmitStatement",
                  "src": "20074:47:18"
                }
              ]
            },
            "documentation": {
              "id": 1689,
              "nodeType": "StructuredDocumentation",
              "src": "19784:145:18",
              "text": " @dev sets the price of the membership NFTs in USDC\n @param newMembershipPrice the new price of the membership NFTs in USDC"
            },
            "functionSelector": "ebaa42ed",
            "id": 1705,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1694,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1693,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "20002:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "20002:9:18"
              }
            ],
            "name": "updateMembershipPrice",
            "nameLocation": "19943:21:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1691,
                  "mutability": "mutable",
                  "name": "newMembershipPrice",
                  "nameLocation": "19973:18:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1705,
                  "src": "19965:26:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19965:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19964:28:18"
            },
            "returnParameters": {
              "id": 1695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20012:0:18"
            },
            "scope": 1876,
            "src": "19934:194:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1719,
              "nodeType": "Block",
              "src": "20334:37:18",
              "statements": [
                {
                  "expression": {
                    "id": 1717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1713,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "20344:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4173",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1715,
                          "name": "_USDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1708,
                          "src": "20358:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1714,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4173,
                        "src": "20351:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4173_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20351:13:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4173",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "20344:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4173",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1718,
                  "nodeType": "ExpressionStatement",
                  "src": "20344:20:18"
                }
              ]
            },
            "documentation": {
              "id": 1706,
              "nodeType": "StructuredDocumentation",
              "src": "20134:136:18",
              "text": " @dev Only owner function to set the reference to the USDC contract\n @param _USDC the address for the USDC contract"
            },
            "functionSelector": "5575ad3a",
            "id": 1720,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1711,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1710,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "20324:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "20324:9:18"
              }
            ],
            "name": "setUSDCContract",
            "nameLocation": "20284:15:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1708,
                  "mutability": "mutable",
                  "name": "_USDC",
                  "nameLocation": "20308:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1720,
                  "src": "20300:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20300:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20299:15:18"
            },
            "returnParameters": {
              "id": 1712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20334:0:18"
            },
            "scope": 1876,
            "src": "20275:96:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1736,
              "nodeType": "Block",
              "src": "20663:55:18",
              "statements": [
                {
                  "expression": {
                    "id": 1734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1730,
                        "name": "addressIsAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "20673:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1732,
                      "indexExpression": {
                        "id": 1731,
                        "name": "adminAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1723,
                        "src": "20688:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20673:28:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1733,
                      "name": "isAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1725,
                      "src": "20704:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "20673:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1735,
                  "nodeType": "ExpressionStatement",
                  "src": "20673:38:18"
                }
              ]
            },
            "documentation": {
              "id": 1721,
              "nodeType": "StructuredDocumentation",
              "src": "20377:204:18",
              "text": " @dev Only owner function to update the admin mapping.\n @param adminAddress the address to admin rights for\n @param isAdmin boolean to determine if the address is an admin or not"
            },
            "functionSelector": "b27a5f98",
            "id": 1737,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1727,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2745,
                  "src": "20653:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "20653:9:18"
              }
            ],
            "name": "setAdminUser",
            "nameLocation": "20595:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1723,
                  "mutability": "mutable",
                  "name": "adminAddress",
                  "nameLocation": "20616:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1737,
                  "src": "20608:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20608:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1725,
                  "mutability": "mutable",
                  "name": "isAdmin",
                  "nameLocation": "20635:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1737,
                  "src": "20630:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20630:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20607:36:18"
            },
            "returnParameters": {
              "id": 1729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20663:0:18"
            },
            "scope": 1876,
            "src": "20586:132:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1757,
              "nodeType": "Block",
              "src": "20982:141:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1744,
                          "name": "addressIsAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "21000:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1747,
                        "indexExpression": {
                          "expression": {
                            "id": 1745,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "21015:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21015:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21000:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636f6e74726163742061646d696e732063616e20616464206d656d626572732e",
                        "id": 1748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21028:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c99673b3896704eaa0040a0e8341612a84579e000526d3991de9dc17f40ca9d",
                          "typeString": "literal_string \"Only contract admins can add members.\""
                        },
                        "value": "Only contract admins can add members."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c99673b3896704eaa0040a0e8341612a84579e000526d3991de9dc17f40ca9d",
                          "typeString": "literal_string \"Only contract admins can add members.\""
                        }
                      ],
                      "id": 1743,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20992:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20992:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1750,
                  "nodeType": "ExpressionStatement",
                  "src": "20992:76:18"
                },
                {
                  "expression": {
                    "id": 1755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1751,
                        "name": "addressIsMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "21079:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1753,
                      "indexExpression": {
                        "id": 1752,
                        "name": "memberAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "21095:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21079:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21112:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "21079:37:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1756,
                  "nodeType": "ExpressionStatement",
                  "src": "21079:37:18"
                }
              ]
            },
            "documentation": {
              "id": 1738,
              "nodeType": "StructuredDocumentation",
              "src": "20724:202:18",
              "text": " @dev Allows contract admins to manually add an address as a member. Necessary for memberships purchased through Patreon.\n @param memberAddress the address of the member being added"
            },
            "functionSelector": "ca6d56dc",
            "id": 1758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMember",
            "nameLocation": "20940:9:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1740,
                  "mutability": "mutable",
                  "name": "memberAddress",
                  "nameLocation": "20958:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1758,
                  "src": "20950:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20950:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20949:23:18"
            },
            "returnParameters": {
              "id": 1742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20982:0:18"
            },
            "scope": 1876,
            "src": "20931:192:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1778,
              "nodeType": "Block",
              "src": "21413:146:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1765,
                          "name": "addressIsAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "21431:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1768,
                        "indexExpression": {
                          "expression": {
                            "id": 1766,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "21446:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21446:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21431:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636f6e74726163742061646d696e732063616e2072656d6f76652061206d656d6265722e",
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21459:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd478bf4faee08cef44a28667a6ab1bd4024fd27f181390429cb083cca384a63",
                          "typeString": "literal_string \"Only contract admins can remove a member.\""
                        },
                        "value": "Only contract admins can remove a member."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd478bf4faee08cef44a28667a6ab1bd4024fd27f181390429cb083cca384a63",
                          "typeString": "literal_string \"Only contract admins can remove a member.\""
                        }
                      ],
                      "id": 1764,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21423:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21423:80:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1771,
                  "nodeType": "ExpressionStatement",
                  "src": "21423:80:18"
                },
                {
                  "expression": {
                    "id": 1776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1772,
                        "name": "addressIsMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "21514:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1774,
                      "indexExpression": {
                        "id": 1773,
                        "name": "memberAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1761,
                        "src": "21530:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21514:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21547:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "21514:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1777,
                  "nodeType": "ExpressionStatement",
                  "src": "21514:38:18"
                }
              ]
            },
            "documentation": {
              "id": 1759,
              "nodeType": "StructuredDocumentation",
              "src": "21129:225:18",
              "text": " @dev Allows contract admins to manually remove an address as a member. Necessary for when a membership bought through Patreon expires.\n @param memberAddress the address to remove from the membership list"
            },
            "functionSelector": "0b1ca49a",
            "id": 1779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeMember",
            "nameLocation": "21368:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1761,
                  "mutability": "mutable",
                  "name": "memberAddress",
                  "nameLocation": "21389:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "21381:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21381:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21380:23:18"
            },
            "returnParameters": {
              "id": 1763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21413:0:18"
            },
            "scope": 1876,
            "src": "21359:200:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1806,
              "nodeType": "Block",
              "src": "21923:239:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1788,
                          "name": "addressIsAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "21941:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1791,
                        "indexExpression": {
                          "expression": {
                            "id": 1789,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "21956:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21956:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21941:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636f6e74726163742061646d696e732063616e207365742061206d656d6265727368697020646973636f756e742e",
                        "id": 1792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21969:53:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aca5c94a0487ae80f034b071c5ff0dea42c0fa34df68867cb930cb7d099f0986",
                          "typeString": "literal_string \"Only contract admins can set a membership discount.\""
                        },
                        "value": "Only contract admins can set a membership discount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aca5c94a0487ae80f034b071c5ff0dea42c0fa34df68867cb930cb7d099f0986",
                          "typeString": "literal_string \"Only contract admins can set a membership discount.\""
                        }
                      ],
                      "id": 1787,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21933:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21933:90:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1794,
                  "nodeType": "ExpressionStatement",
                  "src": "21933:90:18"
                },
                {
                  "expression": {
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1795,
                        "name": "addressToMembershipDiscount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "22033:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1797,
                      "indexExpression": {
                        "id": 1796,
                        "name": "memberAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1782,
                        "src": "22061:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22033:42:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1798,
                      "name": "discountAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1784,
                      "src": "22078:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22033:59:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1800,
                  "nodeType": "ExpressionStatement",
                  "src": "22033:59:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1802,
                        "name": "memberAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1782,
                        "src": "22125:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1803,
                        "name": "discountAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1784,
                        "src": "22140:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1801,
                      "name": "memberDiscountSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "22107:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22107:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1805,
                  "nodeType": "EmitStatement",
                  "src": "22102:53:18"
                }
              ]
            },
            "documentation": {
              "id": 1780,
              "nodeType": "StructuredDocumentation",
              "src": "21565:270:18",
              "text": " @dev Allows contract admins to set a membership discount for an address.\n @param memberAddress the address to give the discount to\n @param discountAmount the discount amount, 90 for 90% of membership price, 75 for 75% of membership price, etc."
            },
            "functionSelector": "fd18b841",
            "id": 1807,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMemberDiscount",
            "nameLocation": "21849:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1782,
                  "mutability": "mutable",
                  "name": "memberAddress",
                  "nameLocation": "21875:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1807,
                  "src": "21867:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21867:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1784,
                  "mutability": "mutable",
                  "name": "discountAmount",
                  "nameLocation": "21898:14:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1807,
                  "src": "21890:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21890:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21866:47:18"
            },
            "returnParameters": {
              "id": 1786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21923:0:18"
            },
            "scope": 1876,
            "src": "21840:322:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4823,
              5504
            ],
            "body": {
              "id": 1821,
              "nodeType": "Block",
              "src": "22379:37:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1818,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1809,
                        "src": "22401:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1815,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22389:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CardinalNFT_$1876_$",
                          "typeString": "type(contract super CardinalNFT)"
                        }
                      },
                      "id": 1817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5504,
                      "src": "22389:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22389:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1820,
                  "nodeType": "ExpressionStatement",
                  "src": "22389:20:18"
                }
              ]
            },
            "id": 1822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "22312:5:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1813,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1811,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5039,
                  "src": "22353:6:18"
                },
                {
                  "id": 1812,
                  "name": "ERC721URIStorage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5505,
                  "src": "22361:16:18"
                }
              ],
              "src": "22344:34:18"
            },
            "parameters": {
              "id": 1810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1809,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "22326:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1822,
                  "src": "22318:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22318:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22317:17:18"
            },
            "returnParameters": {
              "id": 1814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22379:0:18"
            },
            "scope": 1876,
            "src": "22303:113:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5027,
              5215
            ],
            "body": {
              "id": 1842,
              "nodeType": "Block",
              "src": "22689:62:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1837,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1824,
                        "src": "22726:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1838,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1826,
                        "src": "22732:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1839,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1828,
                        "src": "22736:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1834,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22699:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CardinalNFT_$1876_$",
                          "typeString": "type(contract super CardinalNFT)"
                        }
                      },
                      "id": 1836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5215,
                      "src": "22699:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22699:45:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1841,
                  "nodeType": "ExpressionStatement",
                  "src": "22699:45:18"
                }
              ]
            },
            "id": 1843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "22581:20:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1832,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1830,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5039,
                  "src": "22663:6:18"
                },
                {
                  "id": 1831,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5377,
                  "src": "22671:16:18"
                }
              ],
              "src": "22654:34:18"
            },
            "parameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1824,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "22610:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "22602:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22602:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1826,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "22624:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "22616:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22616:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1828,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "22636:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "22628:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22628:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22601:43:18"
            },
            "returnParameters": {
              "id": 1833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22689:0:18"
            },
            "scope": 1876,
            "src": "22572:179:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4267,
              5089
            ],
            "body": {
              "id": 1858,
              "nodeType": "Block",
              "src": "23013:60:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1855,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1845,
                        "src": "23054:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 1853,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23030:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CardinalNFT_$1876_$",
                          "typeString": "type(contract super CardinalNFT)"
                        }
                      },
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5089,
                      "src": "23030:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 1856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23030:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1852,
                  "id": 1857,
                  "nodeType": "Return",
                  "src": "23023:43:18"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 1859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "22913:17:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1849,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1847,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5039,
                  "src": "22972:6:18"
                },
                {
                  "id": 1848,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5377,
                  "src": "22980:16:18"
                }
              ],
              "src": "22963:34:18"
            },
            "parameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1845,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "22938:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1859,
                  "src": "22931:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1844,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "22931:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22930:20:18"
            },
            "returnParameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1859,
                  "src": "23007:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23007:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23006:6:18"
            },
            "scope": 1876,
            "src": "22904:169:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4381,
              5452
            ],
            "body": {
              "id": 1874,
              "nodeType": "Block",
              "src": "23323:47:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1871,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1861,
                        "src": "23355:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1869,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23340:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CardinalNFT_$1876_$",
                          "typeString": "type(contract super CardinalNFT)"
                        }
                      },
                      "id": 1870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5452,
                      "src": "23340:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 1872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23340:23:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1868,
                  "id": 1873,
                  "nodeType": "Return",
                  "src": "23333:30:18"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 1875,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "23226:8:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1865,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1863,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5039,
                  "src": "23273:6:18"
                },
                {
                  "id": 1864,
                  "name": "ERC721URIStorage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5505,
                  "src": "23281:16:18"
                }
              ],
              "src": "23264:34:18"
            },
            "parameters": {
              "id": 1862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1861,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "23243:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1875,
                  "src": "23235:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23235:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23234:17:18"
            },
            "returnParameters": {
              "id": 1868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1867,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1875,
                  "src": "23308:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1866,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23308:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23307:15:18"
            },
            "scope": 1876,
            "src": "23217:153:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1877,
        "src": "551:22825:18",
        "usedErrors": []
      }
    ],
    "src": "32:23344:18"
  },
  "bytecode": "60806040526001601755600260185560036019553480156200002057600080fd5b50604051620041fa380380620041fa833981016040819052620000439162000218565b604080518082018252601081526f10d85c991a5b985b121bdd5cd953919560821b60208083019182528351808501909452600784526610d4939313919560ca1b9084015281519192916200009a9160009162000155565b508051620000b090600190602084019062000155565b505050620000cd620000c7620000ff60201b60201c565b62000103565b600d80546001600160a01b039384166001600160a01b031991821617909155600e80549290931691161790556200028d565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001639062000250565b90600052602060002090601f016020900481019282620001875760008555620001d2565b82601f10620001a257805160ff1916838001178555620001d2565b82800160010185558215620001d2579182015b82811115620001d2578251825591602001919060010190620001b5565b50620001e0929150620001e4565b5090565b5b80821115620001e05760008155600101620001e5565b80516001600160a01b03811681146200021357600080fd5b919050565b600080604083850312156200022c57600080fd5b6200023783620001fb565b91506200024760208401620001fb565b90509250929050565b600181811c908216806200026557607f821691505b602082108114156200028757634e487b7160e01b600052602260045260246000fd5b50919050565b613f5d806200029d6000396000f3fe608060405234801561001057600080fd5b50600436106103db5760003560e01c80637867ccd11161020a578063b88d4fde11610125578063daa17f49116100b8578063ebaa42ed11610087578063ebaa42ed146108af578063eecbbec4146108c2578063f2fde38b146108d5578063fd18b841146108e8578063ffeab8a4146108fb57600080fd5b8063daa17f4914610838578063dca8bc471461084b578063e4e0a9311461086b578063e985e9c51461087357600080fd5b8063c79ba39c116100f4578063c79ba39c146107f7578063c87b56dd1461080a578063ca6d56dc1461081d578063d473dab11461083057600080fd5b8063b88d4fde146107b6578063bb3b407b146107c9578063beb48326146107dc578063c34e3782146107e457600080fd5b8063a22cb4651161019d578063b15d8d5f1161016c578063b15d8d5f1461075a578063b27a5f981461076d578063b43affda14610780578063b5c4b23d1461079357600080fd5b8063a22cb4651461071d578063aa46a40014610730578063ad00920e146104cb578063b063c9541461073a57600080fd5b80638f01785d116101d95780638f01785d146106e757806395914875146106fa57806395d89b411461070257806396291db61461070a57600080fd5b80637867ccd11461069d57806386794f66146106b057806389a30271146106c35780638da5cb5b146106d657600080fd5b806342842e0e116102fa5780636352211e1161028d578063715018a61161025c578063715018a61461067157806371af8374146106795780637417353f146106825780637498d2801461069557600080fd5b80636352211e1461061857806366a98ea31461062b5780636f48853b1461063e57806370a082311461065e57600080fd5b80635575ad3a116102c95780635575ad3a146105a957806356060a74146105bc578063595ee598146105cf5780635c23a67a146105ef57600080fd5b806342842e0e146105675780634623c7401461057a57806346d362301461058d5780634f6ccce71461059657600080fd5b806317550165116103725780632517fc07116103415780632517fc07146104f157806328da575b146105115780632f745c591461053457806333a415101461054757600080fd5b806317550165146104ba57806318160ddd146104c35780631c652fb5146104cb57806323b872dd146104de57600080fd5b80630b1ca49a116103ae5780630b1ca49a1461045d5780630fec3ecc1461047057806311ab8df514610487578063162094c4146104a757600080fd5b806301ffc9a7146103e057806306fdde0314610408578063081812fc1461041d578063095ea7b314610448575b600080fd5b6103f36103ee3660046137c3565b61090e565b60405190151581526020015b60405180910390f35b61041061091f565b6040516103ff9190613838565b61043061042b36600461384b565b6109b1565b6040516001600160a01b0390911681526020016103ff565b61045b610456366004613880565b610a3e565b005b61045b61046b3660046138aa565b610b54565b610479601d5481565b6040519081526020016103ff565b61047961049536600461384b565b60146020526000908152604090205481565b61045b6104b5366004613971565b610be6565b61047960185481565b600954610479565b61045b6104d93660046139b8565b610c56565b61045b6104ec3660046139da565b610c92565b6104796104ff3660046138aa565b60166020526000908152604090205481565b6103f361051f3660046138aa565b60126020526000908152604090205460ff1681565b610479610542366004613880565b610cc3565b61055a6105553660046138aa565b610d59565b6040516103ff9190613a16565b61045b6105753660046139da565b610ef3565b610479610588366004613a78565b610f0e565b61047960175481565b6104796105a436600461384b565b611065565b61045b6105b73660046138aa565b6110f8565b61055a6105ca3660046138aa565b611144565b6105e26105dd3660046138aa565b6112a2565b6040516103ff9190613acc565b6104306105fd36600461384b565b6011602052600090815260409020546001600160a01b031681565b61043061062636600461384b565b611344565b61045b61063936600461384b565b6113bb565b61047961064c36600461384b565b600f6020526000908152604090205481565b61047961066c3660046138aa565b611442565b61045b6114c9565b61047960195481565b61045b610690366004613880565b6114ff565b610479611557565b61045b6106ab3660046139b8565b6119b3565b61045b6106be36600461384b565b6119ef565b600e54610430906001600160a01b031681565b600b546001600160a01b0316610430565b61055a6106f53660046138aa565b611a3e565b610410611af8565b610410611b86565b61045b610718366004613b10565b611b95565b61045b61072b366004613b53565b611bd6565b600c546104799081565b61047961074836600461384b565b60106020526000908152604090205481565b61047961076836600461384b565b611be1565b61045b61077b366004613b53565b611c02565b61047961078e36600461384b565b611c57565b6103f36107a13660046138aa565b60156020526000908152604090205460ff1681565b61045b6107c4366004613b8a565b611c67565b6104796107d7366004613c06565b611c9f565b61045b61209a565b61055a6107f23660046138aa565b6121e3565b61045b6108053660046139b8565b612341565b61041061081836600461384b565b61237d565b61045b61082b3660046138aa565b612388565b6105e2612419565b600d54610430906001600160a01b031681565b6104796108593660046138aa565b60136020526000908152604090205481565b6105e2612470565b6103f3610881366004613c39565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61045b6108bd36600461384b565b6124c6565b61045b6108d036600461384b565b612523565b61045b6108e33660046138aa565b612556565b61045b6108f6366004613880565b6125ee565b61045b61090936600461384b565b6126b0565b600061091982612702565b92915050565b60606000805461092e90613c6c565b80601f016020809104026020016040519081016040528092919081815260200182805461095a90613c6c565b80156109a75780601f1061097c576101008083540402835291602001916109a7565b820191906000526020600020905b81548152906001019060200180831161098a57829003601f168201915b5050505050905090565b60006109bc82612727565b610a225760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610a4982611344565b9050806001600160a01b0316836001600160a01b03161415610ab75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610a19565b336001600160a01b0382161480610ad35750610ad38133610881565b610b455760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610a19565b610b4f8383612744565b505050565b3360009081526015602052604090205460ff16610bc55760405162461bcd60e51b815260206004820152602960248201527f4f6e6c7920636f6e74726163742061646d696e732063616e2072656d6f766520604482015268309036b2b6b132b91760b91b6064820152608401610a19565b6001600160a01b03166000908152601260205260409020805460ff19169055565b600b546001600160a01b03163314610c105760405162461bcd60e51b8152600401610a1990613ca7565b610c1a82826127b2565b817fc794e2271b51f209d8a645eec85692351ad1adc857ab2e06f9c5af7961cf07d582604051610c4a9190613838565b60405180910390a25050565b600b546001600160a01b03163314610c805760405162461bcd60e51b8152600401610a1990613ca7565b60009182526014602052604090912055565b610c9c338261283d565b610cb85760405162461bcd60e51b8152600401610a1990613cdc565b610b4f838383612923565b6000610cce83611442565b8210610d305760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610a19565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b60606000610d66600c5490565b905060008060015b838111610deb57856001600160a01b0316610d8882611344565b6001600160a01b0316148015610dc657506017546000828152600f60205260409020541480610dc657506018546000828152600f6020526040902054145b15610dd957610dd6600184613d43565b92505b80610de381613d5b565b915050610d6e565b5060008267ffffffffffffffff811115610e0757610e076138c5565b604051908082528060200260200182016040528015610e3a57816020015b6060815260200190600190039081610e255790505b50905060015b848111610ee957866001600160a01b0316610e5a82611344565b6001600160a01b0316148015610e9857506017546000828152600f60205260409020541480610e9857506018546000828152600f6020526040902054145b15610ed7576000610ea88261237d565b905080838581518110610ebd57610ebd613d76565b6020908102919091010152610ed3600185613d43565b9350505b80610ee181613d5b565b915050610e40565b5095945050505050565b610b4f83838360405180602001604052806000815250611c67565b600b546000906001600160a01b03163314610f3b5760405162461bcd60e51b8152600401610a1990613ca7565b610f49600c80546001019055565b6000610f54600c5490565b6000818152600f60209081526040808320899055601090915290208590559050610f7e3382612ad0565b610f8881876127b2565b610f923082610a3e565b600d54610fa9906001600160a01b03166001611bd6565b601754851415610fed57601a80546001810182556000919091527f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e0181905561105a565b60185485141561105a57601b80546001810182556000919091527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc101819055821561104857600081815260146020526040902083905561105a565b60008181526014602052604090204290555b90505b949350505050565b600061107060095490565b82106110d35760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610a19565b600982815481106110e6576110e6613d76565b90600052602060002001549050919050565b600b546001600160a01b031633146111225760405162461bcd60e51b8152600401610a1990613ca7565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b60606000611151600c5490565b905060008060015b8381116111bd57856001600160a01b031661117382611344565b6001600160a01b031614801561119857506017546000828152600f6020526040902054145b156111ab576111a8600184613d43565b92505b806111b581613d5b565b915050611159565b5060008267ffffffffffffffff8111156111d9576111d96138c5565b60405190808252806020026020018201604052801561120c57816020015b60608152602001906001900390816111f75790505b50905060015b848111610ee957866001600160a01b031661122c82611344565b6001600160a01b031614801561125157506017546000828152600f6020526040902054145b156112905760006112618261237d565b90508083858151811061127657611276613d76565b602090810291909101015261128c600185613d43565b9350505b8061129a81613d5b565b915050611212565b606060006112af83611442565b905060008167ffffffffffffffff8111156112cc576112cc6138c5565b6040519080825280602002602001820160405280156112f5578160200160208202803683370190505b50905060005b8281101561133c5761130d8582610cc3565b82828151811061131f5761131f613d76565b60209081029190910101528061133481613d5b565b9150506112fb565b509392505050565b6000818152600260205260408120546001600160a01b0316806109195760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610a19565b600b546001600160a01b031633146113e55760405162461bcd60e51b8152600401610a1990613ca7565b6017819055604051751bdc9a59da5b985b10d85c991a5b985b151e5c19525960521b815281906016015b604051908190038120907fa611ba47a2a0887b794d3e097d5cfb33522f6ed26df589ccd12c01d5c584800a90600090a350565b60006001600160a01b0382166114ad5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610a19565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b031633146114f35760405162461bcd60e51b8152600401610a1990613ca7565b6114fd6000612c17565b565b600b546001600160a01b031633146115295760405162461bcd60e51b8152600401610a1990613ca7565b600090815260116020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b601d54336000908152601660205260408120549091901561159e5733600090815260166020526040902054601d5460649161159191613d8c565b61159b9190613dc1565b90505b600e546040516370a0823160e01b815233600482015282916001600160a01b0316906370a082319060240160206040518083038186803b1580156115e157600080fd5b505afa1580156115f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116199190613dd5565b101561168d5760405162461bcd60e51b815260206004820152603960248201527f596f7520646f6e2774206861766520656e6f756768205553444320746f20706160448201527f7920666f7220746865206d656d62657273686970204e46542e000000000000006064820152608401610a19565b600e54604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e9060440160206040518083038186803b1580156116d657600080fd5b505afa1580156116ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170e9190613dd5565b10156117a85760405162461bcd60e51b815260206004820152605e60248201527f596f7520686176656e277420617070726f766564207468697320636f6e74726160448201527f637420746f207370656e6420656e6f756768206f6620796f757220555344432060648201527f746f2070617920666f7220746865206d656d62657273686970204e46542e0000608482015260a401610a19565b600e546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156117fa57600080fd5b505af115801561180e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118329190613dee565b50611841600c80546001019055565b600061184c600c5490565b6018546000828152600f6020908152604080832093909355601090529081205590506118783382612ad0565b60008181526014602090815260408083204290553383526016909152812055601c805461192d9183916118aa90613c6c565b80601f01602080910402602001604051908101604052809291908181526020018280546118d690613c6c565b80156119235780601f106118f857610100808354040283529160200191611923565b820191906000526020600020905b81548152906001019060200180831161190657829003601f168201915b50505050506127b2565b6119373082610a3e565b600d5461194e906001600160a01b03166001611bd6565b601b805460018101825560009182527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc101829055604051829133917f7430cefc529011c1b720a4803c3a12db2bfdf282e089e2d26ff4929ef11a703c9190a392915050565b600b546001600160a01b031633146119dd5760405162461bcd60e51b8152600401610a1990613ca7565b60009182526010602052604090912055565b600b546001600160a01b03163314611a195760405162461bcd60e51b8152600401610a1990613ca7565b60198190556040516c1cd95c9d9a58d9551e5c195259609a1b81528190600d0161140f565b60606000611a4b83611442565b90506000808267ffffffffffffffff811115611a6957611a696138c5565b604051908082528060200260200182016040528015611a9c57816020015b6060815260200190600190039081611a875790505b50905060005b83811015611aef57611ab48682610cc3565b9250611abf8361237d565b828281518110611ad157611ad1613d76565b60200260200101819052508080611ae790613d5b565b915050611aa2565b50949350505050565b601c8054611b0590613c6c565b80601f0160208091040260200160405190810160405280929190818152602001828054611b3190613c6c565b8015611b7e5780601f10611b5357610100808354040283529160200191611b7e565b820191906000526020600020905b815481529060010190602001808311611b6157829003601f168201915b505050505081565b60606001805461092e90613c6c565b600b546001600160a01b03163314611bbf5760405162461bcd60e51b8152600401610a1990613ca7565b8051611bd290601c906020840190613714565b5050565b611bd2338383612c69565b601b8181548110611bf157600080fd5b600091825260209091200154905081565b600b546001600160a01b03163314611c2c5760405162461bcd60e51b8152600401610a1990613ca7565b6001600160a01b03919091166000908152601560205260409020805460ff1916911515919091179055565b601a8181548110611bf157600080fd5b611c71338361283d565b611c8d5760405162461bcd60e51b8152600401610a1990613cdc565b611c9984848484612d38565b50505050565b600b546000906001600160a01b03163314611ccc5760405162461bcd60e51b8152600401610a1990613ca7565b836001600160a01b0316611cdf84611344565b6001600160a01b031614611d495760405162461bcd60e51b815260206004820152602b60248201527f54686973206164647265737320646f65736e2774206f776e20746865204e465460448201526a1039b832b1b4b334b2b21760a91b6064820152608401610a19565b600b546001600160a01b0316611d5e84611344565b6001600160a01b031614158015611d915750600d546001600160a01b0316611d8584611344565b6001600160a01b031614155b611e035760405162461bcd60e51b815260206004820152603960248201527f43616e27742063686172676520746865206f776e6572206f72206d61726b657460448201527f706c61636520666f7220746865206d656d626572736869702e000000000000006064820152608401610a19565b601d546001600160a01b03851660009081526016602052604090205415611e59576001600160a01b038516600090815260166020526040902054601d54606491611e4c91613d8c565b611e569190613dc1565b90505b600e546040516370a0823160e01b81526001600160a01b038781166004830152839216906370a082319060240160206040518083038186803b158015611e9e57600080fd5b505afa158015611eb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed69190613dd5565b1080611f625750600e54604051636eb1769f60e11b81526001600160a01b0387811660048301523060248301528392169063dd62ed3e9060440160206040518083038186803b158015611f2857600080fd5b505afa158015611f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f609190613dd5565b105b15611f7a57611f7084612d6b565b6001915050612093565b600e546040516323b872dd60e01b81526001600160a01b03878116600483015230602483015260448201849052909116906323b872dd90606401602060405180830381600087803b158015611fce57600080fd5b505af1158015611fe2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120069190613dee565b508215612023576000848152601460205260409020839055612035565b60008481526014602052604090204290555b6001600160a01b03851660008181526016602090815260408083209290925581518481529081018690528692917f9170d37d9d267e1d271f28f3f225ac7e95b00677566675ba1d251944eb3c5924910160405180910390a360009150505b9392505050565b600b546001600160a01b031633146120c45760405162461bcd60e51b8152600401610a1990613ca7565b600e546001600160a01b031663a9059cbb6120e7600b546001600160a01b031690565b600e546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561212a57600080fd5b505afa15801561213e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121629190613dd5565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156121a857600080fd5b505af11580156121bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e09190613dee565b50565b606060006121f0600c5490565b905060008060015b83811161225c57856001600160a01b031661221282611344565b6001600160a01b031614801561223757506019546000828152600f6020526040902054145b1561224a57612247600184613d43565b92505b8061225481613d5b565b9150506121f8565b5060008267ffffffffffffffff811115612278576122786138c5565b6040519080825280602002602001820160405280156122ab57816020015b60608152602001906001900390816122965790505b50905060015b848111610ee957866001600160a01b03166122cb82611344565b6001600160a01b03161480156122f057506019546000828152600f6020526040902054145b1561232f5760006123008261237d565b90508083858151811061231557612315613d76565b602090810291909101015261232b600185613d43565b9350505b8061233981613d5b565b9150506122b1565b600b546001600160a01b0316331461236b5760405162461bcd60e51b8152600401610a1990613ca7565b6000918252600f602052604090912055565b606061091982612eaa565b3360009081526015602052604090205460ff166123f55760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920636f6e74726163742061646d696e732063616e20616464206d656d6044820152643132b9399760d91b6064820152608401610a19565b6001600160a01b03166000908152601260205260409020805460ff19166001179055565b6060601b8054806020026020016040519081016040528092919081815260200182805480156109a757602002820191906000526020600020905b815481526020019060010190808311612453575050505050905090565b6060601a8054806020026020016040519081016040528092919081815260200182805480156109a75760200282019190600052602060002090815481526020019060010190808311612453575050505050905090565b600b546001600160a01b031633146124f05760405162461bcd60e51b8152600401610a1990613ca7565b601d81905560405181907f1361f6a741cb766ea2f0be44a0e1686df0e08320be065f6c8df9e4f639ab297a90600090a250565b600b546001600160a01b0316331461254d5760405162461bcd60e51b8152600401610a1990613ca7565b6121e081612d6b565b600b546001600160a01b031633146125805760405162461bcd60e51b8152600401610a1990613ca7565b6001600160a01b0381166125e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a19565b6121e081612c17565b3360009081526015602052604090205460ff166126695760405162461bcd60e51b815260206004820152603360248201527f4f6e6c7920636f6e74726163742061646d696e732063616e207365742061206d60448201527232b6b132b939b434b8103234b9b1b7bab73a1760691b6064820152608401610a19565b6001600160a01b038216600081815260166020526040808220849055518392917f874556b552951a64a8a3f7627516f395097b3de40cf93b85e87b03118cc02cf091a35050565b600b546001600160a01b031633146126da5760405162461bcd60e51b8152600401610a1990613ca7565b60188190556040516f1b595b58995c9cda1a5c151e5c19525960821b8152819060100161140f565b60006001600160e01b0319821663780e9d6360e01b1480610919575061091982613019565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061277982611344565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6127bb82612727565b61281e5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610a19565b60008281526006602090815260409091208251610b4f92840190613714565b600061284882612727565b6128a95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610a19565b60006128b483611344565b9050806001600160a01b0316846001600160a01b031614806128ef5750836001600160a01b03166128e4846109b1565b6001600160a01b0316145b8061105d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff1661105d565b826001600160a01b031661293682611344565b6001600160a01b03161461299a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610a19565b6001600160a01b0382166129fc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610a19565b612a07838383613069565b612a12600082612744565b6001600160a01b0383166000908152600360205260408120805460019290612a3b908490613e0b565b90915550506001600160a01b0382166000908152600360205260408120805460019290612a69908490613d43565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4610b4f838383613074565b6001600160a01b038216612b265760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610a19565b612b2f81612727565b15612b7c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610a19565b612b8860008383613069565b6001600160a01b0382166000908152600360205260408120805460019290612bb1908490613d43565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4611bd260008383613074565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415612ccb5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610a19565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612d43848484612923565b612d4f848484846131ed565b611c995760405162461bcd60e51b8152600401610a1990613e22565b60005b601b54811015611bd25781601b8281548110612d8c57612d8c613d76565b90600052602060002001541415612e98576000612dc5601b8381548110612db557612db5613d76565b9060005260206000200154611344565b9050612def8130601b8581548110612ddf57612ddf613d76565b9060005260206000200154612923565b60405183906001600160a01b038316907f5ab068fe2788c545757bcb78e3b2d842e34ec21c90f26c60e5ce7686e90b874990600090a3601b8054612e3590600190613e0b565b81548110612e4557612e45613d76565b9060005260206000200154601b8381548110612e6357612e63613d76565b600091825260209091200155601b805480612e8057612e80613e74565b60019003818190600052602060002001600090559055505b80612ea281613d5b565b915050612d6e565b6060612eb582612727565b612f1b5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610a19565b60008281526006602052604081208054612f3490613c6c565b80601f0160208091040260200160405190810160405280929190818152602001828054612f6090613c6c565b8015612fad5780601f10612f8257610100808354040283529160200191612fad565b820191906000526020600020905b815481529060010190602001808311612f9057829003601f168201915b505050505090506000612fcb60408051602081019091526000815290565b9050805160001415612fde575092915050565b815115613010578082604051602001612ff8929190613e8a565b60405160208183030381529060405292505050919050565b61105d846132f7565b60006001600160e01b031982166380ac58cd60e01b148061304a57506001600160e01b03198216635b5e139f60e01b145b8061091957506301ffc9a760e01b6001600160e01b0319831614610919565b610b4f8383836133ce565b6018546000828152600f602052604090205414806130a157506017546000828152600f6020526040902054145b15610b4f57600b546001600160a01b038481169116148015906130d25750600d546001600160a01b03848116911614155b80156130e657506001600160a01b03831615155b15613194576001600160a01b03831660009081526013602052604090205415613173576001600160a01b03831660009081526013602052604090205461312e90600190613e0b565b6001600160a01b038416600090815260136020526040902081905561316e576001600160a01b0383166000908152601260205260409020805460ff191690555b613194565b6001600160a01b0383166000908152601260205260409020805460ff191690555b6001600160a01b0382166000908152601260209081526040808320805460ff191660019081179091556013909252909120546131cf91613d43565b6001600160a01b038316600090815260136020526040902055505050565b60006001600160a01b0384163b156132ef57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290613231903390899088908890600401613eb9565b602060405180830381600087803b15801561324b57600080fd5b505af192505050801561327b575060408051601f3d908101601f1916820190925261327891810190613ef6565b60015b6132d5573d8080156132a9576040519150601f19603f3d011682016040523d82523d6000602084013e6132ae565b606091505b5080516132cd5760405162461bcd60e51b8152600401610a1990613e22565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061105d565b50600161105d565b606061330282612727565b6133665760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610a19565b600061337d60408051602081019091526000815290565b9050600081511161339d5760405180602001604052806000815250612093565b806133a784613486565b6040516020016133b8929190613e8a565b6040516020818303038152906040529392505050565b6001600160a01b0383166134295761342481600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b61344c565b816001600160a01b0316836001600160a01b03161461344c5761344c8382613584565b6001600160a01b03821661346357610b4f81613621565b826001600160a01b0316826001600160a01b031614610b4f57610b4f82826136d0565b6060816134aa5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156134d457806134be81613d5b565b91506134cd9050600a83613dc1565b91506134ae565b60008167ffffffffffffffff8111156134ef576134ef6138c5565b6040519080825280601f01601f191660200182016040528015613519576020820181803683370190505b5090505b841561105d5761352e600183613e0b565b915061353b600a86613f13565b613546906030613d43565b60f81b81838151811061355b5761355b613d76565b60200101906001600160f81b031916908160001a90535061357d600a86613dc1565b945061351d565b6000600161359184611442565b61359b9190613e0b565b6000838152600860205260409020549091508082146135ee576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b60095460009061363390600190613e0b565b6000838152600a60205260408120546009805493945090928490811061365b5761365b613d76565b90600052602060002001549050806009838154811061367c5761367c613d76565b6000918252602080832090910192909255828152600a909152604080822084905585825281205560098054806136b4576136b4613e74565b6001900381819060005260206000200160009055905550505050565b60006136db83611442565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b82805461372090613c6c565b90600052602060002090601f0160209004810192826137425760008555613788565b82601f1061375b57805160ff1916838001178555613788565b82800160010185558215613788579182015b8281111561378857825182559160200191906001019061376d565b50613794929150613798565b5090565b5b808211156137945760008155600101613799565b6001600160e01b0319811681146121e057600080fd5b6000602082840312156137d557600080fd5b8135612093816137ad565b60005b838110156137fb5781810151838201526020016137e3565b83811115611c995750506000910152565b600081518084526138248160208601602086016137e0565b601f01601f19169290920160200192915050565b602081526000612093602083018461380c565b60006020828403121561385d57600080fd5b5035919050565b80356001600160a01b038116811461387b57600080fd5b919050565b6000806040838503121561389357600080fd5b61389c83613864565b946020939093013593505050565b6000602082840312156138bc57600080fd5b61209382613864565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156138f6576138f66138c5565b604051601f8501601f19908116603f0116810190828211818310171561391e5761391e6138c5565b8160405280935085815286868601111561393757600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261396257600080fd5b612093838335602085016138db565b6000806040838503121561398457600080fd5b82359150602083013567ffffffffffffffff8111156139a257600080fd5b6139ae85828601613951565b9150509250929050565b600080604083850312156139cb57600080fd5b50508035926020909101359150565b6000806000606084860312156139ef57600080fd5b6139f884613864565b9250613a0660208501613864565b9150604084013590509250925092565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613a6b57603f19888603018452613a5985835161380c565b94509285019290850190600101613a3d565b5092979650505050505050565b60008060008060808587031215613a8e57600080fd5b843567ffffffffffffffff811115613aa557600080fd5b613ab187828801613951565b97602087013597506040870135966060013595509350505050565b6020808252825182820181905260009190848201906040850190845b81811015613b0457835183529284019291840191600101613ae8565b50909695505050505050565b600060208284031215613b2257600080fd5b813567ffffffffffffffff811115613b3957600080fd5b61105d84828501613951565b80151581146121e057600080fd5b60008060408385031215613b6657600080fd5b613b6f83613864565b91506020830135613b7f81613b45565b809150509250929050565b60008060008060808587031215613ba057600080fd5b613ba985613864565b9350613bb760208601613864565b925060408501359150606085013567ffffffffffffffff811115613bda57600080fd5b8501601f81018713613beb57600080fd5b613bfa878235602084016138db565b91505092959194509250565b600080600060608486031215613c1b57600080fd5b613c2484613864565b95602085013595506040909401359392505050565b60008060408385031215613c4c57600080fd5b613c5583613864565b9150613c6360208401613864565b90509250929050565b600181811c90821680613c8057607f821691505b60208210811415613ca157634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115613d5657613d56613d2d565b500190565b6000600019821415613d6f57613d6f613d2d565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615613da657613da6613d2d565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613dd057613dd0613dab565b500490565b600060208284031215613de757600080fd5b5051919050565b600060208284031215613e0057600080fd5b815161209381613b45565b600082821015613e1d57613e1d613d2d565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052603160045260246000fd5b60008351613e9c8184602088016137e0565b835190830190613eb08183602088016137e0565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613eec9083018461380c565b9695505050505050565b600060208284031215613f0857600080fd5b8151612093816137ad565b600082613f2257613f22613dab565b50069056fea2646970667358221220f644211d3b12e5a05edcb2475c48f088c7f53a840f13b9466680be3fe6eb3c9a64736f6c63430008080033",
  "bytecodeSha1": "2fcacc0b8debb42da06adbac1195acb146562c95",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.8+commit.dddeac2f"
  },
  "contractName": "CardinalNFT",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "256": [
            2006,
            2028,
            true
          ]
        }
      },
      "10": {},
      "12": {},
      "13": {},
      "15": {},
      "16": {},
      "18": {
        "CardinalNFT._afterTokenTransfer": {
          "222": [
            5010,
            5054,
            true
          ],
          "223": [
            5058,
            5108,
            false
          ],
          "224": [
            5128,
            5143,
            false
          ],
          "225": [
            5147,
            5173,
            false
          ],
          "226": [
            5177,
            5195,
            false
          ],
          "227": [
            5219,
            5252,
            false
          ]
        },
        "CardinalNFT.addMember": {
          "219": [
            21000,
            21026,
            true
          ]
        },
        "CardinalNFT.burnMembershipNFT": {
          "221": [
            3960,
            3992,
            false
          ]
        },
        "CardinalNFT.chargeMemberForMembership": {
          "208": [
            8366,
            8392,
            true
          ],
          "209": [
            8458,
            8485,
            false
          ],
          "210": [
            8489,
            8527,
            true
          ],
          "211": [
            8672,
            8711,
            false
          ],
          "212": [
            8845,
            8895,
            true
          ],
          "213": [
            8899,
            8964,
            false
          ],
          "214": [
            9131,
            9148,
            false
          ]
        },
        "CardinalNFT.createToken": {
          "198": [
            10767,
            10799,
            false
          ],
          "199": [
            10884,
            10910,
            false
          ],
          "200": [
            10979,
            10996,
            false
          ]
        },
        "CardinalNFT.getUserMembershipTokenURIs": {
          "192": [
            14530,
            14556,
            false
          ],
          "193": [
            14561,
            14606,
            true
          ],
          "194": [
            14610,
            14649,
            false
          ],
          "195": [
            14852,
            14878,
            false
          ],
          "196": [
            14883,
            14928,
            true
          ],
          "197": [
            14932,
            14971,
            false
          ]
        },
        "CardinalNFT.getUserOriginalCardinalTokenURIs": {
          "201": [
            13442,
            13468,
            false
          ],
          "202": [
            13472,
            13517,
            false
          ],
          "203": [
            13719,
            13745,
            false
          ],
          "204": [
            13749,
            13794,
            false
          ]
        },
        "CardinalNFT.getUserServiceTokenURIs": {
          "215": [
            15699,
            15725,
            false
          ],
          "216": [
            15729,
            15765,
            false
          ],
          "217": [
            15967,
            15993,
            false
          ],
          "218": [
            15997,
            16033,
            false
          ]
        },
        "CardinalNFT.mintMembershipNFT": {
          "205": [
            6070,
            6113,
            false
          ],
          "206": [
            6255,
            6310,
            true
          ],
          "207": [
            6390,
            6460,
            true
          ]
        },
        "CardinalNFT.removeMember": {
          "191": [
            21431,
            21457,
            true
          ]
        },
        "CardinalNFT.setMemberDiscount": {
          "220": [
            21941,
            21967,
            true
          ]
        }
      },
      "2": {},
      "4": {
        "ERC721._isApprovedOrOwner": {
          "236": [
            7559,
            7575,
            true
          ]
        },
        "ERC721._mint": {
          "239": [
            9157,
            9173,
            true
          ],
          "240": [
            9228,
            9245,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "242": [
            6746,
            6794,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "241": [
            11615,
            11632,
            true
          ]
        },
        "ERC721._transfer": {
          "237": [
            10579,
            10610,
            true
          ],
          "238": [
            10670,
            10686,
            true
          ]
        },
        "ERC721.approve": {
          "229": [
            3674,
            3685,
            true
          ],
          "230": [
            3755,
            3776,
            true
          ],
          "231": [
            3780,
            3817,
            true
          ]
        },
        "ERC721.balanceOf": {
          "234": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.getApproved": {
          "228": [
            4102,
            4118,
            true
          ]
        },
        "ERC721.ownerOf": {
          "233": [
            2332,
            2351,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "235": [
            5536,
            5577,
            true
          ]
        },
        "ERC721.tokenURI": {
          "243": [
            2924,
            2940,
            true
          ],
          "244": [
            3054,
            3079,
            true
          ]
        },
        "ERC721.transferFrom": {
          "232": [
            4915,
            4956,
            true
          ]
        }
      },
      "5": {},
      "7": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "247": [
            2823,
            2841,
            false
          ],
          "248": [
            2918,
            2928,
            false
          ],
          "249": [
            3015,
            3031,
            false
          ],
          "250": [
            3113,
            3123,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "251": [
            5154,
            5182,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "246": [
            1900,
            1938,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "245": [
            1415,
            1446,
            true
          ]
        }
      },
      "8": {
        "ERC721URIStorage._setTokenURI": {
          "252": [
            1376,
            1392,
            true
          ]
        },
        "ERC721URIStorage.tokenURI": {
          "253": [
            573,
            589,
            true
          ],
          "254": [
            813,
            836,
            false
          ],
          "255": [
            981,
            1008,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "145": [
            2378,
            2395
          ],
          "146": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "57": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "114": [
            1998,
            2071
          ],
          "115": [
            2081,
            2109
          ]
        }
      },
      "10": {},
      "12": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "13": {
        "Counters.current": {
          "20": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "29": [
            1032,
            1051
          ]
        }
      },
      "15": {
        "ERC165.supportsInterface": {
          "163": [
            930,
            977
          ]
        }
      },
      "16": {},
      "18": {
        "CardinalNFT._afterTokenTransfer": {
          "165": [
            5276,
            5341
          ],
          "166": [
            5429,
            5458
          ],
          "167": [
            5543,
            5572
          ],
          "168": [
            5618,
            5644
          ],
          "169": [
            5658,
            5719
          ]
        },
        "CardinalNFT._beforeTokenTransfer": {
          "164": [
            22699,
            22744
          ]
        },
        "CardinalNFT.addMember": {
          "107": [
            20992,
            21068
          ],
          "108": [
            21079,
            21116
          ]
        },
        "CardinalNFT.addWhiteListToToken": {
          "58": [
            17640,
            17693
          ]
        },
        "CardinalNFT.burnMembershipNFT": {
          "152": [
            4079,
            4136
          ],
          "153": [
            4155,
            4197
          ],
          "154": [
            4216,
            4287
          ],
          "155": [
            4305,
            4329
          ],
          "156": [
            3937,
            3940
          ]
        },
        "CardinalNFT.burnMembershiptNFTManually": {
          "113": [
            4583,
            4609
          ]
        },
        "CardinalNFT.chargeMemberForMembership": {
          "88": [
            8358,
            8440
          ],
          "89": [
            8450,
            8589
          ],
          "90": [
            8727,
            8820
          ],
          "91": [
            8980,
            9006
          ],
          "92": [
            9020,
            9028
          ],
          "93": [
            9049,
            9116
          ],
          "94": [
            9164,
            9212
          ],
          "95": [
            9251,
            9301
          ],
          "96": [
            9322,
            9361
          ],
          "97": [
            9372,
            9462
          ],
          "98": [
            9473,
            9481
          ]
        },
        "CardinalNFT.createToken": {
          "28": [
            10403,
            10424
          ],
          "30": [
            10484,
            10519
          ],
          "31": [
            10529,
            10572
          ],
          "32": [
            10582,
            10610
          ],
          "33": [
            10620,
            10656
          ],
          "34": [
            10666,
            10699
          ],
          "35": [
            10709,
            10752
          ],
          "36": [
            10815,
            10855
          ],
          "37": [
            10926,
            10960
          ],
          "38": [
            11016,
            11066
          ],
          "39": [
            11117,
            11169
          ],
          "40": [
            11204,
            11220
          ]
        },
        "CardinalNFT.getMembershipTokenIds": {
          "109": [
            16751,
            16776
          ]
        },
        "CardinalNFT.getOriginalCardinalTokenIds": {
          "110": [
            16497,
            16528
          ]
        },
        "CardinalNFT.getUserMembershipTokenURIs": {
          "21": [
            14670,
            14687
          ],
          "22": [
            14506,
            14510
          ],
          "23": [
            15049,
            15092
          ],
          "24": [
            15110,
            15127
          ],
          "25": [
            14828,
            14832
          ],
          "26": [
            15170,
            15193
          ]
        },
        "CardinalNFT.getUserOriginalCardinalTokenURIs": {
          "44": [
            13537,
            13554
          ],
          "45": [
            13418,
            13422
          ],
          "46": [
            13871,
            13914
          ],
          "47": [
            13932,
            13949
          ],
          "48": [
            13695,
            13699
          ]
        },
        "CardinalNFT.getUserServiceTokenURIs": {
          "100": [
            15785,
            15802
          ],
          "101": [
            15675,
            15679
          ],
          "102": [
            16110,
            16153
          ],
          "103": [
            16171,
            16188
          ],
          "104": [
            15943,
            15947
          ]
        },
        "CardinalNFT.getUserTokenIDs": {
          "49": [
            12804,
            12860
          ],
          "50": [
            12785,
            12788
          ],
          "51": [
            12881,
            12903
          ]
        },
        "CardinalNFT.getUserTokenURIs": {
          "78": [
            12151,
            12200
          ],
          "79": [
            12214,
            12257
          ],
          "80": [
            12132,
            12135
          ],
          "81": [
            12278,
            12301
          ]
        },
        "CardinalNFT.mintMembershipNFT": {
          "59": [
            6129,
            6226
          ],
          "60": [
            6247,
            6372
          ],
          "61": [
            6382,
            6559
          ],
          "62": [
            6578,
            6649
          ],
          "63": [
            6660,
            6681
          ],
          "64": [
            6741,
            6786
          ],
          "65": [
            6796,
            6830
          ],
          "66": [
            6840,
            6868
          ],
          "67": [
            6878,
            6930
          ],
          "68": [
            6940,
            6983
          ],
          "69": [
            6993,
            7036
          ],
          "70": [
            7046,
            7079
          ],
          "71": [
            7089,
            7132
          ],
          "72": [
            7143,
            7177
          ],
          "73": [
            7188,
            7235
          ],
          "74": [
            7246,
            7262
          ]
        },
        "CardinalNFT.removeMember": {
          "11": [
            21423,
            21503
          ],
          "12": [
            21514,
            21552
          ]
        },
        "CardinalNFT.setAdminUser": {
          "85": [
            20673,
            20711
          ]
        },
        "CardinalNFT.setMemberDiscount": {
          "116": [
            21933,
            22023
          ],
          "117": [
            22033,
            22092
          ],
          "118": [
            22102,
            22155
          ]
        },
        "CardinalNFT.setTokenURI": {
          "13": [
            11527,
            11561
          ],
          "14": [
            11571,
            11613
          ]
        },
        "CardinalNFT.setUSDCContract": {
          "43": [
            20344,
            20364
          ]
        },
        "CardinalNFT.supportsInterface": {
          "3": [
            23023,
            23066
          ]
        },
        "CardinalNFT.tokenURI": {
          "106": [
            23333,
            23363
          ]
        },
        "CardinalNFT.updateMembershipNFTLastPaid": {
          "15": [
            7708,
            7760
          ]
        },
        "CardinalNFT.updateMembershipPrice": {
          "111": [
            20022,
            20064
          ],
          "112": [
            20074,
            20121
          ]
        },
        "CardinalNFT.updateMembershipTokenURI": {
          "83": [
            19729,
            19771
          ]
        },
        "CardinalNFT.updateMembershipTypeId": {
          "119": [
            19036,
            19074
          ],
          "120": [
            19084,
            19143
          ]
        },
        "CardinalNFT.updateOriginalCardinalTypeId": {
          "53": [
            18647,
            18697
          ],
          "54": [
            18707,
            18778
          ]
        },
        "CardinalNFT.updateServiceTypeId": {
          "76": [
            19386,
            19418
          ],
          "77": [
            19428,
            19481
          ]
        },
        "CardinalNFT.updateTokenListingFee": {
          "75": [
            17997,
            18041
          ]
        },
        "CardinalNFT.updateTokenTypeId": {
          "105": [
            18321,
            18357
          ]
        },
        "CardinalNFT.withdrawMembershipNFTFunds": {
          "99": [
            9685,
            9738
          ]
        }
      },
      "2": {},
      "4": {
        "ERC721._approve": {
          "123": [
            11242,
            11271
          ],
          "124": [
            11281,
            11332
          ]
        },
        "ERC721._baseURI": {
          "158": [
            3464,
            3473
          ]
        },
        "ERC721._checkOnERC721Received": {
          "170": [
            12820,
            12880
          ],
          "171": [
            12654,
            12712
          ],
          "172": [
            13084,
            13095
          ]
        },
        "ERC721._exists": {
          "122": [
            7240,
            7277
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "127": [
            7551,
            7624
          ],
          "128": [
            7683,
            7779
          ]
        },
        "ERC721._mint": {
          "138": [
            9149,
            9210
          ],
          "139": [
            9220,
            9278
          ],
          "140": [
            9289,
            9334
          ],
          "141": [
            9345,
            9363
          ],
          "142": [
            9373,
            9394
          ],
          "143": [
            9405,
            9443
          ],
          "144": [
            9454,
            9498
          ]
        },
        "ERC721._safeTransfer": {
          "150": [
            6700,
            6728
          ],
          "151": [
            6738,
            6849
          ]
        },
        "ERC721._setApprovalForAll": {
          "147": [
            11607,
            11662
          ],
          "148": [
            11672,
            11718
          ],
          "149": [
            11728,
            11774
          ]
        },
        "ERC721._transfer": {
          "129": [
            10571,
            10652
          ],
          "130": [
            10662,
            10727
          ],
          "131": [
            10738,
            10777
          ],
          "132": [
            10839,
            10868
          ],
          "133": [
            10879,
            10899
          ],
          "134": [
            10909,
            10927
          ],
          "135": [
            10937,
            10958
          ],
          "136": [
            10969,
            11001
          ],
          "137": [
            11012,
            11050
          ]
        },
        "ERC721.approve": {
          "7": [
            3666,
            3723
          ],
          "9": [
            3734,
            3899
          ],
          "10": [
            3910,
            3931
          ]
        },
        "ERC721.balanceOf": {
          "55": [
            2020,
            2094
          ],
          "56": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4094,
            4167
          ],
          "6": [
            4178,
            4209
          ]
        },
        "ERC721.isApprovedForAll": {
          "2": [
            4615,
            4657
          ]
        },
        "ERC721.name": {
          "4": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "52": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "27": [
            5255,
            5294
          ],
          "86": [
            5528,
            5631
          ],
          "87": [
            5641,
            5680
          ]
        },
        "ERC721.setApprovalForAll": {
          "84": [
            4377,
            4429
          ]
        },
        "ERC721.supportsInterface": {
          "162": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "82": [
            2731,
            2745
          ]
        },
        "ERC721.tokenURI": {
          "173": [
            2916,
            2992
          ],
          "174": [
            3047,
            3140
          ]
        },
        "ERC721.transferFrom": {
          "16": [
            4907,
            5010
          ],
          "17": [
            5021,
            5049
          ]
        }
      },
      "5": {},
      "7": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "176": [
            3978,
            4022
          ],
          "177": [
            4032,
            4056
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "189": [
            3621,
            3655
          ],
          "190": [
            3665,
            3700
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "175": [
            2857,
            2897
          ],
          "178": [
            2944,
            2991
          ],
          "179": [
            3047,
            3092
          ],
          "180": [
            3139,
            3179
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "185": [
            6669,
            6705
          ],
          "186": [
            6773,
            6814
          ],
          "187": [
            6935,
            6966
          ],
          "188": [
            6976,
            6992
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "181": [
            5269,
            5313
          ],
          "182": [
            5385,
            5428
          ],
          "183": [
            5559,
            5592
          ],
          "184": [
            5602,
            5643
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "121": [
            1108,
            1205
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "41": [
            1892,
            1987
          ],
          "42": [
            1997,
            2021
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "18": [
            1407,
            1494
          ],
          "19": [
            1504,
            1537
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1695,
            1719
          ]
        }
      },
      "8": {
        "ERC721URIStorage._setTokenURI": {
          "125": [
            1368,
            1443
          ],
          "126": [
            1453,
            1484
          ]
        },
        "ERC721URIStorage.tokenURI": {
          "157": [
            565,
            643
          ],
          "159": [
            852,
            868
          ],
          "160": [
            1024,
            1072
          ],
          "161": [
            1093,
            1123
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721URIStorage",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106103db5760003560e01c80637867ccd11161020a578063b88d4fde11610125578063daa17f49116100b8578063ebaa42ed11610087578063ebaa42ed146108af578063eecbbec4146108c2578063f2fde38b146108d5578063fd18b841146108e8578063ffeab8a4146108fb57600080fd5b8063daa17f4914610838578063dca8bc471461084b578063e4e0a9311461086b578063e985e9c51461087357600080fd5b8063c79ba39c116100f4578063c79ba39c146107f7578063c87b56dd1461080a578063ca6d56dc1461081d578063d473dab11461083057600080fd5b8063b88d4fde146107b6578063bb3b407b146107c9578063beb48326146107dc578063c34e3782146107e457600080fd5b8063a22cb4651161019d578063b15d8d5f1161016c578063b15d8d5f1461075a578063b27a5f981461076d578063b43affda14610780578063b5c4b23d1461079357600080fd5b8063a22cb4651461071d578063aa46a40014610730578063ad00920e146104cb578063b063c9541461073a57600080fd5b80638f01785d116101d95780638f01785d146106e757806395914875146106fa57806395d89b411461070257806396291db61461070a57600080fd5b80637867ccd11461069d57806386794f66146106b057806389a30271146106c35780638da5cb5b146106d657600080fd5b806342842e0e116102fa5780636352211e1161028d578063715018a61161025c578063715018a61461067157806371af8374146106795780637417353f146106825780637498d2801461069557600080fd5b80636352211e1461061857806366a98ea31461062b5780636f48853b1461063e57806370a082311461065e57600080fd5b80635575ad3a116102c95780635575ad3a146105a957806356060a74146105bc578063595ee598146105cf5780635c23a67a146105ef57600080fd5b806342842e0e146105675780634623c7401461057a57806346d362301461058d5780634f6ccce71461059657600080fd5b806317550165116103725780632517fc07116103415780632517fc07146104f157806328da575b146105115780632f745c591461053457806333a415101461054757600080fd5b806317550165146104ba57806318160ddd146104c35780631c652fb5146104cb57806323b872dd146104de57600080fd5b80630b1ca49a116103ae5780630b1ca49a1461045d5780630fec3ecc1461047057806311ab8df514610487578063162094c4146104a757600080fd5b806301ffc9a7146103e057806306fdde0314610408578063081812fc1461041d578063095ea7b314610448575b600080fd5b6103f36103ee3660046137c3565b61090e565b60405190151581526020015b60405180910390f35b61041061091f565b6040516103ff9190613838565b61043061042b36600461384b565b6109b1565b6040516001600160a01b0390911681526020016103ff565b61045b610456366004613880565b610a3e565b005b61045b61046b3660046138aa565b610b54565b610479601d5481565b6040519081526020016103ff565b61047961049536600461384b565b60146020526000908152604090205481565b61045b6104b5366004613971565b610be6565b61047960185481565b600954610479565b61045b6104d93660046139b8565b610c56565b61045b6104ec3660046139da565b610c92565b6104796104ff3660046138aa565b60166020526000908152604090205481565b6103f361051f3660046138aa565b60126020526000908152604090205460ff1681565b610479610542366004613880565b610cc3565b61055a6105553660046138aa565b610d59565b6040516103ff9190613a16565b61045b6105753660046139da565b610ef3565b610479610588366004613a78565b610f0e565b61047960175481565b6104796105a436600461384b565b611065565b61045b6105b73660046138aa565b6110f8565b61055a6105ca3660046138aa565b611144565b6105e26105dd3660046138aa565b6112a2565b6040516103ff9190613acc565b6104306105fd36600461384b565b6011602052600090815260409020546001600160a01b031681565b61043061062636600461384b565b611344565b61045b61063936600461384b565b6113bb565b61047961064c36600461384b565b600f6020526000908152604090205481565b61047961066c3660046138aa565b611442565b61045b6114c9565b61047960195481565b61045b610690366004613880565b6114ff565b610479611557565b61045b6106ab3660046139b8565b6119b3565b61045b6106be36600461384b565b6119ef565b600e54610430906001600160a01b031681565b600b546001600160a01b0316610430565b61055a6106f53660046138aa565b611a3e565b610410611af8565b610410611b86565b61045b610718366004613b10565b611b95565b61045b61072b366004613b53565b611bd6565b600c546104799081565b61047961074836600461384b565b60106020526000908152604090205481565b61047961076836600461384b565b611be1565b61045b61077b366004613b53565b611c02565b61047961078e36600461384b565b611c57565b6103f36107a13660046138aa565b60156020526000908152604090205460ff1681565b61045b6107c4366004613b8a565b611c67565b6104796107d7366004613c06565b611c9f565b61045b61209a565b61055a6107f23660046138aa565b6121e3565b61045b6108053660046139b8565b612341565b61041061081836600461384b565b61237d565b61045b61082b3660046138aa565b612388565b6105e2612419565b600d54610430906001600160a01b031681565b6104796108593660046138aa565b60136020526000908152604090205481565b6105e2612470565b6103f3610881366004613c39565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61045b6108bd36600461384b565b6124c6565b61045b6108d036600461384b565b612523565b61045b6108e33660046138aa565b612556565b61045b6108f6366004613880565b6125ee565b61045b61090936600461384b565b6126b0565b600061091982612702565b92915050565b60606000805461092e90613c6c565b80601f016020809104026020016040519081016040528092919081815260200182805461095a90613c6c565b80156109a75780601f1061097c576101008083540402835291602001916109a7565b820191906000526020600020905b81548152906001019060200180831161098a57829003601f168201915b5050505050905090565b60006109bc82612727565b610a225760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610a4982611344565b9050806001600160a01b0316836001600160a01b03161415610ab75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610a19565b336001600160a01b0382161480610ad35750610ad38133610881565b610b455760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610a19565b610b4f8383612744565b505050565b3360009081526015602052604090205460ff16610bc55760405162461bcd60e51b815260206004820152602960248201527f4f6e6c7920636f6e74726163742061646d696e732063616e2072656d6f766520604482015268309036b2b6b132b91760b91b6064820152608401610a19565b6001600160a01b03166000908152601260205260409020805460ff19169055565b600b546001600160a01b03163314610c105760405162461bcd60e51b8152600401610a1990613ca7565b610c1a82826127b2565b817fc794e2271b51f209d8a645eec85692351ad1adc857ab2e06f9c5af7961cf07d582604051610c4a9190613838565b60405180910390a25050565b600b546001600160a01b03163314610c805760405162461bcd60e51b8152600401610a1990613ca7565b60009182526014602052604090912055565b610c9c338261283d565b610cb85760405162461bcd60e51b8152600401610a1990613cdc565b610b4f838383612923565b6000610cce83611442565b8210610d305760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610a19565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b60606000610d66600c5490565b905060008060015b838111610deb57856001600160a01b0316610d8882611344565b6001600160a01b0316148015610dc657506017546000828152600f60205260409020541480610dc657506018546000828152600f6020526040902054145b15610dd957610dd6600184613d43565b92505b80610de381613d5b565b915050610d6e565b5060008267ffffffffffffffff811115610e0757610e076138c5565b604051908082528060200260200182016040528015610e3a57816020015b6060815260200190600190039081610e255790505b50905060015b848111610ee957866001600160a01b0316610e5a82611344565b6001600160a01b0316148015610e9857506017546000828152600f60205260409020541480610e9857506018546000828152600f6020526040902054145b15610ed7576000610ea88261237d565b905080838581518110610ebd57610ebd613d76565b6020908102919091010152610ed3600185613d43565b9350505b80610ee181613d5b565b915050610e40565b5095945050505050565b610b4f83838360405180602001604052806000815250611c67565b600b546000906001600160a01b03163314610f3b5760405162461bcd60e51b8152600401610a1990613ca7565b610f49600c80546001019055565b6000610f54600c5490565b6000818152600f60209081526040808320899055601090915290208590559050610f7e3382612ad0565b610f8881876127b2565b610f923082610a3e565b600d54610fa9906001600160a01b03166001611bd6565b601754851415610fed57601a80546001810182556000919091527f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e0181905561105a565b60185485141561105a57601b80546001810182556000919091527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc101819055821561104857600081815260146020526040902083905561105a565b60008181526014602052604090204290555b90505b949350505050565b600061107060095490565b82106110d35760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610a19565b600982815481106110e6576110e6613d76565b90600052602060002001549050919050565b600b546001600160a01b031633146111225760405162461bcd60e51b8152600401610a1990613ca7565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b60606000611151600c5490565b905060008060015b8381116111bd57856001600160a01b031661117382611344565b6001600160a01b031614801561119857506017546000828152600f6020526040902054145b156111ab576111a8600184613d43565b92505b806111b581613d5b565b915050611159565b5060008267ffffffffffffffff8111156111d9576111d96138c5565b60405190808252806020026020018201604052801561120c57816020015b60608152602001906001900390816111f75790505b50905060015b848111610ee957866001600160a01b031661122c82611344565b6001600160a01b031614801561125157506017546000828152600f6020526040902054145b156112905760006112618261237d565b90508083858151811061127657611276613d76565b602090810291909101015261128c600185613d43565b9350505b8061129a81613d5b565b915050611212565b606060006112af83611442565b905060008167ffffffffffffffff8111156112cc576112cc6138c5565b6040519080825280602002602001820160405280156112f5578160200160208202803683370190505b50905060005b8281101561133c5761130d8582610cc3565b82828151811061131f5761131f613d76565b60209081029190910101528061133481613d5b565b9150506112fb565b509392505050565b6000818152600260205260408120546001600160a01b0316806109195760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610a19565b600b546001600160a01b031633146113e55760405162461bcd60e51b8152600401610a1990613ca7565b6017819055604051751bdc9a59da5b985b10d85c991a5b985b151e5c19525960521b815281906016015b604051908190038120907fa611ba47a2a0887b794d3e097d5cfb33522f6ed26df589ccd12c01d5c584800a90600090a350565b60006001600160a01b0382166114ad5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610a19565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b031633146114f35760405162461bcd60e51b8152600401610a1990613ca7565b6114fd6000612c17565b565b600b546001600160a01b031633146115295760405162461bcd60e51b8152600401610a1990613ca7565b600090815260116020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b601d54336000908152601660205260408120549091901561159e5733600090815260166020526040902054601d5460649161159191613d8c565b61159b9190613dc1565b90505b600e546040516370a0823160e01b815233600482015282916001600160a01b0316906370a082319060240160206040518083038186803b1580156115e157600080fd5b505afa1580156115f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116199190613dd5565b101561168d5760405162461bcd60e51b815260206004820152603960248201527f596f7520646f6e2774206861766520656e6f756768205553444320746f20706160448201527f7920666f7220746865206d656d62657273686970204e46542e000000000000006064820152608401610a19565b600e54604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e9060440160206040518083038186803b1580156116d657600080fd5b505afa1580156116ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170e9190613dd5565b10156117a85760405162461bcd60e51b815260206004820152605e60248201527f596f7520686176656e277420617070726f766564207468697320636f6e74726160448201527f637420746f207370656e6420656e6f756768206f6620796f757220555344432060648201527f746f2070617920666f7220746865206d656d62657273686970204e46542e0000608482015260a401610a19565b600e546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156117fa57600080fd5b505af115801561180e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118329190613dee565b50611841600c80546001019055565b600061184c600c5490565b6018546000828152600f6020908152604080832093909355601090529081205590506118783382612ad0565b60008181526014602090815260408083204290553383526016909152812055601c805461192d9183916118aa90613c6c565b80601f01602080910402602001604051908101604052809291908181526020018280546118d690613c6c565b80156119235780601f106118f857610100808354040283529160200191611923565b820191906000526020600020905b81548152906001019060200180831161190657829003601f168201915b50505050506127b2565b6119373082610a3e565b600d5461194e906001600160a01b03166001611bd6565b601b805460018101825560009182527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc101829055604051829133917f7430cefc529011c1b720a4803c3a12db2bfdf282e089e2d26ff4929ef11a703c9190a392915050565b600b546001600160a01b031633146119dd5760405162461bcd60e51b8152600401610a1990613ca7565b60009182526010602052604090912055565b600b546001600160a01b03163314611a195760405162461bcd60e51b8152600401610a1990613ca7565b60198190556040516c1cd95c9d9a58d9551e5c195259609a1b81528190600d0161140f565b60606000611a4b83611442565b90506000808267ffffffffffffffff811115611a6957611a696138c5565b604051908082528060200260200182016040528015611a9c57816020015b6060815260200190600190039081611a875790505b50905060005b83811015611aef57611ab48682610cc3565b9250611abf8361237d565b828281518110611ad157611ad1613d76565b60200260200101819052508080611ae790613d5b565b915050611aa2565b50949350505050565b601c8054611b0590613c6c565b80601f0160208091040260200160405190810160405280929190818152602001828054611b3190613c6c565b8015611b7e5780601f10611b5357610100808354040283529160200191611b7e565b820191906000526020600020905b815481529060010190602001808311611b6157829003601f168201915b505050505081565b60606001805461092e90613c6c565b600b546001600160a01b03163314611bbf5760405162461bcd60e51b8152600401610a1990613ca7565b8051611bd290601c906020840190613714565b5050565b611bd2338383612c69565b601b8181548110611bf157600080fd5b600091825260209091200154905081565b600b546001600160a01b03163314611c2c5760405162461bcd60e51b8152600401610a1990613ca7565b6001600160a01b03919091166000908152601560205260409020805460ff1916911515919091179055565b601a8181548110611bf157600080fd5b611c71338361283d565b611c8d5760405162461bcd60e51b8152600401610a1990613cdc565b611c9984848484612d38565b50505050565b600b546000906001600160a01b03163314611ccc5760405162461bcd60e51b8152600401610a1990613ca7565b836001600160a01b0316611cdf84611344565b6001600160a01b031614611d495760405162461bcd60e51b815260206004820152602b60248201527f54686973206164647265737320646f65736e2774206f776e20746865204e465460448201526a1039b832b1b4b334b2b21760a91b6064820152608401610a19565b600b546001600160a01b0316611d5e84611344565b6001600160a01b031614158015611d915750600d546001600160a01b0316611d8584611344565b6001600160a01b031614155b611e035760405162461bcd60e51b815260206004820152603960248201527f43616e27742063686172676520746865206f776e6572206f72206d61726b657460448201527f706c61636520666f7220746865206d656d626572736869702e000000000000006064820152608401610a19565b601d546001600160a01b03851660009081526016602052604090205415611e59576001600160a01b038516600090815260166020526040902054601d54606491611e4c91613d8c565b611e569190613dc1565b90505b600e546040516370a0823160e01b81526001600160a01b038781166004830152839216906370a082319060240160206040518083038186803b158015611e9e57600080fd5b505afa158015611eb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed69190613dd5565b1080611f625750600e54604051636eb1769f60e11b81526001600160a01b0387811660048301523060248301528392169063dd62ed3e9060440160206040518083038186803b158015611f2857600080fd5b505afa158015611f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f609190613dd5565b105b15611f7a57611f7084612d6b565b6001915050612093565b600e546040516323b872dd60e01b81526001600160a01b03878116600483015230602483015260448201849052909116906323b872dd90606401602060405180830381600087803b158015611fce57600080fd5b505af1158015611fe2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120069190613dee565b508215612023576000848152601460205260409020839055612035565b60008481526014602052604090204290555b6001600160a01b03851660008181526016602090815260408083209290925581518481529081018690528692917f9170d37d9d267e1d271f28f3f225ac7e95b00677566675ba1d251944eb3c5924910160405180910390a360009150505b9392505050565b600b546001600160a01b031633146120c45760405162461bcd60e51b8152600401610a1990613ca7565b600e546001600160a01b031663a9059cbb6120e7600b546001600160a01b031690565b600e546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561212a57600080fd5b505afa15801561213e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121629190613dd5565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156121a857600080fd5b505af11580156121bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e09190613dee565b50565b606060006121f0600c5490565b905060008060015b83811161225c57856001600160a01b031661221282611344565b6001600160a01b031614801561223757506019546000828152600f6020526040902054145b1561224a57612247600184613d43565b92505b8061225481613d5b565b9150506121f8565b5060008267ffffffffffffffff811115612278576122786138c5565b6040519080825280602002602001820160405280156122ab57816020015b60608152602001906001900390816122965790505b50905060015b848111610ee957866001600160a01b03166122cb82611344565b6001600160a01b03161480156122f057506019546000828152600f6020526040902054145b1561232f5760006123008261237d565b90508083858151811061231557612315613d76565b602090810291909101015261232b600185613d43565b9350505b8061233981613d5b565b9150506122b1565b600b546001600160a01b0316331461236b5760405162461bcd60e51b8152600401610a1990613ca7565b6000918252600f602052604090912055565b606061091982612eaa565b3360009081526015602052604090205460ff166123f55760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920636f6e74726163742061646d696e732063616e20616464206d656d6044820152643132b9399760d91b6064820152608401610a19565b6001600160a01b03166000908152601260205260409020805460ff19166001179055565b6060601b8054806020026020016040519081016040528092919081815260200182805480156109a757602002820191906000526020600020905b815481526020019060010190808311612453575050505050905090565b6060601a8054806020026020016040519081016040528092919081815260200182805480156109a75760200282019190600052602060002090815481526020019060010190808311612453575050505050905090565b600b546001600160a01b031633146124f05760405162461bcd60e51b8152600401610a1990613ca7565b601d81905560405181907f1361f6a741cb766ea2f0be44a0e1686df0e08320be065f6c8df9e4f639ab297a90600090a250565b600b546001600160a01b0316331461254d5760405162461bcd60e51b8152600401610a1990613ca7565b6121e081612d6b565b600b546001600160a01b031633146125805760405162461bcd60e51b8152600401610a1990613ca7565b6001600160a01b0381166125e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a19565b6121e081612c17565b3360009081526015602052604090205460ff166126695760405162461bcd60e51b815260206004820152603360248201527f4f6e6c7920636f6e74726163742061646d696e732063616e207365742061206d60448201527232b6b132b939b434b8103234b9b1b7bab73a1760691b6064820152608401610a19565b6001600160a01b038216600081815260166020526040808220849055518392917f874556b552951a64a8a3f7627516f395097b3de40cf93b85e87b03118cc02cf091a35050565b600b546001600160a01b031633146126da5760405162461bcd60e51b8152600401610a1990613ca7565b60188190556040516f1b595b58995c9cda1a5c151e5c19525960821b8152819060100161140f565b60006001600160e01b0319821663780e9d6360e01b1480610919575061091982613019565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061277982611344565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6127bb82612727565b61281e5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610a19565b60008281526006602090815260409091208251610b4f92840190613714565b600061284882612727565b6128a95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610a19565b60006128b483611344565b9050806001600160a01b0316846001600160a01b031614806128ef5750836001600160a01b03166128e4846109b1565b6001600160a01b0316145b8061105d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff1661105d565b826001600160a01b031661293682611344565b6001600160a01b03161461299a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610a19565b6001600160a01b0382166129fc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610a19565b612a07838383613069565b612a12600082612744565b6001600160a01b0383166000908152600360205260408120805460019290612a3b908490613e0b565b90915550506001600160a01b0382166000908152600360205260408120805460019290612a69908490613d43565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4610b4f838383613074565b6001600160a01b038216612b265760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610a19565b612b2f81612727565b15612b7c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610a19565b612b8860008383613069565b6001600160a01b0382166000908152600360205260408120805460019290612bb1908490613d43565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4611bd260008383613074565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415612ccb5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610a19565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612d43848484612923565b612d4f848484846131ed565b611c995760405162461bcd60e51b8152600401610a1990613e22565b60005b601b54811015611bd25781601b8281548110612d8c57612d8c613d76565b90600052602060002001541415612e98576000612dc5601b8381548110612db557612db5613d76565b9060005260206000200154611344565b9050612def8130601b8581548110612ddf57612ddf613d76565b9060005260206000200154612923565b60405183906001600160a01b038316907f5ab068fe2788c545757bcb78e3b2d842e34ec21c90f26c60e5ce7686e90b874990600090a3601b8054612e3590600190613e0b565b81548110612e4557612e45613d76565b9060005260206000200154601b8381548110612e6357612e63613d76565b600091825260209091200155601b805480612e8057612e80613e74565b60019003818190600052602060002001600090559055505b80612ea281613d5b565b915050612d6e565b6060612eb582612727565b612f1b5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610a19565b60008281526006602052604081208054612f3490613c6c565b80601f0160208091040260200160405190810160405280929190818152602001828054612f6090613c6c565b8015612fad5780601f10612f8257610100808354040283529160200191612fad565b820191906000526020600020905b815481529060010190602001808311612f9057829003601f168201915b505050505090506000612fcb60408051602081019091526000815290565b9050805160001415612fde575092915050565b815115613010578082604051602001612ff8929190613e8a565b60405160208183030381529060405292505050919050565b61105d846132f7565b60006001600160e01b031982166380ac58cd60e01b148061304a57506001600160e01b03198216635b5e139f60e01b145b8061091957506301ffc9a760e01b6001600160e01b0319831614610919565b610b4f8383836133ce565b6018546000828152600f602052604090205414806130a157506017546000828152600f6020526040902054145b15610b4f57600b546001600160a01b038481169116148015906130d25750600d546001600160a01b03848116911614155b80156130e657506001600160a01b03831615155b15613194576001600160a01b03831660009081526013602052604090205415613173576001600160a01b03831660009081526013602052604090205461312e90600190613e0b565b6001600160a01b038416600090815260136020526040902081905561316e576001600160a01b0383166000908152601260205260409020805460ff191690555b613194565b6001600160a01b0383166000908152601260205260409020805460ff191690555b6001600160a01b0382166000908152601260209081526040808320805460ff191660019081179091556013909252909120546131cf91613d43565b6001600160a01b038316600090815260136020526040902055505050565b60006001600160a01b0384163b156132ef57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290613231903390899088908890600401613eb9565b602060405180830381600087803b15801561324b57600080fd5b505af192505050801561327b575060408051601f3d908101601f1916820190925261327891810190613ef6565b60015b6132d5573d8080156132a9576040519150601f19603f3d011682016040523d82523d6000602084013e6132ae565b606091505b5080516132cd5760405162461bcd60e51b8152600401610a1990613e22565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061105d565b50600161105d565b606061330282612727565b6133665760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610a19565b600061337d60408051602081019091526000815290565b9050600081511161339d5760405180602001604052806000815250612093565b806133a784613486565b6040516020016133b8929190613e8a565b6040516020818303038152906040529392505050565b6001600160a01b0383166134295761342481600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b61344c565b816001600160a01b0316836001600160a01b03161461344c5761344c8382613584565b6001600160a01b03821661346357610b4f81613621565b826001600160a01b0316826001600160a01b031614610b4f57610b4f82826136d0565b6060816134aa5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156134d457806134be81613d5b565b91506134cd9050600a83613dc1565b91506134ae565b60008167ffffffffffffffff8111156134ef576134ef6138c5565b6040519080825280601f01601f191660200182016040528015613519576020820181803683370190505b5090505b841561105d5761352e600183613e0b565b915061353b600a86613f13565b613546906030613d43565b60f81b81838151811061355b5761355b613d76565b60200101906001600160f81b031916908160001a90535061357d600a86613dc1565b945061351d565b6000600161359184611442565b61359b9190613e0b565b6000838152600860205260409020549091508082146135ee576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b60095460009061363390600190613e0b565b6000838152600a60205260408120546009805493945090928490811061365b5761365b613d76565b90600052602060002001549050806009838154811061367c5761367c613d76565b6000918252602080832090910192909255828152600a909152604080822084905585825281205560098054806136b4576136b4613e74565b6001900381819060005260206000200160009055905550505050565b60006136db83611442565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b82805461372090613c6c565b90600052602060002090601f0160209004810192826137425760008555613788565b82601f1061375b57805160ff1916838001178555613788565b82800160010185558215613788579182015b8281111561378857825182559160200191906001019061376d565b50613794929150613798565b5090565b5b808211156137945760008155600101613799565b6001600160e01b0319811681146121e057600080fd5b6000602082840312156137d557600080fd5b8135612093816137ad565b60005b838110156137fb5781810151838201526020016137e3565b83811115611c995750506000910152565b600081518084526138248160208601602086016137e0565b601f01601f19169290920160200192915050565b602081526000612093602083018461380c565b60006020828403121561385d57600080fd5b5035919050565b80356001600160a01b038116811461387b57600080fd5b919050565b6000806040838503121561389357600080fd5b61389c83613864565b946020939093013593505050565b6000602082840312156138bc57600080fd5b61209382613864565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156138f6576138f66138c5565b604051601f8501601f19908116603f0116810190828211818310171561391e5761391e6138c5565b8160405280935085815286868601111561393757600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261396257600080fd5b612093838335602085016138db565b6000806040838503121561398457600080fd5b82359150602083013567ffffffffffffffff8111156139a257600080fd5b6139ae85828601613951565b9150509250929050565b600080604083850312156139cb57600080fd5b50508035926020909101359150565b6000806000606084860312156139ef57600080fd5b6139f884613864565b9250613a0660208501613864565b9150604084013590509250925092565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613a6b57603f19888603018452613a5985835161380c565b94509285019290850190600101613a3d565b5092979650505050505050565b60008060008060808587031215613a8e57600080fd5b843567ffffffffffffffff811115613aa557600080fd5b613ab187828801613951565b97602087013597506040870135966060013595509350505050565b6020808252825182820181905260009190848201906040850190845b81811015613b0457835183529284019291840191600101613ae8565b50909695505050505050565b600060208284031215613b2257600080fd5b813567ffffffffffffffff811115613b3957600080fd5b61105d84828501613951565b80151581146121e057600080fd5b60008060408385031215613b6657600080fd5b613b6f83613864565b91506020830135613b7f81613b45565b809150509250929050565b60008060008060808587031215613ba057600080fd5b613ba985613864565b9350613bb760208601613864565b925060408501359150606085013567ffffffffffffffff811115613bda57600080fd5b8501601f81018713613beb57600080fd5b613bfa878235602084016138db565b91505092959194509250565b600080600060608486031215613c1b57600080fd5b613c2484613864565b95602085013595506040909401359392505050565b60008060408385031215613c4c57600080fd5b613c5583613864565b9150613c6360208401613864565b90509250929050565b600181811c90821680613c8057607f821691505b60208210811415613ca157634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115613d5657613d56613d2d565b500190565b6000600019821415613d6f57613d6f613d2d565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615613da657613da6613d2d565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613dd057613dd0613dab565b500490565b600060208284031215613de757600080fd5b5051919050565b600060208284031215613e0057600080fd5b815161209381613b45565b600082821015613e1d57613e1d613d2d565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052603160045260246000fd5b60008351613e9c8184602088016137e0565b835190830190613eb08183602088016137e0565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613eec9083018461380c565b9695505050505050565b600060208284031215613f0857600080fd5b8151612093816137ad565b600082613f2257613f22613dab565b50069056fea2646970667358221220f644211d3b12e5a05edcb2475c48f088c7f53a840f13b9466680be3fe6eb3c9a64736f6c63430008080033",
  "deployedSourceMapi;:::-;;:::i;:::-;;;565:14:22;;558:22;540:41;;528:2;513:18;22904:169:18;;;;;;;;2488:98:4;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:22;;;1674:51;;1662:2;1647:18;3999:217:4;1528:203:22;3537:401:4;;;;;;:::i;:::-;;:::i;:::-;;21359:200:18;;;;;;:::i;:::-;;:::i;2853:36::-;;;;;;;;;2510:25:22;;;2498:2;2483:18;2853:36:18;2364:177:22;1912:58:18;;;;;;:::i;:::-;;;;;;;;;;;;;;11433:187;;;;;;:::i;:::-;;:::i;2411:35::-;;;;;;1615:111:7;1702:10;:17;1615:111;;7598:169:18;;;;;;:::i;:::-;;:::i;4726:330:4:-;;;;;;:::i;:::-;;:::i;2198:63:18:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1556:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1291:253:7;;;;;;:::i;:::-;;:::i;14257:943:18:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5122:179:4:-;;;;;;:::i;:::-;;:::i;10252:975:18:-;;;;;;:::i;:::-;;:::i;2319:41::-;;;;;;1798:230:7;;;;;;:::i;:::-;;:::i;20275:96:18:-;;;;;;:::i;:::-;;:::i;13163:859::-;;;;;;:::i;:::-;;:::i;12520:390::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1381:60::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1381:60:18;;;2191:235:4;;;;;;:::i;:::-;;:::i;18545:240:18:-;;;;;;:::i;:::-;;:::i;1114:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1929:205:4;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;2494:32:18:-;;;;;;17539:161;;;;;;:::i;:::-;;:::i;5935:1334::-;;;:::i;17897:151::-;;;;;;:::i;:::-;;:::i;19302:186::-;;;;;;:::i;:::-;;:::i;891:18::-;;;;;-1:-1:-1;;;;;891:18:18;;;1036:85:0;1108:6;;-1:-1:-1;;;;;1108:6:0;1036:85;;11835:473:18;;;;;;:::i;:::-;;:::i;2759:32::-;;;:::i;2650:102:4:-;;;:::i;19629:149:18:-;;;;;;:::i;:::-;;:::i;4283:153:4:-;;;;;;:::i;:::-;;:::i;712:33:18:-;;;;;;;1257:54;;;;;;:::i;:::-;;;;;;;;;;;;;;2672:35;;;;;;:::i;:::-;;:::i;20586:132::-;;;;;;:::i;:::-;;:::i;2582:41::-;;;;;;:::i;:::-;;:::i;2081:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5367:320:4;;;;;;:::i;:::-;;:::i;8223:1265:18:-;;;;;;:::i;:::-;;:::i;9618:127::-;;;:::i;15429:832::-;;;;;;:::i;:::-;;:::i;18229:135::-;;;;;;:::i;:::-;;:::i;23217:153::-;;;;;;:::i;:::-;;:::i;20931:192::-;;;;;;:::i;:::-;;:::i;16667:116::-;;;:::i;800:33::-;;;;;-1:-1:-1;;;;;800:33:18;;;1750:58;;;;;;:::i;:::-;;;;;;;;;;;;;;16407:128;;;:::i;4502:162:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4622:25:4;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162;19934:194:18;;;;;;:::i;:::-;;:::i;4501:115::-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;21840:322:18:-;;;;;;:::i;:::-;;:::i;18946:204::-;;;;;;:::i;:::-;;:::i;22904:169::-;23007:4;23030:36;23054:11;23030:23;:36::i;:::-;23023:43;22904:169;-1:-1:-1;;22904:169:18:o;2488:98:4:-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;4102:16;4110:7;4102;:16::i;:::-;4094:73;;;;-1:-1:-1;;;4094:73:4;;9344:2:22;4094:73:4;;;9326:21:22;9383:2;9363:18;;;9356:30;9422:34;9402:18;;;9395:62;-1:-1:-1;;;9473:18:22;;;9466:42;9525:19;;4094:73:4;;;;;;;;;-1:-1:-1;4185:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:4;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:4;:2;-1:-1:-1;;;;;3674:11:4;;;3666:57;;;;-1:-1:-1;;;3666:57:4;;9757:2:22;3666:57:4;;;9739:21:22;9796:2;9776:18;;;9769:30;9835:34;9815:18;;;9808:62;-1:-1:-1;;;9886:18:22;;;9879:31;9927:19;;3666:57:4;9555:397:22;3666:57:4;719:10:12;-1:-1:-1;;;;;3755:21:4;;;;:62;;-1:-1:-1;3780:37:4;3797:5;719:10:12;4502:162:4;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:4;;10159:2:22;3734:165:4;;;10141:21:22;10198:2;10178:18;;;10171:30;10237:34;10217:18;;;10210:62;10308:26;10288:18;;;10281:54;10352:19;;3734:165:4;9957:420:22;3734:165:4;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;21359:200:18:-;21446:10;21431:26;;;;:14;:26;;;;;;;;21423:80;;;;-1:-1:-1;;;21423:80:18;;10584:2:22;21423:80:18;;;10566:21:22;10623:2;10603:18;;;10596:30;10662:34;10642:18;;;10635:62;-1:-1:-1;;;10713:18:22;;;10706:39;10762:19;;21423:80:18;10382:405:22;21423:80:18;-1:-1:-1;;;;;21514:30:18;21547:5;21514:30;;;:15;:30;;;;;:38;;-1:-1:-1;;21514:38:18;;;21359:200::o;11433:187::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;11527:34:18::1;11540:7;11549:11;11527:12;:34::i;:::-;11592:7;11576:37;11601:11;11576:37;;;;;;:::i;:::-;;;;;;;;11433:187:::0;;:::o;7598:169::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7708:32:18::1;::::0;;;:23:::1;:32;::::0;;;;;:52;7598:169::o;4726:330:4:-;4915:41;719:10:12;4948:7:4;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:4;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;1291:253:7:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:7;;11773:2:22;1407:87:7;;;11755:21:22;11812:2;11792:18;;;11785:30;11851:34;11831:18;;;11824:62;-1:-1:-1;;;11902:18:22;;;11895:41;11953:19;;1407:87:7;11571:407:22;1407:87:7;-1:-1:-1;;;;;;1511:19:7;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;14257:943:18:-;14337:15;14364:13;14380:19;:9;918:14:13;;827:112;14380:19:18;14364:35;-1:-1:-1;14409:17:18;;14487:1;14472:240;14496:8;14490:2;:14;14472:240;;14545:11;-1:-1:-1;;;;;14530:26:18;:11;14538:2;14530:7;:11::i;:::-;-1:-1:-1;;;;;14530:26:18;;:120;;;;-1:-1:-1;14584:22:18;;14561:19;;;;:15;:19;;;;;;:45;;:88;;-1:-1:-1;14633:16:18;;14610:19;;;;:15;:19;;;;;;:39;14561:88;14526:176;;;14670:17;14686:1;14670:17;;:::i;:::-;;;14526:176;14506:4;;;;:::i;:::-;;;;14472:240;;;;14722:32;14770:12;14757:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14722:61:18;-1:-1:-1;14809:1:18;14794:358;14818:8;14812:2;:14;14794:358;;14867:11;-1:-1:-1;;;;;14852:26:18;:11;14860:2;14852:7;:11::i;:::-;-1:-1:-1;;;;;14852:26:18;;:120;;;;-1:-1:-1;14906:22:18;;14883:19;;;;:15;:19;;;;;;:45;;:88;;-1:-1:-1;14955:16:18;;14932:19;;;;:15;:19;;;;;;:39;14883:88;14848:294;;;14992:24;15019:12;15028:2;15019:8;:12::i;:::-;14992:39;;15082:10;15049:16;15066:12;15049:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;15110:17;15126:1;15110:17;;:::i;:::-;;;14974:168;14848:294;14828:4;;;;:::i;:::-;;;;14794:358;;;-1:-1:-1;15177:16:18;14257:943;-1:-1:-1;;;;;14257:943:18:o;5122:179:4:-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;10252:975:18:-;1108:6:0;;10387:4:18;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;10403:21:18::1;:9;1032:19:13::0;;1050:1;1032:19;;;945:123;10403:21:18::1;10434:17;10454:19;:9;918:14:13::0;;827:112;10454:19:18::1;10484:26;::::0;;;:15:::1;:26;::::0;;;;;;;:35;;;10529:19:::1;:30:::0;;;;;:43;;;10434:39;-1:-1:-1;10582:28:18::1;10588:10;10434:39:::0;10582:5:::1;:28::i;:::-;10620:36;10633:9;10644:11;10620:12;:36::i;:::-;10666:33;10682:4;10689:9;10666:7;:33::i;:::-;10727:18;::::0;10709:43:::1;::::0;-1:-1:-1;;;;;10727:18:18::1;::::0;10709:17:::1;:43::i;:::-;10777:22;;10767:6;:32;10763:431;;;10815:24;:40:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;10815:40:18;;;;;::::1;::::0;;;10763:431:::1;;;10894:16;;10884:6;:26;10880:314;;;10926:18;:34:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;10926:34:18;;;;;::::1;::::0;;;10979:17;;10975:209:::1;;11016:34;::::0;;;:23:::1;:34;::::0;;;;:50;;;10975:209:::1;;;11117:34;::::0;;;:23:::1;:34;::::0;;;;11154:15:::1;11117:52:::0;;10975:209:::1;11211:9:::0;-1:-1:-1;1318:1:0::1;10252:975:18::0;;;;;;:::o;1798:230:7:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:7;;12722:2:22;1892:95:7;;;12704:21:22;12761:2;12741:18;;;12734:30;12800:34;12780:18;;;12773:62;-1:-1:-1;;;12851:18:22;;;12844:42;12903:19;;1892:95:7;12520:408:22;1892:95:7;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;20275:96:18:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;20344:4:18::1;:20:::0;;-1:-1:-1;;;;;;20344:20:18::1;-1:-1:-1::0;;;;;20344:20:18;;;::::1;::::0;;;::::1;::::0;;20275:96::o;13163:859::-;13249:15;13276:13;13292:19;:9;918:14:13;;827:112;13292:19:18;13276:35;-1:-1:-1;13321:17:18;;13399:1;13384:195;13408:8;13402:2;:14;13384:195;;13457:11;-1:-1:-1;;;;;13442:26:18;:11;13450:2;13442:7;:11::i;:::-;-1:-1:-1;;;;;13442:26:18;;:75;;;;-1:-1:-1;13495:22:18;;13472:19;;;;:15;:19;;;;;;:45;13442:75;13438:131;;;13537:17;13553:1;13537:17;;:::i;:::-;;;13438:131;13418:4;;;;:::i;:::-;;;;13384:195;;;;13589:32;13637:12;13624:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13589:61:18;-1:-1:-1;13676:1:18;13661:313;13685:8;13679:2;:14;13661:313;;13734:11;-1:-1:-1;;;;;13719:26:18;:11;13727:2;13719:7;:11::i;:::-;-1:-1:-1;;;;;13719:26:18;;:75;;;;-1:-1:-1;13772:22:18;;13749:19;;;;:15;:19;;;;;;:45;13719:75;13715:249;;;13814:24;13841:12;13850:2;13841:8;:12::i;:::-;13814:39;;13904:10;13871:16;13888:12;13871:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;13932:17;13948:1;13932:17;;:::i;:::-;;;13796:168;13715:249;13695:4;;;;:::i;:::-;;;;13661:313;;12520:390;12589:16;12617:22;12642;12652:11;12642:9;:22::i;:::-;12617:47;;12674:32;12723:14;12709:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12709:29:18;;12674:64;;12754:9;12749:122;12769:14;12765:1;:18;12749:122;;;12825:35;12845:11;12858:1;12825:19;:35::i;:::-;12804:15;12820:1;12804:18;;;;;;;;:::i;:::-;;;;;;;;;;:56;12785:3;;;;:::i;:::-;;;;12749:122;;;-1:-1:-1;12888:15:18;12520:390;-1:-1:-1;;;12520:390:18:o;2191:235:4:-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:4;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:4;;13135:2:22;2324:73:4;;;13117:21:22;13174:2;13154:18;;;13147:30;13213:34;13193:18;;;13186:62;-1:-1:-1;;;13264:18:22;;;13257:39;13313:19;;2324:73:4;12933:405:22;18545:240:18;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;18647:22:18::1;:50:::0;;;18712:66:::1;::::0;-1:-1:-1;;;13545:37:22;;18647:50:18;;13607:2:22;13598:12;18712:66:18::1;;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;18545:240:::0;:::o;1929:205:4:-;2001:7;-1:-1:-1;;;;;2028:19:4;;2020:74;;;;-1:-1:-1;;;2020:74:4;;13823:2:22;2020:74:4;;;13805:21:22;13862:2;13842:18;;;13835:30;13901:34;13881:18;;;13874:62;-1:-1:-1;;;13952:18:22;;;13945:40;14002:19;;2020:74:4;13621:406:22;2020:74:4;-1:-1:-1;;;;;;2111:16:4;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;17539:161:18:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;17640:34:18::1;::::0;;;:25:::1;:34;::::0;;;;:53;;-1:-1:-1;;;;;;17640:53:18::1;-1:-1:-1::0;;;;;17640:53:18;;;::::1;::::0;;;::::1;::::0;;17539:161::o;5935:1334::-;6034:21;;6098:10;5982:4;6070:39;;;:27;:39;;;;;;5982:4;;6034:21;6070:43;6066:171;;6209:10;6181:39;;;;:27;:39;;;;;;6157:21;;6223:3;;6157:63;;;:::i;:::-;:69;;;;:::i;:::-;6129:97;;6066:171;6255:4;;:26;;-1:-1:-1;;;6255:26:18;;6270:10;6255:26;;;1674:51:22;6285:25:18;;-1:-1:-1;;;;;6255:4:18;;:14;;1647:18:22;;6255:26:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;6247:125;;;;-1:-1:-1;;;6247:125:18;;14853:2:22;6247:125:18;;;14835:21:22;14892:2;14872:18;;;14865:30;14931:34;14911:18;;;14904:62;15002:27;14982:18;;;14975:55;15047:19;;6247:125:18;14651:421:22;6247:125:18;6390:4;;:41;;-1:-1:-1;;;6390:41:18;;6405:10;6390:41;;;15289:34:22;6425:4:18;15339:18:22;;;15332:43;6435:25:18;;-1:-1:-1;;;;;6390:4:18;;:14;;15224:18:22;;6390:41:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;6382:177;;;;-1:-1:-1;;;6382:177:18;;15588:2:22;6382:177:18;;;15570:21:22;15627:2;15607:18;;;15600:30;15666:34;15646:18;;;15639:62;15737:34;15717:18;;;15710:62;15809:32;15788:19;;;15781:61;15859:19;;6382:177:18;15386:498:22;6382:177:18;6578:4;;:71;;-1:-1:-1;;;6578:71:18;;6596:10;6578:71;;;16129:34:22;6616:4:18;16179:18:22;;;16172:43;16231:18;;;16224:34;;;-1:-1:-1;;;;;6578:4:18;;;;:17;;16064:18:22;;6578:71:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6660:21;:9;1032:19:13;;1050:1;1032:19;;;945:123;6660:21:18;6691:17;6711:19;:9;918:14:13;;827:112;6711:19:18;6770:16;;6741:26;;;;:15;:26;;;;;;;;:45;;;;6796:19;:30;;;;;:34;6691:39;-1:-1:-1;6840:28:18;6846:10;6691:39;6840:5;:28::i;:::-;6878:34;;;;:23;:34;;;;;;;;6915:15;6878:52;;6968:10;6940:39;;:27;:39;;;;;:43;7017:18;6993:43;;;;6902:9;;6993:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:43::i;:::-;7046:33;7062:4;7069:9;7046:7;:33::i;:::-;7107:18;;7089:43;;-1:-1:-1;;;;;7107:18:18;;7089:17;:43::i;:::-;7143:18;:34;;;;;;;-1:-1:-1;7143:34:18;;;;;;;;7193:42;;7167:9;;7213:10;;7193:42;;-1:-1:-1;7193:42:18;7253:9;5935:1334;-1:-1:-1;;5935:1334:18:o;17897:151::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;17997:28:18::1;::::0;;;:19:::1;:28;::::0;;;;;:44;17897:151::o;19302:186::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;19386:13:18::1;:32:::0;;;19433:48:::1;::::0;-1:-1:-1;;;16721:28:22;;19386:32:18;;16774:2:22;16765:12;19433:48:18::1;16519:264:22::0;11835:473:18;11905:15;11932:22;11957;11967:11;11957:9;:22::i;:::-;11932:47;;11989:19;12022:32;12070:14;12057:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12022:63;;12101:9;12096:172;12116:14;12112:1;:18;12096:172;;;12165:35;12185:11;12198:1;12165:19;:35::i;:::-;12151:49;;12236:21;12245:11;12236:8;:21::i;:::-;12214:16;12231:1;12214:19;;;;;;;;:::i;:::-;;;;;;:43;;;;12132:3;;;;;:::i;:::-;;;;12096:172;;;-1:-1:-1;12285:16:18;11835:473;-1:-1:-1;;;;11835:473:18:o;2759:32::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2650:102:4:-;2706:13;2738:7;2731:14;;;;;:::i;19629:149:18:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;19729:42:18;;::::1;::::0;:18:::1;::::0;:42:::1;::::0;::::1;::::0;::::1;:::i;:::-;;19629:149:::0;:::o;4283:153:4:-;4377:52;719:10:12;4410:8:4;4420;4377:18;:52::i;2672:35:18:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2672:35:18;:::o;20586:132::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;20673:28:18;;;::::1;;::::0;;;:14:::1;:28;::::0;;;;:38;;-1:-1:-1;;20673:38:18::1;::::0;::::1;;::::0;;;::::1;::::0;;20586:132::o;2582:41::-;;;;;;;;;;;;5367:320:4;5536:41;719:10:12;5569:7:4;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:4;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;8223:1265:18:-;1108:6:0;;8342:4:18;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8386:6:18::1;-1:-1:-1::0;;;;;8366:26:18::1;:16;8374:7;8366;:16::i;:::-;-1:-1:-1::0;;;;;8366:26:18::1;;8358:82;;;::::0;-1:-1:-1;;;8358:82:18;;16990:2:22;8358:82:18::1;::::0;::::1;16972:21:22::0;17029:2;17009:18;;;17002:30;17068:34;17048:18;;;17041:62;-1:-1:-1;;;17119:18:22;;;17112:41;17170:19;;8358:82:18::1;16788:407:22::0;8358:82:18::1;1108:6:0::0;;-1:-1:-1;;;;;1108:6:0;8458:16:18::1;8466:7:::0;8458::::1;:16::i;:::-;-1:-1:-1::0;;;;;8458:27:18::1;;;:69;;;;-1:-1:-1::0;8509:18:18::1;::::0;-1:-1:-1;;;;;8509:18:18::1;8489:16;8497:7:::0;8489::::1;:16::i;:::-;-1:-1:-1::0;;;;;8489:38:18::1;;;8458:69;8450:139;;;::::0;-1:-1:-1;;;8450:139:18;;17402:2:22;8450:139:18::1;::::0;::::1;17384:21:22::0;17441:2;17421:18;;;17414:30;17480:34;17460:18;;;17453:62;17551:27;17531:18;;;17524:55;17596:19;;8450:139:18::1;17200:421:22::0;8450:139:18::1;8636:21;::::0;-1:-1:-1;;;;;8672:35:18;::::1;8600:33;8672:35:::0;;;:27:::1;:35;::::0;;;;;:39;8668:163:::1;;-1:-1:-1::0;;;;;8779:35:18;::::1;;::::0;;;:27:::1;:35;::::0;;;;;8755:21:::1;::::0;8817:3:::1;::::0;8755:59:::1;::::0;::::1;:::i;:::-;:65;;;;:::i;:::-;8727:93;;8668:163;8845:4;::::0;:22:::1;::::0;-1:-1:-1;;;8845:22:18;;-1:-1:-1;;;;;1692:32:22;;;8845:22:18::1;::::0;::::1;1674:51:22::0;8870:25:18;;8845:4:::1;::::0;:14:::1;::::0;1647:18:22;;8845:22:18::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;:119;;;-1:-1:-1::0;8899:4:18::1;::::0;:37:::1;::::0;-1:-1:-1;;;8899:37:18;;-1:-1:-1;;;;;15307:15:22;;;8899:37:18::1;::::0;::::1;15289:34:22::0;8930:4:18::1;15339:18:22::0;;;15332:43;8939:25:18;;8899:4:::1;::::0;:14:::1;::::0;15224:18:22;;8899:37:18::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;8845:119;8841:198;;;8980:26;8998:7;8980:17;:26::i;:::-;9027:1;9020:8;;;;;8841:198;9049:4;::::0;:67:::1;::::0;-1:-1:-1;;;9049:67:18;;-1:-1:-1;;;;;16147:15:22;;;9049:67:18::1;::::0;::::1;16129:34:22::0;9083:4:18::1;16179:18:22::0;;;16172:43;16231:18;;;16224:34;;;9049:4:18;;::::1;::::0;:17:::1;::::0;16064:18:22;;9049:67:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9131:17:18;;9127:185:::1;;9164:32;::::0;;;:23:::1;:32;::::0;;;;:48;;;9127:185:::1;;;9251:32;::::0;;;:23:::1;:32;::::0;;;;9286:15:::1;9251:50:::0;;9127:185:::1;-1:-1:-1::0;;;;;9322:35:18;::::1;9360:1;9322:35:::0;;;:27:::1;:35;::::0;;;;;;;:39;;;;9377:85;;17800:25:22;;;17841:18;;;17834:34;;;9412:7:18;;9322:35;9377:85:::1;::::0;17773:18:22;9377:85:18::1;;;;;;;9480:1;9473:8;;;1318:1:0;8223:1265:18::0;;;;;:::o;9618:127::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9685:4:18::1;::::0;-1:-1:-1;;;;;9685:4:18::1;:13;9699:7;1108:6:0::0;;-1:-1:-1;;;;;1108:6:0;;1036:85;9699:7:18::1;9708:4;::::0;:29:::1;::::0;-1:-1:-1;;;9708:29:18;;9731:4:::1;9708:29;::::0;::::1;1674:51:22::0;-1:-1:-1;;;;;9708:4:18;;::::1;::::0;:14:::1;::::0;1647:18:22;;9708:29:18::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9685:53;::::0;-1:-1:-1;;;;;;9685:53:18::1;::::0;;;;;;-1:-1:-1;;;;;18071:32:22;;;9685:53:18::1;::::0;::::1;18053:51:22::0;18120:18;;;18113:34;18026:18;;9685:53:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9618:127::o:0;15429:832::-;15506:15;15533:13;15549:19;:9;918:14:13;;827:112;15549:19:18;15533:35;-1:-1:-1;15578:17:18;;15656:1;15641:186;15665:8;15659:2;:14;15641:186;;15714:11;-1:-1:-1;;;;;15699:26:18;:11;15707:2;15699:7;:11::i;:::-;-1:-1:-1;;;;;15699:26:18;;:66;;;;-1:-1:-1;15752:13:18;;15729:19;;;;:15;:19;;;;;;:36;15699:66;15695:122;;;15785:17;15801:1;15785:17;;:::i;:::-;;;15695:122;15675:4;;;;:::i;:::-;;;;15641:186;;;;15837:32;15885:12;15872:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15837:61:18;-1:-1:-1;15924:1:18;15909:304;15933:8;15927:2;:14;15909:304;;15982:11;-1:-1:-1;;;;;15967:26:18;:11;15975:2;15967:7;:11::i;:::-;-1:-1:-1;;;;;15967:26:18;;:66;;;;-1:-1:-1;16020:13:18;;15997:19;;;;:15;:19;;;;;;:36;15967:66;15963:240;;;16053:24;16080:12;16089:2;16080:8;:12::i;:::-;16053:39;;16143:10;16110:16;16127:12;16110:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;16171:17;16187:1;16171:17;;:::i;:::-;;;16035:168;15963:240;15943:4;;;;:::i;:::-;;;;15909:304;;18229:135;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;18321:24:18::1;::::0;;;:15:::1;:24;::::0;;;;;:36;18229:135::o;23217:153::-;23308:13;23340:23;23355:7;23340:14;:23::i;20931:192::-;21015:10;21000:26;;;;:14;:26;;;;;;;;20992:76;;;;-1:-1:-1;;;20992:76:18;;18360:2:22;20992:76:18;;;18342:21:22;18399:2;18379:18;;;18372:30;18438:34;18418:18;;;18411:62;-1:-1:-1;;;18489:18:22;;;18482:35;18534:19;;20992:76:18;18158:401:22;20992:76:18;-1:-1:-1;;;;;21079:30:18;;;;;:15;:30;;;;;:37;;-1:-1:-1;;21079:37:18;21112:4;21079:37;;;20931:192::o;16667:116::-;16723:16;16758:18;16751:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16667:116;:::o;16407:128::-;16469:16;16504:24;16497:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16407:128;:::o;19934:194::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;20022:21:18::1;:42:::0;;;20079::::1;::::0;20046:18;;20079:42:::1;::::0;;;::::1;19934:194:::0;:::o;4501:115::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4583:26:18::1;4601:7;4583:17;:26::i;1918:198:0:-:0;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;18766:2:22;1998:73:0::1;::::0;::::1;18748:21:22::0;18805:2;18785:18;;;18778:30;18844:34;18824:18;;;18817:62;-1:-1:-1;;;18895:18:22;;;18888:36;18941:19;;1998:73:0::1;18564:402:22::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;21840:322:18:-:0;21956:10;21941:26;;;;:14;:26;;;;;;;;21933:90;;;;-1:-1:-1;;;21933:90:18;;19173:2:22;21933:90:18;;;19155:21:22;19212:2;19192:18;;;19185:30;19251:34;19231:18;;;19224:62;-1:-1:-1;;;19302:18:22;;;19295:49;19361:19;;21933:90:18;18971:415:22;21933:90:18;-1:-1:-1;;;;;22033:42:18;;;;;;:27;:42;;;;;;:59;;;22107:48;22078:14;;22033:42;22107:48;;;21840:322;;:::o;18946:204::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;19036:16:18::1;:38:::0;;;19089:54:::1;::::0;-1:-1:-1;;;19593:31:22;;19036:38:18;;19649:2:22;19640:12;19089:54:18::1;19391:267:22::0;990:222:7;1092:4;-1:-1:-1;;;;;;1115:50:7;;-1:-1:-1;;;1115:50:7;;:90;;;1169:36;1193:11;1169:23;:36::i;7159:125:4:-;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:4;:30;;;7159:125::o;11168:171::-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:4;-1:-1:-1;;;;;11242:29:4;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:4;;;;;;;;;;;11168:171;;:::o;1277:214:8:-;1376:16;1384:7;1376;:16::i;:::-;1368:75;;;;-1:-1:-1;;;1368:75:8;;19865:2:22;1368:75:8;;;19847:21:22;19904:2;19884:18;;;19877:30;19943:34;19923:18;;;19916:62;-1:-1:-1;;;19994:18:22;;;19987:44;20048:19;;1368:75:8;19663:410:22;1368:75:8;1453:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;7442:344:4:-;7535:4;7559:16;7567:7;7559;:16::i;:::-;7551:73;;;;-1:-1:-1;;;7551:73:4;;20280:2:22;7551:73:4;;;20262:21:22;20319:2;20299:18;;;20292:30;20358:34;20338:18;;;20331:62;-1:-1:-1;;;20409:18:22;;;20402:42;20461:19;;7551:73:4;20078:408:22;7551:73:4;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:4;:7;-1:-1:-1;;;;;7691:16:4;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:4;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:4;;7691:51;:87;;;-1:-1:-1;;;;;;4622:25:4;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7746:32;4502:162;10452:605;10606:4;-1:-1:-1;;;;;10579:31:4;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:4;;10571:81;;;;-1:-1:-1;;;10571:81:4;;20693:2:22;10571:81:4;;;20675:21:22;20732:2;20712:18;;;20705:30;20771:34;20751:18;;;20744:62;-1:-1:-1;;;20822:18:22;;;20815:35;20867:19;;10571:81:4;20491:401:22;10571:81:4;-1:-1:-1;;;;;10670:16:4;;10662:65;;;;-1:-1:-1;;;10662:65:4;;21099:2:22;10662:65:4;;;21081:21:22;21138:2;21118:18;;;21111:30;21177:34;21157:18;;;21150:62;-1:-1:-1;;;21228:18:22;;;21221:34;21272:19;;10662:65:4;20897:400:22;10662:65:4;10738:39;10759:4;10765:2;10769:7;10738:20;:39::i;:::-;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:4;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:4;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:4;-1:-1:-1;;;;;10937:21:4;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;11012:38;11032:4;11038:2;11042:7;11012:19;:38::i;9078:427::-;-1:-1:-1;;;;;9157:16:4;;9149:61;;;;-1:-1:-1;;;9149:61:4;;21634:2:22;9149:61:4;;;21616:21:22;;;21653:18;;;21646:30;21712:34;21692:18;;;21685:62;21764:18;;9149:61:4;21432:356:22;9149:61:4;9229:16;9237:7;9229;:16::i;:::-;9228:17;9220:58;;;;-1:-1:-1;;;9220:58:4;;21995:2:22;9220:58:4;;;21977:21:22;22034:2;22014:18;;;22007:30;22073;22053:18;;;22046:58;22121:18;;9220:58:4;21793:352:22;9220:58:4;9289:45;9318:1;9322:2;9326:7;9289:20;:45::i;:::-;-1:-1:-1;;;;;9345:13:4;;;;;;:9;:13;;;;;:18;;9362:1;;9345:13;:18;;9362:1;;9345:18;:::i;:::-;;;;-1:-1:-1;;9373:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9373:21:4;-1:-1:-1;;;;;9373:21:4;;;;;;;;9410:33;;9373:16;;;9410:33;;9373:16;;9410:33;9454:44;9482:1;9486:2;9490:7;9454:19;:44::i;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;11474:307:4:-;11624:8;-1:-1:-1;;;;;11615:17:4;:5;-1:-1:-1;;;;;11615:17:4;;;11607:55;;;;-1:-1:-1;;;11607:55:4;;22352:2:22;11607:55:4;;;22334:21:22;22391:2;22371:18;;;22364:30;22430:27;22410:18;;;22403:55;22475:18;;11607:55:4;22150:349:22;11607:55:4;-1:-1:-1;;;;;11672:25:4;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:4;;;;;;;;;;11733:41;;540::22;;;11733::4;;513:18:22;11733:41:4;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:4;;;;;;;:::i;3827:533:18:-;3894:6;3889:465;3910:18;:25;3906:29;;3889:465;;;3985:7;3960:18;3979:1;3960:21;;;;;;;;:::i;:::-;;;;;;;;;:32;3956:388;;;4012:16;4031:30;4039:18;4058:1;4039:21;;;;;;;;:::i;:::-;;;;;;;;;4031:7;:30::i;:::-;4012:49;;4079:57;4089:8;4107:4;4114:18;4133:1;4114:21;;;;;;;;:::i;:::-;;;;;;;;;4079:9;:57::i;:::-;4160:37;;4189:7;;-1:-1:-1;;;;;4160:37:18;;;;;;;;4240:18;4259:25;;:27;;4285:1;;4259:27;:::i;:::-;4240:47;;;;;;;;:::i;:::-;;;;;;;;;4216:18;4235:1;4216:21;;;;;;;;:::i;:::-;;;;;;;;;;:71;4305:18;:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3994:350;3956:388;3937:3;;;;:::i;:::-;;;;3889:465;;467:663:8;540:13;573:16;581:7;573;:16::i;:::-;565:78;;;;-1:-1:-1;;;565:78:8;;23257:2:22;565:78:8;;;23239:21:22;23296:2;23276:18;;;23269:30;23335:34;23315:18;;;23308:62;-1:-1:-1;;;23386:18:22;;;23379:47;23443:19;;565:78:8;23055:413:22;565:78:8;654:23;680:19;;;:10;:19;;;;;654:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:18;730:10;3464:9:4;;;;;;;;;-1:-1:-1;3464:9:4;;;3388:92;730:10:8;709:31;;819:4;813:18;835:1;813:23;809:70;;;-1:-1:-1;859:9:8;467:663;-1:-1:-1;;467:663:8:o;809:70::-;981:23;;:27;977:106;;1055:4;1061:9;1038:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1024:48;;;;467:663;;;:::o;977:106::-;1100:23;1115:7;1100:14;:23::i;1570:300:4:-;1672:4;-1:-1:-1;;;;;;1707:40:4;;-1:-1:-1;;;1707:40:4;;:104;;-1:-1:-1;;;;;;;1763:48:4;;-1:-1:-1;;;1763:48:4;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:15;;;1827:36:4;829:155:15;22572:179:18;22699:45;22726:4;22732:2;22736:7;22699:26;:45::i;4898:893::-;5038:16;;5010:24;;;;:15;:24;;;;;;:44;;:98;;-1:-1:-1;5086:22:18;;5058:24;;;;:15;:24;;;;;;:50;5010:98;5006:724;;;1108:6:0;;-1:-1:-1;;;;;5128:15:18;;;1108:6:0;;5128:15:18;;;;:45;;-1:-1:-1;5155:18:18;;-1:-1:-1;;;;;5147:26:18;;;5155:18;;5147:26;;5128:45;:67;;;;-1:-1:-1;;;;;;5177:18:18;;;;5128:67;5124:481;;;-1:-1:-1;;;;;5219:29:18;;5251:1;5219:29;;;:23;:29;;;;;;:33;5215:376;;-1:-1:-1;;;;;5308:29:18;;;;;;:23;:29;;;;;;:33;;5340:1;;5308:33;:::i;:::-;-1:-1:-1;;;;;5276:29:18;;;;;;:23;:29;;;;;:65;;;5363:118;;-1:-1:-1;;;;;5429:21:18;;5453:5;5429:21;;;:15;:21;;;;;:29;;-1:-1:-1;;5429:29:18;;;5363:118;5215:376;;;-1:-1:-1;;;;;5543:21:18;;5567:5;5543:21;;;:15;:21;;;;;:29;;-1:-1:-1;;5543:29:18;;;5215:376;-1:-1:-1;;;;;5618:19:18;;;;;;:15;:19;;;;;;;;:26;;-1:-1:-1;;5618:26:18;5640:4;5618:26;;;;;;5688:23;:27;;;;;;;:31;;;:::i;:::-;-1:-1:-1;;;;;5658:27:18;;;;;;:23;:27;;;;;:61;3607:331:4;3537:401;;:::o;12334:778::-;12484:4;-1:-1:-1;;;;;12504:13:4;;1465:19:11;:23;12500:606:4;;12539:72;;-1:-1:-1;;;12539:72:4;;-1:-1:-1;;;;;12539:36:4;;;;;:72;;719:10:12;;12590:4:4;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:4;;;;;;;;-1:-1:-1;;12539:72:4;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:4;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:4;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:4;-1:-1:-1;;;12661:51:4;;-1:-1:-1;12654:58:4;;12500:606;-1:-1:-1;13091:4:4;13084:11;;2818:329;2891:13;2924:16;2932:7;2924;:16::i;:::-;2916:76;;;;-1:-1:-1;;;2916:76:4;;24898:2:22;2916:76:4;;;24880:21:22;24937:2;24917:18;;;24910:30;24976:34;24956:18;;;24949:62;-1:-1:-1;;;25027:18:22;;;25020:45;25082:19;;2916:76:4;24696:411:22;2916:76:4;3003:21;3027:10;3464:9;;;;;;;;;-1:-1:-1;3464:9:4;;;3388:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3047:93;2818:329;-1:-1:-1;;;2818:329:4:o;2624:572:7:-;-1:-1:-1;;;;;2823:18:7;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:7;:4;-1:-1:-1;;;;;2918:10:7;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:7;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:7;:2;-1:-1:-1;;;;;3113:10:7;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;328:703:14:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:14;;;;;;;;;;;;-1:-1:-1;;;627:10:14;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:14;;-1:-1:-1;773:2:14;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:14;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:14;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:14;;;;;;;;-1:-1:-1;972:11:14;981:2;972:11;;:::i;:::-;;;844:150;;4680:970:7;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:7;;;5150:323;;-1:-1:-1;;;;;5220:18:7;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:7;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:7;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:7;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:7;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:7:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:22;-1:-1:-1;;;;;;88:32:22;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:22;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:22;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:22:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:22;;1343:180;-1:-1:-1;1343:180:22:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:22;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:22:o;2173:186::-;2232:6;2285:2;2273:9;2264:7;2260:23;2256:32;2253:52;;;2301:1;2298;2291:12;2253:52;2324:29;2343:9;2324:29;:::i;2546:127::-;2607:10;2602:3;2598:20;2595:1;2588:31;2638:4;2635:1;2628:15;2662:4;2659:1;2652:15;2678:632;2743:5;2773:18;2814:2;2806:6;2803:14;2800:40;;;2820:18;;:::i;:::-;2895:2;2889:9;2863:2;2949:15;;-1:-1:-1;;2945:24:22;;;2971:2;2941:33;2937:42;2925:55;;;2995:18;;;3015:22;;;2992:46;2989:72;;;3041:18;;:::i;:::-;3081:10;3077:2;3070:22;3110:6;3101:15;;3140:6;3132;3125:22;3180:3;3171:6;3166:3;3162:16;3159:25;3156:45;;;3197:1;3194;3187:12;3156:45;3247:6;3242:3;3235:4;3227:6;3223:17;3210:44;3302:1;3295:4;3286:6;3278;3274:19;3270:30;3263:41;;;;2678:632;;;;;:::o;3315:222::-;3358:5;3411:3;3404:4;3396:6;3392:17;3388:27;3378:55;;3429:1;3426;3419:12;3378:55;3451:80;3527:3;3518:6;3505:20;3498:4;3490:6;3486:17;3451:80;:::i;3542:390::-;3620:6;3628;3681:2;3669:9;3660:7;3656:23;3652:32;3649:52;;;3697:1;3694;3687:12;3649:52;3733:9;3720:23;3710:33;;3794:2;3783:9;3779:18;3766:32;3821:18;3813:6;3810:30;3807:50;;;3853:1;3850;3843:12;3807:50;3876;3918:7;3909:6;3898:9;3894:22;3876:50;:::i;:::-;3866:60;;;3542:390;;;;;:::o;3937:248::-;4005:6;4013;4066:2;4054:9;4045:7;4041:23;4037:32;4034:52;;;4082:1;4079;4072:12;4034:52;-1:-1:-1;;4105:23:22;;;4175:2;4160:18;;;4147:32;;-1:-1:-1;3937:248:22:o;4190:328::-;4267:6;4275;4283;4336:2;4324:9;4315:7;4311:23;4307:32;4304:52;;;4352:1;4349;4342:12;4304:52;4375:29;4394:9;4375:29;:::i;:::-;4365:39;;4423:38;4457:2;4446:9;4442:18;4423:38;:::i;:::-;4413:48;;4508:2;4497:9;4493:18;4480:32;4470:42;;4190:328;;;;;:::o;4523:803::-;4685:4;4714:2;4754;4743:9;4739:18;4784:2;4773:9;4766:21;4807:6;4842;4836:13;4873:6;4865;4858:22;4911:2;4900:9;4896:18;4889:25;;4973:2;4963:6;4960:1;4956:14;4945:9;4941:30;4937:39;4923:53;;5011:2;5003:6;4999:15;5032:1;5042:255;5056:6;5053:1;5050:13;5042:255;;;5149:2;5145:7;5133:9;5125:6;5121:22;5117:36;5112:3;5105:49;5177:40;5210:6;5201;5195:13;5177:40;:::i;:::-;5167:50;-1:-1:-1;5275:12:22;;;;5240:15;;;;5078:1;5071:9;5042:255;;;-1:-1:-1;5314:6:22;;4523:803;-1:-1:-1;;;;;;;4523:803:22:o;5331:527::-;5427:6;5435;5443;5451;5504:3;5492:9;5483:7;5479:23;5475:33;5472:53;;;5521:1;5518;5511:12;5472:53;5561:9;5548:23;5594:18;5586:6;5583:30;5580:50;;;5626:1;5623;5616:12;5580:50;5649;5691:7;5682:6;5671:9;5667:22;5649:50;:::i;:::-;5639:60;5746:2;5731:18;;5718:32;;-1:-1:-1;5797:2:22;5782:18;;5769:32;;5848:2;5833:18;5820:32;;-1:-1:-1;5331:527:22;-1:-1:-1;;;;5331:527:22:o;5863:632::-;6034:2;6086:21;;;6156:13;;6059:18;;;6178:22;;;6005:4;;6034:2;6257:15;;;;6231:2;6216:18;;;6005:4;6300:169;6314:6;6311:1;6308:13;6300:169;;;6375:13;;6363:26;;6444:15;;;;6409:12;;;;6336:1;6329:9;6300:169;;;-1:-1:-1;6486:3:22;;5863:632;-1:-1:-1;;;;;;5863:632:22:o;6723:322::-;6792:6;6845:2;6833:9;6824:7;6820:23;6816:32;6813:52;;;6861:1;6858;6851:12;6813:52;6901:9;6888:23;6934:18;6926:6;6923:30;6920:50;;;6966:1;6963;6956:12;6920:50;6989;7031:7;7022:6;7011:9;7007:22;6989:50;:::i;7050:118::-;7136:5;7129:13;7122:21;7115:5;7112:32;7102:60;;7158:1;7155;7148:12;7173:315;7238:6;7246;7299:2;7287:9;7278:7;7274:23;7270:32;7267:52;;;7315:1;7312;7305:12;7267:52;7338:29;7357:9;7338:29;:::i;:::-;7328:39;;7417:2;7406:9;7402:18;7389:32;7430:28;7452:5;7430:28;:::i;:::-;7477:5;7467:15;;;7173:315;;;;;:::o;7493:667::-;7588:6;7596;7604;7612;7665:3;7653:9;7644:7;7640:23;7636:33;7633:53;;;7682:1;7679;7672:12;7633:53;7705:29;7724:9;7705:29;:::i;:::-;7695:39;;7753:38;7787:2;7776:9;7772:18;7753:38;:::i;:::-;7743:48;;7838:2;7827:9;7823:18;7810:32;7800:42;;7893:2;7882:9;7878:18;7865:32;7920:18;7912:6;7909:30;7906:50;;;7952:1;7949;7942:12;7906:50;7975:22;;8028:4;8020:13;;8016:27;-1:-1:-1;8006:55:22;;8057:1;8054;8047:12;8006:55;8080:74;8146:7;8141:2;8128:16;8123:2;8119;8115:11;8080:74;:::i;:::-;8070:84;;;7493:667;;;;;;;:::o;8165:322::-;8242:6;8250;8258;8311:2;8299:9;8290:7;8286:23;8282:32;8279:52;;;8327:1;8324;8317:12;8279:52;8350:29;8369:9;8350:29;:::i;:::-;8340:39;8426:2;8411:18;;8398:32;;-1:-1:-1;8477:2:22;8462:18;;;8449:32;;8165:322;-1:-1:-1;;;8165:322:22:o;8492:260::-;8560:6;8568;8621:2;8609:9;8600:7;8596:23;8592:32;8589:52;;;8637:1;8634;8627:12;8589:52;8660:29;8679:9;8660:29;:::i;:::-;8650:39;;8708:38;8742:2;8731:9;8727:18;8708:38;:::i;:::-;8698:48;;8492:260;;;;;:::o;8757:380::-;8836:1;8832:12;;;;8879;;;8900:61;;8954:4;8946:6;8942:17;8932:27;;8900:61;9007:2;8999:6;8996:14;8976:18;8973:38;8970:161;;;9053:10;9048:3;9044:20;9041:1;9034:31;9088:4;9085:1;9078:15;9116:4;9113:1;9106:15;8970:161;;8757:380;;;:::o;10792:356::-;10994:2;10976:21;;;11013:18;;;11006:30;11072:34;11067:2;11052:18;;11045:62;11139:2;11124:18;;10792:356::o;11153:413::-;11355:2;11337:21;;;11394:2;11374:18;;;11367:30;11433:34;11428:2;11413:18;;11406:62;-1:-1:-1;;;11499:2:22;11484:18;;11477:47;11556:3;11541:19;;11153:413::o;11983:127::-;12044:10;12039:3;12035:20;12032:1;12025:31;12075:4;12072:1;12065:15;12099:4;12096:1;12089:15;12115:128;12155:3;12186:1;12182:6;12179:1;12176:13;12173:39;;;12192:18;;:::i;:::-;-1:-1:-1;12228:9:22;;12115:128::o;12248:135::-;12287:3;-1:-1:-1;;12308:17:22;;12305:43;;;12328:18;;:::i;:::-;-1:-1:-1;12375:1:22;12364:13;;12248:135::o;12388:127::-;12449:10;12444:3;12440:20;12437:1;12430:31;12480:4;12477:1;12470:15;12504:4;12501:1;12494:15;14032:168;14072:7;14138:1;14134;14130:6;14126:14;14123:1;14120:21;14115:1;14108:9;14101:17;14097:45;14094:71;;;14145:18;;:::i;:::-;-1:-1:-1;14185:9:22;;14032:168::o;14205:127::-;14266:10;14261:3;14257:20;14254:1;14247:31;14297:4;14294:1;14287:15;14321:4;14318:1;14311:15;14337:120;14377:1;14403;14393:35;;14408:18;;:::i;:::-;-1:-1:-1;14442:9:22;;14337:120::o;14462:184::-;14532:6;14585:2;14573:9;14564:7;14560:23;14556:32;14553:52;;;14601:1;14598;14591:12;14553:52;-1:-1:-1;14624:16:22;;14462:184;-1:-1:-1;14462:184:22:o;16269:245::-;16336:6;16389:2;16377:9;16368:7;16364:23;16360:32;16357:52;;;16405:1;16402;16395:12;16357:52;16437:9;16431:16;16456:28;16478:5;16456:28;:::i;21302:125::-;21342:4;21370:1;21367;21364:8;21361:34;;;21375:18;;:::i;:::-;-1:-1:-1;21412:9:22;;21302:125::o;22504:414::-;22706:2;22688:21;;;22745:2;22725:18;;;22718:30;22784:34;22779:2;22764:18;;22757:62;-1:-1:-1;;;22850:2:22;22835:18;;22828:48;22908:3;22893:19;;22504:414::o;22923:127::-;22984:10;22979:3;22975:20;22972:1;22965:31;23015:4;23012:1;23005:15;23039:4;23036:1;23029:15;23473:470;23652:3;23690:6;23684:13;23706:53;23752:6;23747:3;23740:4;23732:6;23728:17;23706:53;:::i;:::-;23822:13;;23781:16;;;;23844:57;23822:13;23781:16;23878:4;23866:17;;23844:57;:::i;:::-;23917:20;;23473:470;-1:-1:-1;;;;23473:470:22:o;23948:489::-;-1:-1:-1;;;;;24217:15:22;;;24199:34;;24269:15;;24264:2;24249:18;;24242:43;24316:2;24301:18;;24294:34;;;24364:3;24359:2;24344:18;;24337:31;;;24142:4;;24385:46;;24411:19;;24403:6;24385:46;:::i;:::-;24377:54;23948:489;-1:-1:-1;;;;;;23948:489:22:o;24442:249::-;24511:6;24564:2;24552:9;24543:7;24539:23;24535:32;24532:52;;;24580:1;24577;24570:12;24532:52;24612:9;24606:16;24631:30;24655:5;24631:30;:::i;25112:112::-;25144:1;25170;25160:35;;25175:18;;:::i;:::-;-1:-1:-1;25209:9:22;;25112:112::o",
  "language": "Solidity",
  "natspec": {
    "details": "NFT contract that will be used with the marketplace contract",
    "kind": "dev",
    "methods": {
      "addMember(address)": {
        "details": "Allows contract admins to manually add an address as a member. Necessary for memberships purchased through Patreon.",
        "params": {
          "memberAddress": "the address of the member being added"
        }
      },
      "addWhiteListToToken(address,uint256)": {
        "details": "Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.",
        "params": {
          "tokenId": "the ID of the NFT that the whitelist spot is for",
          "whiteListAddress": "the address of the user who will be able to purchase the NFT"
        }
      },
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "burnMembershiptNFTManually(uint256)": {
        "details": "Only owner function to burn a membership NFT",
        "params": {
          "tokenId": "the tokenId of the membership NFT to burn"
        }
      },
      "chargeMemberForMembership(address,uint256,uint256)": {
        "details": "Only owner function to take funds from an address to pay for the next month of a membership",
        "params": {
          "currTimeStamp": "the current timestamp for the transaction to avoid relying on block.timestamp",
          "member": "the address of the member that is being charged for the next month of a membership",
          "tokenId": "the token ID that the member is being charged"
        },
        "returns": {
          "_0": "0 for success, 1 for failure and NFT burn"
        }
      },
      "createToken(string,uint256,uint256,uint256)": {
        "details": "Only owner function to mint a new NFT.",
        "params": {
          "currTimeStamp": "the current timestamp for the transaction to avoid relying on block.timestamp",
          "listingFee": "the fee the user pays when putting the NFT for sale on the marketplace",
          "newTokenURI": "the token URI on IPFS for the NFT metadata",
          "typeId": "the type ID of the NFT to distinguish what type of NFT it is (Original Cardinal, membership, service)"
        },
        "returns": {
          "_0": "the ID of the newly minted NFT"
        }
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getMembershipTokenIds()": {
        "details": "Function to get a list of all the membership NFT IDs.",
        "returns": {
          "_0": "list of the membership NFT IDs"
        }
      },
      "getOriginalCardinalTokenIds()": {
        "details": "Function to get a list of all the Original Cardinal NFT IDs.",
        "returns": {
          "_0": "list of the Original Cardinal NFT IDs"
        }
      },
      "getUserMembershipTokenURIs(address)": {
        "details": "Function to get all token URIs for membership NFTs that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's membership NFTs"
        }
      },
      "getUserOriginalCardinalTokenURIs(address)": {
        "details": "Function to get all token URIs for Original Cardinal NFTs that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's Original Cardinal NFTs"
        }
      },
      "getUserServiceTokenURIs(address)": {
        "details": "Function to get all token URIs for service NFTs that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's service NFTs"
        }
      },
      "getUserTokenIDs(address)": {
        "details": "Function to get all token IDs for tokens that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token IDs of"
        },
        "returns": {
          "_0": "list of token IDs for a user's NFTs"
        }
      },
      "getUserTokenURIs(address)": {
        "details": "Function to get all token URIs for tokens that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's NFTs"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mintMembershipNFT()": {
        "details": "Allows someone to mint a membership NFT by paying USDC",
        "returns": {
          "_0": "the ID of the newly minted membership NFT"
        }
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "removeMember(address)": {
        "details": "Allows contract admins to manually remove an address as a member. Necessary for when a membership bought through Patreon expires.",
        "params": {
          "memberAddress": "the address to remove from the membership list"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setAdminUser(address,bool)": {
        "details": "Only owner function to update the admin mapping.",
        "params": {
          "adminAddress": "the address to admin rights for",
          "isAdmin": "boolean to determine if the address is an admin or not"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "setMemberDiscount(address,uint256)": {
        "details": "Allows contract admins to set a membership discount for an address.",
        "params": {
          "discountAmount": "the discount amount, 90 for 90% of membership price, 75 for 75% of membership price, etc.",
          "memberAddress": "the address to give the discount to"
        }
      },
      "setTokenURI(uint256,string)": {
        "details": "Setter function for the token URI of an NFT.",
        "params": {
          "newTokenURI": "the token URI to update the NFT with",
          "tokenId": "the ID of the NFT to update the token URI of"
        }
      },
      "setUSDCContract(address)": {
        "details": "Only owner function to set the reference to the USDC contract",
        "params": {
          "_USDC": "the address for the USDC contract"
        }
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateMembershipNFTLastPaid(uint256,uint256)": {
        "details": "Only owner function to update the timestamp for a membership NFT after it has been paid for for a month.",
        "params": {
          "lastPaidTimestamp": "the timestamp to update the membership NFT to for when it was last paid for",
          "tokenId": "the ID of the membership NFT to have the timestamp updated for"
        }
      },
      "updateMembershipNFTToLastPaid(uint256,uint256)": {
        "details": "Only owner function to update the timestamp for when a user last paid for their membership.",
        "params": {
          "newLastPaid": "the new timestamp that represents when the user last paid for their membership NFT",
          "tokenId": "the token ID to update the membership last paid timestamp for"
        }
      },
      "updateMembershipPrice(uint256)": {
        "details": "sets the price of the membership NFTs in USDC",
        "params": {
          "newMembershipPrice": "the new price of the membership NFTs in USDC"
        }
      },
      "updateMembershipTokenURI(string)": {
        "details": "updates the membership NFT token URI",
        "params": {
          "newMembershipTokenURI": "the new type ID of the service NFTs"
        }
      },
      "updateMembershipTypeId(uint256)": {
        "details": "updates the type ID that represents the membership NFTs",
        "params": {
          "newMembershipTypeId": "the new type ID of the membership NFTs"
        }
      },
      "updateOriginalCardinalTypeId(uint256)": {
        "details": "updates the type ID that represents the Original Cardinal NFTs",
        "params": {
          "newOriginalCardinalTypeId": "the new type ID of the Original Cardinal NFTs"
        }
      },
      "updateServiceTypeId(uint256)": {
        "details": "updates the type ID that represents the service NFTs",
        "params": {
          "newServiceTypeId": "the new type ID of the service NFTs"
        }
      },
      "updateTokenListingFee(uint256,uint256)": {
        "details": "updates the listing fee of an NFT.",
        "params": {
          "newListingFee": "the listing fee value for the NFT",
          "tokenId": "the ID of the NFT to update the listing fee of"
        }
      },
      "updateTokenTypeId(uint256,uint256)": {
        "details": "updates the type ID of an NFT.",
        "params": {
          "newTypeId": "the type ID value for the NFT",
          "tokenId": "the ID of the NFT to update the type ID of"
        }
      },
      "withdrawMembershipNFTFunds()": {
        "details": "Only owner function to withdraw the USDC that are paid to this contract for the Membership NFTs."
      }
    },
    "title": "Cardinal House NFT Contract",
    "version": 1
  },
  "offset": [
    551,
    23376
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3DB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7867CCD1 GT PUSH2 0x20A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xDAA17F49 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xEBAA42ED GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xEBAA42ED EQ PUSH2 0x8AF JUMPI DUP1 PUSH4 0xEECBBEC4 EQ PUSH2 0x8C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xFD18B841 EQ PUSH2 0x8E8 JUMPI DUP1 PUSH4 0xFFEAB8A4 EQ PUSH2 0x8FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDAA17F49 EQ PUSH2 0x838 JUMPI DUP1 PUSH4 0xDCA8BC47 EQ PUSH2 0x84B JUMPI DUP1 PUSH4 0xE4E0A931 EQ PUSH2 0x86B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC79BA39C GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xC79BA39C EQ PUSH2 0x7F7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x81D JUMPI DUP1 PUSH4 0xD473DAB1 EQ PUSH2 0x830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xBB3B407B EQ PUSH2 0x7C9 JUMPI DUP1 PUSH4 0xBEB48326 EQ PUSH2 0x7DC JUMPI DUP1 PUSH4 0xC34E3782 EQ PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xB15D8D5F GT PUSH2 0x16C JUMPI DUP1 PUSH4 0xB15D8D5F EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0xB27A5F98 EQ PUSH2 0x76D JUMPI DUP1 PUSH4 0xB43AFFDA EQ PUSH2 0x780 JUMPI DUP1 PUSH4 0xB5C4B23D EQ PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0xAA46A400 EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0xAD00920E EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xB063C954 EQ PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F01785D GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8F01785D EQ PUSH2 0x6E7 JUMPI DUP1 PUSH4 0x95914875 EQ PUSH2 0x6FA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x702 JUMPI DUP1 PUSH4 0x96291DB6 EQ PUSH2 0x70A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7867CCD1 EQ PUSH2 0x69D JUMPI DUP1 PUSH4 0x86794F66 EQ PUSH2 0x6B0 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x6C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x2FA JUMPI DUP1 PUSH4 0x6352211E GT PUSH2 0x28D JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0x71AF8374 EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0x7417353F EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0x7498D280 EQ PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0x66A98EA3 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0x6F48853B EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x65E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5575AD3A GT PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x5575AD3A EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x56060A74 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x595EE598 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x5C23A67A EQ PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0x4623C740 EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0x46D36230 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17550165 GT PUSH2 0x372 JUMPI DUP1 PUSH4 0x2517FC07 GT PUSH2 0x341 JUMPI DUP1 PUSH4 0x2517FC07 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x28DA575B EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x33A41510 EQ PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17550165 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x1C652FB5 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1CA49A GT PUSH2 0x3AE JUMPI DUP1 PUSH4 0xB1CA49A EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xFEC3ECC EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x11AB8DF5 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x448 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F3 PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x37C3 JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x3838 JUMP JUMPDEST PUSH2 0x430 PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x45B PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x3880 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45B PUSH2 0x46B CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x479 PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x479 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3971 JUMP JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0x479 PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x479 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x39B8 JUMP JUMPDEST PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x39DA JUMP JUMPDEST PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x51F CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x3880 JUMP JUMPDEST PUSH2 0xCC3 JUMP JUMPDEST PUSH2 0x55A PUSH2 0x555 CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x3A16 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x39DA JUMP JUMPDEST PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x588 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A78 JUMP JUMPDEST PUSH2 0xF0E JUMP JUMPDEST PUSH2 0x479 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x5B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x10F8 JUMP JUMPDEST PUSH2 0x55A PUSH2 0x5CA CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x5E2 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x3ACC JUMP JUMPDEST PUSH2 0x430 PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x430 PUSH2 0x626 CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x479 PUSH2 0x64C CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x66C CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x479 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x690 CALLDATASIZE PUSH1 0x4 PUSH2 0x3880 JUMP JUMPDEST PUSH2 0x14FF JUMP JUMPDEST PUSH2 0x479 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x6AB CALLDATASIZE PUSH1 0x4 PUSH2 0x39B8 JUMP JUMPDEST PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x6BE CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x19EF JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x430 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x430 JUMP JUMPDEST PUSH2 0x55A PUSH2 0x6F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST PUSH2 0x410 PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x410 PUSH2 0x1B86 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x718 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B10 JUMP JUMPDEST PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x72B CALLDATASIZE PUSH1 0x4 PUSH2 0x3B53 JUMP JUMPDEST PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x479 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x748 CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x768 CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x77B CALLDATASIZE PUSH1 0x4 PUSH2 0x3B53 JUMP JUMPDEST PUSH2 0x1C02 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x78E CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x1C57 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x7A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x7C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B8A JUMP JUMPDEST PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x7D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C06 JUMP JUMPDEST PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0x45B PUSH2 0x209A JUMP JUMPDEST PUSH2 0x55A PUSH2 0x7F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x805 CALLDATASIZE PUSH1 0x4 PUSH2 0x39B8 JUMP JUMPDEST PUSH2 0x2341 JUMP JUMPDEST PUSH2 0x410 PUSH2 0x818 CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x237D JUMP JUMPDEST PUSH2 0x45B PUSH2 0x82B CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x2388 JUMP JUMPDEST PUSH2 0x5E2 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x430 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x859 CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5E2 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x881 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x8BD CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x8D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x8E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x8F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3880 JUMP JUMPDEST PUSH2 0x25EE JUMP JUMPDEST PUSH2 0x45B PUSH2 0x909 CALLDATASIZE PUSH1 0x4 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x919 DUP3 PUSH2 0x2702 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x92E SWAP1 PUSH2 0x3C6C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x95A SWAP1 PUSH2 0x3C6C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x97C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x98A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BC DUP3 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA49 DUP3 PUSH2 0x1344 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xAD3 JUMPI POP PUSH2 0xAD3 DUP2 CALLER PUSH2 0x881 JUMP JUMPDEST PUSH2 0xB45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xB4F DUP4 DUP4 PUSH2 0x2744 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920636F6E74726163742061646D696E732063616E2072656D6F766520 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x309036B2B6B132B917 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH2 0xC1A DUP3 DUP3 PUSH2 0x27B2 JUMP JUMPDEST DUP2 PUSH32 0xC794E2271B51F209D8A645EEC85692351AD1ADC857AB2E06F9C5AF7961CF07D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x3838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0xC9C CALLER DUP3 PUSH2 0x283D JUMP JUMPDEST PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CDC JUMP JUMPDEST PUSH2 0xB4F DUP4 DUP4 DUP4 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCE DUP4 PUSH2 0x1442 JUMP JUMPDEST DUP3 LT PUSH2 0xD30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD66 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0xDEB JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD88 DUP3 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xDC6 JUMPI POP PUSH1 0x17 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 PUSH2 0xDC6 JUMPI POP PUSH1 0x18 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0xDD9 JUMPI PUSH2 0xDD6 PUSH1 0x1 DUP5 PUSH2 0x3D43 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0xDE3 DUP2 PUSH2 0x3D5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD6E JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE07 JUMPI PUSH2 0xE07 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE3A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE25 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0xEE9 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE5A DUP3 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xE98 JUMPI POP PUSH1 0x17 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 PUSH2 0xE98 JUMPI POP PUSH1 0x18 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0xED7 JUMPI PUSH1 0x0 PUSH2 0xEA8 DUP3 PUSH2 0x237D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xEBD JUMPI PUSH2 0xEBD PUSH2 0x3D76 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0xED3 PUSH1 0x1 DUP6 PUSH2 0x3D43 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0xEE1 DUP2 PUSH2 0x3D5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE40 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB4F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH2 0xF49 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF54 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 SWAP1 SSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 POP PUSH2 0xF7E CALLER DUP3 PUSH2 0x2AD0 JUMP JUMPDEST PUSH2 0xF88 DUP2 DUP8 PUSH2 0x27B2 JUMP JUMPDEST PUSH2 0xF92 ADDRESS DUP3 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0xFA9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP6 EQ ISZERO PUSH2 0xFED JUMPI PUSH1 0x1A DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x57C384A7D1C54F3A1B2E5E67B2617B8224FDFD1EA7234EEA573A6FF665FF63E ADD DUP2 SWAP1 SSTORE PUSH2 0x105A JUMP JUMPDEST PUSH1 0x18 SLOAD DUP6 EQ ISZERO PUSH2 0x105A JUMPI PUSH1 0x1B DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x3AD8AA4F87544323A9D1E5DD902F40C356527A7955687113DB5F9A85AD579DC1 ADD DUP2 SWAP1 SSTORE DUP3 ISZERO PUSH2 0x1048 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE PUSH2 0x105A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1070 PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x10D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10E6 JUMPI PUSH2 0x10E6 PUSH2 0x3D76 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1151 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0x11BD JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1173 DUP3 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1198 JUMPI POP PUSH1 0x17 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0x11AB JUMPI PUSH2 0x11A8 PUSH1 0x1 DUP5 PUSH2 0x3D43 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x11B5 DUP2 PUSH2 0x3D5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1159 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11D9 JUMPI PUSH2 0x11D9 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x120C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x11F7 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0xEE9 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x122C DUP3 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1251 JUMPI POP PUSH1 0x17 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0x1290 JUMPI PUSH1 0x0 PUSH2 0x1261 DUP3 PUSH2 0x237D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1276 JUMPI PUSH2 0x1276 PUSH2 0x3D76 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x128C PUSH1 0x1 DUP6 PUSH2 0x3D43 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x129A DUP2 PUSH2 0x3D5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x12AF DUP4 PUSH2 0x1442 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12CC JUMPI PUSH2 0x12CC PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12F5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x133C JUMPI PUSH2 0x130D DUP6 DUP3 PUSH2 0xCC3 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x131F JUMPI PUSH2 0x131F PUSH2 0x3D76 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x1334 DUP2 PUSH2 0x3D5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12FB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x17 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH22 0x1BDC9A59DA5B985B10D85C991A5B985B151E5C195259 PUSH1 0x52 SHL DUP2 MSTORE DUP2 SWAP1 PUSH1 0x16 ADD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0xA611BA47A2A0887B794D3E097D5CFB33522F6ED26DF589CCD12C01D5C584800A SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH2 0x14FD PUSH1 0x0 PUSH2 0x2C17 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1529 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1D SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x159E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1D SLOAD PUSH1 0x64 SWAP2 PUSH2 0x1591 SWAP2 PUSH2 0x3D8C JUMP JUMPDEST PUSH2 0x159B SWAP2 SWAP1 PUSH2 0x3DC1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1619 SWAP2 SWAP1 PUSH2 0x3DD5 JUMP JUMPDEST LT ISZERO PUSH2 0x168D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768205553444320746F207061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7920666F7220746865206D656D62657273686970204E46542E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170E SWAP2 SWAP1 PUSH2 0x3DD5 JUMP JUMPDEST LT ISZERO PUSH2 0x17A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176656E277420617070726F766564207468697320636F6E747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x637420746F207370656E6420656E6F756768206F6620796F7572205553444320 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x746F2070617920666F7220746865206D656D62657273686970204E46542E0000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x180E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1832 SWAP2 SWAP1 PUSH2 0x3DEE JUMP JUMPDEST POP PUSH2 0x1841 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184C PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x18 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x10 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE SWAP1 POP PUSH2 0x1878 CALLER DUP3 PUSH2 0x2AD0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE CALLER DUP4 MSTORE PUSH1 0x16 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x1C DUP1 SLOAD PUSH2 0x192D SWAP2 DUP4 SWAP2 PUSH2 0x18AA SWAP1 PUSH2 0x3C6C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18D6 SWAP1 PUSH2 0x3C6C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1923 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1923 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1906 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x27B2 JUMP JUMPDEST PUSH2 0x1937 ADDRESS DUP3 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x194E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x1B DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0x3AD8AA4F87544323A9D1E5DD902F40C356527A7955687113DB5F9A85AD579DC1 ADD DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP2 CALLER SWAP2 PUSH32 0x7430CEFC529011C1B720A4803C3A12DB2BFDF282E089E2D26FF4929EF11A703C SWAP2 SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x19 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH13 0x1CD95C9D9A58D9551E5C195259 PUSH1 0x9A SHL DUP2 MSTORE DUP2 SWAP1 PUSH1 0xD ADD PUSH2 0x140F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A4B DUP4 PUSH2 0x1442 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A69 JUMPI PUSH2 0x1A69 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A9C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1A87 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AEF JUMPI PUSH2 0x1AB4 DUP7 DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1ABF DUP4 PUSH2 0x237D JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1AD1 JUMPI PUSH2 0x1AD1 PUSH2 0x3D76 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x1AE7 SWAP1 PUSH2 0x3D5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1AA2 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1C DUP1 SLOAD PUSH2 0x1B05 SWAP1 PUSH2 0x3C6C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B31 SWAP1 PUSH2 0x3C6C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B53 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x92E SWAP1 PUSH2 0x3C6C JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1BD2 SWAP1 PUSH1 0x1C SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x3714 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1BD2 CALLER DUP4 DUP4 PUSH2 0x2C69 JUMP JUMPDEST PUSH1 0x1B DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1A DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C71 CALLER DUP4 PUSH2 0x283D JUMP JUMPDEST PUSH2 0x1C8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CDC JUMP JUMPDEST PUSH2 0x1C99 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2D38 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CDF DUP5 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320646F65736E2774206F776E20746865204E4654 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1039B832B1B4B334B2B217 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D5E DUP5 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D91 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D85 DUP5 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x1E03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E27742063686172676520746865206F776E6572206F72206D61726B6574 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x706C61636520666F7220746865206D656D626572736869702E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1E59 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1D SLOAD PUSH1 0x64 SWAP2 PUSH2 0x1E4C SWAP2 PUSH2 0x3D8C JUMP JUMPDEST PUSH2 0x1E56 SWAP2 SWAP1 PUSH2 0x3DC1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ED6 SWAP2 SWAP1 PUSH2 0x3DD5 JUMP JUMPDEST LT DUP1 PUSH2 0x1F62 JUMPI POP PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP4 SWAP3 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F3C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F60 SWAP2 SWAP1 PUSH2 0x3DD5 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x1F7A JUMPI PUSH2 0x1F70 DUP5 PUSH2 0x2D6B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2093 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2006 SWAP2 SWAP1 PUSH2 0x3DEE JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x2023 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE DUP7 SWAP3 SWAP2 PUSH32 0x9170D37D9D267E1D271F28F3F225AC7E95B00677566675BA1D251944EB3C5924 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x20E7 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x212A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x213E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2162 SWAP2 SWAP1 PUSH2 0x3DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21E0 SWAP2 SWAP1 PUSH2 0x3DEE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x21F0 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0x225C JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2212 DUP3 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x2237 JUMPI POP PUSH1 0x19 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0x224A JUMPI PUSH2 0x2247 PUSH1 0x1 DUP5 PUSH2 0x3D43 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x2254 DUP2 PUSH2 0x3D5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x21F8 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2278 JUMPI PUSH2 0x2278 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22AB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2296 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0xEE9 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22CB DUP3 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x22F0 JUMPI POP PUSH1 0x19 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0x232F JUMPI PUSH1 0x0 PUSH2 0x2300 DUP3 PUSH2 0x237D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2315 JUMPI PUSH2 0x2315 PUSH2 0x3D76 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x232B PUSH1 0x1 DUP6 PUSH2 0x3D43 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x2339 DUP2 PUSH2 0x3D5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x236B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x919 DUP3 PUSH2 0x2EAA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x23F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920636F6E74726163742061646D696E732063616E20616464206D656D PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3132B93997 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1B DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2453 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1A DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2453 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x1D DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x1361F6A741CB766EA2F0BE44A0E1686DF0E08320BE065F6C8DF9E4F639AB297A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x254D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH2 0x21E0 DUP2 PUSH2 0x2D6B JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x21E0 DUP2 PUSH2 0x2C17 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2669 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920636F6E74726163742061646D696E732063616E207365742061206D PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x32B6B132B939B434B8103234B9B1B7BAB73A17 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0x874556B552951A64A8A3F7627516F395097B3DE40CF93B85E87B03118CC02CF0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x26DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x18 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH16 0x1B595B58995C9CDA1A5C151E5C195259 PUSH1 0x82 SHL DUP2 MSTORE DUP2 SWAP1 PUSH1 0x10 ADD PUSH2 0x140F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x919 JUMPI POP PUSH2 0x919 DUP3 PUSH2 0x3019 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x2779 DUP3 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x27BB DUP3 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0x281E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0xB4F SWAP3 DUP5 ADD SWAP1 PUSH2 0x3714 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2848 DUP3 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0x28A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B4 DUP4 PUSH2 0x1344 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x28EF JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28E4 DUP5 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x105D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x105D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2936 DUP3 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x299A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x29FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x2A07 DUP4 DUP4 DUP4 PUSH2 0x3069 JUMP JUMPDEST PUSH2 0x2A12 PUSH1 0x0 DUP3 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2A3B SWAP1 DUP5 SWAP1 PUSH2 0x3E0B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2A69 SWAP1 DUP5 SWAP1 PUSH2 0x3D43 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 PUSH2 0xB4F DUP4 DUP4 DUP4 PUSH2 0x3074 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2B26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x2B2F DUP2 PUSH2 0x2727 JUMP JUMPDEST ISZERO PUSH2 0x2B7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x2B88 PUSH1 0x0 DUP4 DUP4 PUSH2 0x3069 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2BB1 SWAP1 DUP5 SWAP1 PUSH2 0x3D43 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 PUSH2 0x1BD2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x3074 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2CCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2D43 DUP5 DUP5 DUP5 PUSH2 0x2923 JUMP JUMPDEST PUSH2 0x2D4F DUP5 DUP5 DUP5 DUP5 PUSH2 0x31ED JUMP JUMPDEST PUSH2 0x1C99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3E22 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1B SLOAD DUP2 LT ISZERO PUSH2 0x1BD2 JUMPI DUP2 PUSH1 0x1B DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2D8C JUMPI PUSH2 0x2D8C PUSH2 0x3D76 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x2E98 JUMPI PUSH1 0x0 PUSH2 0x2DC5 PUSH1 0x1B DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2DB5 JUMPI PUSH2 0x2DB5 PUSH2 0x3D76 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1344 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DEF DUP2 ADDRESS PUSH1 0x1B DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2DDF JUMPI PUSH2 0x2DDF PUSH2 0x3D76 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x5AB068FE2788C545757BCB78E3B2D842E34EC21C90F26C60E5CE7686E90B8749 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1B DUP1 SLOAD PUSH2 0x2E35 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3E0B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2E45 JUMPI PUSH2 0x2E45 PUSH2 0x3D76 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x1B DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E63 JUMPI PUSH2 0x2E63 PUSH2 0x3D76 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1B DUP1 SLOAD DUP1 PUSH2 0x2E80 JUMPI PUSH2 0x2E80 PUSH2 0x3E74 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP JUMPDEST DUP1 PUSH2 0x2EA2 DUP2 PUSH2 0x3D5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D6E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2EB5 DUP3 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0x2F1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x2F34 SWAP1 PUSH2 0x3C6C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F60 SWAP1 PUSH2 0x3C6C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FAD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F82 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FAD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F90 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x2FCB PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2FDE JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x3010 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2FF8 SWAP3 SWAP2 SWAP1 PUSH2 0x3E8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105D DUP5 PUSH2 0x32F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x304A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x919 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x919 JUMP JUMPDEST PUSH2 0xB4F DUP4 DUP4 DUP4 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x18 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 PUSH2 0x30A1 JUMPI POP PUSH1 0x17 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ JUMPDEST ISZERO PUSH2 0xB4F JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x30D2 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x30E6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x3194 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x3173 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x312E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3E0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x316E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH2 0x3194 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x13 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x31CF SWAP2 PUSH2 0x3D43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x32EF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x3231 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3EB9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x324B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x327B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3278 SWAP2 DUP2 ADD SWAP1 PUSH2 0x3EF6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x32D5 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x32A9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x32AE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x32CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x3E22 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x105D JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3302 DUP3 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0x3366 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x337D PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x339D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2093 JUMP JUMPDEST DUP1 PUSH2 0x33A7 DUP5 PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x33B8 SWAP3 SWAP2 SWAP1 PUSH2 0x3E8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3429 JUMPI PUSH2 0x3424 DUP2 PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SSTORE JUMP JUMPDEST PUSH2 0x344C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x344C JUMPI PUSH2 0x344C DUP4 DUP3 PUSH2 0x3584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3463 JUMPI PUSH2 0xB4F DUP2 PUSH2 0x3621 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB4F JUMPI PUSH2 0xB4F DUP3 DUP3 PUSH2 0x36D0 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x34AA JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x34D4 JUMPI DUP1 PUSH2 0x34BE DUP2 PUSH2 0x3D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x34CD SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3DC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x34AE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34EF JUMPI PUSH2 0x34EF PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3519 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x105D JUMPI PUSH2 0x352E PUSH1 0x1 DUP4 PUSH2 0x3E0B JUMP JUMPDEST SWAP2 POP PUSH2 0x353B PUSH1 0xA DUP7 PUSH2 0x3F13 JUMP JUMPDEST PUSH2 0x3546 SWAP1 PUSH1 0x30 PUSH2 0x3D43 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x355B JUMPI PUSH2 0x355B PUSH2 0x3D76 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x357D PUSH1 0xA DUP7 PUSH2 0x3DC1 JUMP JUMPDEST SWAP5 POP PUSH2 0x351D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3591 DUP5 PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x359B SWAP2 SWAP1 PUSH2 0x3E0B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x35EE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x7 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x3633 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3E0B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x365B JUMPI PUSH2 0x365B PUSH2 0x3D76 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x367C JUMPI PUSH2 0x367C PUSH2 0x3D76 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x36B4 JUMPI PUSH2 0x36B4 PUSH2 0x3E74 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36DB DUP4 PUSH2 0x1442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3720 SWAP1 PUSH2 0x3C6C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3742 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3788 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x375B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3788 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3788 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3788 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x376D JUMP JUMPDEST POP PUSH2 0x3794 SWAP3 SWAP2 POP PUSH2 0x3798 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3794 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3799 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x21E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2093 DUP2 PUSH2 0x37AD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37FB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37E3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C99 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3824 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x37E0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2093 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x380C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x385D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x387B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x389C DUP4 PUSH2 0x3864 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2093 DUP3 PUSH2 0x3864 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x38F6 JUMPI PUSH2 0x38F6 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x391E JUMPI PUSH2 0x391E PUSH2 0x38C5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x3937 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2093 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x38DB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39AE DUP6 DUP3 DUP7 ADD PUSH2 0x3951 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39F8 DUP5 PUSH2 0x3864 JUMP JUMPDEST SWAP3 POP PUSH2 0x3A06 PUSH1 0x20 DUP6 ADD PUSH2 0x3864 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3A6B JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x3A59 DUP6 DUP4 MLOAD PUSH2 0x380C JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3A3D JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AB1 DUP8 DUP3 DUP9 ADD PUSH2 0x3951 JUMP JUMPDEST SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x60 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B04 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3AE8 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x105D DUP5 DUP3 DUP6 ADD PUSH2 0x3951 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x21E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B6F DUP4 PUSH2 0x3864 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3B7F DUP2 PUSH2 0x3B45 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BA9 DUP6 PUSH2 0x3864 JUMP JUMPDEST SWAP4 POP PUSH2 0x3BB7 PUSH1 0x20 DUP7 ADD PUSH2 0x3864 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x3BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BFA DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x38DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C24 DUP5 PUSH2 0x3864 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C55 DUP4 PUSH2 0x3864 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C63 PUSH1 0x20 DUP5 ADD PUSH2 0x3864 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3C80 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3CA1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3D56 JUMPI PUSH2 0x3D56 PUSH2 0x3D2D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3D6F JUMPI PUSH2 0x3D6F PUSH2 0x3D2D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3DA6 JUMPI PUSH2 0x3DA6 PUSH2 0x3D2D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3DD0 JUMPI PUSH2 0x3DD0 PUSH2 0x3DAB JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2093 DUP2 PUSH2 0x3B45 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3E1D JUMPI PUSH2 0x3E1D PUSH2 0x3D2D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x3E9C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x37E0 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x3EB0 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x37E0 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3EEC SWAP1 DUP4 ADD DUP5 PUSH2 0x380C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2093 DUP2 PUSH2 0x37AD JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3F22 JUMPI PUSH2 0x3F22 PUSH2 0x3DAB JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 DIFFICULTY 0x21 SAR EXTCODESIZE SLT 0xE5 LOG0 0x5E 0xDC 0xB2 SELFBALANCE 0x5C BASEFEE CREATE DUP9 0xC7 CREATE2 GASPRICE DUP5 0xF SGT 0xB9 CHAINID PUSH7 0x80BE3FE6EB3C9A PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "16": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "POP",
      "path": "18"
    },
    "18": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "21": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "LT",
      "path": "18"
    },
    "22": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DB"
    },
    "25": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "26": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "29": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "SHR",
      "path": "18"
    },
    "32": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "33": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7867CCD1"
    },
    "38": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "39": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20A"
    },
    "42": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "43": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "44": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB88D4FDE"
    },
    "49": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "50": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x125"
    },
    "53": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "54": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "55": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDAA17F49"
    },
    "60": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "61": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB8"
    },
    "64": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "65": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "66": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xEBAA42ED"
    },
    "71": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "72": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x87"
    },
    "75": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "76": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "77": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xEBAA42ED"
    },
    "82": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "83": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8AF"
    },
    "86": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "87": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "88": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xEECBBEC4"
    },
    "93": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "94": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8C2"
    },
    "97": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "98": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "99": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "105": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8D5"
    },
    "108": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "109": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "110": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFD18B841"
    },
    "115": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "116": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8E8"
    },
    "119": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "120": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "121": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFEAB8A4"
    },
    "126": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "127": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8FB"
    },
    "130": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "131": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "134": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "135": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "136": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "137": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDAA17F49"
    },
    "142": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "143": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x838"
    },
    "146": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "147": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "148": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDCA8BC47"
    },
    "153": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "154": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x84B"
    },
    "157": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "158": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "159": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE4E0A931"
    },
    "164": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "165": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x86B"
    },
    "168": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "169": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "170": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE985E9C5"
    },
    "175": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "176": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x873"
    },
    "179": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "180": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "183": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "184": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "185": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "186": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC79BA39C"
    },
    "191": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "192": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF4"
    },
    "195": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "196": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "197": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC79BA39C"
    },
    "202": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "203": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7F7"
    },
    "206": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "207": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "208": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC87B56DD"
    },
    "213": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "214": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x80A"
    },
    "217": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "218": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "219": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xCA6D56DC"
    },
    "224": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "225": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x81D"
    },
    "228": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "229": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "230": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xD473DAB1"
    },
    "235": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "236": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x830"
    },
    "239": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "240": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "243": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "244": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "245": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "246": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB88D4FDE"
    },
    "251": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "252": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7B6"
    },
    "255": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "256": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "257": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xBB3B407B"
    },
    "262": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "263": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C9"
    },
    "266": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "267": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "268": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xBEB48326"
    },
    "273": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "274": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7DC"
    },
    "277": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "278": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "279": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC34E3782"
    },
    "284": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "285": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7E4"
    },
    "288": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "289": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "292": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "293": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "294": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "295": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA22CB465"
    },
    "300": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "301": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19D"
    },
    "304": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "305": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "306": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB15D8D5F"
    },
    "311": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "312": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16C"
    },
    "315": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "316": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "317": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB15D8D5F"
    },
    "322": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "323": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x75A"
    },
    "326": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "327": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "328": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB27A5F98"
    },
    "333": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "334": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x76D"
    },
    "337": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "338": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "339": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB43AFFDA"
    },
    "344": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "345": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x780"
    },
    "348": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "349": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "350": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB5C4B23D"
    },
    "355": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "356": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x793"
    },
    "359": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "360": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "362": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "363": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "364": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "365": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "366": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA22CB465"
    },
    "371": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "372": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x71D"
    },
    "375": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "376": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "377": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xAA46A400"
    },
    "382": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "383": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x730"
    },
    "386": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "387": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "388": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xAD00920E"
    },
    "393": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "394": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4CB"
    },
    "397": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "398": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "399": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB063C954"
    },
    "404": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "405": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x73A"
    },
    "408": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "409": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "412": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "413": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "414": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "415": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8F01785D"
    },
    "420": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "421": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D9"
    },
    "424": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "425": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "426": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8F01785D"
    },
    "431": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "432": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6E7"
    },
    "435": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "436": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "437": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95914875"
    },
    "442": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "443": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6FA"
    },
    "446": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "447": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "448": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "453": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "454": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x702"
    },
    "457": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "458": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "459": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x96291DB6"
    },
    "464": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "465": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x70A"
    },
    "468": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "469": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "471": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "472": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "473": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "474": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "475": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7867CCD1"
    },
    "480": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "481": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x69D"
    },
    "484": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "485": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "486": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x86794F66"
    },
    "491": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "492": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6B0"
    },
    "495": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "496": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "497": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x89A30271"
    },
    "502": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "503": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6C3"
    },
    "506": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "507": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "508": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8DA5CB5B"
    },
    "513": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "514": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6D6"
    },
    "517": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "518": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "520": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "521": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "522": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "523": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "524": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x42842E0E"
    },
    "529": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "530": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2FA"
    },
    "533": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "534": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "535": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6352211E"
    },
    "540": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "541": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x28D"
    },
    "544": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "545": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "546": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x715018A6"
    },
    "551": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "552": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x25C"
    },
    "555": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "556": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "557": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x715018A6"
    },
    "562": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "563": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x671"
    },
    "566": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "567": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "568": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x71AF8374"
    },
    "573": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "574": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x679"
    },
    "577": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "578": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "579": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7417353F"
    },
    "584": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "585": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x682"
    },
    "588": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "589": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "590": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7498D280"
    },
    "595": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "596": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x695"
    },
    "599": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "600": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "602": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "603": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "604": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "605": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "606": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6352211E"
    },
    "611": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "612": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x618"
    },
    "615": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "616": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "617": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x66A98EA3"
    },
    "622": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "623": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x62B"
    },
    "626": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "627": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "628": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6F48853B"
    },
    "633": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "634": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x63E"
    },
    "637": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "638": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "639": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "644": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "645": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x65E"
    },
    "648": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "649": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "651": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "652": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "653": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "654": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "655": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5575AD3A"
    },
    "660": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "661": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C9"
    },
    "664": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "665": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "666": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5575AD3A"
    },
    "671": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "672": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5A9"
    },
    "675": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "676": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "677": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x56060A74"
    },
    "682": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "683": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5BC"
    },
    "686": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "687": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "688": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x595EE598"
    },
    "693": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "694": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5CF"
    },
    "697": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "698": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "699": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5C23A67A"
    },
    "704": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "705": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5EF"
    },
    "708": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "709": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "711": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "712": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "713": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "714": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "715": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x42842E0E"
    },
    "720": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "721": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x567"
    },
    "724": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "725": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "726": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4623C740"
    },
    "731": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "732": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x57A"
    },
    "735": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "736": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "737": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x46D36230"
    },
    "742": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "743": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x58D"
    },
    "746": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "747": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "748": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4F6CCCE7"
    },
    "753": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "754": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x596"
    },
    "757": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "758": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "760": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "761": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "762": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "763": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "764": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x17550165"
    },
    "769": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "770": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x372"
    },
    "773": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "774": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "775": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2517FC07"
    },
    "780": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "781": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x341"
    },
    "784": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "785": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "786": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2517FC07"
    },
    "791": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "792": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4F1"
    },
    "795": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "796": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "797": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x28DA575B"
    },
    "802": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "803": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x511"
    },
    "806": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "807": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "808": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2F745C59"
    },
    "813": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "814": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x534"
    },
    "817": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "818": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "819": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x33A41510"
    },
    "824": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "825": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x547"
    },
    "828": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "829": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "831": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "832": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "833": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "834": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "835": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x17550165"
    },
    "840": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "841": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4BA"
    },
    "844": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "845": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "846": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x18160DDD"
    },
    "851": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "852": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "855": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "856": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "857": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1C652FB5"
    },
    "862": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "863": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4CB"
    },
    "866": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "867": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "868": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x23B872DD"
    },
    "873": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "874": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4DE"
    },
    "877": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "878": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "880": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "881": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "882": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "883": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "884": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB1CA49A"
    },
    "889": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "GT",
      "path": "18"
    },
    "890": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AE"
    },
    "893": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "894": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "895": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB1CA49A"
    },
    "900": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "901": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45D"
    },
    "904": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "905": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "906": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFEC3ECC"
    },
    "911": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "912": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x470"
    },
    "915": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "916": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "917": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x11AB8DF5"
    },
    "922": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "923": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x487"
    },
    "926": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "927": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "928": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x162094C4"
    },
    "933": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "934": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A7"
    },
    "937": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "938": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "940": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "941": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "942": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "943": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "944": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1FFC9A7"
    },
    "949": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "950": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3E0"
    },
    "953": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "954": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "955": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6FDDE03"
    },
    "960": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "961": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x408"
    },
    "964": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "965": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "966": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x81812FC"
    },
    "971": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "972": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x41D"
    },
    "975": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "976": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "977": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95EA7B3"
    },
    "982": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "EQ",
      "path": "18"
    },
    "983": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x448"
    },
    "986": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "987": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "988": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "990": {
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "DUP1",
      "path": "18"
    },
    "991": {
      "first_revert": true,
      "fn": null,
      "offset": [
        551,
        23376
      ],
      "op": "REVERT",
      "path": "18"
    },
    "992": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "993": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F3"
    },
    "996": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3EE"
    },
    "999": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1000": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1002": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x37C3"
    },
    "1005": {
      "fn": "CardinalNFT.supportsInterface",
      "jump": "i",
      "offset": [
        22904,
        23073
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1006": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1007": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x90E"
    },
    "1010": {
      "fn": "CardinalNFT.supportsInterface",
      "jump": "i",
      "offset": [
        22904,
        23073
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1011": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1012": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1014": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1015": {
      "op": "SWAP1"
    },
    "1016": {
      "op": "ISZERO"
    },
    "1017": {
      "op": "ISZERO"
    },
    "1018": {
      "op": "DUP2"
    },
    "1019": {
      "op": "MSTORE"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1022": {
      "op": "ADD"
    },
    "1023": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1024": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1026": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1027": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1028": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1029": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "SUB",
      "path": "18"
    },
    "1030": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1031": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "RETURN",
      "path": "18"
    },
    "1032": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1033": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x410"
    },
    "1036": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x91F"
    },
    "1039": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1040": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1041": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1043": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1044": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FF"
    },
    "1047": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1048": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1049": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3838"
    },
    "1052": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1053": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1054": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x430"
    },
    "1057": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x42B"
    },
    "1060": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1061": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1063": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x384B"
    },
    "1066": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1067": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1068": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9B1"
    },
    "1071": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1072": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1073": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1075": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1082": {
      "op": "SHL"
    },
    "1083": {
      "op": "SUB"
    },
    "1084": {
      "op": "SWAP1"
    },
    "1085": {
      "op": "SWAP2"
    },
    "1086": {
      "op": "AND"
    },
    "1087": {
      "op": "DUP2"
    },
    "1088": {
      "op": "MSTORE"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1091": {
      "op": "ADD"
    },
    "1092": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FF"
    },
    "1095": {
      "op": "JUMP"
    },
    "1096": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45B"
    },
    "1100": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x456"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1106": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3880"
    },
    "1109": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1110": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1111": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA3E"
    },
    "1114": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1115": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1116": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "STOP",
      "path": "4"
    },
    "1117": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21359,
        21559
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1118": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21359,
        21559
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "1121": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21359,
        21559
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x46B"
    },
    "1124": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21359,
        21559
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1125": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21359,
        21559
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1127": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21359,
        21559
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "1130": {
      "fn": "CardinalNFT.removeMember",
      "jump": "i",
      "offset": [
        21359,
        21559
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1131": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21359,
        21559
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1132": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21359,
        21559
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB54"
    },
    "1135": {
      "fn": "CardinalNFT.removeMember",
      "jump": "i",
      "offset": [
        21359,
        21559
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1136": {
      "offset": [
        2853,
        2889
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1137": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        2853,
        2889
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1140": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        2853,
        2889
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1D"
    },
    "1142": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        2853,
        2889
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1143": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        2853,
        2889
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1144": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        2853,
        2889
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1145": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        2853,
        2889
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1146": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        2853,
        2889
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1148": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        2853,
        2889
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1149": {
      "op": "SWAP1"
    },
    "1150": {
      "op": "DUP2"
    },
    "1151": {
      "op": "MSTORE"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1154": {
      "op": "ADD"
    },
    "1155": {
      "offset": [
        2853,
        2889
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3FF"
    },
    "1158": {
      "op": "JUMP"
    },
    "1159": {
      "offset": [
        1912,
        1970
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1160": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1163": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x495"
    },
    "1166": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1167": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1169": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "1172": {
      "fn": "CardinalNFT.removeMember",
      "jump": "i",
      "offset": [
        1912,
        1970
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1173": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1174": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x14"
    },
    "1176": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1178": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1179": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1181": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1182": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1183": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1184": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1186": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1187": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1188": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1189": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1190": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        1912,
        1970
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1191": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11433,
        11620
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1192": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11433,
        11620
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "1195": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11433,
        11620
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4B5"
    },
    "1198": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11433,
        11620
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1199": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11433,
        11620
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1201": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11433,
        11620
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3971"
    },
    "1204": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "i",
      "offset": [
        11433,
        11620
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1205": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11433,
        11620
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1206": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11433,
        11620
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBE6"
    },
    "1209": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "i",
      "offset": [
        11433,
        11620
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1210": {
      "offset": [
        2411,
        2446
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1211": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2411,
        2446
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1214": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2411,
        2446
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x18"
    },
    "1216": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2411,
        2446
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1217": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2411,
        2446
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1218": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        2411,
        2446
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1219": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1220": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x9"
    },
    "1222": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1223": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x479"
    },
    "1226": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1227": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7598,
        7767
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1228": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7598,
        7767
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "1231": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7598,
        7767
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4D9"
    },
    "1234": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7598,
        7767
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1235": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7598,
        7767
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1237": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7598,
        7767
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x39B8"
    },
    "1240": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "jump": "i",
      "offset": [
        7598,
        7767
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1241": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7598,
        7767
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1242": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7598,
        7767
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC56"
    },
    "1245": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "jump": "i",
      "offset": [
        7598,
        7767
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1246": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1247": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45B"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4EC"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x39DA"
    },
    "1259": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1260": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1261": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC92"
    },
    "1264": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1265": {
      "offset": [
        2198,
        2261
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1266": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1269": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4FF"
    },
    "1272": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1273": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1275": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "1278": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        2198,
        2261
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1279": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1280": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x16"
    },
    "1282": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1284": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1285": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1287": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1288": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1289": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1290": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1292": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1293": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1294": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1295": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1296": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2198,
        2261
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1297": {
      "offset": [
        1556,
        1603
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1298": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F3"
    },
    "1301": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x51F"
    },
    "1304": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1305": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1307": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "1310": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        1556,
        1603
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1311": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1312": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x12"
    },
    "1314": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1316": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1317": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1319": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1320": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1321": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1322": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1324": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1325": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1326": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1327": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "1329": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "AND",
      "path": "18"
    },
    "1330": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1331": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1556,
        1603
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1332": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1333": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x479"
    },
    "1336": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x542"
    },
    "1339": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1340": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1342": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3880"
    },
    "1345": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1346": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1347": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCC3"
    },
    "1350": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1351": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1352": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x55A"
    },
    "1355": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x555"
    },
    "1358": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1359": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1361": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "1364": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14257,
        15200
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1365": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1366": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD59"
    },
    "1369": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14257,
        15200
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1370": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1371": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1373": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1374": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3FF"
    },
    "1377": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1378": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1379": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A16"
    },
    "1382": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14257,
        15200
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1383": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1384": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45B"
    },
    "1387": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x575"
    },
    "1390": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1391": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1393": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x39DA"
    },
    "1396": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1397": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1398": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEF3"
    },
    "1401": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1402": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1403": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1406": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x588"
    },
    "1409": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1410": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1412": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A78"
    },
    "1415": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10252,
        11227
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1416": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1417": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF0E"
    },
    "1420": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10252,
        11227
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1421": {
      "offset": [
        2319,
        2360
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1422": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        2319,
        2360
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1425": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        2319,
        2360
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x17"
    },
    "1427": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        2319,
        2360
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1428": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        2319,
        2360
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1429": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        2319,
        2360
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1430": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1431": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x479"
    },
    "1434": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5A4"
    },
    "1437": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1438": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1440": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x384B"
    },
    "1443": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1444": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1445": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1065"
    },
    "1448": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1449": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20275,
        20371
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1450": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20275,
        20371
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "1453": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20275,
        20371
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5B7"
    },
    "1456": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20275,
        20371
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1457": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20275,
        20371
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1459": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20275,
        20371
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "1462": {
      "fn": "CardinalNFT.setUSDCContract",
      "jump": "i",
      "offset": [
        20275,
        20371
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1463": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20275,
        20371
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1464": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20275,
        20371
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10F8"
    },
    "1467": {
      "fn": "CardinalNFT.setUSDCContract",
      "jump": "i",
      "offset": [
        20275,
        20371
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1468": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13163,
        14022
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1469": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13163,
        14022
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x55A"
    },
    "1472": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13163,
        14022
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5CA"
    },
    "1475": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13163,
        14022
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1476": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13163,
        14022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1478": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13163,
        14022
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "1481": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13163,
        14022
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1482": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13163,
        14022
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1483": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13163,
        14022
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1144"
    },
    "1486": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13163,
        14022
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1487": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1488": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5E2"
    },
    "1491": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5DD"
    },
    "1494": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1495": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1497": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "1500": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "jump": "i",
      "offset": [
        12520,
        12910
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1501": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1502": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12A2"
    },
    "1505": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "jump": "i",
      "offset": [
        12520,
        12910
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1506": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1507": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1509": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1510": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3FF"
    },
    "1513": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1514": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1515": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3ACC"
    },
    "1518": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "jump": "i",
      "offset": [
        12520,
        12910
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1519": {
      "offset": [
        1381,
        1441
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1520": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x430"
    },
    "1523": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5FD"
    },
    "1526": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1527": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1529": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "1532": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "jump": "i",
      "offset": [
        1381,
        1441
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1533": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1534": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x11"
    },
    "1536": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1538": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1539": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1541": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1542": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1543": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1544": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1546": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1547": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1548": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "op": "SUB"
    },
    "1557": {
      "offset": [
        1381,
        1441
      ],
      "op": "AND",
      "path": "18"
    },
    "1558": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1559": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        1381,
        1441
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1560": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1561": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x430"
    },
    "1564": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x626"
    },
    "1567": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1568": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1570": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x384B"
    },
    "1573": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1574": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1575": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1344"
    },
    "1578": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1579": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18545,
        18785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1580": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18545,
        18785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "1583": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18545,
        18785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x639"
    },
    "1586": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18545,
        18785
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1587": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18545,
        18785
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1589": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18545,
        18785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "1592": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "i",
      "offset": [
        18545,
        18785
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1593": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18545,
        18785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1594": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18545,
        18785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13BB"
    },
    "1597": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "i",
      "offset": [
        18545,
        18785
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1598": {
      "offset": [
        1114,
        1164
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1599": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1602": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x64C"
    },
    "1605": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1606": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1608": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "1611": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "i",
      "offset": [
        1114,
        1164
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1612": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1613": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "1615": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1617": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1618": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1620": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1621": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1622": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1623": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1625": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1626": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1627": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1628": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1629": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        1114,
        1164
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1630": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1631": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x479"
    },
    "1634": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x66C"
    },
    "1637": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1638": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1640": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38AA"
    },
    "1643": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1644": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1645": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1442"
    },
    "1648": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1649": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1650": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45B"
    },
    "1653": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C9"
    },
    "1656": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1657": {
      "offset": [
        2494,
        2526
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1658": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2494,
        2526
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1661": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2494,
        2526
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x19"
    },
    "1663": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2494,
        2526
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1664": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2494,
        2526
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1665": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2494,
        2526
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1666": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17539,
        17700
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1667": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17539,
        17700
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "1670": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17539,
        17700
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x690"
    },
    "1673": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17539,
        17700
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1674": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17539,
        17700
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1676": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17539,
        17700
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3880"
    },
    "1679": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "jump": "i",
      "offset": [
        17539,
        17700
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1680": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17539,
        17700
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1681": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17539,
        17700
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14FF"
    },
    "1684": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "jump": "i",
      "offset": [
        17539,
        17700
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1685": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5935,
        7269
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1686": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5935,
        7269
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1689": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5935,
        7269
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1557"
    },
    "1692": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        5935,
        7269
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1693": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17897,
        18048
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1694": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17897,
        18048
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "1697": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17897,
        18048
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6AB"
    },
    "1700": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17897,
        18048
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1701": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17897,
        18048
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1703": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17897,
        18048
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x39B8"
    },
    "1706": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "jump": "i",
      "offset": [
        17897,
        18048
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1707": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17897,
        18048
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1708": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17897,
        18048
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19B3"
    },
    "1711": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "jump": "i",
      "offset": [
        17897,
        18048
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1712": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19302,
        19488
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1713": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19302,
        19488
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "1716": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19302,
        19488
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6BE"
    },
    "1719": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19302,
        19488
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1720": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19302,
        19488
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1722": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19302,
        19488
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "1725": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "jump": "i",
      "offset": [
        19302,
        19488
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1726": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19302,
        19488
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1727": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19302,
        19488
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19EF"
    },
    "1730": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "jump": "i",
      "offset": [
        19302,
        19488
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1731": {
      "offset": [
        891,
        909
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1732": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        891,
        909
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "1734": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        891,
        909
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1735": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        891,
        909
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x430"
    },
    "1738": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        891,
        909
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1745": {
      "op": "SHL"
    },
    "1746": {
      "op": "SUB"
    },
    "1747": {
      "offset": [
        891,
        909
      ],
      "op": "AND",
      "path": "18"
    },
    "1748": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        891,
        909
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1749": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        891,
        909
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1750": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1751": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0xB"
    },
    "1753": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1760": {
      "op": "SHL"
    },
    "1761": {
      "op": "SUB"
    },
    "1762": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1763": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430"
    },
    "1766": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1767": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11835,
        12308
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1768": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11835,
        12308
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x55A"
    },
    "1771": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11835,
        12308
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6F5"
    },
    "1774": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11835,
        12308
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1775": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11835,
        12308
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1777": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11835,
        12308
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "1780": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        11835,
        12308
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1781": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11835,
        12308
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1782": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11835,
        12308
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A3E"
    },
    "1785": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        11835,
        12308
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1786": {
      "offset": [
        2759,
        2791
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1787": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x410"
    },
    "1790": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AF8"
    },
    "1793": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1794": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1795": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x410"
    },
    "1798": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B86"
    },
    "1801": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1802": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19629,
        19778
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1803": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19629,
        19778
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "1806": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19629,
        19778
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x718"
    },
    "1809": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19629,
        19778
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1810": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19629,
        19778
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1812": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19629,
        19778
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B10"
    },
    "1815": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "jump": "i",
      "offset": [
        19629,
        19778
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1816": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19629,
        19778
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1817": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19629,
        19778
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B95"
    },
    "1820": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "jump": "i",
      "offset": [
        19629,
        19778
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1821": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1822": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45B"
    },
    "1825": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x72B"
    },
    "1828": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1829": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1831": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3B53"
    },
    "1834": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1835": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1836": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BD6"
    },
    "1839": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1840": {
      "offset": [
        712,
        745
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1841": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        712,
        745
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "1843": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        712,
        745
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1844": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        712,
        745
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1847": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        712,
        745
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1848": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        712,
        745
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1849": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        712,
        745
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1850": {
      "offset": [
        1257,
        1311
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1851": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1854": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x748"
    },
    "1857": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1858": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1860": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "1863": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        1257,
        1311
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1864": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1865": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "1867": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1869": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1870": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1872": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1873": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1874": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1875": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1877": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1878": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1879": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1880": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1881": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1257,
        1311
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1882": {
      "offset": [
        2672,
        2707
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1883": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1886": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x768"
    },
    "1889": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1890": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1892": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "1895": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        2672,
        2707
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1896": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1897": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BE1"
    },
    "1900": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        2672,
        2707
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1901": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20586,
        20718
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1902": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20586,
        20718
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "1905": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20586,
        20718
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x77B"
    },
    "1908": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20586,
        20718
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1909": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20586,
        20718
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1911": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20586,
        20718
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B53"
    },
    "1914": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "i",
      "offset": [
        20586,
        20718
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1915": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20586,
        20718
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1916": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20586,
        20718
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C02"
    },
    "1919": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "i",
      "offset": [
        20586,
        20718
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1920": {
      "offset": [
        2582,
        2623
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1921": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1924": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x78E"
    },
    "1927": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1928": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1930": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "1933": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "i",
      "offset": [
        2582,
        2623
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1934": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1935": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C57"
    },
    "1938": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "i",
      "offset": [
        2582,
        2623
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1939": {
      "offset": [
        2081,
        2128
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1940": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F3"
    },
    "1943": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7A1"
    },
    "1946": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1947": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1949": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "1952": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "i",
      "offset": [
        2081,
        2128
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1953": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1954": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x15"
    },
    "1956": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1958": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1959": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1961": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1962": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1963": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1964": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1966": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1967": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1968": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1969": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "1971": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "AND",
      "path": "18"
    },
    "1972": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1973": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2081,
        2128
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1974": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1975": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45B"
    },
    "1978": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C4"
    },
    "1981": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1982": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1984": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3B8A"
    },
    "1987": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1988": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1989": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C67"
    },
    "1992": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1993": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1994": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "1997": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7D7"
    },
    "2000": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2001": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2003": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C06"
    },
    "2006": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8223,
        9488
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2007": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2008": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C9F"
    },
    "2011": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8223,
        9488
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2012": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9618,
        9745
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2013": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9618,
        9745
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "2016": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9618,
        9745
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x209A"
    },
    "2019": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "i",
      "offset": [
        9618,
        9745
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2020": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15429,
        16261
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2021": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15429,
        16261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x55A"
    },
    "2024": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15429,
        16261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7F2"
    },
    "2027": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15429,
        16261
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2028": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15429,
        16261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2030": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15429,
        16261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "2033": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15429,
        16261
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2034": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15429,
        16261
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2035": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15429,
        16261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21E3"
    },
    "2038": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15429,
        16261
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2039": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18229,
        18364
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2040": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18229,
        18364
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "2043": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18229,
        18364
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x805"
    },
    "2046": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18229,
        18364
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2047": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18229,
        18364
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2049": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18229,
        18364
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x39B8"
    },
    "2052": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "jump": "i",
      "offset": [
        18229,
        18364
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2053": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18229,
        18364
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2054": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18229,
        18364
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2341"
    },
    "2057": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "jump": "i",
      "offset": [
        18229,
        18364
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2058": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23217,
        23370
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2059": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23217,
        23370
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x410"
    },
    "2062": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23217,
        23370
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x818"
    },
    "2065": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23217,
        23370
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2066": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23217,
        23370
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2068": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23217,
        23370
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "2071": {
      "fn": "CardinalNFT.tokenURI",
      "jump": "i",
      "offset": [
        23217,
        23370
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2072": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23217,
        23370
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2073": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23217,
        23370
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x237D"
    },
    "2076": {
      "fn": "CardinalNFT.tokenURI",
      "jump": "i",
      "offset": [
        23217,
        23370
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2077": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20931,
        21123
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2078": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20931,
        21123
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "2081": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20931,
        21123
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82B"
    },
    "2084": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20931,
        21123
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2085": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20931,
        21123
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2087": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20931,
        21123
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "2090": {
      "fn": "CardinalNFT.addMember",
      "jump": "i",
      "offset": [
        20931,
        21123
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2091": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20931,
        21123
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2092": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20931,
        21123
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2388"
    },
    "2095": {
      "fn": "CardinalNFT.addMember",
      "jump": "i",
      "offset": [
        20931,
        21123
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2096": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16667,
        16783
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2097": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16667,
        16783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5E2"
    },
    "2100": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16667,
        16783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2419"
    },
    "2103": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "jump": "i",
      "offset": [
        16667,
        16783
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2104": {
      "offset": [
        800,
        833
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2105": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        800,
        833
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xD"
    },
    "2107": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        800,
        833
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2108": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        800,
        833
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x430"
    },
    "2111": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        800,
        833
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2118": {
      "op": "SHL"
    },
    "2119": {
      "op": "SUB"
    },
    "2120": {
      "offset": [
        800,
        833
      ],
      "op": "AND",
      "path": "18"
    },
    "2121": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        800,
        833
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2122": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        800,
        833
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2123": {
      "offset": [
        1750,
        1808
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2124": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x479"
    },
    "2127": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x859"
    },
    "2130": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2131": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2133": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38AA"
    },
    "2136": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "jump": "i",
      "offset": [
        1750,
        1808
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2137": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2138": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x13"
    },
    "2140": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2142": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2143": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2145": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2146": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2147": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2148": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2150": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2151": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2152": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2153": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2154": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        1750,
        1808
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2155": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16407,
        16535
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2156": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16407,
        16535
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5E2"
    },
    "2159": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16407,
        16535
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2470"
    },
    "2162": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "jump": "i",
      "offset": [
        16407,
        16535
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2163": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2164": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F3"
    },
    "2167": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x881"
    },
    "2170": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "2171": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2173": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C39"
    },
    "2176": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2177": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2184": {
      "op": "SHL"
    },
    "2185": {
      "op": "SUB"
    },
    "2186": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 2
    },
    "2187": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2188": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "4"
    },
    "2189": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2191": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2192": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2193": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2194": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2196": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2198": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2199": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2200": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2201": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2203": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2204": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2205": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2206": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2207": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2208": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2209": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "4"
    },
    "2210": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2211": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2212": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2213": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2214": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2215": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2216": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2217": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2218": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2220": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "4"
    },
    "2221": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2222": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2223": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19934,
        20128
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2224": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19934,
        20128
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "2227": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19934,
        20128
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8BD"
    },
    "2230": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19934,
        20128
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2231": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19934,
        20128
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2233": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19934,
        20128
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "2236": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "jump": "i",
      "offset": [
        19934,
        20128
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2237": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19934,
        20128
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2238": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19934,
        20128
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24C6"
    },
    "2241": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "jump": "i",
      "offset": [
        19934,
        20128
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2242": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4501,
        4616
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2243": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4501,
        4616
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "2246": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4501,
        4616
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8D0"
    },
    "2249": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4501,
        4616
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2250": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4501,
        4616
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2252": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4501,
        4616
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "2255": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "jump": "i",
      "offset": [
        4501,
        4616
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2256": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4501,
        4616
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2257": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4501,
        4616
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2523"
    },
    "2260": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "jump": "i",
      "offset": [
        4501,
        4616
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45B"
    },
    "2265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E3"
    },
    "2268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2269": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2271": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38AA"
    },
    "2274": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2275": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2276": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2556"
    },
    "2279": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2280": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21840,
        22162
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2281": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21840,
        22162
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "2284": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21840,
        22162
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8F6"
    },
    "2287": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21840,
        22162
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2288": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21840,
        22162
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2290": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21840,
        22162
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3880"
    },
    "2293": {
      "fn": "CardinalNFT.setMemberDiscount",
      "jump": "i",
      "offset": [
        21840,
        22162
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2294": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21840,
        22162
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2295": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21840,
        22162
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x25EE"
    },
    "2298": {
      "fn": "CardinalNFT.setMemberDiscount",
      "jump": "i",
      "offset": [
        21840,
        22162
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2299": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18946,
        19150
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2300": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18946,
        19150
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "2303": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18946,
        19150
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x909"
    },
    "2306": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18946,
        19150
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2307": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18946,
        19150
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2309": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18946,
        19150
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384B"
    },
    "2312": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "jump": "i",
      "offset": [
        18946,
        19150
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2313": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18946,
        19150
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2314": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18946,
        19150
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x26B0"
    },
    "2317": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "jump": "i",
      "offset": [
        18946,
        19150
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2318": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2319": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        23007,
        23011
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2321": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        23030,
        23066
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 3,
      "value": "0x919"
    },
    "2324": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        23054,
        23065
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2325": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        23030,
        23053
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2702"
    },
    "2328": {
      "fn": "CardinalNFT.supportsInterface",
      "jump": "i",
      "offset": [
        23030,
        23066
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2329": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        23030,
        23066
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2330": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        23023,
        23066
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2331": {
      "fn": "CardinalNFT.supportsInterface",
      "offset": [
        22904,
        23073
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2332": {
      "op": "POP"
    },
    "2333": {
      "op": "POP"
    },
    "2334": {
      "fn": "CardinalNFT.supportsInterface",
      "jump": "o",
      "offset": [
        22904,
        23073
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2335": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2336": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2338": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 4,
      "value": "0x0"
    },
    "2340": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2341": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2342": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x92E"
    },
    "2345": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2346": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C6C"
    },
    "2349": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2350": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2351": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2352": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2354": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "4"
    },
    "2355": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2357": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2358": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2359": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "4"
    },
    "2360": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "4"
    },
    "2361": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2363": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "4"
    },
    "2364": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2366": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2367": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2368": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2369": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "4"
    },
    "2370": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2372": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2373": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2374": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2375": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2376": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2377": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2378": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2379": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2380": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2382": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "4"
    },
    "2383": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2384": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2385": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2386": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x95A"
    },
    "2389": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2390": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C6C"
    },
    "2393": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2394": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2395": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2396": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2397": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A7"
    },
    "2400": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2401": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2402": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2404": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "4"
    },
    "2405": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x97C"
    },
    "2408": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2409": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "2412": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2413": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2414": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2415": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "4"
    },
    "2416": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "4"
    },
    "2417": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2418": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2419": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2420": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2422": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "4"
    },
    "2423": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2424": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A7"
    },
    "2427": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2428": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2429": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2430": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "4"
    },
    "2431": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2432": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2433": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2435": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2436": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2438": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2440": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2441": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2442": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2443": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2444": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2445": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2446": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2447": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2448": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2450": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "4"
    },
    "2451": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2452": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2454": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "4"
    },
    "2455": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2456": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2457": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "4"
    },
    "2458": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x98A"
    },
    "2461": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2462": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2463": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2464": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "4"
    },
    "2465": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2467": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "4"
    },
    "2468": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2469": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "4"
    },
    "2470": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2471": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2472": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "4"
    },
    "2473": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "4"
    },
    "2474": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "4"
    },
    "2475": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "4"
    },
    "2476": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "4"
    },
    "2477": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2478": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "4"
    },
    "2479": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2480": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2481": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2482": {
      "fn": "ERC721.getApproved",
      "offset": [
        4075,
        4082
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2484": {
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4118
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x9BC"
    },
    "2487": {
      "fn": "ERC721.getApproved",
      "offset": [
        4110,
        4117
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2488": {
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4109
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2727"
    },
    "2491": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4102,
        4118
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2492": {
      "branch": 228,
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4118
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2493": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA22"
    },
    "2496": {
      "branch": 228,
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2497": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2499": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2500": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2506": {
      "op": "SHL"
    },
    "2507": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2508": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2511": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2513": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2514": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "ADD",
      "path": "4"
    },
    "2515": {
      "op": "MSTORE"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2520": {
      "op": "DUP3"
    },
    "2521": {
      "op": "ADD"
    },
    "2522": {
      "op": "MSTORE"
    },
    "2523": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2558": {
      "op": "DUP3"
    },
    "2559": {
      "op": "ADD"
    },
    "2560": {
      "op": "MSTORE"
    },
    "2561": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2576": {
      "op": "SHL"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2579": {
      "op": "DUP3"
    },
    "2580": {
      "op": "ADD"
    },
    "2581": {
      "op": "MSTORE"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2584": {
      "op": "ADD"
    },
    "2585": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2586": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2588": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2589": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2590": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2591": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SUB",
      "path": "4"
    },
    "2592": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2593": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "2594": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2595": {
      "op": "POP"
    },
    "2596": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x0"
    },
    "2598": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2599": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2600": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2601": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4200
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2603": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2605": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2606": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2608": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2609": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2610": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2617": {
      "op": "SHL"
    },
    "2618": {
      "op": "SUB"
    },
    "2619": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "AND",
      "path": "4"
    },
    "2620": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2621": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2622": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2623": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3630
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2625": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA49"
    },
    "2628": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3655
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2629": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3647
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1344"
    },
    "2632": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2633": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2634": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2635": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "POP",
      "path": "4"
    },
    "2636": {
      "fn": "ERC721.approve",
      "offset": [
        3680,
        3685
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 7
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2643": {
      "op": "SHL"
    },
    "2644": {
      "op": "SUB"
    },
    "2645": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "4"
    },
    "2646": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3676
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2653": {
      "op": "SHL"
    },
    "2654": {
      "op": "SUB"
    },
    "2655": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "4"
    },
    "2656": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "EQ",
      "path": "4"
    },
    "2657": {
      "branch": 229,
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2658": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAB7"
    },
    "2661": {
      "branch": 229,
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2662": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2664": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2665": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2671": {
      "op": "SHL"
    },
    "2672": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2673": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2676": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2678": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2679": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "ADD",
      "path": "4"
    },
    "2680": {
      "op": "MSTORE"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2685": {
      "op": "DUP3"
    },
    "2686": {
      "op": "ADD"
    },
    "2687": {
      "op": "MSTORE"
    },
    "2688": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2723": {
      "op": "DUP3"
    },
    "2724": {
      "op": "ADD"
    },
    "2725": {
      "op": "MSTORE"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2730": {
      "op": "SHL"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2733": {
      "op": "DUP3"
    },
    "2734": {
      "op": "ADD"
    },
    "2735": {
      "op": "MSTORE"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2738": {
      "op": "ADD"
    },
    "2739": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "2742": {
      "op": "JUMP"
    },
    "2743": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2744": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 8
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2751": {
      "op": "SHL"
    },
    "2752": {
      "op": "SUB"
    },
    "2753": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 9
    },
    "2754": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "AND",
      "path": "4"
    },
    "2755": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "EQ",
      "path": "4"
    },
    "2756": {
      "branch": 230,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2757": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD3"
    },
    "2760": {
      "branch": 230,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2761": {
      "op": "POP"
    },
    "2762": {
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD3"
    },
    "2765": {
      "fn": "ERC721.approve",
      "offset": [
        3797,
        3802
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2766": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2767": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x881"
    },
    "2770": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2771": {
      "branch": 231,
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2772": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB45"
    },
    "2775": {
      "branch": 231,
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2776": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2778": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2779": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2785": {
      "op": "SHL"
    },
    "2786": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2787": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2790": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2792": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2793": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "ADD",
      "path": "4"
    },
    "2794": {
      "op": "MSTORE"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2799": {
      "op": "DUP3"
    },
    "2800": {
      "op": "ADD"
    },
    "2801": {
      "op": "MSTORE"
    },
    "2802": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2837": {
      "op": "DUP3"
    },
    "2838": {
      "op": "ADD"
    },
    "2839": {
      "op": "MSTORE"
    },
    "2840": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2875": {
      "op": "DUP3"
    },
    "2876": {
      "op": "ADD"
    },
    "2877": {
      "op": "MSTORE"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2880": {
      "op": "ADD"
    },
    "2881": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "2884": {
      "op": "JUMP"
    },
    "2885": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2886": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0xB4F"
    },
    "2889": {
      "fn": "ERC721.approve",
      "offset": [
        3919,
        3921
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2890": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3930
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2891": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3918
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2744"
    },
    "2894": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2895": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2896": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "4"
    },
    "2897": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "4"
    },
    "2898": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "4"
    },
    "2899": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2900": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21359,
        21559
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2901": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21446,
        21456
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 11
    },
    "2902": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2904": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2905": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2906": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2907": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21445
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x15"
    },
    "2909": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2911": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2912": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2914": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2915": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2916": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2917": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "2919": {
      "branch": 191,
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21431,
        21457
      ],
      "op": "AND",
      "path": "18"
    },
    "2920": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21423,
        21503
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBC5"
    },
    "2923": {
      "branch": 191,
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21423,
        21503
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2924": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21423,
        21503
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2926": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21423,
        21503
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2927": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2933": {
      "op": "SHL"
    },
    "2934": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21423,
        21503
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2935": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21423,
        21503
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2938": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21423,
        21503
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2940": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21423,
        21503
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2941": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21423,
        21503
      ],
      "op": "ADD",
      "path": "18"
    },
    "2942": {
      "op": "MSTORE"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2947": {
      "op": "DUP3"
    },
    "2948": {
      "op": "ADD"
    },
    "2949": {
      "op": "MSTORE"
    },
    "2950": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920636F6E74726163742061646D696E732063616E2072656D6F766520"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2985": {
      "op": "DUP3"
    },
    "2986": {
      "op": "ADD"
    },
    "2987": {
      "op": "MSTORE"
    },
    "2988": {
      "op": "PUSH9",
      "value": "0x309036B2B6B132B917"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3000": {
      "op": "SHL"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3003": {
      "op": "DUP3"
    },
    "3004": {
      "op": "ADD"
    },
    "3005": {
      "op": "MSTORE"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3008": {
      "op": "ADD"
    },
    "3009": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21423,
        21503
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA19"
    },
    "3012": {
      "op": "JUMP"
    },
    "3013": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21423,
        21503
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "op": "SUB"
    },
    "3022": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21544
      ],
      "op": "AND",
      "path": "18",
      "statement": 12
    },
    "3023": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21547,
        21552
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3025": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21544
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3026": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21544
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3027": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21544
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3028": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21529
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x12"
    },
    "3030": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21544
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3032": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21544
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3033": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21544
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3035": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21544
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3036": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21544
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3037": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21552
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3038": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21552
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3041": {
      "op": "NOT"
    },
    "3042": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21552
      ],
      "op": "AND",
      "path": "18"
    },
    "3043": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21552
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3044": {
      "fn": "CardinalNFT.removeMember",
      "offset": [
        21514,
        21552
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3045": {
      "fn": "CardinalNFT.removeMember",
      "jump": "o",
      "offset": [
        21359,
        21559
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3046": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11433,
        11620
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3047": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3049": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3056": {
      "op": "SHL"
    },
    "3057": {
      "op": "SUB"
    },
    "3058": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3059": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3060": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3061": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC10"
    },
    "3064": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3065": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3067": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3068": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3074": {
      "op": "SHL"
    },
    "3075": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3076": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3077": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3079": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3080": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "3083": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3084": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "3087": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3088": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3089": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11527,
        11561
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 13,
      "value": "0xC1A"
    },
    "3092": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11540,
        11547
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3093": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11549,
        11560
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3094": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11527,
        11539
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27B2"
    },
    "3097": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "i",
      "offset": [
        11527,
        11561
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3098": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11527,
        11561
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3099": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11592,
        11599
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 14
    },
    "3100": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xC794E2271B51F209D8A645EEC85692351AD1ADC857AB2E06F9C5AF7961CF07D5"
    },
    "3133": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11601,
        11612
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3134": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3136": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3137": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC4A"
    },
    "3140": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3141": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3142": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3838"
    },
    "3145": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "i",
      "offset": [
        11576,
        11613
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3146": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3147": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3149": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3150": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3151": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3152": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "SUB",
      "path": "18"
    },
    "3153": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3154": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11576,
        11613
      ],
      "op": "LOG2",
      "path": "18"
    },
    "3155": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11433,
        11620
      ],
      "op": "POP",
      "path": "18"
    },
    "3156": {
      "fn": "CardinalNFT.setTokenURI",
      "offset": [
        11433,
        11620
      ],
      "op": "POP",
      "path": "18"
    },
    "3157": {
      "fn": "CardinalNFT.setTokenURI",
      "jump": "o",
      "offset": [
        11433,
        11620
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3158": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7598,
        7767
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3159": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3161": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3168": {
      "op": "SHL"
    },
    "3169": {
      "op": "SUB"
    },
    "3170": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3171": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3172": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3173": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC80"
    },
    "3176": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3177": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3179": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3180": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3186": {
      "op": "SHL"
    },
    "3187": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3188": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3189": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3191": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3192": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "3195": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3196": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "3199": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3200": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3201": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7740
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 15,
      "value": "0x0"
    },
    "3203": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7740
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3204": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7740
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3205": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7740
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3206": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7731
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x14"
    },
    "3208": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7740
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3210": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7740
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3211": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7740
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3213": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7740
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3214": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7740
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3215": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7740
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3216": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "offset": [
        7708,
        7760
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3217": {
      "fn": "CardinalNFT.updateMembershipNFTLastPaid",
      "jump": "o",
      "offset": [
        7598,
        7767
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3219": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 16,
      "value": "0xC9C"
    },
    "3222": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4948,
        4955
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3224": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4933
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x283D"
    },
    "3227": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3228": {
      "branch": 232,
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCB8"
    },
    "3232": {
      "branch": 232,
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3233": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3235": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3236": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3242": {
      "op": "SHL"
    },
    "3243": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3247": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "ADD",
      "path": "4"
    },
    "3248": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "3251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3252": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3CDC"
    },
    "3255": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3257": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5049
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 17,
      "value": "0xB4F"
    },
    "3260": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5031,
        5035
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3261": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5037,
        5039
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3262": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5041,
        5048
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3263": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5030
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2923"
    },
    "3266": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5021,
        5049
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3267": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3268": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1388,
        1395
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3270": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 18,
      "value": "0xCCE"
    },
    "3273": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1440,
        1445
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3274": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1442"
    },
    "3277": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3278": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3279": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1420
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3280": {
      "branch": 245,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1446
      ],
      "op": "LT",
      "path": "7"
    },
    "3281": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD30"
    },
    "3284": {
      "branch": 245,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3285": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3287": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3294": {
      "op": "SHL"
    },
    "3295": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3296": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3299": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3301": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3302": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "ADD",
      "path": "7"
    },
    "3303": {
      "op": "MSTORE"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3308": {
      "op": "DUP3"
    },
    "3309": {
      "op": "ADD"
    },
    "3310": {
      "op": "MSTORE"
    },
    "3311": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3346": {
      "op": "DUP3"
    },
    "3347": {
      "op": "ADD"
    },
    "3348": {
      "op": "MSTORE"
    },
    "3349": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3363": {
      "op": "SHL"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3366": {
      "op": "DUP3"
    },
    "3367": {
      "op": "ADD"
    },
    "3368": {
      "op": "MSTORE"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3371": {
      "op": "ADD"
    },
    "3372": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA19"
    },
    "3375": {
      "op": "JUMP"
    },
    "3376": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3377": {
      "op": "POP"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3384": {
      "op": "SHL"
    },
    "3385": {
      "op": "SUB"
    },
    "3386": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 19
    },
    "3387": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3388": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3389": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "AND",
      "path": "7"
    },
    "3390": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3392": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3393": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3394": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3395": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1523
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3397": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3399": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3400": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3401": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3402": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3404": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3405": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3406": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3407": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3408": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3409": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3410": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3411": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3412": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3413": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3414": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3415": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3416": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3417": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3418": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14337,
        14352
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "3420": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14364,
        14377
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3422": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14380,
        14399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD66"
    },
    "3425": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14380,
        14389
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "3427": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "13",
      "statement": 20
    },
    "3428": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3429": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3430": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14380,
        14399
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3431": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14364,
        14399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3432": {
      "op": "POP"
    },
    "3433": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14409,
        14426
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3435": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14409,
        14426
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3436": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14487,
        14488
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3438": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14472,
        14712
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3439": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14496,
        14504
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3440": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14490,
        14492
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3441": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14490,
        14504
      ],
      "op": "GT",
      "path": "18"
    },
    "3442": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14472,
        14712
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDEB"
    },
    "3445": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14472,
        14712
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3446": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14545,
        14556
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3453": {
      "op": "SHL"
    },
    "3454": {
      "op": "SUB"
    },
    "3455": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14556
      ],
      "op": "AND",
      "path": "18"
    },
    "3456": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14541
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD88"
    },
    "3459": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14538,
        14540
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3460": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14537
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1344"
    },
    "3463": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14530,
        14541
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3464": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14541
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3471": {
      "op": "SHL"
    },
    "3472": {
      "op": "SUB"
    },
    "3473": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14556
      ],
      "op": "AND",
      "path": "18"
    },
    "3474": {
      "branch": 192,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14556
      ],
      "op": "EQ",
      "path": "18"
    },
    "3475": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14650
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3476": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14650
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3477": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14650
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDC6"
    },
    "3480": {
      "branch": 192,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14530,
        14650
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3481": {
      "op": "POP"
    },
    "3482": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14584,
        14606
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x17"
    },
    "3484": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14584,
        14606
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3485": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3487": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14580
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3488": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14580
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3489": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14580
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3490": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14576
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "3492": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3494": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14580
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3495": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3497": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14580
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3498": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14580
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3499": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14580
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3500": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14606
      ],
      "op": "EQ",
      "path": "18"
    },
    "3501": {
      "branch": 193,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14606
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3502": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14649
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDC6"
    },
    "3505": {
      "branch": 193,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14649
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3506": {
      "op": "POP"
    },
    "3507": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14633,
        14649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x18"
    },
    "3509": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14633,
        14649
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3510": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14629
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3512": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14629
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3513": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14629
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3514": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14629
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3515": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "3517": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14629
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3519": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14629
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3520": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14629
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3522": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14629
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3523": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14629
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3524": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14629
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3525": {
      "branch": 194,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14610,
        14649
      ],
      "op": "EQ",
      "path": "18"
    },
    "3526": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14561,
        14649
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3527": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14526,
        14702
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3528": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14526,
        14702
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDD9"
    },
    "3531": {
      "branch": 194,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14526,
        14702
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3532": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14670,
        14687
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 21,
      "value": "0xDD6"
    },
    "3535": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14686,
        14687
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3537": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14670,
        14687
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3538": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14670,
        14687
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D43"
    },
    "3541": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14670,
        14687
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3542": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14670,
        14687
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3543": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14670,
        14687
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3544": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14670,
        14687
      ],
      "op": "POP",
      "path": "18"
    },
    "3545": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14526,
        14702
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3546": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14506,
        14510
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 22
    },
    "3547": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14506,
        14510
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDE3"
    },
    "3550": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14506,
        14510
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3551": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14506,
        14510
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D5B"
    },
    "3554": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14506,
        14510
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3555": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14506,
        14510
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3556": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14506,
        14510
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3557": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14506,
        14510
      ],
      "op": "POP",
      "path": "18"
    },
    "3558": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14506,
        14510
      ],
      "op": "POP",
      "path": "18"
    },
    "3559": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14472,
        14712
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD6E"
    },
    "3562": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14472,
        14712
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3563": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14472,
        14712
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3564": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14472,
        14712
      ],
      "op": "POP",
      "path": "18"
    },
    "3565": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14722,
        14754
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3567": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14770,
        14782
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3568": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3577": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3578": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "GT",
      "path": "18"
    },
    "3579": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3580": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE07"
    },
    "3583": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3584": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE07"
    },
    "3587": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38C5"
    },
    "3590": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14757,
        14783
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3591": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3592": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3594": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3595": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3596": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3597": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3598": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3599": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3600": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3602": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "MUL",
      "path": "18"
    },
    "3603": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3605": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "ADD",
      "path": "18"
    },
    "3606": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3607": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "ADD",
      "path": "18"
    },
    "3608": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3610": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3611": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3612": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3613": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE3A"
    },
    "3616": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3617": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3618": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3620": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "ADD",
      "path": "18"
    },
    "3621": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3622": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "3624": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3625": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3626": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3628": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "ADD",
      "path": "18"
    },
    "3629": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3630": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3632": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3633": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "SUB",
      "path": "18"
    },
    "3634": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3635": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3636": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE25"
    },
    "3639": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3640": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3641": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "POP",
      "path": "18"
    },
    "3642": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14757,
        14783
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3643": {
      "op": "POP"
    },
    "3644": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14722,
        14783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3645": {
      "op": "POP"
    },
    "3646": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14809,
        14810
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3648": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14794,
        15152
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3649": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14818,
        14826
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3650": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14812,
        14814
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3651": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14812,
        14826
      ],
      "op": "GT",
      "path": "18"
    },
    "3652": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14794,
        15152
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEE9"
    },
    "3655": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14794,
        15152
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3656": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14867,
        14878
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3663": {
      "op": "SHL"
    },
    "3664": {
      "op": "SUB"
    },
    "3665": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14878
      ],
      "op": "AND",
      "path": "18"
    },
    "3666": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14863
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE5A"
    },
    "3669": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14860,
        14862
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3670": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14859
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1344"
    },
    "3673": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14852,
        14863
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3674": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14863
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3681": {
      "op": "SHL"
    },
    "3682": {
      "op": "SUB"
    },
    "3683": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14878
      ],
      "op": "AND",
      "path": "18"
    },
    "3684": {
      "branch": 195,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14878
      ],
      "op": "EQ",
      "path": "18"
    },
    "3685": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14972
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3686": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14972
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3687": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14972
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE98"
    },
    "3690": {
      "branch": 195,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14852,
        14972
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3691": {
      "op": "POP"
    },
    "3692": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14906,
        14928
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x17"
    },
    "3694": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14906,
        14928
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3695": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14902
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3697": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14902
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3698": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14902
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3699": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14902
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3700": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "3702": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14902
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3704": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14902
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3705": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14902
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3707": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14902
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3708": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14902
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3709": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14902
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3710": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14928
      ],
      "op": "EQ",
      "path": "18"
    },
    "3711": {
      "branch": 196,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14928
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3712": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14971
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE98"
    },
    "3715": {
      "branch": 196,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14971
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3716": {
      "op": "POP"
    },
    "3717": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14955,
        14971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x18"
    },
    "3719": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14955,
        14971
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3720": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14951
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3722": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14951
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3723": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14951
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3724": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14951
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3725": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "3727": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14951
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3729": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14951
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3730": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14951
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3732": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14951
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3733": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14951
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3734": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14951
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3735": {
      "branch": 197,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14932,
        14971
      ],
      "op": "EQ",
      "path": "18"
    },
    "3736": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14883,
        14971
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3737": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14848,
        15142
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3738": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14848,
        15142
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xED7"
    },
    "3741": {
      "branch": 197,
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14848,
        15142
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3742": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14992,
        15016
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3744": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15019,
        15031
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEA8"
    },
    "3747": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15028,
        15030
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3748": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15019,
        15027
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x237D"
    },
    "3751": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        15019,
        15031
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3752": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15019,
        15031
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3753": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14992,
        15031
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3754": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14992,
        15031
      ],
      "op": "POP",
      "path": "18"
    },
    "3755": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15082,
        15092
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 23
    },
    "3756": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15065
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3757": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15066,
        15078
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3758": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3759": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3760": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3761": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "LT",
      "path": "18"
    },
    "3762": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEBD"
    },
    "3765": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3766": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEBD"
    },
    "3769": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D76"
    },
    "3772": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        15049,
        15079
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3773": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3774": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3776": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3777": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3778": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "MUL",
      "path": "18"
    },
    "3779": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3780": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3781": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3782": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "ADD",
      "path": "18"
    },
    "3783": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15079
      ],
      "op": "ADD",
      "path": "18"
    },
    "3784": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15049,
        15092
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3785": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15110,
        15127
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 24,
      "value": "0xED3"
    },
    "3788": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15126,
        15127
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3790": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15110,
        15127
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3791": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15110,
        15127
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D43"
    },
    "3794": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        15110,
        15127
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3795": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15110,
        15127
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3796": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15110,
        15127
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3797": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15110,
        15127
      ],
      "op": "POP",
      "path": "18"
    },
    "3798": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14974,
        15142
      ],
      "op": "POP",
      "path": "18"
    },
    "3799": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14848,
        15142
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3800": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14828,
        14832
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 25
    },
    "3801": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14828,
        14832
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEE1"
    },
    "3804": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14828,
        14832
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3805": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14828,
        14832
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D5B"
    },
    "3808": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "i",
      "offset": [
        14828,
        14832
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3809": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14828,
        14832
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3810": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14828,
        14832
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3811": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14828,
        14832
      ],
      "op": "POP",
      "path": "18"
    },
    "3812": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14828,
        14832
      ],
      "op": "POP",
      "path": "18"
    },
    "3813": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14794,
        15152
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE40"
    },
    "3816": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14794,
        15152
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3817": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14794,
        15152
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        15177,
        15193
      ],
      "op": "SWAP6",
      "path": "18",
      "statement": 26
    },
    "3820": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "offset": [
        14257,
        15200
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3821": {
      "op": "POP"
    },
    "3822": {
      "op": "POP"
    },
    "3823": {
      "op": "POP"
    },
    "3824": {
      "op": "POP"
    },
    "3825": {
      "op": "POP"
    },
    "3826": {
      "fn": "CardinalNFT.getUserMembershipTokenURIs",
      "jump": "o",
      "offset": [
        14257,
        15200
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3827": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3828": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 27,
      "value": "0xB4F"
    },
    "3831": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5272,
        5276
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3832": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5278,
        5280
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3833": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5282,
        5289
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3834": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3836": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3837": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3838": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3840": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "ADD",
      "path": "4"
    },
    "3841": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3843": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3844": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3845": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3847": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3848": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3849": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "POP",
      "path": "4"
    },
    "3850": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5271
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C67"
    },
    "3853": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5255,
        5294
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3854": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3855": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3857": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3858": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10387,
        10391
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3860": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10387,
        10391
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3867": {
      "op": "SHL"
    },
    "3868": {
      "op": "SUB"
    },
    "3869": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3870": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3871": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3872": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3B"
    },
    "3875": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3876": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3878": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3879": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3885": {
      "op": "SHL"
    },
    "3886": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3887": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3888": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3890": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3891": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "3894": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3895": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "3898": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3899": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3900": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10403,
        10424
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 28,
      "value": "0xF49"
    },
    "3903": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10403,
        10412
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "3905": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 29
    },
    "3906": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3907": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3909": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "13"
    },
    "3910": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3911": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3912": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3913": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10403,
        10424
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3914": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10434,
        10451
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3916": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10454,
        10473
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF54"
    },
    "3919": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10454,
        10463
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "3921": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3922": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3923": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3924": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10454,
        10473
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3925": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 30,
      "value": "0x0"
    },
    "3927": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3928": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3929": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3930": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "3932": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3934": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3935": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3936": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3937": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3939": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3940": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3941": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10510
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3942": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10519
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3943": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10519
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3944": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10484,
        10519
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3945": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10529,
        10548
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 31,
      "value": "0x10"
    },
    "3947": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10529,
        10559
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3948": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10529,
        10559
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3949": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10529,
        10559
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3950": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10529,
        10559
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3951": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10529,
        10559
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3952": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10529,
        10572
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3953": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10529,
        10572
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3954": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10529,
        10572
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3955": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10434,
        10473
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3956": {
      "op": "POP"
    },
    "3957": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10582,
        10610
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 32,
      "value": "0xF7E"
    },
    "3960": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10588,
        10598
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3961": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10434,
        10473
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3962": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10582,
        10587
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AD0"
    },
    "3965": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10582,
        10610
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3966": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10582,
        10610
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3967": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10620,
        10656
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 33,
      "value": "0xF88"
    },
    "3970": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10633,
        10642
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3971": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10644,
        10655
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3972": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10620,
        10632
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27B2"
    },
    "3975": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10620,
        10656
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3976": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10620,
        10656
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3977": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10666,
        10699
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 34,
      "value": "0xF92"
    },
    "3980": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10682,
        10686
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "3981": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10689,
        10698
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3982": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10666,
        10673
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA3E"
    },
    "3985": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10666,
        10699
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3986": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10666,
        10699
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3987": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10727,
        10745
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 35,
      "value": "0xD"
    },
    "3989": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10727,
        10745
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3990": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10709,
        10752
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFA9"
    },
    "3993": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10709,
        10752
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4000": {
      "op": "SHL"
    },
    "4001": {
      "op": "SUB"
    },
    "4002": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10727,
        10745
      ],
      "op": "AND",
      "path": "18"
    },
    "4003": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10727,
        10745
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4005": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10709,
        10726
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BD6"
    },
    "4008": {
      "fn": "CardinalNFT.createToken",
      "jump": "i",
      "offset": [
        10709,
        10752
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4009": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10709,
        10752
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4010": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10777,
        10799
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x17"
    },
    "4012": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10777,
        10799
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4013": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10767,
        10773
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4014": {
      "branch": 198,
      "fn": "CardinalNFT.createToken",
      "offset": [
        10767,
        10799
      ],
      "op": "EQ",
      "path": "18"
    },
    "4015": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10763,
        11194
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4016": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10763,
        11194
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFED"
    },
    "4019": {
      "branch": 198,
      "fn": "CardinalNFT.createToken",
      "offset": [
        10763,
        11194
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4020": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10839
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 36,
      "value": "0x1A"
    },
    "4022": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4023": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4024": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4026": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4027": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "ADD",
      "path": "18"
    },
    "4028": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4029": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4032": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4033": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4034": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4035": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4036": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x57C384A7D1C54F3A1B2E5E67B2617B8224FDFD1EA7234EEA573A6FF665FF63E"
    },
    "4069": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "ADD",
      "path": "18"
    },
    "4070": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4071": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4072": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10815,
        10855
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4073": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10763,
        11194
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x105A"
    },
    "4076": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10763,
        11194
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4077": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10763,
        11194
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4078": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10894,
        10910
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x18"
    },
    "4080": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10894,
        10910
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4081": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10884,
        10890
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4082": {
      "branch": 199,
      "fn": "CardinalNFT.createToken",
      "offset": [
        10884,
        10910
      ],
      "op": "EQ",
      "path": "18"
    },
    "4083": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10880,
        11194
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4084": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10880,
        11194
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x105A"
    },
    "4087": {
      "branch": 199,
      "fn": "CardinalNFT.createToken",
      "offset": [
        10880,
        11194
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4088": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10944
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 37,
      "value": "0x1B"
    },
    "4090": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4091": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4092": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4094": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4095": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "ADD",
      "path": "18"
    },
    "4096": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4097": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4100": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4101": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4102": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4103": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4104": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x3AD8AA4F87544323A9D1E5DD902F40C356527A7955687113DB5F9A85AD579DC1"
    },
    "4137": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "ADD",
      "path": "18"
    },
    "4138": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4139": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4140": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10926,
        10960
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4141": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10979,
        10996
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4142": {
      "branch": 200,
      "fn": "CardinalNFT.createToken",
      "offset": [
        10979,
        10996
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4143": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10975,
        11184
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1048"
    },
    "4146": {
      "branch": 200,
      "fn": "CardinalNFT.createToken",
      "offset": [
        10975,
        11184
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4147": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11050
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 38,
      "value": "0x0"
    },
    "4149": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11050
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4150": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11050
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4151": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11050
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4152": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11039
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x14"
    },
    "4154": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11050
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4156": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11050
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4157": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11050
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4159": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11050
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4160": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11050
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4161": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11066
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4162": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11066
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4163": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11016,
        11066
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4164": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10975,
        11184
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x105A"
    },
    "4167": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10975,
        11184
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4168": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10975,
        11184
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4169": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11151
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 39,
      "value": "0x0"
    },
    "4171": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11151
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4172": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11151
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4173": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11151
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4174": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x14"
    },
    "4176": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11151
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4178": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11151
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4179": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11151
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4181": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11151
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4182": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11151
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4183": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11154,
        11169
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "4184": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11169
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4185": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11117,
        11169
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4186": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10975,
        11184
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4187": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        11211,
        11220
      ],
      "op": "SWAP1",
      "path": "18",
      "statement": 40
    },
    "4188": {
      "op": "POP"
    },
    "4189": {
      "offset": [
        1318,
        1319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4190": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "4191": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4192": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "POP",
      "path": "18"
    },
    "4193": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "POP",
      "path": "18"
    },
    "4194": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "POP",
      "path": "18"
    },
    "4195": {
      "fn": "CardinalNFT.createToken",
      "offset": [
        10252,
        11227
      ],
      "op": "POP",
      "path": "18"
    },
    "4196": {
      "fn": "CardinalNFT.createToken",
      "jump": "o",
      "offset": [
        10252,
        11227
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4197": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4198": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1873,
        1880
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4200": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 41,
      "value": "0x1070"
    },
    "4203": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "4205": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4206": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4207": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4208": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4209": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1905
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4210": {
      "branch": 246,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1938
      ],
      "op": "LT",
      "path": "7"
    },
    "4211": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10D3"
    },
    "4214": {
      "branch": 246,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4215": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4217": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4224": {
      "op": "SHL"
    },
    "4225": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4226": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4229": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4231": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4232": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "ADD",
      "path": "7"
    },
    "4233": {
      "op": "MSTORE"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4238": {
      "op": "DUP3"
    },
    "4239": {
      "op": "ADD"
    },
    "4240": {
      "op": "MSTORE"
    },
    "4241": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4276": {
      "op": "DUP3"
    },
    "4277": {
      "op": "ADD"
    },
    "4278": {
      "op": "MSTORE"
    },
    "4279": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "4292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4294": {
      "op": "SHL"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4297": {
      "op": "DUP3"
    },
    "4298": {
      "op": "ADD"
    },
    "4299": {
      "op": "MSTORE"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4302": {
      "op": "ADD"
    },
    "4303": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA19"
    },
    "4306": {
      "op": "JUMP"
    },
    "4307": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4308": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2014
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 42,
      "value": "0x9"
    },
    "4310": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2015,
        2020
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4311": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4312": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4313": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4314": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "LT",
      "path": "7"
    },
    "4315": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10E6"
    },
    "4318": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4319": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10E6"
    },
    "4322": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D76"
    },
    "4325": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4326": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4327": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4328": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4330": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4331": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4333": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4335": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4336": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "ADD",
      "path": "7"
    },
    "4337": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4338": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4339": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "POP",
      "path": "7"
    },
    "4340": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4341": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4342": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "POP",
      "path": "7"
    },
    "4343": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4344": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20275,
        20371
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4345": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "4347": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4354": {
      "op": "SHL"
    },
    "4355": {
      "op": "SUB"
    },
    "4356": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4357": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4358": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4359": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1122"
    },
    "4362": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4363": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4372": {
      "op": "SHL"
    },
    "4373": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4374": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4375": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4378": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "4381": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4382": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "4385": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4387": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20348
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 43,
      "value": "0xE"
    },
    "4389": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4390": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4397": {
      "op": "SHL"
    },
    "4398": {
      "op": "SUB"
    },
    "4399": {
      "op": "NOT"
    },
    "4400": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "AND",
      "path": "18"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4407": {
      "op": "SHL"
    },
    "4408": {
      "op": "SUB"
    },
    "4409": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4410": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4411": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4412": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "AND",
      "path": "18"
    },
    "4413": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4414": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4415": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4416": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "OR",
      "path": "18"
    },
    "4417": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4418": {
      "fn": "CardinalNFT.setUSDCContract",
      "offset": [
        20344,
        20364
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4419": {
      "fn": "CardinalNFT.setUSDCContract",
      "jump": "o",
      "offset": [
        20275,
        20371
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4420": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13163,
        14022
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4421": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13249,
        13264
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4423": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13276,
        13289
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4425": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13292,
        13311
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1151"
    },
    "4428": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13292,
        13301
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "4430": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4431": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4432": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4433": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13292,
        13311
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4434": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13276,
        13311
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4435": {
      "op": "POP"
    },
    "4436": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13321,
        13338
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4438": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13321,
        13338
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4439": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13399,
        13400
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4441": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13384,
        13579
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4442": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13408,
        13416
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4443": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13402,
        13404
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4444": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13402,
        13416
      ],
      "op": "GT",
      "path": "18"
    },
    "4445": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13384,
        13579
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11BD"
    },
    "4448": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13384,
        13579
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4449": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13457,
        13468
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4456": {
      "op": "SHL"
    },
    "4457": {
      "op": "SUB"
    },
    "4458": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13442,
        13468
      ],
      "op": "AND",
      "path": "18"
    },
    "4459": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13442,
        13453
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1173"
    },
    "4462": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13450,
        13452
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4463": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13442,
        13449
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1344"
    },
    "4466": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13442,
        13453
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4467": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13442,
        13453
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4474": {
      "op": "SHL"
    },
    "4475": {
      "op": "SUB"
    },
    "4476": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13442,
        13468
      ],
      "op": "AND",
      "path": "18"
    },
    "4477": {
      "branch": 201,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13442,
        13468
      ],
      "op": "EQ",
      "path": "18"
    },
    "4478": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13442,
        13517
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4479": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13442,
        13517
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4480": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13442,
        13517
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1198"
    },
    "4483": {
      "branch": 201,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13442,
        13517
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13495,
        13517
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x17"
    },
    "4487": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13495,
        13517
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4488": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13491
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4490": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13491
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4491": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13491
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4492": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13491
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4493": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13487
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "4495": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13491
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4497": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13491
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4498": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13491
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4500": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13491
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4501": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13491
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4502": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13491
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4503": {
      "branch": 202,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13472,
        13517
      ],
      "op": "EQ",
      "path": "18"
    },
    "4504": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13442,
        13517
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4505": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13438,
        13569
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4506": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13438,
        13569
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11AB"
    },
    "4509": {
      "branch": 202,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13438,
        13569
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4510": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13537,
        13554
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 44,
      "value": "0x11A8"
    },
    "4513": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13553,
        13554
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4515": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13537,
        13554
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4516": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13537,
        13554
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D43"
    },
    "4519": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13537,
        13554
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4520": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13537,
        13554
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4521": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13537,
        13554
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4522": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13537,
        13554
      ],
      "op": "POP",
      "path": "18"
    },
    "4523": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13438,
        13569
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4524": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13418,
        13422
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 45
    },
    "4525": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13418,
        13422
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11B5"
    },
    "4528": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13418,
        13422
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4529": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13418,
        13422
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D5B"
    },
    "4532": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13418,
        13422
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4533": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13418,
        13422
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4534": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13418,
        13422
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4535": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13418,
        13422
      ],
      "op": "POP",
      "path": "18"
    },
    "4536": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13418,
        13422
      ],
      "op": "POP",
      "path": "18"
    },
    "4537": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13384,
        13579
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1159"
    },
    "4540": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13384,
        13579
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4541": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13384,
        13579
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4542": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13384,
        13579
      ],
      "op": "POP",
      "path": "18"
    },
    "4543": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13589,
        13621
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4545": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13637,
        13649
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4546": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4555": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4556": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "GT",
      "path": "18"
    },
    "4557": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4558": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11D9"
    },
    "4561": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4562": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11D9"
    },
    "4565": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38C5"
    },
    "4568": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13624,
        13650
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4569": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4570": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4572": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4573": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4574": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4575": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4576": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4577": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4578": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4580": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "MUL",
      "path": "18"
    },
    "4581": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4583": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "ADD",
      "path": "18"
    },
    "4584": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4585": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "ADD",
      "path": "18"
    },
    "4586": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4588": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4589": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4590": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4591": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x120C"
    },
    "4594": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4595": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4596": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4598": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "ADD",
      "path": "18"
    },
    "4599": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4600": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4602": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4603": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4604": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4606": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "ADD",
      "path": "18"
    },
    "4607": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4608": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4610": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4611": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "SUB",
      "path": "18"
    },
    "4612": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4613": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4614": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11F7"
    },
    "4617": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4618": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4619": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "POP",
      "path": "18"
    },
    "4620": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13624,
        13650
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4621": {
      "op": "POP"
    },
    "4622": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13589,
        13650
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4623": {
      "op": "POP"
    },
    "4624": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13676,
        13677
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4626": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13661,
        13974
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4627": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13685,
        13693
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4628": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13679,
        13681
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4629": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13679,
        13693
      ],
      "op": "GT",
      "path": "18"
    },
    "4630": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13661,
        13974
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEE9"
    },
    "4633": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13661,
        13974
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4634": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13734,
        13745
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4641": {
      "op": "SHL"
    },
    "4642": {
      "op": "SUB"
    },
    "4643": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13719,
        13745
      ],
      "op": "AND",
      "path": "18"
    },
    "4644": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13719,
        13730
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x122C"
    },
    "4647": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13727,
        13729
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4648": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13719,
        13726
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1344"
    },
    "4651": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13719,
        13730
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4652": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13719,
        13730
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4659": {
      "op": "SHL"
    },
    "4660": {
      "op": "SUB"
    },
    "4661": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13719,
        13745
      ],
      "op": "AND",
      "path": "18"
    },
    "4662": {
      "branch": 203,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13719,
        13745
      ],
      "op": "EQ",
      "path": "18"
    },
    "4663": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13719,
        13794
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4664": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13719,
        13794
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4665": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13719,
        13794
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1251"
    },
    "4668": {
      "branch": 203,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13719,
        13794
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4669": {
      "op": "POP"
    },
    "4670": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13772,
        13794
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x17"
    },
    "4672": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13772,
        13794
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4673": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13768
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4675": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13768
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4676": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13768
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4677": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13768
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4678": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "4680": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13768
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4682": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13768
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4683": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13768
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4685": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13768
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4686": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13768
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4687": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13768
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4688": {
      "branch": 204,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13749,
        13794
      ],
      "op": "EQ",
      "path": "18"
    },
    "4689": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13719,
        13794
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4690": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13715,
        13964
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4691": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13715,
        13964
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1290"
    },
    "4694": {
      "branch": 204,
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13715,
        13964
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4695": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13814,
        13838
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4697": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13841,
        13853
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1261"
    },
    "4700": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13850,
        13852
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4701": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13841,
        13849
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x237D"
    },
    "4704": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13841,
        13853
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4705": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13841,
        13853
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4706": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13814,
        13853
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4707": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13814,
        13853
      ],
      "op": "POP",
      "path": "18"
    },
    "4708": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13904,
        13914
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 46
    },
    "4709": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13887
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4710": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13888,
        13900
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4711": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4712": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4713": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4714": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "LT",
      "path": "18"
    },
    "4715": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1276"
    },
    "4718": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4719": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1276"
    },
    "4722": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D76"
    },
    "4725": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13871,
        13901
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4726": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4727": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4729": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4730": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4731": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "MUL",
      "path": "18"
    },
    "4732": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4733": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4734": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4735": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "ADD",
      "path": "18"
    },
    "4736": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13901
      ],
      "op": "ADD",
      "path": "18"
    },
    "4737": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13871,
        13914
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4738": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13932,
        13949
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 47,
      "value": "0x128C"
    },
    "4741": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13948,
        13949
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4743": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13932,
        13949
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4744": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13932,
        13949
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D43"
    },
    "4747": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13932,
        13949
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4748": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13932,
        13949
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4749": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13932,
        13949
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4750": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13932,
        13949
      ],
      "op": "POP",
      "path": "18"
    },
    "4751": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13796,
        13964
      ],
      "op": "POP",
      "path": "18"
    },
    "4752": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13715,
        13964
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4753": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13695,
        13699
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 48
    },
    "4754": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13695,
        13699
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x129A"
    },
    "4757": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13695,
        13699
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4758": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13695,
        13699
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D5B"
    },
    "4761": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "jump": "i",
      "offset": [
        13695,
        13699
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4762": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13695,
        13699
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4763": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13695,
        13699
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4764": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13695,
        13699
      ],
      "op": "POP",
      "path": "18"
    },
    "4765": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13695,
        13699
      ],
      "op": "POP",
      "path": "18"
    },
    "4766": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13661,
        13974
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1212"
    },
    "4769": {
      "fn": "CardinalNFT.getUserOriginalCardinalTokenURIs",
      "offset": [
        13661,
        13974
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4770": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4771": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12589,
        12605
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4773": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12617,
        12639
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4775": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12642,
        12664
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12AF"
    },
    "4778": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12652,
        12663
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4779": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12642,
        12651
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1442"
    },
    "4782": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "jump": "i",
      "offset": [
        12642,
        12664
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4783": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12642,
        12664
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4784": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12617,
        12664
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4785": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12617,
        12664
      ],
      "op": "POP",
      "path": "18"
    },
    "4786": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12674,
        12706
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4788": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12723,
        12737
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4789": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4798": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4799": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "GT",
      "path": "18"
    },
    "4800": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4801": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12CC"
    },
    "4804": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4805": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12CC"
    },
    "4808": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38C5"
    },
    "4811": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "jump": "i",
      "offset": [
        12709,
        12738
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4812": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4813": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4815": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4816": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4817": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4818": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4819": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4820": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4821": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4823": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "MUL",
      "path": "18"
    },
    "4824": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4826": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "ADD",
      "path": "18"
    },
    "4827": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4828": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "ADD",
      "path": "18"
    },
    "4829": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4831": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4832": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4833": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4834": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12F5"
    },
    "4837": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4838": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4839": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4841": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "ADD",
      "path": "18"
    },
    "4842": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4844": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4845": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "MUL",
      "path": "18"
    },
    "4846": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4847": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "4848": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4849": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "CALLDATACOPY",
      "path": "18"
    },
    "4850": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "ADD",
      "path": "18"
    },
    "4851": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4852": {
      "op": "POP"
    },
    "4853": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4854": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12709,
        12738
      ],
      "op": "POP",
      "path": "18"
    },
    "4855": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12674,
        12738
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4856": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12674,
        12738
      ],
      "op": "POP",
      "path": "18"
    },
    "4857": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12754,
        12763
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4859": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12749,
        12871
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4860": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12769,
        12783
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4861": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12765,
        12766
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4862": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12765,
        12783
      ],
      "op": "LT",
      "path": "18"
    },
    "4863": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12749,
        12871
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4864": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12749,
        12871
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x133C"
    },
    "4867": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12749,
        12871
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4868": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12825,
        12860
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 49,
      "value": "0x130D"
    },
    "4871": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12845,
        12856
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4872": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12858,
        12859
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4873": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12825,
        12844
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCC3"
    },
    "4876": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "jump": "i",
      "offset": [
        12825,
        12860
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4877": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12825,
        12860
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4878": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12819
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4879": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12820,
        12821
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4880": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4881": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4882": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4883": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "LT",
      "path": "18"
    },
    "4884": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x131F"
    },
    "4887": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4888": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x131F"
    },
    "4891": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D76"
    },
    "4894": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "jump": "i",
      "offset": [
        12804,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4895": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4896": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4898": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4899": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4900": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "MUL",
      "path": "18"
    },
    "4901": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4902": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4903": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4904": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "4905": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "4906": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12804,
        12860
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4907": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12785,
        12788
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 50
    },
    "4908": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12785,
        12788
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1334"
    },
    "4911": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12785,
        12788
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4912": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12785,
        12788
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D5B"
    },
    "4915": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "jump": "i",
      "offset": [
        12785,
        12788
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4916": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12785,
        12788
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4917": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12785,
        12788
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4918": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12785,
        12788
      ],
      "op": "POP",
      "path": "18"
    },
    "4919": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12785,
        12788
      ],
      "op": "POP",
      "path": "18"
    },
    "4920": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12749,
        12871
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12FB"
    },
    "4923": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12749,
        12871
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4924": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12749,
        12871
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4925": {
      "op": "POP"
    },
    "4926": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12888,
        12903
      ],
      "op": "SWAP4",
      "path": "18",
      "statement": 51
    },
    "4927": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "offset": [
        12520,
        12910
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4928": {
      "op": "POP"
    },
    "4929": {
      "op": "POP"
    },
    "4930": {
      "op": "POP"
    },
    "4931": {
      "fn": "CardinalNFT.getUserTokenIDs",
      "jump": "o",
      "offset": [
        12520,
        12910
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4932": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4933": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4935": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4936": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4937": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4938": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "4940": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4942": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4943": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4945": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4946": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4947": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4954": {
      "op": "SHL"
    },
    "4955": {
      "op": "SUB"
    },
    "4956": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "4"
    },
    "4957": {
      "branch": 233,
      "fn": "ERC721.ownerOf",
      "offset": [
        2332,
        2351
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 52
    },
    "4958": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x919"
    },
    "4961": {
      "branch": 233,
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4962": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4964": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4965": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4971": {
      "op": "SHL"
    },
    "4972": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4973": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4976": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4978": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4979": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "4"
    },
    "4980": {
      "op": "MSTORE"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4985": {
      "op": "DUP3"
    },
    "4986": {
      "op": "ADD"
    },
    "4987": {
      "op": "MSTORE"
    },
    "4988": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5023": {
      "op": "DUP3"
    },
    "5024": {
      "op": "ADD"
    },
    "5025": {
      "op": "MSTORE"
    },
    "5026": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5038": {
      "op": "SHL"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5041": {
      "op": "DUP3"
    },
    "5042": {
      "op": "ADD"
    },
    "5043": {
      "op": "MSTORE"
    },
    "5044": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5046": {
      "op": "ADD"
    },
    "5047": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "5050": {
      "op": "JUMP"
    },
    "5051": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18545,
        18785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5052": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "5054": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5061": {
      "op": "SHL"
    },
    "5062": {
      "op": "SUB"
    },
    "5063": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5064": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5065": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5066": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E5"
    },
    "5069": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5070": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5072": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5079": {
      "op": "SHL"
    },
    "5080": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5081": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5082": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5084": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5085": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "5088": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5089": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "5092": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5093": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5094": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18647,
        18669
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 53,
      "value": "0x17"
    },
    "5096": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18647,
        18697
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5097": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18647,
        18697
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5098": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18647,
        18697
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5099": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 54,
      "value": "0x40"
    },
    "5101": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5102": {
      "op": "PUSH22",
      "value": "0x1BDC9A59DA5B985B10D85C991A5B985B151E5C195259"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "5127": {
      "op": "SHL"
    },
    "5128": {
      "op": "DUP2"
    },
    "5129": {
      "op": "MSTORE"
    },
    "5130": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18647,
        18697
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5131": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18647,
        18697
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5134": {
      "op": "ADD"
    },
    "5135": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5136": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5138": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5139": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5140": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5141": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5142": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "SUB",
      "path": "18"
    },
    "5143": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5144": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5145": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5146": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xA611BA47A2A0887B794D3E097D5CFB33522F6ED26DF589CCD12C01D5C584800A"
    },
    "5179": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5180": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5182": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5183": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18712,
        18778
      ],
      "op": "LOG3",
      "path": "18"
    },
    "5184": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "offset": [
        18545,
        18785
      ],
      "op": "POP",
      "path": "18"
    },
    "5185": {
      "fn": "CardinalNFT.updateOriginalCardinalTypeId",
      "jump": "o",
      "offset": [
        18545,
        18785
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5186": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5187": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5195": {
      "op": "SHL"
    },
    "5196": {
      "op": "SUB"
    },
    "5197": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 55
    },
    "5198": {
      "branch": 234,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "4"
    },
    "5199": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14AD"
    },
    "5202": {
      "branch": 234,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5203": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5205": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5212": {
      "op": "SHL"
    },
    "5213": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5214": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5217": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5219": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5220": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "4"
    },
    "5221": {
      "op": "MSTORE"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5226": {
      "op": "DUP3"
    },
    "5227": {
      "op": "ADD"
    },
    "5228": {
      "op": "MSTORE"
    },
    "5229": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5264": {
      "op": "DUP3"
    },
    "5265": {
      "op": "ADD"
    },
    "5266": {
      "op": "MSTORE"
    },
    "5267": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5280": {
      "op": "SHL"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5283": {
      "op": "DUP3"
    },
    "5284": {
      "op": "ADD"
    },
    "5285": {
      "op": "MSTORE"
    },
    "5286": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5288": {
      "op": "ADD"
    },
    "5289": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "5292": {
      "op": "JUMP"
    },
    "5293": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5294": {
      "op": "POP"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5301": {
      "op": "SHL"
    },
    "5302": {
      "op": "SUB"
    },
    "5303": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "4",
      "statement": 56
    },
    "5304": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5306": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5307": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5308": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5309": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "5311": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5313": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5314": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5316": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5317": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5318": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5319": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5320": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5321": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5322": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "5324": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5331": {
      "op": "SHL"
    },
    "5332": {
      "op": "SUB"
    },
    "5333": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5334": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5335": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5336": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F3"
    },
    "5339": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5340": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5342": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5343": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5349": {
      "op": "SHL"
    },
    "5350": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5351": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5352": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5354": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5355": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "5358": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5359": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "5362": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5363": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5364": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 57,
      "value": "0x14FD"
    },
    "5367": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5369": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C17"
    },
    "5372": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5373": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5374": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5375": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17539,
        17700
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5376": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "5378": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5385": {
      "op": "SHL"
    },
    "5386": {
      "op": "SUB"
    },
    "5387": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5388": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5389": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5390": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1529"
    },
    "5393": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5394": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5396": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5397": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5403": {
      "op": "SHL"
    },
    "5404": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5405": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5406": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5408": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5409": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "5412": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5413": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "5416": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5418": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17674
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 58,
      "value": "0x0"
    },
    "5420": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17674
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5421": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17674
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5422": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17674
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5423": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17665
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x11"
    },
    "5425": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17674
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5427": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17674
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5428": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17674
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5430": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17674
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5431": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17674
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5432": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5433": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5440": {
      "op": "SHL"
    },
    "5441": {
      "op": "SUB"
    },
    "5442": {
      "op": "NOT"
    },
    "5443": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "AND",
      "path": "18"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5450": {
      "op": "SHL"
    },
    "5451": {
      "op": "SUB"
    },
    "5452": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5453": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5454": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5455": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "AND",
      "path": "18"
    },
    "5456": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5457": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5458": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5459": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "OR",
      "path": "18"
    },
    "5460": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5461": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "offset": [
        17640,
        17693
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5462": {
      "fn": "CardinalNFT.addWhiteListToToken",
      "jump": "o",
      "offset": [
        17539,
        17700
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5463": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5935,
        7269
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5464": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6034,
        6055
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1D"
    },
    "5466": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6034,
        6055
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5467": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6098,
        6108
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5468": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5982,
        5986
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5470": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6070,
        6109
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5471": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6070,
        6109
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5472": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6070,
        6109
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5473": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6070,
        6097
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x16"
    },
    "5475": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6070,
        6109
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5477": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6070,
        6109
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5478": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6070,
        6109
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5480": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6070,
        6109
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5481": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6070,
        6109
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5482": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6070,
        6109
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5483": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5982,
        5986
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5484": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5982,
        5986
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5485": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6034,
        6055
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5486": {
      "branch": 205,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6070,
        6113
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5487": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6237
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x159E"
    },
    "5490": {
      "branch": 205,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6237
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5491": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6209,
        6219
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 59
    },
    "5492": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6181,
        6220
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5494": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6181,
        6220
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5495": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6181,
        6220
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5496": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6181,
        6220
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5497": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6181,
        6208
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x16"
    },
    "5499": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6181,
        6220
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5501": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6181,
        6220
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5502": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6181,
        6220
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5504": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6181,
        6220
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5505": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6181,
        6220
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5506": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6181,
        6220
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5507": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6157,
        6178
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1D"
    },
    "5509": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6157,
        6178
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5510": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6223,
        6226
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "5512": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6223,
        6226
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5513": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6157,
        6220
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1591"
    },
    "5516": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6157,
        6220
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5517": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6157,
        6220
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D8C"
    },
    "5520": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6157,
        6220
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5521": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6157,
        6220
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5522": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6157,
        6226
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x159B"
    },
    "5525": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6157,
        6226
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5526": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6157,
        6226
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5527": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6157,
        6226
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DC1"
    },
    "5530": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6157,
        6226
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5531": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6157,
        6226
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5532": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6129,
        6226
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5533": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6129,
        6226
      ],
      "op": "POP",
      "path": "18"
    },
    "5534": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6066,
        6237
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5535": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6259
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 60,
      "value": "0xE"
    },
    "5537": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6259
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5538": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5540": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5541": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5546": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5548": {
      "op": "SHL"
    },
    "5549": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5550": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5551": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6270,
        6280
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5552": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5554": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5555": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "ADD",
      "path": "18"
    },
    "5556": {
      "op": "MSTORE"
    },
    "5557": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6285,
        6310
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5558": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6285,
        6310
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5565": {
      "op": "SHL"
    },
    "5566": {
      "op": "SUB"
    },
    "5567": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6259
      ],
      "op": "AND",
      "path": "18"
    },
    "5568": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6259
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5569": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6269
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "5574": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6269
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5577": {
      "op": "ADD"
    },
    "5578": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5580": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5582": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5583": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5584": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5585": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "SUB",
      "path": "18"
    },
    "5586": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5587": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5588": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5589": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "5590": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5591": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5592": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5593": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15E1"
    },
    "5596": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5597": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5599": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5600": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5601": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5602": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "POP",
      "path": "18"
    },
    "5603": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "GAS",
      "path": "18"
    },
    "5604": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "5605": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5606": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5607": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5608": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15F5"
    },
    "5611": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5612": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5613": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5615": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5616": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5617": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5618": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5620": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5621": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5622": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "POP",
      "path": "18"
    },
    "5623": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "POP",
      "path": "18"
    },
    "5624": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "POP",
      "path": "18"
    },
    "5625": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "POP",
      "path": "18"
    },
    "5626": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5628": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5629": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5630": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5632": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "NOT",
      "path": "18"
    },
    "5633": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5635": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5636": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "ADD",
      "path": "18"
    },
    "5637": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "AND",
      "path": "18"
    },
    "5638": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5639": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "ADD",
      "path": "18"
    },
    "5640": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5641": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5643": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5644": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "POP",
      "path": "18"
    },
    "5645": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5646": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "ADD",
      "path": "18"
    },
    "5647": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5648": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1619"
    },
    "5651": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5652": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5653": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DD5"
    },
    "5656": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6255,
        6281
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5657": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6281
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5658": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6310
      ],
      "op": "LT",
      "path": "18"
    },
    "5659": {
      "branch": 206,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6255,
        6310
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5660": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6247,
        6372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x168D"
    },
    "5663": {
      "branch": 206,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6247,
        6372
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5664": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6247,
        6372
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5666": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6247,
        6372
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5667": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5673": {
      "op": "SHL"
    },
    "5674": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6247,
        6372
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5675": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6247,
        6372
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5678": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6247,
        6372
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5680": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6247,
        6372
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5681": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6247,
        6372
      ],
      "op": "ADD",
      "path": "18"
    },
    "5682": {
      "op": "MSTORE"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5687": {
      "op": "DUP3"
    },
    "5688": {
      "op": "ADD"
    },
    "5689": {
      "op": "MSTORE"
    },
    "5690": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F756768205553444320746F207061"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5725": {
      "op": "DUP3"
    },
    "5726": {
      "op": "ADD"
    },
    "5727": {
      "op": "MSTORE"
    },
    "5728": {
      "op": "PUSH32",
      "value": "0x7920666F7220746865206D656D62657273686970204E46542E00000000000000"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5763": {
      "op": "DUP3"
    },
    "5764": {
      "op": "ADD"
    },
    "5765": {
      "op": "MSTORE"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5768": {
      "op": "ADD"
    },
    "5769": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6247,
        6372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA19"
    },
    "5772": {
      "op": "JUMP"
    },
    "5773": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6247,
        6372
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5774": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6394
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 61,
      "value": "0xE"
    },
    "5776": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6394
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5777": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5779": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5780": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5787": {
      "op": "SHL"
    },
    "5788": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5789": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5790": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6405,
        6415
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5791": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5793": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5794": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "ADD",
      "path": "18"
    },
    "5795": {
      "op": "MSTORE"
    },
    "5796": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6425,
        6429
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5799": {
      "op": "DUP3"
    },
    "5800": {
      "op": "ADD"
    },
    "5801": {
      "op": "MSTORE"
    },
    "5802": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6435,
        6460
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5803": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6435,
        6460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5810": {
      "op": "SHL"
    },
    "5811": {
      "op": "SUB"
    },
    "5812": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6394
      ],
      "op": "AND",
      "path": "18"
    },
    "5813": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5814": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6404
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDD62ED3E"
    },
    "5819": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6404
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5820": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5822": {
      "op": "ADD"
    },
    "5823": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5825": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5827": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5828": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5829": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5830": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "SUB",
      "path": "18"
    },
    "5831": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5832": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5833": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5834": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "5835": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5836": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5837": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5838": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16D6"
    },
    "5841": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5842": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5844": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5845": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5846": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5847": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "POP",
      "path": "18"
    },
    "5848": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "GAS",
      "path": "18"
    },
    "5849": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "5850": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5851": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5852": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5853": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16EA"
    },
    "5856": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5857": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5858": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5860": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5861": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5862": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5863": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5865": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5866": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5867": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "POP",
      "path": "18"
    },
    "5868": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "POP",
      "path": "18"
    },
    "5869": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "POP",
      "path": "18"
    },
    "5870": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "POP",
      "path": "18"
    },
    "5871": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5873": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5874": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5875": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5877": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "NOT",
      "path": "18"
    },
    "5878": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5880": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5881": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "ADD",
      "path": "18"
    },
    "5882": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "AND",
      "path": "18"
    },
    "5883": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5884": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "ADD",
      "path": "18"
    },
    "5885": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5886": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5888": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5889": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "POP",
      "path": "18"
    },
    "5890": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5891": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "ADD",
      "path": "18"
    },
    "5892": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5893": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x170E"
    },
    "5896": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5897": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5898": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DD5"
    },
    "5901": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6390,
        6431
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5902": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6431
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5903": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6460
      ],
      "op": "LT",
      "path": "18"
    },
    "5904": {
      "branch": 207,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6390,
        6460
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5905": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6382,
        6559
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17A8"
    },
    "5908": {
      "branch": 207,
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6382,
        6559
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5909": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6382,
        6559
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5911": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6382,
        6559
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5912": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5918": {
      "op": "SHL"
    },
    "5919": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6382,
        6559
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5920": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6382,
        6559
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5923": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6382,
        6559
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5925": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6382,
        6559
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5926": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6382,
        6559
      ],
      "op": "ADD",
      "path": "18"
    },
    "5927": {
      "op": "MSTORE"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0x5E"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5932": {
      "op": "DUP3"
    },
    "5933": {
      "op": "ADD"
    },
    "5934": {
      "op": "MSTORE"
    },
    "5935": {
      "op": "PUSH32",
      "value": "0x596F7520686176656E277420617070726F766564207468697320636F6E747261"
    },
    "5968": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5970": {
      "op": "DUP3"
    },
    "5971": {
      "op": "ADD"
    },
    "5972": {
      "op": "MSTORE"
    },
    "5973": {
      "op": "PUSH32",
      "value": "0x637420746F207370656E6420656E6F756768206F6620796F7572205553444320"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6008": {
      "op": "DUP3"
    },
    "6009": {
      "op": "ADD"
    },
    "6010": {
      "op": "MSTORE"
    },
    "6011": {
      "op": "PUSH32",
      "value": "0x746F2070617920666F7220746865206D656D62657273686970204E46542E0000"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6046": {
      "op": "DUP3"
    },
    "6047": {
      "op": "ADD"
    },
    "6048": {
      "op": "MSTORE"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "6051": {
      "op": "ADD"
    },
    "6052": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6382,
        6559
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA19"
    },
    "6055": {
      "op": "JUMP"
    },
    "6056": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6382,
        6559
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6057": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6582
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 62,
      "value": "0xE"
    },
    "6059": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6582
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6060": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6062": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6063": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6070": {
      "op": "SHL"
    },
    "6071": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6072": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6073": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6596,
        6606
      ],
      "op": "CALLER",
      "path": "18"
    },
    "6074": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6076": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6077": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "ADD",
      "path": "18"
    },
    "6078": {
      "op": "MSTORE"
    },
    "6079": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6616,
        6620
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "6080": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6082": {
      "op": "DUP3"
    },
    "6083": {
      "op": "ADD"
    },
    "6084": {
      "op": "MSTORE"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6087": {
      "op": "DUP2"
    },
    "6088": {
      "op": "ADD"
    },
    "6089": {
      "op": "DUP4"
    },
    "6090": {
      "op": "SWAP1"
    },
    "6091": {
      "op": "MSTORE"
    },
    "6092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6098": {
      "op": "SHL"
    },
    "6099": {
      "op": "SUB"
    },
    "6100": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6582
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6101": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6582
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6102": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6582
      ],
      "op": "AND",
      "path": "18"
    },
    "6103": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6582
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6104": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6595
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x23B872DD"
    },
    "6109": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6595
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6110": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6112": {
      "op": "ADD"
    },
    "6113": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6115": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6117": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6118": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6119": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6120": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "SUB",
      "path": "18"
    },
    "6121": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6122": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6124": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6125": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6126": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "6127": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6128": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6129": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6130": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17FA"
    },
    "6133": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6134": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6136": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6137": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "REVERT",
      "path": "18"
    },
    "6138": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6139": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "POP",
      "path": "18"
    },
    "6140": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "GAS",
      "path": "18"
    },
    "6141": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "CALL",
      "path": "18"
    },
    "6142": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6143": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6144": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6145": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x180E"
    },
    "6148": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6149": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6150": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6152": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6153": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "6154": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6155": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6157": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "REVERT",
      "path": "18"
    },
    "6158": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6159": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "POP",
      "path": "18"
    },
    "6160": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "POP",
      "path": "18"
    },
    "6161": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "POP",
      "path": "18"
    },
    "6162": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "POP",
      "path": "18"
    },
    "6163": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6165": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6166": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6167": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6169": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "NOT",
      "path": "18"
    },
    "6170": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6172": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6173": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "ADD",
      "path": "18"
    },
    "6174": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "AND",
      "path": "18"
    },
    "6175": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6176": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "ADD",
      "path": "18"
    },
    "6177": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6178": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6180": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6181": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "POP",
      "path": "18"
    },
    "6182": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6183": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "ADD",
      "path": "18"
    },
    "6184": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6185": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1832"
    },
    "6188": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6189": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6190": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DEE"
    },
    "6193": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6578,
        6649
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6194": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6195": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6578,
        6649
      ],
      "op": "POP",
      "path": "18"
    },
    "6196": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6660,
        6681
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 63,
      "value": "0x1841"
    },
    "6199": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6660,
        6669
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "6201": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6202": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "6203": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6205": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "13"
    },
    "6206": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6207": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6208": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6209": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6660,
        6681
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6210": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6691,
        6708
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6212": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6711,
        6730
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x184C"
    },
    "6215": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6711,
        6720
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "6217": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "6218": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6219": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6220": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6711,
        6730
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6221": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6770,
        6786
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 64,
      "value": "0x18"
    },
    "6223": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6770,
        6786
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6224": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6226": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6227": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6228": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6229": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "6231": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6233": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6234": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6235": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6236": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6238": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6239": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6240": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6767
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6241": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6786
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "6242": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6786
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6243": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6786
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "6244": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6741,
        6786
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6245": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6796,
        6815
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 65,
      "value": "0x10"
    },
    "6247": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6796,
        6826
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6248": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6796,
        6826
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6249": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6796,
        6826
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6250": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6796,
        6826
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6251": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6796,
        6826
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6252": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6796,
        6830
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6253": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6691,
        6730
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6254": {
      "op": "POP"
    },
    "6255": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6840,
        6868
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 66,
      "value": "0x1878"
    },
    "6258": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6846,
        6856
      ],
      "op": "CALLER",
      "path": "18"
    },
    "6259": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6691,
        6730
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6260": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6840,
        6845
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AD0"
    },
    "6263": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6840,
        6868
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6264": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6840,
        6868
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6265": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 67,
      "value": "0x0"
    },
    "6267": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6268": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6269": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6270": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6901
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x14"
    },
    "6272": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6274": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6275": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6276": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6277": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6279": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6280": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6281": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6912
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6282": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6915,
        6930
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "6283": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6930
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6284": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6878,
        6930
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6285": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6968,
        6978
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 68
    },
    "6286": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6940,
        6979
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6287": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6940,
        6979
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6288": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6940,
        6967
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x16"
    },
    "6290": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6940,
        6979
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6291": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6940,
        6979
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6292": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6940,
        6979
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6293": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6940,
        6979
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6294": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6940,
        6979
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6295": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6940,
        6983
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6296": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7017,
        7035
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 69,
      "value": "0x1C"
    },
    "6298": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6299": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6300": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x192D"
    },
    "6303": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6304": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6902,
        6911
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6305": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6902,
        6911
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6306": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18AA"
    },
    "6309": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6310": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C6C"
    },
    "6313": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6314": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6315": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6316": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6318": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "ADD",
      "path": "18"
    },
    "6319": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6321": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6322": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6323": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DIV",
      "path": "18"
    },
    "6324": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "MUL",
      "path": "18"
    },
    "6325": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6327": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "ADD",
      "path": "18"
    },
    "6328": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6330": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6331": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6332": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6333": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "ADD",
      "path": "18"
    },
    "6334": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6336": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6337": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6338": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6339": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6340": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6341": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6342": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6343": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6344": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6346": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "ADD",
      "path": "18"
    },
    "6347": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6348": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6349": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6350": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18D6"
    },
    "6353": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6354": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C6C"
    },
    "6357": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6358": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6359": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6360": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6361": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1923"
    },
    "6364": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6365": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6366": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6368": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "LT",
      "path": "18"
    },
    "6369": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18F8"
    },
    "6372": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6373": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "6376": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6377": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6378": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6379": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DIV",
      "path": "18"
    },
    "6380": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "MUL",
      "path": "18"
    },
    "6381": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6382": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6383": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6384": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6386": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "ADD",
      "path": "18"
    },
    "6387": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6388": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1923"
    },
    "6391": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6392": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6393": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6394": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "ADD",
      "path": "18"
    },
    "6395": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6396": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6397": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6399": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6400": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6402": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6404": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6405": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6406": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6407": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6408": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6409": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6410": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6411": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6412": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "6414": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "ADD",
      "path": "18"
    },
    "6415": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6416": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6418": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "ADD",
      "path": "18"
    },
    "6419": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6420": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6421": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "GT",
      "path": "18"
    },
    "6422": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1906"
    },
    "6425": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6426": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6427": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6428": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SUB",
      "path": "18"
    },
    "6429": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6431": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "AND",
      "path": "18"
    },
    "6432": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6433": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "ADD",
      "path": "18"
    },
    "6434": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6435": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6436": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "POP",
      "path": "18"
    },
    "6437": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "POP",
      "path": "18"
    },
    "6438": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "POP",
      "path": "18"
    },
    "6439": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "POP",
      "path": "18"
    },
    "6440": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "POP",
      "path": "18"
    },
    "6441": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7005
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27B2"
    },
    "6444": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6445": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        6993,
        7036
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6446": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 70,
      "value": "0x1937"
    },
    "6449": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7062,
        7066
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "6450": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7069,
        7078
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6451": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7046,
        7053
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA3E"
    },
    "6454": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        7046,
        7079
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6455": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7046,
        7079
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6456": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 71,
      "value": "0xD"
    },
    "6458": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7107,
        7125
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6459": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7089,
        7132
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x194E"
    },
    "6462": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7089,
        7132
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6469": {
      "op": "SHL"
    },
    "6470": {
      "op": "SUB"
    },
    "6471": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7107,
        7125
      ],
      "op": "AND",
      "path": "18"
    },
    "6472": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "6474": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7089,
        7106
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BD6"
    },
    "6477": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "i",
      "offset": [
        7089,
        7132
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6478": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7089,
        7132
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6479": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7161
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 72,
      "value": "0x1B"
    },
    "6481": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6482": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6483": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "6485": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6486": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "ADD",
      "path": "18"
    },
    "6487": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6488": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6491": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6492": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6493": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6494": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x3AD8AA4F87544323A9D1E5DD902F40C356527A7955687113DB5F9A85AD579DC1"
    },
    "6527": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "ADD",
      "path": "18"
    },
    "6528": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6529": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6530": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7143,
        7177
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6531": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7193,
        7235
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 73,
      "value": "0x40"
    },
    "6533": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7193,
        7235
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6534": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7167,
        7176
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6535": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7167,
        7176
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6536": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7213,
        7223
      ],
      "op": "CALLER",
      "path": "18"
    },
    "6537": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7213,
        7223
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6538": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7193,
        7235
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x7430CEFC529011C1B720A4803C3A12DB2BFDF282E089E2D26FF4929EF11A703C"
    },
    "6571": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7193,
        7235
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6572": {
      "op": "SWAP1"
    },
    "6573": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7193,
        7235
      ],
      "op": "LOG3",
      "path": "18"
    },
    "6574": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        7253,
        7262
      ],
      "op": "SWAP3",
      "path": "18",
      "statement": 74
    },
    "6575": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "offset": [
        5935,
        7269
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6576": {
      "op": "POP"
    },
    "6577": {
      "op": "POP"
    },
    "6578": {
      "fn": "CardinalNFT.mintMembershipNFT",
      "jump": "o",
      "offset": [
        5935,
        7269
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6579": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17897,
        18048
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6580": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "6582": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6589": {
      "op": "SHL"
    },
    "6590": {
      "op": "SUB"
    },
    "6591": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6592": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "6593": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6594": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19DD"
    },
    "6597": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6598": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6600": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6607": {
      "op": "SHL"
    },
    "6608": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6609": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6610": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6612": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6613": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "6616": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6617": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "6620": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6621": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6622": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18025
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 75,
      "value": "0x0"
    },
    "6624": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18025
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6625": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18025
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6626": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18025
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6627": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18016
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "6629": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18025
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6631": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18025
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6632": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18025
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6634": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18025
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6635": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18025
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6636": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18025
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6637": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "offset": [
        17997,
        18041
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6638": {
      "fn": "CardinalNFT.updateTokenListingFee",
      "jump": "o",
      "offset": [
        17897,
        18048
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6639": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19302,
        19488
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6640": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "6642": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6649": {
      "op": "SHL"
    },
    "6650": {
      "op": "SUB"
    },
    "6651": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6652": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "6653": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6654": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A19"
    },
    "6657": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6658": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6660": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6667": {
      "op": "SHL"
    },
    "6668": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6669": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6670": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6672": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6673": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "6676": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6677": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "6680": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6681": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6682": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19386,
        19399
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 76,
      "value": "0x19"
    },
    "6684": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19386,
        19418
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6685": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19386,
        19418
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6686": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19386,
        19418
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6687": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19433,
        19481
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 77,
      "value": "0x40"
    },
    "6689": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19433,
        19481
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6690": {
      "op": "PUSH13",
      "value": "0x1CD95C9D9A58D9551E5C195259"
    },
    "6704": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "6706": {
      "op": "SHL"
    },
    "6707": {
      "op": "DUP2"
    },
    "6708": {
      "op": "MSTORE"
    },
    "6709": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19386,
        19418
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6710": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19386,
        19418
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6711": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "6713": {
      "op": "ADD"
    },
    "6714": {
      "fn": "CardinalNFT.updateServiceTypeId",
      "offset": [
        19433,
        19481
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x140F"
    },
    "6717": {
      "op": "JUMP"
    },
    "6718": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11835,
        12308
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6719": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11905,
        11920
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "6721": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11932,
        11954
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6723": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11957,
        11979
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A4B"
    },
    "6726": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11967,
        11978
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6727": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11957,
        11966
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1442"
    },
    "6730": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        11957,
        11979
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6731": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11957,
        11979
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6732": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11932,
        11979
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6733": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11932,
        11979
      ],
      "op": "POP",
      "path": "18"
    },
    "6734": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11989,
        12008
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6736": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12022,
        12054
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6737": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12070,
        12084
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6738": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6747": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6748": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "GT",
      "path": "18"
    },
    "6749": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6750": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A69"
    },
    "6753": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6754": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A69"
    },
    "6757": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38C5"
    },
    "6760": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12057,
        12085
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6761": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6762": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6764": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6765": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6766": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6767": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6768": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6769": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6770": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6772": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "MUL",
      "path": "18"
    },
    "6773": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6775": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "ADD",
      "path": "18"
    },
    "6776": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6777": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "ADD",
      "path": "18"
    },
    "6778": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6780": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6781": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6782": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6783": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A9C"
    },
    "6786": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6787": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6788": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6790": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "ADD",
      "path": "18"
    },
    "6791": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6792": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "6794": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6795": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6796": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6798": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "ADD",
      "path": "18"
    },
    "6799": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6800": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "6802": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6803": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "SUB",
      "path": "18"
    },
    "6804": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6805": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6806": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A87"
    },
    "6809": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6810": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6811": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "POP",
      "path": "18"
    },
    "6812": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6813": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12057,
        12085
      ],
      "op": "POP",
      "path": "18"
    },
    "6814": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12022,
        12085
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6815": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12022,
        12085
      ],
      "op": "POP",
      "path": "18"
    },
    "6816": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12101,
        12110
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6818": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12096,
        12268
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6819": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12116,
        12130
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6820": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12112,
        12113
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6821": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12112,
        12130
      ],
      "op": "LT",
      "path": "18"
    },
    "6822": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12096,
        12268
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6823": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12096,
        12268
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AEF"
    },
    "6826": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12096,
        12268
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6827": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12165,
        12200
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 78,
      "value": "0x1AB4"
    },
    "6830": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12185,
        12196
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6831": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12198,
        12199
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6832": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12165,
        12184
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCC3"
    },
    "6835": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12165,
        12200
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6836": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12165,
        12200
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6837": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12151,
        12200
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6838": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12151,
        12200
      ],
      "op": "POP",
      "path": "18"
    },
    "6839": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12236,
        12257
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 79,
      "value": "0x1ABF"
    },
    "6842": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12245,
        12256
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6843": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12236,
        12244
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x237D"
    },
    "6846": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12236,
        12257
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6847": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12236,
        12257
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6848": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12230
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6849": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12231,
        12232
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6850": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6851": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6852": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6853": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "LT",
      "path": "18"
    },
    "6854": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AD1"
    },
    "6857": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6858": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AD1"
    },
    "6861": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D76"
    },
    "6864": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12214,
        12233
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6865": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6866": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6868": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "MUL",
      "path": "18"
    },
    "6869": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6871": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "ADD",
      "path": "18"
    },
    "6872": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12233
      ],
      "op": "ADD",
      "path": "18"
    },
    "6873": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12257
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6874": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12257
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6875": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12257
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6876": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12214,
        12257
      ],
      "op": "POP",
      "path": "18"
    },
    "6877": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12132,
        12135
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 80
    },
    "6878": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12132,
        12135
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6879": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12132,
        12135
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AE7"
    },
    "6882": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12132,
        12135
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6883": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12132,
        12135
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D5B"
    },
    "6886": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        12132,
        12135
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6887": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12132,
        12135
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6888": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12132,
        12135
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6889": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12132,
        12135
      ],
      "op": "POP",
      "path": "18"
    },
    "6890": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12132,
        12135
      ],
      "op": "POP",
      "path": "18"
    },
    "6891": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12096,
        12268
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AA2"
    },
    "6894": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12096,
        12268
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6895": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12096,
        12268
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6896": {
      "op": "POP"
    },
    "6897": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        12285,
        12301
      ],
      "op": "SWAP5",
      "path": "18",
      "statement": 81
    },
    "6898": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        11835,
        12308
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "6899": {
      "op": "POP"
    },
    "6900": {
      "op": "POP"
    },
    "6901": {
      "op": "POP"
    },
    "6902": {
      "op": "POP"
    },
    "6903": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "o",
      "offset": [
        11835,
        12308
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6904": {
      "offset": [
        2759,
        2791
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6905": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1C"
    },
    "6907": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6908": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6909": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B05"
    },
    "6912": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6913": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C6C"
    },
    "6916": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6917": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6918": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6919": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6921": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "ADD",
      "path": "18"
    },
    "6922": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6924": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6925": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6926": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DIV",
      "path": "18"
    },
    "6927": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "MUL",
      "path": "18"
    },
    "6928": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6930": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "ADD",
      "path": "18"
    },
    "6931": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6933": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6934": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6935": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6936": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "ADD",
      "path": "18"
    },
    "6937": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6939": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6940": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6941": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6942": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6943": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6944": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6945": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6946": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6947": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6949": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "ADD",
      "path": "18"
    },
    "6950": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6951": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6952": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6953": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B31"
    },
    "6956": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6957": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C6C"
    },
    "6960": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "i",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6961": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6962": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6963": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6964": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B7E"
    },
    "6967": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6968": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6969": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6971": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "LT",
      "path": "18"
    },
    "6972": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B53"
    },
    "6975": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6976": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "6979": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6980": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6981": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6982": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DIV",
      "path": "18"
    },
    "6983": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "MUL",
      "path": "18"
    },
    "6984": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6985": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6986": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6987": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6989": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "ADD",
      "path": "18"
    },
    "6990": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6991": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B7E"
    },
    "6994": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6995": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6996": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6997": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "ADD",
      "path": "18"
    },
    "6998": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6999": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7000": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7002": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7003": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7005": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7007": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "7008": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7009": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7010": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7011": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7012": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7013": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7014": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7015": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "7017": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "ADD",
      "path": "18"
    },
    "7018": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7019": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7021": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "ADD",
      "path": "18"
    },
    "7022": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7023": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7024": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "GT",
      "path": "18"
    },
    "7025": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B61"
    },
    "7028": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7029": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7030": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7031": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SUB",
      "path": "18"
    },
    "7032": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7034": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "AND",
      "path": "18"
    },
    "7035": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7036": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "ADD",
      "path": "18"
    },
    "7037": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7038": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7039": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "POP",
      "path": "18"
    },
    "7040": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "POP",
      "path": "18"
    },
    "7041": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "POP",
      "path": "18"
    },
    "7042": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "POP",
      "path": "18"
    },
    "7043": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "POP",
      "path": "18"
    },
    "7044": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "offset": [
        2759,
        2791
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7045": {
      "fn": "CardinalNFT.getUserTokenURIs",
      "jump": "o",
      "offset": [
        2759,
        2791
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7046": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7047": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "7049": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 82,
      "value": "0x1"
    },
    "7051": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7052": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7053": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x92E"
    },
    "7056": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7057": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C6C"
    },
    "7060": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7061": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19629,
        19778
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7062": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "7064": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7071": {
      "op": "SHL"
    },
    "7072": {
      "op": "SUB"
    },
    "7073": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7074": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "7075": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7076": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BBF"
    },
    "7079": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7080": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7082": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7089": {
      "op": "SHL"
    },
    "7090": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7091": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7092": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7094": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7095": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "7098": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7099": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "7102": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7103": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7104": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19771
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 83
    },
    "7105": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19771
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7106": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19771
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BD2"
    },
    "7109": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19771
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7110": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19747
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1C"
    },
    "7112": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19747
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7113": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19771
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7115": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19771
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7116": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19771
      ],
      "op": "ADD",
      "path": "18"
    },
    "7117": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19771
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7118": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19771
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3714"
    },
    "7121": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "jump": "i",
      "offset": [
        19729,
        19771
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7122": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19771
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7123": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19729,
        19771
      ],
      "op": "POP",
      "path": "18"
    },
    "7124": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "offset": [
        19629,
        19778
      ],
      "op": "POP",
      "path": "18"
    },
    "7125": {
      "fn": "CardinalNFT.updateMembershipTokenURI",
      "jump": "o",
      "offset": [
        19629,
        19778
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7126": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7127": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4429
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 84,
      "value": "0x1BD2"
    },
    "7130": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "7131": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4410,
        4418
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7132": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4420,
        4428
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7133": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4395
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C69"
    },
    "7136": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4429
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7137": {
      "offset": [
        2672,
        2707
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7138": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1B"
    },
    "7140": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7141": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7142": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7143": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7144": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "LT",
      "path": "18"
    },
    "7145": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BF1"
    },
    "7148": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7149": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7151": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7152": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7153": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7154": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7156": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7157": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7158": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7159": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7161": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7162": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7163": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "7164": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "ADD",
      "path": "18"
    },
    "7165": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7166": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        2672,
        2707
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7167": {
      "op": "POP"
    },
    "7168": {
      "offset": [
        2672,
        2707
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7169": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        2672,
        2707
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7170": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20586,
        20718
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7171": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "7173": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7180": {
      "op": "SHL"
    },
    "7181": {
      "op": "SUB"
    },
    "7182": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7183": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "7184": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7185": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C2C"
    },
    "7188": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7189": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7191": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7198": {
      "op": "SHL"
    },
    "7199": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7200": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7201": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7203": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7204": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "7207": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7208": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "7211": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7212": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7219": {
      "op": "SHL"
    },
    "7220": {
      "op": "SUB"
    },
    "7221": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "SWAP2",
      "path": "18",
      "statement": 85
    },
    "7222": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7223": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7224": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "AND",
      "path": "18"
    },
    "7225": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7227": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7228": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7229": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7230": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20687
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x15"
    },
    "7232": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7234": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7235": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7237": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7238": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20701
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "7239": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7240": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7241": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7243": {
      "op": "NOT"
    },
    "7244": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "AND",
      "path": "18"
    },
    "7245": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7246": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7247": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7248": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7249": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7250": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7251": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "OR",
      "path": "18"
    },
    "7252": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7253": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        20673,
        20711
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "7254": {
      "fn": "CardinalNFT.setAdminUser",
      "jump": "o",
      "offset": [
        20586,
        20718
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7255": {
      "offset": [
        2582,
        2623
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7256": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1A"
    },
    "7258": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7259": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7260": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7261": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7262": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "LT",
      "path": "18"
    },
    "7263": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BF1"
    },
    "7266": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7267": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7269": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7270": {
      "fn": "CardinalNFT.setAdminUser",
      "offset": [
        2582,
        2623
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 86,
      "value": "0x1C71"
    },
    "7275": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "7276": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5576
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5554
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x283D"
    },
    "7280": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7281": {
      "branch": 235,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C8D"
    },
    "7285": {
      "branch": 235,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7286": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7288": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7289": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7295": {
      "op": "SHL"
    },
    "7296": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7297": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7298": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7300": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "ADD",
      "path": "4"
    },
    "7301": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "7304": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7305": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3CDC"
    },
    "7308": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7309": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7310": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 87,
      "value": "0x1C99"
    },
    "7313": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5655,
        5659
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7314": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5661,
        5663
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7315": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7316": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5674,
        5679
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7317": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5654
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D38"
    },
    "7320": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7321": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7322": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "4"
    },
    "7323": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "4"
    },
    "7324": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "4"
    },
    "7325": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "4"
    },
    "7326": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7327": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7328": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "7330": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7331": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8342,
        8346
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7333": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8342,
        8346
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7340": {
      "op": "SHL"
    },
    "7341": {
      "op": "SUB"
    },
    "7342": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7343": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "7344": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7345": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CCC"
    },
    "7348": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7349": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7351": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7358": {
      "op": "SHL"
    },
    "7359": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7360": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7361": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7363": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7364": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "7367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7368": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "7371": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7372": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7373": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8386,
        8392
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 88
    },
    "7374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7380": {
      "op": "SHL"
    },
    "7381": {
      "op": "SUB"
    },
    "7382": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8366,
        8392
      ],
      "op": "AND",
      "path": "18"
    },
    "7383": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8366,
        8382
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CDF"
    },
    "7386": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8374,
        8381
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7387": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8366,
        8373
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1344"
    },
    "7390": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8366,
        8382
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7391": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8366,
        8382
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7398": {
      "op": "SHL"
    },
    "7399": {
      "op": "SUB"
    },
    "7400": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8366,
        8392
      ],
      "op": "AND",
      "path": "18"
    },
    "7401": {
      "branch": 208,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8366,
        8392
      ],
      "op": "EQ",
      "path": "18"
    },
    "7402": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8358,
        8440
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D49"
    },
    "7405": {
      "branch": 208,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8358,
        8440
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7406": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8358,
        8440
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7408": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8358,
        8440
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7409": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7415": {
      "op": "SHL"
    },
    "7416": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8358,
        8440
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7417": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8358,
        8440
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7420": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8358,
        8440
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7422": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8358,
        8440
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7423": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8358,
        8440
      ],
      "op": "ADD",
      "path": "18"
    },
    "7424": {
      "op": "MSTORE"
    },
    "7425": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7429": {
      "op": "DUP3"
    },
    "7430": {
      "op": "ADD"
    },
    "7431": {
      "op": "MSTORE"
    },
    "7432": {
      "op": "PUSH32",
      "value": "0x54686973206164647265737320646F65736E2774206F776E20746865204E4654"
    },
    "7465": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7467": {
      "op": "DUP3"
    },
    "7468": {
      "op": "ADD"
    },
    "7469": {
      "op": "MSTORE"
    },
    "7470": {
      "op": "PUSH11",
      "value": "0x1039B832B1B4B334B2B217"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "7484": {
      "op": "SHL"
    },
    "7485": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7487": {
      "op": "DUP3"
    },
    "7488": {
      "op": "ADD"
    },
    "7489": {
      "op": "MSTORE"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7492": {
      "op": "ADD"
    },
    "7493": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8358,
        8440
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA19"
    },
    "7496": {
      "op": "JUMP"
    },
    "7497": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8358,
        8440
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7498": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "7500": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7507": {
      "op": "SHL"
    },
    "7508": {
      "op": "SUB"
    },
    "7509": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7510": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8458,
        8474
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 89,
      "value": "0x1D5E"
    },
    "7513": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8466,
        8473
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7514": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8458,
        8465
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1344"
    },
    "7517": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8458,
        8474
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7518": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8458,
        8474
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7525": {
      "op": "SHL"
    },
    "7526": {
      "op": "SUB"
    },
    "7527": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8458,
        8485
      ],
      "op": "AND",
      "path": "18"
    },
    "7528": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8458,
        8485
      ],
      "op": "EQ",
      "path": "18"
    },
    "7529": {
      "branch": 209,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8458,
        8485
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7530": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8458,
        8527
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7531": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8458,
        8527
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7532": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8458,
        8527
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D91"
    },
    "7535": {
      "branch": 209,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8458,
        8527
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7536": {
      "op": "POP"
    },
    "7537": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8509,
        8527
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xD"
    },
    "7539": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8509,
        8527
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7546": {
      "op": "SHL"
    },
    "7547": {
      "op": "SUB"
    },
    "7548": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8509,
        8527
      ],
      "op": "AND",
      "path": "18"
    },
    "7549": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8489,
        8505
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D85"
    },
    "7552": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8497,
        8504
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7553": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8489,
        8496
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1344"
    },
    "7556": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8489,
        8505
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7557": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8489,
        8505
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7564": {
      "op": "SHL"
    },
    "7565": {
      "op": "SUB"
    },
    "7566": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8489,
        8527
      ],
      "op": "AND",
      "path": "18"
    },
    "7567": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8489,
        8527
      ],
      "op": "EQ",
      "path": "18"
    },
    "7568": {
      "branch": 210,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8489,
        8527
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7569": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8458,
        8527
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7570": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8450,
        8589
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E03"
    },
    "7573": {
      "branch": 210,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8450,
        8589
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7574": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8450,
        8589
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7576": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8450,
        8589
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7577": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7583": {
      "op": "SHL"
    },
    "7584": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8450,
        8589
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7585": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8450,
        8589
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7588": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8450,
        8589
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7590": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8450,
        8589
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7591": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8450,
        8589
      ],
      "op": "ADD",
      "path": "18"
    },
    "7592": {
      "op": "MSTORE"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7597": {
      "op": "DUP3"
    },
    "7598": {
      "op": "ADD"
    },
    "7599": {
      "op": "MSTORE"
    },
    "7600": {
      "op": "PUSH32",
      "value": "0x43616E27742063686172676520746865206F776E6572206F72206D61726B6574"
    },
    "7633": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7635": {
      "op": "DUP3"
    },
    "7636": {
      "op": "ADD"
    },
    "7637": {
      "op": "MSTORE"
    },
    "7638": {
      "op": "PUSH32",
      "value": "0x706C61636520666F7220746865206D656D626572736869702E00000000000000"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7673": {
      "op": "DUP3"
    },
    "7674": {
      "op": "ADD"
    },
    "7675": {
      "op": "MSTORE"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7678": {
      "op": "ADD"
    },
    "7679": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8450,
        8589
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA19"
    },
    "7682": {
      "op": "JUMP"
    },
    "7683": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8450,
        8589
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7684": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8636,
        8657
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1D"
    },
    "7686": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8636,
        8657
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7693": {
      "op": "SHL"
    },
    "7694": {
      "op": "SUB"
    },
    "7695": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8707
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7696": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8707
      ],
      "op": "AND",
      "path": "18"
    },
    "7697": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8600,
        8633
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7699": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8707
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7700": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8707
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7701": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8707
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7702": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8699
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x16"
    },
    "7704": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8707
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7706": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8707
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7707": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8707
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7709": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8707
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7710": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8707
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "7711": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8707
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7712": {
      "branch": 211,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8672,
        8711
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7713": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8668,
        8831
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E59"
    },
    "7716": {
      "branch": 211,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8668,
        8831
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7723": {
      "op": "SHL"
    },
    "7724": {
      "op": "SUB"
    },
    "7725": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "DUP6",
      "path": "18",
      "statement": 90
    },
    "7726": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "AND",
      "path": "18"
    },
    "7727": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7729": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7730": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7731": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7732": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8806
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x16"
    },
    "7734": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7736": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7737": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7739": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7740": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "7741": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8779,
        8814
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7742": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8755,
        8776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1D"
    },
    "7744": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8755,
        8776
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7745": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8817,
        8820
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "7747": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8817,
        8820
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7748": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8755,
        8814
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E4C"
    },
    "7751": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8755,
        8814
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7752": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8755,
        8814
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D8C"
    },
    "7755": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8755,
        8814
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7756": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8755,
        8814
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7757": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8755,
        8820
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E56"
    },
    "7760": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8755,
        8820
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7761": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8755,
        8820
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7762": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8755,
        8820
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DC1"
    },
    "7765": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8755,
        8820
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7766": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8755,
        8820
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7767": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8727,
        8820
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7768": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8727,
        8820
      ],
      "op": "POP",
      "path": "18"
    },
    "7769": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8668,
        8831
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7770": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8849
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "7772": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8849
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7773": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7775": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7776": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7781": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7783": {
      "op": "SHL"
    },
    "7784": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7785": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7792": {
      "op": "SHL"
    },
    "7793": {
      "op": "SUB"
    },
    "7794": {
      "op": "DUP8"
    },
    "7795": {
      "op": "DUP2"
    },
    "7796": {
      "op": "AND"
    },
    "7797": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7799": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7800": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "ADD",
      "path": "18"
    },
    "7801": {
      "op": "MSTORE"
    },
    "7802": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8870,
        8895
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7803": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8870,
        8895
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7804": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8849
      ],
      "op": "AND",
      "path": "18"
    },
    "7805": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8849
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7806": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8859
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "7811": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8859
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7812": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7814": {
      "op": "ADD"
    },
    "7815": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7817": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7819": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7820": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7821": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7822": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "SUB",
      "path": "18"
    },
    "7823": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7824": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7825": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7826": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "7827": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7828": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7829": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7830": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E9E"
    },
    "7833": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7834": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7836": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7837": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7838": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7839": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "POP",
      "path": "18"
    },
    "7840": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "GAS",
      "path": "18"
    },
    "7841": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "7842": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7843": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7844": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7845": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EB2"
    },
    "7848": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7849": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7850": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7852": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7853": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "7854": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7855": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7857": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7858": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7859": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "POP",
      "path": "18"
    },
    "7860": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "POP",
      "path": "18"
    },
    "7861": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "POP",
      "path": "18"
    },
    "7862": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "POP",
      "path": "18"
    },
    "7863": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7865": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7866": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7867": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7869": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "NOT",
      "path": "18"
    },
    "7870": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7872": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7873": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "ADD",
      "path": "18"
    },
    "7874": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "AND",
      "path": "18"
    },
    "7875": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7876": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "ADD",
      "path": "18"
    },
    "7877": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7878": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7880": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7881": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "POP",
      "path": "18"
    },
    "7882": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7883": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "ADD",
      "path": "18"
    },
    "7884": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7885": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ED6"
    },
    "7888": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7889": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7890": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DD5"
    },
    "7893": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8845,
        8867
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7894": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8867
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7895": {
      "branch": 212,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8895
      ],
      "op": "LT",
      "path": "18"
    },
    "7896": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8964
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7897": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8964
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F62"
    },
    "7900": {
      "branch": 212,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8964
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7901": {
      "op": "POP"
    },
    "7902": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8903
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "7904": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8903
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7905": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7907": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7908": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "7913": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7915": {
      "op": "SHL"
    },
    "7916": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7917": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7924": {
      "op": "SHL"
    },
    "7925": {
      "op": "SUB"
    },
    "7926": {
      "op": "DUP8"
    },
    "7927": {
      "op": "DUP2"
    },
    "7928": {
      "op": "AND"
    },
    "7929": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7931": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7932": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "ADD",
      "path": "18"
    },
    "7933": {
      "op": "MSTORE"
    },
    "7934": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8930,
        8934
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7937": {
      "op": "DUP4"
    },
    "7938": {
      "op": "ADD"
    },
    "7939": {
      "op": "MSTORE"
    },
    "7940": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8939,
        8964
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7941": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8939,
        8964
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7942": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8903
      ],
      "op": "AND",
      "path": "18"
    },
    "7943": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8903
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7944": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8913
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDD62ED3E"
    },
    "7949": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8913
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7952": {
      "op": "ADD"
    },
    "7953": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7955": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7957": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7958": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7959": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7960": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "SUB",
      "path": "18"
    },
    "7961": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7962": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7963": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7964": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "7965": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7966": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7967": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7968": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F28"
    },
    "7971": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7972": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7974": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7975": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7976": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7977": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "POP",
      "path": "18"
    },
    "7978": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "GAS",
      "path": "18"
    },
    "7979": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "7980": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7981": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7982": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7983": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F3C"
    },
    "7986": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7987": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7988": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7990": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7991": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "7992": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7993": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7995": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7996": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7997": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "POP",
      "path": "18"
    },
    "7998": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "POP",
      "path": "18"
    },
    "7999": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "POP",
      "path": "18"
    },
    "8000": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "POP",
      "path": "18"
    },
    "8001": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8003": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8004": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8005": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8007": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "NOT",
      "path": "18"
    },
    "8008": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8010": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8011": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "ADD",
      "path": "18"
    },
    "8012": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "AND",
      "path": "18"
    },
    "8013": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8014": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "ADD",
      "path": "18"
    },
    "8015": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8016": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8018": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8019": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "POP",
      "path": "18"
    },
    "8020": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8021": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "ADD",
      "path": "18"
    },
    "8022": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8023": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F60"
    },
    "8026": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8027": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8028": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DD5"
    },
    "8031": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8899,
        8936
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8032": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8936
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8033": {
      "branch": 213,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8899,
        8964
      ],
      "op": "LT",
      "path": "18"
    },
    "8034": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8845,
        8964
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8035": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8841,
        9039
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8036": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8841,
        9039
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F7A"
    },
    "8039": {
      "branch": 213,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8841,
        9039
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8040": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 91,
      "value": "0x1F70"
    },
    "8043": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8998,
        9005
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8044": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        8997
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D6B"
    },
    "8047": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        8980,
        9006
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8048": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8980,
        9006
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8049": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9027,
        9028
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 92,
      "value": "0x1"
    },
    "8051": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9020,
        9028
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8052": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9020,
        9028
      ],
      "op": "POP",
      "path": "18"
    },
    "8053": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9020,
        9028
      ],
      "op": "POP",
      "path": "18"
    },
    "8054": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9020,
        9028
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2093"
    },
    "8057": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9020,
        9028
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8058": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8841,
        9039
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8059": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9053
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 93,
      "value": "0xE"
    },
    "8061": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9053
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8062": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8064": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8065": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8072": {
      "op": "SHL"
    },
    "8073": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8074": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8081": {
      "op": "SHL"
    },
    "8082": {
      "op": "SUB"
    },
    "8083": {
      "op": "DUP8"
    },
    "8084": {
      "op": "DUP2"
    },
    "8085": {
      "op": "AND"
    },
    "8086": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8088": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8089": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "ADD",
      "path": "18"
    },
    "8090": {
      "op": "MSTORE"
    },
    "8091": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9083,
        9087
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8094": {
      "op": "DUP4"
    },
    "8095": {
      "op": "ADD"
    },
    "8096": {
      "op": "MSTORE"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8099": {
      "op": "DUP3"
    },
    "8100": {
      "op": "ADD"
    },
    "8101": {
      "op": "DUP5"
    },
    "8102": {
      "op": "SWAP1"
    },
    "8103": {
      "op": "MSTORE"
    },
    "8104": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9053
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8105": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9053
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8106": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9053
      ],
      "op": "AND",
      "path": "18"
    },
    "8107": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9053
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8108": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9066
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x23B872DD"
    },
    "8113": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9066
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8114": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8116": {
      "op": "ADD"
    },
    "8117": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8119": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8121": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8122": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8123": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8124": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "SUB",
      "path": "18"
    },
    "8125": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8126": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8128": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP8",
      "path": "18"
    },
    "8129": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8130": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "8131": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8132": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8133": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8134": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FCE"
    },
    "8137": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8138": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8140": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8141": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8142": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8143": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "POP",
      "path": "18"
    },
    "8144": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "GAS",
      "path": "18"
    },
    "8145": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "CALL",
      "path": "18"
    },
    "8146": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8147": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8148": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8149": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FE2"
    },
    "8152": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8153": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8154": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8156": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8157": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "8158": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8159": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8161": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8162": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8163": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "POP",
      "path": "18"
    },
    "8164": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "POP",
      "path": "18"
    },
    "8165": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "POP",
      "path": "18"
    },
    "8166": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "POP",
      "path": "18"
    },
    "8167": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8169": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8170": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8171": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8173": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "NOT",
      "path": "18"
    },
    "8174": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8176": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8177": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "ADD",
      "path": "18"
    },
    "8178": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "AND",
      "path": "18"
    },
    "8179": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8180": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "ADD",
      "path": "18"
    },
    "8181": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8182": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8184": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8185": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "POP",
      "path": "18"
    },
    "8186": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8187": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "ADD",
      "path": "18"
    },
    "8188": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8189": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2006"
    },
    "8192": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8193": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8194": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DEE"
    },
    "8197": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "i",
      "offset": [
        9049,
        9116
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8198": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9049,
        9116
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8199": {
      "op": "POP"
    },
    "8200": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9131,
        9148
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8201": {
      "branch": 214,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9131,
        9148
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8202": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9127,
        9312
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2023"
    },
    "8205": {
      "branch": 214,
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9127,
        9312
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8206": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 94,
      "value": "0x0"
    },
    "8208": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9196
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8209": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9196
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8210": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9196
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8211": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9187
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x14"
    },
    "8213": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8215": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9196
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8216": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8218": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8219": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9196
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8220": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9212
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8221": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9212
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8222": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9164,
        9212
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8223": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9127,
        9312
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2035"
    },
    "8226": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9127,
        9312
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8227": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9127,
        9312
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8228": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9283
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 95,
      "value": "0x0"
    },
    "8230": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9283
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8231": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8232": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8233": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x14"
    },
    "8235": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8237": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8238": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8240": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8241": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9283
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8242": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9286,
        9301
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "8243": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9301
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8244": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9251,
        9301
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8245": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9127,
        9312
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8252": {
      "op": "SHL"
    },
    "8253": {
      "op": "SUB"
    },
    "8254": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "DUP6",
      "path": "18",
      "statement": 96
    },
    "8255": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "AND",
      "path": "18"
    },
    "8256": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9360,
        9361
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8258": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8259": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8260": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8261": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9349
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x16"
    },
    "8263": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8265": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8266": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8267": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8268": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8270": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8271": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8272": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8273": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9361
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8274": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9361
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8275": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9361
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8276": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9361
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8277": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9377,
        9462
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 97
    },
    "8278": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9377,
        9462
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8279": {
      "op": "DUP5"
    },
    "8280": {
      "op": "DUP2"
    },
    "8281": {
      "op": "MSTORE"
    },
    "8282": {
      "op": "SWAP1"
    },
    "8283": {
      "op": "DUP2"
    },
    "8284": {
      "op": "ADD"
    },
    "8285": {
      "op": "DUP7"
    },
    "8286": {
      "op": "SWAP1"
    },
    "8287": {
      "op": "MSTORE"
    },
    "8288": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9412,
        9419
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8289": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9412,
        9419
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8290": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9322,
        9357
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8291": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9377,
        9462
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x9170D37D9D267E1D271F28F3F225AC7E95B00677566675BA1D251944EB3C5924"
    },
    "8324": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9377,
        9462
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8325": {
      "op": "ADD"
    },
    "8326": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9377,
        9462
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8328": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9377,
        9462
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8329": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9377,
        9462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8330": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9377,
        9462
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8331": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9377,
        9462
      ],
      "op": "SUB",
      "path": "18"
    },
    "8332": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9377,
        9462
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8333": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9377,
        9462
      ],
      "op": "LOG3",
      "path": "18"
    },
    "8334": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9480,
        9481
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 98,
      "value": "0x0"
    },
    "8336": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9473,
        9481
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8337": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9473,
        9481
      ],
      "op": "POP",
      "path": "18"
    },
    "8338": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        9473,
        9481
      ],
      "op": "POP",
      "path": "18"
    },
    "8339": {
      "offset": [
        1318,
        1319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8340": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8341": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8342": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "POP",
      "path": "18"
    },
    "8343": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "POP",
      "path": "18"
    },
    "8344": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "offset": [
        8223,
        9488
      ],
      "op": "POP",
      "path": "18"
    },
    "8345": {
      "fn": "CardinalNFT.chargeMemberForMembership",
      "jump": "o",
      "offset": [
        8223,
        9488
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8346": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9618,
        9745
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8347": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "8349": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8356": {
      "op": "SHL"
    },
    "8357": {
      "op": "SUB"
    },
    "8358": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8359": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "8360": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8361": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C4"
    },
    "8364": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8374": {
      "op": "SHL"
    },
    "8375": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8379": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8380": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "8383": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8384": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "8387": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8388": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8389": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9689
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 99,
      "value": "0xE"
    },
    "8391": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9689
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8398": {
      "op": "SHL"
    },
    "8399": {
      "op": "SUB"
    },
    "8400": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9689
      ],
      "op": "AND",
      "path": "18"
    },
    "8401": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9698
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA9059CBB"
    },
    "8406": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9699,
        9706
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20E7"
    },
    "8409": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "8411": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8418": {
      "op": "SHL"
    },
    "8419": {
      "op": "SUB"
    },
    "8420": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8421": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8422": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8423": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9699,
        9706
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8424": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9712
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "8426": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9712
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8427": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8429": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8430": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8435": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8437": {
      "op": "SHL"
    },
    "8438": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8439": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8440": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9731,
        9735
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "8441": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8443": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8444": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "ADD",
      "path": "18"
    },
    "8445": {
      "op": "MSTORE"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8452": {
      "op": "SHL"
    },
    "8453": {
      "op": "SUB"
    },
    "8454": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9712
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8455": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9712
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8456": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9712
      ],
      "op": "AND",
      "path": "18"
    },
    "8457": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9712
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8458": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9722
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "8463": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9722
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8466": {
      "op": "ADD"
    },
    "8467": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8469": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8471": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8472": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8473": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8474": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "SUB",
      "path": "18"
    },
    "8475": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8476": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8477": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8478": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "8479": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8480": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8481": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8482": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x212A"
    },
    "8485": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8486": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8488": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8489": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8490": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8491": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "POP",
      "path": "18"
    },
    "8492": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "GAS",
      "path": "18"
    },
    "8493": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "8494": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8495": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8496": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8497": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x213E"
    },
    "8500": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8501": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8502": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8504": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8505": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "8506": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8507": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8509": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8510": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8511": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "POP",
      "path": "18"
    },
    "8512": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "POP",
      "path": "18"
    },
    "8513": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "POP",
      "path": "18"
    },
    "8514": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "POP",
      "path": "18"
    },
    "8515": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8517": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8518": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8519": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8521": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "NOT",
      "path": "18"
    },
    "8522": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8524": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8525": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "ADD",
      "path": "18"
    },
    "8526": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "AND",
      "path": "18"
    },
    "8527": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8528": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "ADD",
      "path": "18"
    },
    "8529": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8530": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8532": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8533": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "POP",
      "path": "18"
    },
    "8534": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8535": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "ADD",
      "path": "18"
    },
    "8536": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8537": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2162"
    },
    "8540": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8541": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8542": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DD5"
    },
    "8545": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "i",
      "offset": [
        9708,
        9737
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8546": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9708,
        9737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8547": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8549": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8556": {
      "op": "SHL"
    },
    "8557": {
      "op": "SUB"
    },
    "8558": {
      "op": "NOT"
    },
    "8559": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "8561": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8562": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8563": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "SHL",
      "path": "18"
    },
    "8564": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "AND",
      "path": "18"
    },
    "8565": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8566": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8573": {
      "op": "SHL"
    },
    "8574": {
      "op": "SUB"
    },
    "8575": {
      "op": "SWAP1"
    },
    "8576": {
      "op": "SWAP3"
    },
    "8577": {
      "op": "AND"
    },
    "8578": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8580": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8581": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "ADD",
      "path": "18"
    },
    "8582": {
      "op": "MSTORE"
    },
    "8583": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8585": {
      "op": "DUP3"
    },
    "8586": {
      "op": "ADD"
    },
    "8587": {
      "op": "MSTORE"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8590": {
      "op": "ADD"
    },
    "8591": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8593": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8595": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8596": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8597": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8598": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "SUB",
      "path": "18"
    },
    "8599": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8600": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8602": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP8",
      "path": "18"
    },
    "8603": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8604": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "8605": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8606": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8607": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8608": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21A8"
    },
    "8611": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8612": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8614": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8615": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8616": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8617": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "POP",
      "path": "18"
    },
    "8618": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "GAS",
      "path": "18"
    },
    "8619": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "CALL",
      "path": "18"
    },
    "8620": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8621": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8622": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8623": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21BC"
    },
    "8626": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8627": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8628": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8630": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8631": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "8632": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8633": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8635": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8636": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8637": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "POP",
      "path": "18"
    },
    "8638": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "POP",
      "path": "18"
    },
    "8639": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "POP",
      "path": "18"
    },
    "8640": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "POP",
      "path": "18"
    },
    "8641": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8643": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8644": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8645": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8647": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "NOT",
      "path": "18"
    },
    "8648": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8650": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8651": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "ADD",
      "path": "18"
    },
    "8652": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "AND",
      "path": "18"
    },
    "8653": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8654": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "ADD",
      "path": "18"
    },
    "8655": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8656": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8658": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8659": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "POP",
      "path": "18"
    },
    "8660": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8661": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "ADD",
      "path": "18"
    },
    "8662": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8663": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21E0"
    },
    "8666": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8667": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8668": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DEE"
    },
    "8671": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "i",
      "offset": [
        9685,
        9738
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8672": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8673": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "offset": [
        9685,
        9738
      ],
      "op": "POP",
      "path": "18"
    },
    "8674": {
      "fn": "CardinalNFT.withdrawMembershipNFTFunds",
      "jump": "o",
      "offset": [
        9618,
        9745
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8675": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15429,
        16261
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8676": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15506,
        15521
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "8678": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15533,
        15546
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8680": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15549,
        15568
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21F0"
    },
    "8683": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15549,
        15558
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "8685": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8686": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8687": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8688": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15549,
        15568
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8689": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15533,
        15568
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8690": {
      "op": "POP"
    },
    "8691": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15578,
        15595
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8693": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15578,
        15595
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8694": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15656,
        15657
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8696": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15641,
        15827
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8697": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15665,
        15673
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8698": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15659,
        15661
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8699": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15659,
        15673
      ],
      "op": "GT",
      "path": "18"
    },
    "8700": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15641,
        15827
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x225C"
    },
    "8703": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15641,
        15827
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8704": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15714,
        15725
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8711": {
      "op": "SHL"
    },
    "8712": {
      "op": "SUB"
    },
    "8713": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15699,
        15725
      ],
      "op": "AND",
      "path": "18"
    },
    "8714": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15699,
        15710
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2212"
    },
    "8717": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15707,
        15709
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8718": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15699,
        15706
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1344"
    },
    "8721": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15699,
        15710
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8722": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15699,
        15710
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8729": {
      "op": "SHL"
    },
    "8730": {
      "op": "SUB"
    },
    "8731": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15699,
        15725
      ],
      "op": "AND",
      "path": "18"
    },
    "8732": {
      "branch": 215,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15699,
        15725
      ],
      "op": "EQ",
      "path": "18"
    },
    "8733": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15699,
        15765
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8734": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15699,
        15765
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8735": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15699,
        15765
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2237"
    },
    "8738": {
      "branch": 215,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15699,
        15765
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8739": {
      "op": "POP"
    },
    "8740": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15752,
        15765
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x19"
    },
    "8742": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15752,
        15765
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8743": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15748
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8745": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15748
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8746": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15748
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8747": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15748
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8748": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15744
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "8750": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15748
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8752": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15748
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8753": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15748
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8755": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15748
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8756": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15748
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8757": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15748
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8758": {
      "branch": 216,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15729,
        15765
      ],
      "op": "EQ",
      "path": "18"
    },
    "8759": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15699,
        15765
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8760": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15695,
        15817
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8761": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15695,
        15817
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x224A"
    },
    "8764": {
      "branch": 216,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15695,
        15817
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8765": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15785,
        15802
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 100,
      "value": "0x2247"
    },
    "8768": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15801,
        15802
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8770": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15785,
        15802
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8771": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15785,
        15802
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D43"
    },
    "8774": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15785,
        15802
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8775": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15785,
        15802
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8776": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15785,
        15802
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8777": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15785,
        15802
      ],
      "op": "POP",
      "path": "18"
    },
    "8778": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15695,
        15817
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8779": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15675,
        15679
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 101
    },
    "8780": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15675,
        15679
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2254"
    },
    "8783": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15675,
        15679
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8784": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15675,
        15679
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D5B"
    },
    "8787": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15675,
        15679
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8788": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15675,
        15679
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8789": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15675,
        15679
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8790": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15675,
        15679
      ],
      "op": "POP",
      "path": "18"
    },
    "8791": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15675,
        15679
      ],
      "op": "POP",
      "path": "18"
    },
    "8792": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15641,
        15827
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21F8"
    },
    "8795": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15641,
        15827
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8796": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15641,
        15827
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8797": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15641,
        15827
      ],
      "op": "POP",
      "path": "18"
    },
    "8798": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15837,
        15869
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8800": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15885,
        15897
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8801": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8810": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8811": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "GT",
      "path": "18"
    },
    "8812": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8813": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2278"
    },
    "8816": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8817": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2278"
    },
    "8820": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38C5"
    },
    "8823": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15872,
        15898
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8824": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8825": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8827": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8828": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8829": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8830": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8831": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8832": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8833": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8835": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "MUL",
      "path": "18"
    },
    "8836": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8838": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "ADD",
      "path": "18"
    },
    "8839": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8840": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "ADD",
      "path": "18"
    },
    "8841": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8843": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8844": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8845": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8846": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22AB"
    },
    "8849": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8850": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8851": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8853": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "ADD",
      "path": "18"
    },
    "8854": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8855": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "8857": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8858": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8859": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8861": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "ADD",
      "path": "18"
    },
    "8862": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8863": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8865": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8866": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "SUB",
      "path": "18"
    },
    "8867": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8868": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8869": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2296"
    },
    "8872": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8873": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8874": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "POP",
      "path": "18"
    },
    "8875": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15872,
        15898
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8876": {
      "op": "POP"
    },
    "8877": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15837,
        15898
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8878": {
      "op": "POP"
    },
    "8879": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15924,
        15925
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8881": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15909,
        16213
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8882": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15933,
        15941
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8883": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15927,
        15929
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8884": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15927,
        15941
      ],
      "op": "GT",
      "path": "18"
    },
    "8885": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15909,
        16213
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEE9"
    },
    "8888": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15909,
        16213
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8889": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15982,
        15993
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8896": {
      "op": "SHL"
    },
    "8897": {
      "op": "SUB"
    },
    "8898": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15967,
        15993
      ],
      "op": "AND",
      "path": "18"
    },
    "8899": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15967,
        15978
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22CB"
    },
    "8902": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15975,
        15977
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8903": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15967,
        15974
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1344"
    },
    "8906": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15967,
        15978
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8907": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15967,
        15978
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8914": {
      "op": "SHL"
    },
    "8915": {
      "op": "SUB"
    },
    "8916": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15967,
        15993
      ],
      "op": "AND",
      "path": "18"
    },
    "8917": {
      "branch": 217,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15967,
        15993
      ],
      "op": "EQ",
      "path": "18"
    },
    "8918": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15967,
        16033
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8919": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15967,
        16033
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8920": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15967,
        16033
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22F0"
    },
    "8923": {
      "branch": 217,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15967,
        16033
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8924": {
      "op": "POP"
    },
    "8925": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16020,
        16033
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x19"
    },
    "8927": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16020,
        16033
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8928": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16016
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8930": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16016
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8931": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16016
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8932": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16016
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8933": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16012
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "8935": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16016
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8937": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16016
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8938": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16016
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8940": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16016
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8941": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16016
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8942": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16016
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8943": {
      "branch": 218,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15997,
        16033
      ],
      "op": "EQ",
      "path": "18"
    },
    "8944": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15967,
        16033
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8945": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15963,
        16203
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8946": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15963,
        16203
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x232F"
    },
    "8949": {
      "branch": 218,
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15963,
        16203
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8950": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16053,
        16077
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8952": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16080,
        16092
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2300"
    },
    "8955": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16089,
        16091
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8956": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16080,
        16088
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x237D"
    },
    "8959": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        16080,
        16092
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8960": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16080,
        16092
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8961": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16053,
        16092
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8962": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16053,
        16092
      ],
      "op": "POP",
      "path": "18"
    },
    "8963": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16143,
        16153
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 102
    },
    "8964": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16126
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8965": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16127,
        16139
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8966": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8967": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8968": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8969": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "LT",
      "path": "18"
    },
    "8970": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2315"
    },
    "8973": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8974": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2315"
    },
    "8977": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D76"
    },
    "8980": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        16110,
        16140
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8981": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8982": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8984": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8985": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8986": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "MUL",
      "path": "18"
    },
    "8987": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8988": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8989": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8990": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "ADD",
      "path": "18"
    },
    "8991": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16140
      ],
      "op": "ADD",
      "path": "18"
    },
    "8992": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16110,
        16153
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8993": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16171,
        16188
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 103,
      "value": "0x232B"
    },
    "8996": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16187,
        16188
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8998": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16171,
        16188
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8999": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16171,
        16188
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D43"
    },
    "9002": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        16171,
        16188
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9003": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16171,
        16188
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9004": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16171,
        16188
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "9005": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16171,
        16188
      ],
      "op": "POP",
      "path": "18"
    },
    "9006": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        16035,
        16203
      ],
      "op": "POP",
      "path": "18"
    },
    "9007": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15963,
        16203
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9008": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15943,
        15947
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 104
    },
    "9009": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15943,
        15947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2339"
    },
    "9012": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15943,
        15947
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9013": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15943,
        15947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D5B"
    },
    "9016": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "jump": "i",
      "offset": [
        15943,
        15947
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9017": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15943,
        15947
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9018": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15943,
        15947
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9019": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15943,
        15947
      ],
      "op": "POP",
      "path": "18"
    },
    "9020": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15943,
        15947
      ],
      "op": "POP",
      "path": "18"
    },
    "9021": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15909,
        16213
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22B1"
    },
    "9024": {
      "fn": "CardinalNFT.getUserServiceTokenURIs",
      "offset": [
        15909,
        16213
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9025": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18229,
        18364
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9026": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9028": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9035": {
      "op": "SHL"
    },
    "9036": {
      "op": "SUB"
    },
    "9037": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9038": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "9039": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9040": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x236B"
    },
    "9043": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9044": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9046": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9053": {
      "op": "SHL"
    },
    "9054": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9055": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9056": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9058": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9059": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "9062": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9063": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "9066": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9067": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9068": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18345
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 105,
      "value": "0x0"
    },
    "9070": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18345
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9071": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18345
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9072": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18345
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9073": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18336
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "9075": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18345
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9077": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18345
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9078": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18345
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9080": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18345
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9081": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18345
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9082": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18345
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9083": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "offset": [
        18321,
        18357
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9084": {
      "fn": "CardinalNFT.updateTokenTypeId",
      "jump": "o",
      "offset": [
        18229,
        18364
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9085": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23217,
        23370
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9086": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23308,
        23321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "9088": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23340,
        23363
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 106,
      "value": "0x919"
    },
    "9091": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23355,
        23362
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9092": {
      "fn": "CardinalNFT.tokenURI",
      "offset": [
        23340,
        23354
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EAA"
    },
    "9095": {
      "fn": "CardinalNFT.tokenURI",
      "jump": "i",
      "offset": [
        23340,
        23363
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9096": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20931,
        21123
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9097": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21015,
        21025
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 107
    },
    "9098": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9100": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9101": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9102": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9103": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x15"
    },
    "9105": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9107": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9108": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9110": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9111": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9112": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9113": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "9115": {
      "branch": 219,
      "fn": "CardinalNFT.addMember",
      "offset": [
        21000,
        21026
      ],
      "op": "AND",
      "path": "18"
    },
    "9116": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20992,
        21068
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23F5"
    },
    "9119": {
      "branch": 219,
      "fn": "CardinalNFT.addMember",
      "offset": [
        20992,
        21068
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9120": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20992,
        21068
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9122": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20992,
        21068
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9129": {
      "op": "SHL"
    },
    "9130": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20992,
        21068
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9131": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20992,
        21068
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9134": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20992,
        21068
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9136": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20992,
        21068
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9137": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20992,
        21068
      ],
      "op": "ADD",
      "path": "18"
    },
    "9138": {
      "op": "MSTORE"
    },
    "9139": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9143": {
      "op": "DUP3"
    },
    "9144": {
      "op": "ADD"
    },
    "9145": {
      "op": "MSTORE"
    },
    "9146": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920636F6E74726163742061646D696E732063616E20616464206D656D"
    },
    "9179": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9181": {
      "op": "DUP3"
    },
    "9182": {
      "op": "ADD"
    },
    "9183": {
      "op": "MSTORE"
    },
    "9184": {
      "op": "PUSH5",
      "value": "0x3132B93997"
    },
    "9190": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "9192": {
      "op": "SHL"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9195": {
      "op": "DUP3"
    },
    "9196": {
      "op": "ADD"
    },
    "9197": {
      "op": "MSTORE"
    },
    "9198": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9200": {
      "op": "ADD"
    },
    "9201": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20992,
        21068
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA19"
    },
    "9204": {
      "op": "JUMP"
    },
    "9205": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        20992,
        21068
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9212": {
      "op": "SHL"
    },
    "9213": {
      "op": "SUB"
    },
    "9214": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21109
      ],
      "op": "AND",
      "path": "18",
      "statement": 108
    },
    "9215": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21109
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9217": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21109
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9218": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21109
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9219": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21109
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9220": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21094
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x12"
    },
    "9222": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21109
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9224": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21109
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9225": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21109
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9227": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21109
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9228": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21109
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9229": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21116
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9230": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21116
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9233": {
      "op": "NOT"
    },
    "9234": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21116
      ],
      "op": "AND",
      "path": "18"
    },
    "9235": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21112,
        21116
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "9237": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21116
      ],
      "op": "OR",
      "path": "18"
    },
    "9238": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21116
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9239": {
      "fn": "CardinalNFT.addMember",
      "offset": [
        21079,
        21116
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9240": {
      "fn": "CardinalNFT.addMember",
      "jump": "o",
      "offset": [
        20931,
        21123
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9241": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16667,
        16783
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9242": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16723,
        16739
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "9244": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16758,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 109,
      "value": "0x1B"
    },
    "9246": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9247": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9248": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9249": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9251": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "MUL",
      "path": "18"
    },
    "9252": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9254": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "ADD",
      "path": "18"
    },
    "9255": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9257": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9258": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9259": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9260": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "ADD",
      "path": "18"
    },
    "9261": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9263": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9264": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9265": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "9266": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9267": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9268": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9269": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9270": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9271": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9273": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "ADD",
      "path": "18"
    },
    "9274": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9275": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9276": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9277": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9278": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "9279": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9A7"
    },
    "9282": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9283": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9285": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "MUL",
      "path": "18"
    },
    "9286": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9287": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "ADD",
      "path": "18"
    },
    "9288": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9289": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9290": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9292": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9293": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9295": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9297": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9298": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9299": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9300": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9301": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9302": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9303": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9304": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9306": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "ADD",
      "path": "18"
    },
    "9307": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9308": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "9310": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "ADD",
      "path": "18"
    },
    "9311": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9312": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9313": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "DUP4",
      "path": "18"
    },
    "9314": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "GT",
      "path": "18"
    },
    "9315": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2453"
    },
    "9318": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9319": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "POP",
      "path": "18"
    },
    "9320": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "POP",
      "path": "18"
    },
    "9321": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "POP",
      "path": "18"
    },
    "9322": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "POP",
      "path": "18"
    },
    "9323": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "POP",
      "path": "18"
    },
    "9324": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9325": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16751,
        16776
      ],
      "op": "POP",
      "path": "18"
    },
    "9326": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "offset": [
        16667,
        16783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9327": {
      "fn": "CardinalNFT.getMembershipTokenIds",
      "jump": "o",
      "offset": [
        16667,
        16783
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9328": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16407,
        16535
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9329": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16469,
        16485
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "9331": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16504,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 110,
      "value": "0x1A"
    },
    "9333": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9334": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9335": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9336": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9338": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "MUL",
      "path": "18"
    },
    "9339": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9341": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "ADD",
      "path": "18"
    },
    "9342": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9344": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9345": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9346": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9347": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "ADD",
      "path": "18"
    },
    "9348": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9350": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9351": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9352": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "9353": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9354": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9355": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9356": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9357": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9358": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9360": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "ADD",
      "path": "18"
    },
    "9361": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9362": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9363": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9364": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9365": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "9366": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9A7"
    },
    "9369": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9370": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9372": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "MUL",
      "path": "18"
    },
    "9373": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9374": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "ADD",
      "path": "18"
    },
    "9375": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9376": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9377": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9379": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9380": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9382": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9384": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9385": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9386": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9387": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9388": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9389": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9390": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9392": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "ADD",
      "path": "18"
    },
    "9393": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9394": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "9396": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "ADD",
      "path": "18"
    },
    "9397": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9398": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9399": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "DUP4",
      "path": "18"
    },
    "9400": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "GT",
      "path": "18"
    },
    "9401": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2453"
    },
    "9404": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9405": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "POP",
      "path": "18"
    },
    "9406": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "POP",
      "path": "18"
    },
    "9407": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "POP",
      "path": "18"
    },
    "9408": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "POP",
      "path": "18"
    },
    "9409": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "POP",
      "path": "18"
    },
    "9410": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9411": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16497,
        16528
      ],
      "op": "POP",
      "path": "18"
    },
    "9412": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "offset": [
        16407,
        16535
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9413": {
      "fn": "CardinalNFT.getOriginalCardinalTokenIds",
      "jump": "o",
      "offset": [
        16407,
        16535
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9414": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19934,
        20128
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9415": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9417": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9424": {
      "op": "SHL"
    },
    "9425": {
      "op": "SUB"
    },
    "9426": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9427": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "9428": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9429": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F0"
    },
    "9432": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9433": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9435": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9442": {
      "op": "SHL"
    },
    "9443": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9444": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9445": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9447": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9448": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "9451": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9452": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "9455": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9456": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9457": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20022,
        20043
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 111,
      "value": "0x1D"
    },
    "9459": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20022,
        20064
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9460": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20022,
        20064
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9461": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20022,
        20064
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9462": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20079,
        20121
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 112,
      "value": "0x40"
    },
    "9464": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20079,
        20121
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9465": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20046,
        20064
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9466": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20046,
        20064
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9467": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20079,
        20121
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x1361F6A741CB766EA2F0BE44A0E1686DF0E08320BE065F6C8DF9E4F639AB297A"
    },
    "9500": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20079,
        20121
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9501": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20079,
        20121
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9503": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20079,
        20121
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9504": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        20079,
        20121
      ],
      "op": "LOG2",
      "path": "18"
    },
    "9505": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "offset": [
        19934,
        20128
      ],
      "op": "POP",
      "path": "18"
    },
    "9506": {
      "fn": "CardinalNFT.updateMembershipPrice",
      "jump": "o",
      "offset": [
        19934,
        20128
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9507": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4501,
        4616
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9508": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9510": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9517": {
      "op": "SHL"
    },
    "9518": {
      "op": "SUB"
    },
    "9519": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9520": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "9521": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9522": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x254D"
    },
    "9525": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9526": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9528": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9529": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9533": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9535": {
      "op": "SHL"
    },
    "9536": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9537": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9538": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9540": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9541": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "9544": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9545": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "9548": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9549": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9550": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4583,
        4609
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 113,
      "value": "0x21E0"
    },
    "9553": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4601,
        4608
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9554": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "offset": [
        4583,
        4600
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D6B"
    },
    "9557": {
      "fn": "CardinalNFT.burnMembershiptNFTManually",
      "jump": "i",
      "offset": [
        4583,
        4609
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9558": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9559": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9561": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9568": {
      "op": "SHL"
    },
    "9569": {
      "op": "SUB"
    },
    "9570": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9571": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "9572": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9573": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2580"
    },
    "9576": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9577": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9579": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9580": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9586": {
      "op": "SHL"
    },
    "9587": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9588": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9589": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9591": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9592": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "9595": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9596": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "9599": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9600": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9607": {
      "op": "SHL"
    },
    "9608": {
      "op": "SUB"
    },
    "9609": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 114
    },
    "9610": {
      "branch": 256,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "9611": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25E5"
    },
    "9614": {
      "branch": 256,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9615": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9624": {
      "op": "SHL"
    },
    "9625": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9626": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9629": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9631": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9632": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "9633": {
      "op": "MSTORE"
    },
    "9634": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9636": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9638": {
      "op": "DUP3"
    },
    "9639": {
      "op": "ADD"
    },
    "9640": {
      "op": "MSTORE"
    },
    "9641": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9676": {
      "op": "DUP3"
    },
    "9677": {
      "op": "ADD"
    },
    "9678": {
      "op": "MSTORE"
    },
    "9679": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "9686": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9688": {
      "op": "SHL"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9691": {
      "op": "DUP3"
    },
    "9692": {
      "op": "ADD"
    },
    "9693": {
      "op": "MSTORE"
    },
    "9694": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9696": {
      "op": "ADD"
    },
    "9697": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "9700": {
      "op": "JUMP"
    },
    "9701": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9702": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 115,
      "value": "0x21E0"
    },
    "9705": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9706": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C17"
    },
    "9709": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9710": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21840,
        22162
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9711": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21956,
        21966
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 116
    },
    "9712": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9714": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9715": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9716": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9717": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21955
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x15"
    },
    "9719": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9721": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9722": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9724": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9725": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9726": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9727": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "9729": {
      "branch": 220,
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21941,
        21967
      ],
      "op": "AND",
      "path": "18"
    },
    "9730": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21933,
        22023
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2669"
    },
    "9733": {
      "branch": 220,
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21933,
        22023
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9734": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21933,
        22023
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9736": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21933,
        22023
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9737": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9743": {
      "op": "SHL"
    },
    "9744": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21933,
        22023
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9745": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21933,
        22023
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9748": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21933,
        22023
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9750": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21933,
        22023
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9751": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21933,
        22023
      ],
      "op": "ADD",
      "path": "18"
    },
    "9752": {
      "op": "MSTORE"
    },
    "9753": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "9755": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9757": {
      "op": "DUP3"
    },
    "9758": {
      "op": "ADD"
    },
    "9759": {
      "op": "MSTORE"
    },
    "9760": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920636F6E74726163742061646D696E732063616E207365742061206D"
    },
    "9793": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9795": {
      "op": "DUP3"
    },
    "9796": {
      "op": "ADD"
    },
    "9797": {
      "op": "MSTORE"
    },
    "9798": {
      "op": "PUSH19",
      "value": "0x32B6B132B939B434B8103234B9B1B7BAB73A17"
    },
    "9818": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "9820": {
      "op": "SHL"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9823": {
      "op": "DUP3"
    },
    "9824": {
      "op": "ADD"
    },
    "9825": {
      "op": "MSTORE"
    },
    "9826": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9828": {
      "op": "ADD"
    },
    "9829": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21933,
        22023
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA19"
    },
    "9832": {
      "op": "JUMP"
    },
    "9833": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21933,
        22023
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9840": {
      "op": "SHL"
    },
    "9841": {
      "op": "SUB"
    },
    "9842": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 117
    },
    "9843": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "AND",
      "path": "18"
    },
    "9844": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9846": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9847": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9848": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9849": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x16"
    },
    "9851": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9853": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9854": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9856": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9857": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9858": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9859": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22092
      ],
      "op": "DUP5",
      "path": "18"
    },
    "9860": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22092
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9861": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22092
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9862": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22107,
        22155
      ],
      "op": "MLOAD",
      "path": "18",
      "statement": 118
    },
    "9863": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22078,
        22092
      ],
      "op": "DUP4",
      "path": "18"
    },
    "9864": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22078,
        22092
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "9865": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22033,
        22075
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9866": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22107,
        22155
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x874556B552951A64A8A3F7627516F395097B3DE40CF93B85E87B03118CC02CF0"
    },
    "9899": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22107,
        22155
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9900": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        22107,
        22155
      ],
      "op": "LOG3",
      "path": "18"
    },
    "9901": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21840,
        22162
      ],
      "op": "POP",
      "path": "18"
    },
    "9902": {
      "fn": "CardinalNFT.setMemberDiscount",
      "offset": [
        21840,
        22162
      ],
      "op": "POP",
      "path": "18"
    },
    "9903": {
      "fn": "CardinalNFT.setMemberDiscount",
      "jump": "o",
      "offset": [
        21840,
        22162
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9904": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        18946,
        19150
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9905": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9907": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9914": {
      "op": "SHL"
    },
    "9915": {
      "op": "SUB"
    },
    "9916": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9917": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "9918": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9919": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26DA"
    },
    "9922": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9923": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9925": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9932": {
      "op": "SHL"
    },
    "9933": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9934": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9935": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9937": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9938": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA19"
    },
    "9941": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9942": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA7"
    },
    "9945": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9946": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9947": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        19036,
        19052
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 119,
      "value": "0x18"
    },
    "9949": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        19036,
        19074
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9950": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        19036,
        19074
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9951": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        19036,
        19074
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9952": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        19089,
        19143
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 120,
      "value": "0x40"
    },
    "9954": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        19089,
        19143
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9955": {
      "op": "PUSH16",
      "value": "0x1B595B58995C9CDA1A5C151E5C195259"
    },
    "9972": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "9974": {
      "op": "SHL"
    },
    "9975": {
      "op": "DUP2"
    },
    "9976": {
      "op": "MSTORE"
    },
    "9977": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        19036,
        19074
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9978": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        19036,
        19074
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9979": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "9981": {
      "op": "ADD"
    },
    "9982": {
      "fn": "CardinalNFT.updateMembershipTypeId",
      "offset": [
        19089,
        19143
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x140F"
    },
    "9985": {
      "op": "JUMP"
    },
    "9986": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9987": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1092,
        1096
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9993": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9995": {
      "op": "SHL"
    },
    "9996": {
      "op": "SUB"
    },
    "9997": {
      "op": "NOT"
    },
    "9998": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 121
    },
    "9999": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "AND",
      "path": "7"
    },
    "10000": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "10005": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10007": {
      "op": "SHL"
    },
    "10008": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "EQ",
      "path": "7"
    },
    "10009": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10010": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x919"
    },
    "10013": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10014": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "POP",
      "path": "7"
    },
    "10015": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x919"
    },
    "10018": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1193,
        1204
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10019": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1192
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3019"
    },
    "10022": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10023": {
      "fn": "ERC721._exists",
      "offset": [
        7159,
        7284
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10024": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "10026": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 122
    },
    "10027": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10028": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10029": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "10031": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "10033": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10034": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10036": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10037": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "10038": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "10039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10045": {
      "op": "SHL"
    },
    "10046": {
      "op": "SUB"
    },
    "10047": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "4"
    },
    "10048": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "10049": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "10050": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10051": {
      "fn": "ERC721._exists",
      "jump": "o",
      "offset": [
        7159,
        7284
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10052": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10053": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 123,
      "value": "0x0"
    },
    "10055": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10056": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10057": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10058": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11257
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "10060": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "10062": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10063": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10065": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10066": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "10067": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10068": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "10069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10075": {
      "op": "SHL"
    },
    "10076": {
      "op": "SUB"
    },
    "10077": {
      "op": "NOT"
    },
    "10078": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "4"
    },
    "10079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10085": {
      "op": "SHL"
    },
    "10086": {
      "op": "SUB"
    },
    "10087": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP5",
      "path": "4"
    },
    "10088": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "4"
    },
    "10089": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10090": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10091": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "OR",
      "path": "4"
    },
    "10092": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10093": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10094": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "10095": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10096": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10097": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 124,
      "value": "0x2779"
    },
    "10100": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10101": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11309
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1344"
    },
    "10104": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10105": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10112": {
      "op": "SHL"
    },
    "10113": {
      "op": "SUB"
    },
    "10114": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "AND",
      "path": "4"
    },
    "10115": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "10148": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10150": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10151": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10153": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10154": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10155": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10156": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SUB",
      "path": "4"
    },
    "10157": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10158": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "LOG4",
      "path": "4"
    },
    "10159": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "4"
    },
    "10160": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "4"
    },
    "10161": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10162": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1277,
        1491
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10163": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1392
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 125,
      "value": "0x27BB"
    },
    "10166": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1384,
        1391
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10167": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1383
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2727"
    },
    "10170": {
      "fn": "ERC721URIStorage._setTokenURI",
      "jump": "i",
      "offset": [
        1376,
        1392
      ],
      "op": "JUMP",
      "path": "8"
    },
    "10171": {
      "branch": 252,
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1392
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10172": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x281E"
    },
    "10175": {
      "branch": 252,
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "10176": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "10178": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "10179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10185": {
      "op": "SHL"
    },
    "10186": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10187": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10190": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "10192": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10193": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "ADD",
      "path": "8"
    },
    "10194": {
      "op": "MSTORE"
    },
    "10195": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "10197": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10199": {
      "op": "DUP3"
    },
    "10200": {
      "op": "ADD"
    },
    "10201": {
      "op": "MSTORE"
    },
    "10202": {
      "op": "PUSH32",
      "value": "0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E"
    },
    "10235": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10237": {
      "op": "DUP3"
    },
    "10238": {
      "op": "ADD"
    },
    "10239": {
      "op": "MSTORE"
    },
    "10240": {
      "op": "PUSH14",
      "value": "0x32BC34B9BA32B73A103A37B5B2B7"
    },
    "10255": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "10257": {
      "op": "SHL"
    },
    "10258": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10260": {
      "op": "DUP3"
    },
    "10261": {
      "op": "ADD"
    },
    "10262": {
      "op": "MSTORE"
    },
    "10263": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10265": {
      "op": "ADD"
    },
    "10266": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA19"
    },
    "10269": {
      "op": "JUMP"
    },
    "10270": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10271": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 126,
      "value": "0x0"
    },
    "10273": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10274": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10275": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10276": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1463
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "10278": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "10280": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10281": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10282": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10283": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "10285": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10286": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "10287": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "10288": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10289": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "10290": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB4F"
    },
    "10293": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "10294": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "DUP5",
      "path": "8"
    },
    "10295": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "ADD",
      "path": "8"
    },
    "10296": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10297": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3714"
    },
    "10300": {
      "fn": "ERC721URIStorage._setTokenURI",
      "jump": "i",
      "offset": [
        1453,
        1484
      ],
      "op": "JUMP",
      "path": "8"
    },
    "10301": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10302": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7539
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "10304": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7575
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 127,
      "value": "0x2848"
    },
    "10307": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7567,
        7574
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10308": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7566
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2727"
    },
    "10311": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7559,
        7575
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10312": {
      "branch": 236,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7575
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10313": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28A9"
    },
    "10316": {
      "branch": 236,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "10317": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10319": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10326": {
      "op": "SHL"
    },
    "10327": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10328": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10331": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "10333": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10334": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "ADD",
      "path": "4"
    },
    "10335": {
      "op": "MSTORE"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "10338": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10340": {
      "op": "DUP3"
    },
    "10341": {
      "op": "ADD"
    },
    "10342": {
      "op": "MSTORE"
    },
    "10343": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "10376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10378": {
      "op": "DUP3"
    },
    "10379": {
      "op": "ADD"
    },
    "10380": {
      "op": "MSTORE"
    },
    "10381": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "10394": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10396": {
      "op": "SHL"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10399": {
      "op": "DUP3"
    },
    "10400": {
      "op": "ADD"
    },
    "10401": {
      "op": "MSTORE"
    },
    "10402": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10404": {
      "op": "ADD"
    },
    "10405": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "10408": {
      "op": "JUMP"
    },
    "10409": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10410": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "10412": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28B4"
    },
    "10415": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7672
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10416": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7664
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1344"
    },
    "10419": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10420": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10421": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10422": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "POP",
      "path": "4"
    },
    "10423": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7702,
        7707
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 128
    },
    "10424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10430": {
      "op": "SHL"
    },
    "10431": {
      "op": "SUB"
    },
    "10432": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "4"
    },
    "10433": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7698
      ],
      "op": "DUP5",
      "path": "4"
    },
    "10434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10440": {
      "op": "SHL"
    },
    "10441": {
      "op": "SUB"
    },
    "10442": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "4"
    },
    "10443": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "EQ",
      "path": "4"
    },
    "10444": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10445": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28EF"
    },
    "10448": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "10449": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "POP",
      "path": "4"
    },
    "10450": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10457": {
      "op": "SHL"
    },
    "10458": {
      "op": "SUB"
    },
    "10459": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "4"
    },
    "10460": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28E4"
    },
    "10463": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7723,
        7730
      ],
      "op": "DUP5",
      "path": "4"
    },
    "10464": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7722
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9B1"
    },
    "10467": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10468": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10475": {
      "op": "SHL"
    },
    "10476": {
      "op": "SUB"
    },
    "10477": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "4"
    },
    "10478": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "EQ",
      "path": "4"
    },
    "10479": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10480": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10481": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x105D"
    },
    "10484": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "10485": {
      "op": "POP"
    },
    "10486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10492": {
      "op": "SHL"
    },
    "10493": {
      "op": "SUB"
    },
    "10494": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10495": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "4"
    },
    "10497": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "10499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10501": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "10504": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "10506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10507": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10508": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10509": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10511": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10512": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10513": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "10514": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "10515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP9",
      "path": "4"
    },
    "10516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "4"
    },
    "10517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10519": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "10520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "10523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "10524": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "10526": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "4"
    },
    "10527": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7778
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x105D"
    },
    "10530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10531": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        11057
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10532": {
      "fn": "ERC721._transfer",
      "offset": [
        10606,
        10610
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 129
    },
    "10533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10539": {
      "op": "SHL"
    },
    "10540": {
      "op": "SUB"
    },
    "10541": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "4"
    },
    "10542": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2936"
    },
    "10545": {
      "fn": "ERC721._transfer",
      "offset": [
        10594,
        10601
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10546": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10593
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1344"
    },
    "10549": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10550": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10557": {
      "op": "SHL"
    },
    "10558": {
      "op": "SUB"
    },
    "10559": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "4"
    },
    "10560": {
      "branch": 237,
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "EQ",
      "path": "4"
    },
    "10561": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x299A"
    },
    "10564": {
      "branch": 237,
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "10565": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10567": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10568": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10572": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10574": {
      "op": "SHL"
    },
    "10575": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10576": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10579": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "10581": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10582": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "ADD",
      "path": "4"
    },
    "10583": {
      "op": "MSTORE"
    },
    "10584": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "10586": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10588": {
      "op": "DUP3"
    },
    "10589": {
      "op": "ADD"
    },
    "10590": {
      "op": "MSTORE"
    },
    "10591": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "10624": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10626": {
      "op": "DUP3"
    },
    "10627": {
      "op": "ADD"
    },
    "10628": {
      "op": "MSTORE"
    },
    "10629": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "10637": {
      "op": "SHL"
    },
    "10638": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10640": {
      "op": "DUP3"
    },
    "10641": {
      "op": "ADD"
    },
    "10642": {
      "op": "MSTORE"
    },
    "10643": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10645": {
      "op": "ADD"
    },
    "10646": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "10649": {
      "op": "JUMP"
    },
    "10650": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10657": {
      "op": "SHL"
    },
    "10658": {
      "op": "SUB"
    },
    "10659": {
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 130
    },
    "10660": {
      "branch": 238,
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "AND",
      "path": "4"
    },
    "10661": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29FC"
    },
    "10664": {
      "branch": 238,
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "10665": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10667": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10668": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10674": {
      "op": "SHL"
    },
    "10675": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10676": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10679": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "10681": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10682": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "ADD",
      "path": "4"
    },
    "10683": {
      "op": "MSTORE"
    },
    "10684": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10686": {
      "op": "DUP1"
    },
    "10687": {
      "op": "DUP3"
    },
    "10688": {
      "op": "ADD"
    },
    "10689": {
      "op": "MSTORE"
    },
    "10690": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "10723": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10725": {
      "op": "DUP3"
    },
    "10726": {
      "op": "ADD"
    },
    "10727": {
      "op": "MSTORE"
    },
    "10728": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "10733": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10735": {
      "op": "SHL"
    },
    "10736": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10738": {
      "op": "DUP3"
    },
    "10739": {
      "op": "ADD"
    },
    "10740": {
      "op": "MSTORE"
    },
    "10741": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10743": {
      "op": "ADD"
    },
    "10744": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "10747": {
      "op": "JUMP"
    },
    "10748": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10749": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 131,
      "value": "0x2A07"
    },
    "10752": {
      "fn": "ERC721._transfer",
      "offset": [
        10759,
        10763
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10753": {
      "fn": "ERC721._transfer",
      "offset": [
        10765,
        10767
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10754": {
      "fn": "ERC721._transfer",
      "offset": [
        10769,
        10776
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10755": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10758
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3069"
    },
    "10758": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10759": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10760": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 132,
      "value": "0x2A12"
    },
    "10763": {
      "fn": "ERC721._transfer",
      "offset": [
        10856,
        10857
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "10765": {
      "fn": "ERC721._transfer",
      "offset": [
        10860,
        10867
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10766": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2744"
    },
    "10769": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10770": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10777": {
      "op": "SHL"
    },
    "10778": {
      "op": "SUB"
    },
    "10779": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 133
    },
    "10780": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "AND",
      "path": "4"
    },
    "10781": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "10783": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10784": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10785": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10786": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "10788": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "10790": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10791": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10793": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10794": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "10795": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10796": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "10797": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "10799": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "10800": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10801": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A3B"
    },
    "10804": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10805": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "DUP5",
      "path": "4"
    },
    "10806": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10807": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E0B"
    },
    "10810": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10811": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10812": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10813": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10814": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "10815": {
      "op": "POP"
    },
    "10816": {
      "op": "POP"
    },
    "10817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10823": {
      "op": "SHL"
    },
    "10824": {
      "op": "SUB"
    },
    "10825": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 134
    },
    "10826": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "AND",
      "path": "4"
    },
    "10827": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "10829": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10830": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10831": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10832": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10918
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "10834": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "10836": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10837": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10839": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10840": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "10841": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10842": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "10843": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "10845": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "10846": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10847": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A69"
    },
    "10850": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10851": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "DUP5",
      "path": "4"
    },
    "10852": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10853": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3D43"
    },
    "10856": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10857": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10858": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10859": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10860": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "10861": {
      "op": "POP"
    },
    "10862": {
      "op": "POP"
    },
    "10863": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 135,
      "value": "0x0"
    },
    "10865": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10866": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10867": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10868": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10944
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "10870": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "10872": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10873": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10875": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10876": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10877": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "10878": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10879": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "10880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10886": {
      "op": "SHL"
    },
    "10887": {
      "op": "SUB"
    },
    "10888": {
      "op": "NOT"
    },
    "10889": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "4"
    },
    "10890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10896": {
      "op": "SHL"
    },
    "10897": {
      "op": "SUB"
    },
    "10898": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP7",
      "path": "4"
    },
    "10899": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10900": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "4"
    },
    "10901": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10902": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10903": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "OR",
      "path": "4"
    },
    "10904": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10905": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "10906": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "10907": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 136
    },
    "10908": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10909": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP5",
      "path": "4"
    },
    "10910": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "10911": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10912": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "DUP8",
      "path": "4"
    },
    "10913": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "AND",
      "path": "4"
    },
    "10914": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10915": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10948": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10949": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "LOG4",
      "path": "4"
    },
    "10950": {
      "fn": "ERC721._transfer",
      "offset": [
        11012,
        11050
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 137,
      "value": "0xB4F"
    },
    "10953": {
      "fn": "ERC721._transfer",
      "offset": [
        11032,
        11036
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10954": {
      "fn": "ERC721._transfer",
      "offset": [
        11038,
        11040
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10955": {
      "fn": "ERC721._transfer",
      "offset": [
        11042,
        11049
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10956": {
      "fn": "ERC721._transfer",
      "offset": [
        11012,
        11031
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3074"
    },
    "10959": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11012,
        11050
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10960": {
      "fn": "ERC721._mint",
      "offset": [
        9078,
        9505
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10967": {
      "op": "SHL"
    },
    "10968": {
      "op": "SUB"
    },
    "10969": {
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 138
    },
    "10970": {
      "branch": 239,
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "AND",
      "path": "4"
    },
    "10971": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B26"
    },
    "10974": {
      "branch": 239,
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "10975": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10977": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10978": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10982": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10984": {
      "op": "SHL"
    },
    "10985": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10986": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10989": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "10991": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10992": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "ADD",
      "path": "4"
    },
    "10993": {
      "op": "DUP2"
    },
    "10994": {
      "op": "SWAP1"
    },
    "10995": {
      "op": "MSTORE"
    },
    "10996": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10998": {
      "op": "DUP3"
    },
    "10999": {
      "op": "ADD"
    },
    "11000": {
      "op": "MSTORE"
    },
    "11001": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "11034": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11036": {
      "op": "DUP3"
    },
    "11037": {
      "op": "ADD"
    },
    "11038": {
      "op": "MSTORE"
    },
    "11039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11041": {
      "op": "ADD"
    },
    "11042": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "11045": {
      "op": "JUMP"
    },
    "11046": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11047": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9245
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 139,
      "value": "0x2B2F"
    },
    "11050": {
      "fn": "ERC721._mint",
      "offset": [
        9237,
        9244
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11051": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9236
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2727"
    },
    "11054": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9229,
        9245
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11055": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9245
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11056": {
      "branch": 240,
      "fn": "ERC721._mint",
      "offset": [
        9228,
        9245
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "11057": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B7C"
    },
    "11060": {
      "branch": 240,
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "11061": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11063": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11064": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11068": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11070": {
      "op": "SHL"
    },
    "11071": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11072": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11075": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "11077": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11078": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "ADD",
      "path": "4"
    },
    "11079": {
      "op": "MSTORE"
    },
    "11080": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11082": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11084": {
      "op": "DUP3"
    },
    "11085": {
      "op": "ADD"
    },
    "11086": {
      "op": "MSTORE"
    },
    "11087": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11120": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11122": {
      "op": "DUP3"
    },
    "11123": {
      "op": "ADD"
    },
    "11124": {
      "op": "MSTORE"
    },
    "11125": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11127": {
      "op": "ADD"
    },
    "11128": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "11131": {
      "op": "JUMP"
    },
    "11132": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11133": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 140,
      "value": "0x2B88"
    },
    "11136": {
      "fn": "ERC721._mint",
      "offset": [
        9318,
        9319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "11138": {
      "fn": "ERC721._mint",
      "offset": [
        9322,
        9324
      ],
      "op": "DUP4",
      "path": "4"
    },
    "11139": {
      "fn": "ERC721._mint",
      "offset": [
        9326,
        9333
      ],
      "op": "DUP4",
      "path": "4"
    },
    "11140": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9309
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3069"
    },
    "11143": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11144": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11151": {
      "op": "SHL"
    },
    "11152": {
      "op": "SUB"
    },
    "11153": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 141
    },
    "11154": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "AND",
      "path": "4"
    },
    "11155": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "11157": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11158": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11159": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11160": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9354
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "11162": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "11164": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11165": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11167": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11168": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "11169": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "DUP1",
      "path": "4"
    },
    "11170": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "11171": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "11173": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "11174": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11175": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2BB1"
    },
    "11178": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11179": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "DUP5",
      "path": "4"
    },
    "11180": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11181": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3D43"
    },
    "11184": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11185": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11186": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11187": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11188": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "11189": {
      "op": "POP"
    },
    "11190": {
      "op": "POP"
    },
    "11191": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 142,
      "value": "0x0"
    },
    "11193": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11194": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11195": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11196": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9380
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "11198": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "11200": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11201": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11203": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP1",
      "path": "4"
    },
    "11204": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11205": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "11206": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP1",
      "path": "4"
    },
    "11207": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "11208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11214": {
      "op": "SHL"
    },
    "11215": {
      "op": "SUB"
    },
    "11216": {
      "op": "NOT"
    },
    "11217": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "4"
    },
    "11218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11224": {
      "op": "SHL"
    },
    "11225": {
      "op": "SUB"
    },
    "11226": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP7",
      "path": "4"
    },
    "11227": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "4"
    },
    "11228": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11229": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11230": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "OR",
      "path": "4"
    },
    "11231": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11232": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11233": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "11234": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 143
    },
    "11235": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11236": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP4",
      "path": "4"
    },
    "11237": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "11238": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11239": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11272": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11273": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11274": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11275": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "LOG4",
      "path": "4"
    },
    "11276": {
      "fn": "ERC721._mint",
      "offset": [
        9454,
        9498
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 144,
      "value": "0x1BD2"
    },
    "11279": {
      "fn": "ERC721._mint",
      "offset": [
        9482,
        9483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "11281": {
      "fn": "ERC721._mint",
      "offset": [
        9486,
        9488
      ],
      "op": "DUP4",
      "path": "4"
    },
    "11282": {
      "fn": "ERC721._mint",
      "offset": [
        9490,
        9497
      ],
      "op": "DUP4",
      "path": "4"
    },
    "11283": {
      "fn": "ERC721._mint",
      "offset": [
        9454,
        9473
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3074"
    },
    "11286": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9454,
        9498
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11287": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11288": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11290": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11291": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11298": {
      "op": "SHL"
    },
    "11299": {
      "op": "SUB"
    },
    "11300": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 145
    },
    "11301": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11302": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11309": {
      "op": "SHL"
    },
    "11310": {
      "op": "SUB"
    },
    "11311": {
      "op": "NOT"
    },
    "11312": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11313": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11314": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11315": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "11316": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11317": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11318": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11319": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 146,
      "value": "0x40"
    },
    "11321": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11322": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11323": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "11324": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11325": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11326": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11327": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11328": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11361": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11362": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11364": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11365": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "11366": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11367": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11368": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11369": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11370": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11624,
        11632
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 147
    },
    "11371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11377": {
      "op": "SHL"
    },
    "11378": {
      "op": "SUB"
    },
    "11379": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "4"
    },
    "11380": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11620
      ],
      "op": "DUP4",
      "path": "4"
    },
    "11381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11387": {
      "op": "SHL"
    },
    "11388": {
      "op": "SUB"
    },
    "11389": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "4"
    },
    "11390": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "EQ",
      "path": "4"
    },
    "11391": {
      "branch": 241,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "11392": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2CCB"
    },
    "11395": {
      "branch": 241,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "11396": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11398": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11399": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11403": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11405": {
      "op": "SHL"
    },
    "11406": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11407": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11410": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "11412": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11413": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "ADD",
      "path": "4"
    },
    "11414": {
      "op": "MSTORE"
    },
    "11415": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11419": {
      "op": "DUP3"
    },
    "11420": {
      "op": "ADD"
    },
    "11421": {
      "op": "MSTORE"
    },
    "11422": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "11455": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11457": {
      "op": "DUP3"
    },
    "11458": {
      "op": "ADD"
    },
    "11459": {
      "op": "MSTORE"
    },
    "11460": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11462": {
      "op": "ADD"
    },
    "11463": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "11466": {
      "op": "JUMP"
    },
    "11467": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11474": {
      "op": "SHL"
    },
    "11475": {
      "op": "SUB"
    },
    "11476": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 148
    },
    "11477": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11478": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "AND",
      "path": "4"
    },
    "11479": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "11481": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11482": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11483": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11484": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11690
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "11486": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "11488": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11489": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11490": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11491": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11493": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP1",
      "path": "4"
    },
    "11494": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "4"
    },
    "11495": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "11496": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "11497": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP8",
      "path": "4"
    },
    "11498": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "AND",
      "path": "4"
    },
    "11499": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP1",
      "path": "4"
    },
    "11500": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP5",
      "path": "4"
    },
    "11501": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11502": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "11503": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11504": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11505": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11506": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11507": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11508": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "11509": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "11510": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "11511": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11513": {
      "op": "NOT"
    },
    "11514": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "AND",
      "path": "4"
    },
    "11515": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP7",
      "path": "4"
    },
    "11516": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "11517": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "11518": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11519": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11520": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "OR",
      "path": "4"
    },
    "11521": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11522": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11523": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "11524": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 149
    },
    "11525": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11526": {
      "op": "SWAP2"
    },
    "11527": {
      "op": "DUP3"
    },
    "11528": {
      "op": "MSTORE"
    },
    "11529": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "11562": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11563": {
      "op": "ADD"
    },
    "11564": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11566": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11567": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "DUP1",
      "path": "4"
    },
    "11568": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11569": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SUB",
      "path": "4"
    },
    "11570": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11571": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "LOG3",
      "path": "4"
    },
    "11572": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "4"
    },
    "11573": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "4"
    },
    "11574": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "4"
    },
    "11575": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11576": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6549,
        6856
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11577": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 150,
      "value": "0x2D43"
    },
    "11580": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6710,
        6714
      ],
      "op": "DUP5",
      "path": "4"
    },
    "11581": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6716,
        6718
      ],
      "op": "DUP5",
      "path": "4"
    },
    "11582": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6720,
        6727
      ],
      "op": "DUP5",
      "path": "4"
    },
    "11583": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2923"
    },
    "11586": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11587": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11588": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 151,
      "value": "0x2D4F"
    },
    "11591": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6769,
        6773
      ],
      "op": "DUP5",
      "path": "4"
    },
    "11592": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6775,
        6777
      ],
      "op": "DUP5",
      "path": "4"
    },
    "11593": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6786
      ],
      "op": "DUP5",
      "path": "4"
    },
    "11594": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6788,
        6793
      ],
      "op": "DUP5",
      "path": "4"
    },
    "11595": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6768
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x31ED"
    },
    "11598": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11599": {
      "branch": 242,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11600": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C99"
    },
    "11603": {
      "branch": 242,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "11604": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11606": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11607": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11611": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11613": {
      "op": "SHL"
    },
    "11614": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11615": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11616": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "11618": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "ADD",
      "path": "4"
    },
    "11619": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "11622": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11623": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E22"
    },
    "11626": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11627": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3827,
        4360
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11628": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3894,
        3900
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11630": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3889,
        4354
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11631": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3910,
        3928
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1B"
    },
    "11633": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3910,
        3935
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11634": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3906,
        3935
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11635": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3906,
        3935
      ],
      "op": "LT",
      "path": "18"
    },
    "11636": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3889,
        4354
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11637": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3889,
        4354
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BD2"
    },
    "11640": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3889,
        4354
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11641": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3985,
        3992
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11642": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3978
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1B"
    },
    "11644": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3979,
        3980
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11645": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11646": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11647": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11648": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "LT",
      "path": "18"
    },
    "11649": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D8C"
    },
    "11652": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11653": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D8C"
    },
    "11656": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D76"
    },
    "11659": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3960,
        3981
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11660": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11661": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11662": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11664": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11665": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11667": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11669": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11670": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "ADD",
      "path": "18"
    },
    "11671": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3981
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11672": {
      "branch": 221,
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3960,
        3992
      ],
      "op": "EQ",
      "path": "18"
    },
    "11673": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3956,
        4344
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11674": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3956,
        4344
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E98"
    },
    "11677": {
      "branch": 221,
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3956,
        4344
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11678": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4012,
        4028
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11680": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4031,
        4061
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2DC5"
    },
    "11683": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4057
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1B"
    },
    "11685": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4058,
        4059
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11686": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11687": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11688": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11689": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "LT",
      "path": "18"
    },
    "11690": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2DB5"
    },
    "11693": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11694": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2DB5"
    },
    "11697": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D76"
    },
    "11700": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4039,
        4060
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11701": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11702": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11703": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11705": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11706": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11708": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11710": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11711": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "ADD",
      "path": "18"
    },
    "11712": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4039,
        4060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11713": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4031,
        4038
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1344"
    },
    "11716": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4031,
        4061
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11717": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4031,
        4061
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11718": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4012,
        4061
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11719": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4012,
        4061
      ],
      "op": "POP",
      "path": "18"
    },
    "11720": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4136
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 152,
      "value": "0x2DEF"
    },
    "11723": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4089,
        4097
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11724": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4107,
        4111
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "11725": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4132
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1B"
    },
    "11727": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4133,
        4134
      ],
      "op": "DUP6",
      "path": "18"
    },
    "11728": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11729": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11730": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11731": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "LT",
      "path": "18"
    },
    "11732": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2DDF"
    },
    "11735": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11736": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2DDF"
    },
    "11739": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D76"
    },
    "11742": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4114,
        4135
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11743": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11744": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11745": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11747": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11748": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11750": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11752": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11753": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "ADD",
      "path": "18"
    },
    "11754": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4114,
        4135
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11755": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4088
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2923"
    },
    "11758": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4079,
        4136
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11759": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4079,
        4136
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11760": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4160,
        4197
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 153,
      "value": "0x40"
    },
    "11762": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4160,
        4197
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11763": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4189,
        4196
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11764": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4189,
        4196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11771": {
      "op": "SHL"
    },
    "11772": {
      "op": "SUB"
    },
    "11773": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4160,
        4197
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11774": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4160,
        4197
      ],
      "op": "AND",
      "path": "18"
    },
    "11775": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4160,
        4197
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11776": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4160,
        4197
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x5AB068FE2788C545757BCB78E3B2D842E34EC21C90F26C60E5CE7686E90B8749"
    },
    "11809": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4160,
        4197
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11810": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4160,
        4197
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11812": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4160,
        4197
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11813": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4160,
        4197
      ],
      "op": "LOG3",
      "path": "18"
    },
    "11814": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4258
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 154,
      "value": "0x1B"
    },
    "11816": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4259,
        4284
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11817": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4259,
        4284
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11818": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4259,
        4286
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E35"
    },
    "11821": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4259,
        4286
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11822": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4285,
        4286
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "11824": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4285,
        4286
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11825": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4259,
        4286
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3E0B"
    },
    "11828": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4259,
        4286
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11829": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4259,
        4286
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11830": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11831": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11832": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11833": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "LT",
      "path": "18"
    },
    "11834": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E45"
    },
    "11837": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11838": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E45"
    },
    "11841": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D76"
    },
    "11844": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4240,
        4287
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11845": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11846": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11847": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11849": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11850": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11852": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11854": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11855": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "ADD",
      "path": "18"
    },
    "11856": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4240,
        4287
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11857": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4234
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1B"
    },
    "11859": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4235,
        4236
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11860": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11861": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11862": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11863": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "LT",
      "path": "18"
    },
    "11864": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E63"
    },
    "11867": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11868": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E63"
    },
    "11871": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D76"
    },
    "11874": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4216,
        4237
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11875": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11876": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11878": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11879": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11880": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11881": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11883": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11884": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11885": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11886": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4237
      ],
      "op": "ADD",
      "path": "18"
    },
    "11887": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4216,
        4287
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "11888": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4323
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 155,
      "value": "0x1B"
    },
    "11890": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11891": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11892": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11893": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E80"
    },
    "11896": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11897": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E80"
    },
    "11900": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3E74"
    },
    "11903": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        4305,
        4329
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11904": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11905": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "11907": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11908": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "SUB",
      "path": "18"
    },
    "11909": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11910": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11911": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11912": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11914": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11915": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11917": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11919": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11920": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "ADD",
      "path": "18"
    },
    "11921": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11923": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11924": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "11925": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11926": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        4305,
        4329
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "11927": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3994,
        4344
      ],
      "op": "POP",
      "path": "18"
    },
    "11928": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3956,
        4344
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11929": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3937,
        3940
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 156
    },
    "11930": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3937,
        3940
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EA2"
    },
    "11933": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3937,
        3940
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11934": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3937,
        3940
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D5B"
    },
    "11937": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "jump": "i",
      "offset": [
        3937,
        3940
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11938": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3937,
        3940
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11939": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3937,
        3940
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11940": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3937,
        3940
      ],
      "op": "POP",
      "path": "18"
    },
    "11941": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3937,
        3940
      ],
      "op": "POP",
      "path": "18"
    },
    "11942": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3889,
        4354
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D6E"
    },
    "11945": {
      "fn": "CardinalNFT.burnMembershipNFT",
      "offset": [
        3889,
        4354
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11946": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11947": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        540,
        553
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "11949": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        589
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 157,
      "value": "0x2EB5"
    },
    "11952": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        581,
        588
      ],
      "op": "DUP3",
      "path": "8"
    },
    "11953": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        580
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2727"
    },
    "11956": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        573,
        589
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11957": {
      "branch": 253,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        589
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11958": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F1B"
    },
    "11961": {
      "branch": 253,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "11962": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11964": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11965": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11969": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11971": {
      "op": "SHL"
    },
    "11972": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "DUP2",
      "path": "8"
    },
    "11973": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "11974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11976": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "11978": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "DUP3",
      "path": "8"
    },
    "11979": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "ADD",
      "path": "8"
    },
    "11980": {
      "op": "MSTORE"
    },
    "11981": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11983": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11985": {
      "op": "DUP3"
    },
    "11986": {
      "op": "ADD"
    },
    "11987": {
      "op": "MSTORE"
    },
    "11988": {
      "op": "PUSH32",
      "value": "0x45524337323155524953746F726167653A2055524920717565727920666F7220"
    },
    "12021": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12023": {
      "op": "DUP3"
    },
    "12024": {
      "op": "ADD"
    },
    "12025": {
      "op": "MSTORE"
    },
    "12026": {
      "op": "PUSH17",
      "value": "0x3737B732BC34B9BA32B73A103A37B5B2B7"
    },
    "12044": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "12046": {
      "op": "SHL"
    },
    "12047": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12049": {
      "op": "DUP3"
    },
    "12050": {
      "op": "ADD"
    },
    "12051": {
      "op": "MSTORE"
    },
    "12052": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12054": {
      "op": "ADD"
    },
    "12055": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA19"
    },
    "12058": {
      "op": "JUMP"
    },
    "12059": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "12060": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        677
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "12062": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "12063": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "12064": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "12065": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        690
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "12067": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "12069": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "12070": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "12072": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "12073": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "12074": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "12075": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "12076": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F34"
    },
    "12079": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12080": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C6C"
    },
    "12083": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "12084": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "12085": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "12086": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "12088": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "12089": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "12091": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "12092": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "12093": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DIV",
      "path": "8"
    },
    "12094": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MUL",
      "path": "8"
    },
    "12095": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "12097": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "12098": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "12100": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "12101": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12102": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "12103": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "12104": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "12106": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "12107": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "12108": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "12109": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "12110": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12111": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "12112": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "12113": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "12114": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "12116": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "12117": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "12118": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "12119": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "12120": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F60"
    },
    "12123": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12124": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C6C"
    },
    "12127": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "12128": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "12129": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "12130": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "12131": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2FAD"
    },
    "12134": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12135": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "12136": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "12138": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "LT",
      "path": "8"
    },
    "12139": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F82"
    },
    "12142": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12143": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "12146": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "12147": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "12148": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "12149": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DIV",
      "path": "8"
    },
    "12150": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MUL",
      "path": "8"
    },
    "12151": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "12152": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "12153": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "12154": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "12156": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "12157": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "12158": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2FAD"
    },
    "12161": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "12162": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "12163": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "12164": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "12165": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "12166": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12167": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "12169": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "12170": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "12172": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "12174": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "12175": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12176": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "12177": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "12178": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "12179": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "12180": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "12181": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12182": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "12184": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "12185": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12186": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "12188": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "12189": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "12190": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "12191": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "GT",
      "path": "8"
    },
    "12192": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F90"
    },
    "12195": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12196": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "12197": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12198": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SUB",
      "path": "8"
    },
    "12199": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "12201": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "AND",
      "path": "8"
    },
    "12202": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "12203": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "12204": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "12205": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "12206": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "12207": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "12208": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "12209": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "12210": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "12211": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12212": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "12213": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "12215": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        730,
        740
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2FCB"
    },
    "12218": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 158,
      "value": "0x40"
    },
    "12220": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12221": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12222": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12224": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12225": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "ADD",
      "path": "4"
    },
    "12226": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12227": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12228": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12231": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12232": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12233": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12234": {
      "fn": "ERC721._baseURI",
      "offset": [
        3388,
        3480
      ],
      "op": "JUMP",
      "path": "4"
    },
    "12235": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        730,
        740
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "12236": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        740
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12237": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        740
      ],
      "op": "POP",
      "path": "8"
    },
    "12238": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        823
      ],
      "op": "DUP1",
      "path": "8"
    },
    "12239": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        813,
        831
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "12240": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        835,
        836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "12242": {
      "branch": 254,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        813,
        836
      ],
      "op": "EQ",
      "path": "8"
    },
    "12243": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "12244": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2FDE"
    },
    "12247": {
      "branch": 254,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12248": {
      "op": "POP"
    },
    "12249": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        859,
        868
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 159
    },
    "12250": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "12251": {
      "op": "POP"
    },
    "12252": {
      "op": "POP"
    },
    "12253": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "o",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "12254": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "12255": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1004
      ],
      "op": "DUP2",
      "path": "8"
    },
    "12256": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1004
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "12257": {
      "branch": 255,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1008
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "12258": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3010"
    },
    "12261": {
      "branch": 255,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12262": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1055,
        1059
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 160
    },
    "12263": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1061,
        1070
      ],
      "op": "DUP3",
      "path": "8"
    },
    "12264": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "12266": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "12267": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "12269": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "ADD",
      "path": "8"
    },
    "12270": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2FF8"
    },
    "12273": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "12274": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "12275": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12276": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3E8A"
    },
    "12279": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        1038,
        1071
      ],
      "op": "JUMP",
      "path": "8"
    },
    "12280": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "12281": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "12283": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "12284": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "12286": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP2",
      "path": "8"
    },
    "12287": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP4",
      "path": "8"
    },
    "12288": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SUB",
      "path": "8"
    },
    "12289": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SUB",
      "path": "8"
    },
    "12290": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP2",
      "path": "8"
    },
    "12291": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "12292": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12293": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "12295": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "12296": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "12297": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "12298": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "12299": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "12300": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "12301": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12302": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "POP",
      "path": "8"
    },
    "12303": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "o",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "12304": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "12305": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1100,
        1123
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 161,
      "value": "0x105D"
    },
    "12308": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1115,
        1122
      ],
      "op": "DUP5",
      "path": "8"
    },
    "12309": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1100,
        1114
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x32F7"
    },
    "12312": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        1100,
        1123
      ],
      "op": "JUMP",
      "path": "8"
    },
    "12313": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12314": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "12316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12320": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12322": {
      "op": "SHL"
    },
    "12323": {
      "op": "SUB"
    },
    "12324": {
      "op": "NOT"
    },
    "12325": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 162
    },
    "12326": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "4"
    },
    "12327": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "12332": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12334": {
      "op": "SHL"
    },
    "12335": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "4"
    },
    "12336": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12337": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x304A"
    },
    "12340": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12341": {
      "op": "POP"
    },
    "12342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12346": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12348": {
      "op": "SHL"
    },
    "12349": {
      "op": "SUB"
    },
    "12350": {
      "op": "NOT"
    },
    "12351": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "4"
    },
    "12352": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "4"
    },
    "12353": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "12358": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12360": {
      "op": "SHL"
    },
    "12361": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "4"
    },
    "12362": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12363": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12364": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x919"
    },
    "12367": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12368": {
      "op": "POP"
    },
    "12369": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "12374": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12376": {
      "op": "SHL"
    },
    "12377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12381": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12383": {
      "op": "SHL"
    },
    "12384": {
      "op": "SUB"
    },
    "12385": {
      "op": "NOT"
    },
    "12386": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 163
    },
    "12387": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "15"
    },
    "12388": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "15"
    },
    "12389": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x919"
    },
    "12392": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12393": {
      "fn": "CardinalNFT._beforeTokenTransfer",
      "offset": [
        22572,
        22751
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12394": {
      "fn": "CardinalNFT._beforeTokenTransfer",
      "offset": [
        22699,
        22744
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 164,
      "value": "0xB4F"
    },
    "12397": {
      "fn": "CardinalNFT._beforeTokenTransfer",
      "offset": [
        22726,
        22730
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12398": {
      "fn": "CardinalNFT._beforeTokenTransfer",
      "offset": [
        22732,
        22734
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12399": {
      "fn": "CardinalNFT._beforeTokenTransfer",
      "offset": [
        22736,
        22743
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12400": {
      "fn": "CardinalNFT._beforeTokenTransfer",
      "offset": [
        22699,
        22725
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x33CE"
    },
    "12403": {
      "fn": "CardinalNFT._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        22699,
        22744
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12404": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        4898,
        5791
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12405": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5038,
        5054
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x18"
    },
    "12407": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5038,
        5054
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12408": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5034
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12410": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5034
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12411": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5034
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12412": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5034
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12413": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5025
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "12415": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5034
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12417": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5034
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12418": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5034
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12420": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5034
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12421": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5034
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "12422": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5034
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12423": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5054
      ],
      "op": "EQ",
      "path": "18"
    },
    "12424": {
      "branch": 222,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5054
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12425": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5108
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30A1"
    },
    "12428": {
      "branch": 222,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5108
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12429": {
      "op": "POP"
    },
    "12430": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5086,
        5108
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x17"
    },
    "12432": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5086,
        5108
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12433": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12435": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5082
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12436": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5082
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12437": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5082
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12438": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5073
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "12440": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12442": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5082
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12443": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12445": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5082
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12446": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5082
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "12447": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5082
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12448": {
      "branch": 223,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5058,
        5108
      ],
      "op": "EQ",
      "path": "18"
    },
    "12449": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5010,
        5108
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12450": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5006,
        5730
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12451": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5006,
        5730
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4F"
    },
    "12454": {
      "branch": 223,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5006,
        5730
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12455": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "12457": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12464": {
      "op": "SHL"
    },
    "12465": {
      "op": "SUB"
    },
    "12466": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5143
      ],
      "op": "DUP5",
      "path": "18"
    },
    "12467": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5143
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12468": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5143
      ],
      "op": "AND",
      "path": "18"
    },
    "12469": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12470": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "12471": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5143
      ],
      "op": "EQ",
      "path": "18"
    },
    "12472": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5143
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12473": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5143
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12474": {
      "branch": 224,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5143
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12475": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5173
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30D2"
    },
    "12478": {
      "branch": 224,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5173
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12479": {
      "op": "POP"
    },
    "12480": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5155,
        5173
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xD"
    },
    "12482": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5155,
        5173
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12489": {
      "op": "SHL"
    },
    "12490": {
      "op": "SUB"
    },
    "12491": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5147,
        5173
      ],
      "op": "DUP5",
      "path": "18"
    },
    "12492": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5147,
        5173
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12493": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5147,
        5173
      ],
      "op": "AND",
      "path": "18"
    },
    "12494": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5155,
        5173
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12495": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5155,
        5173
      ],
      "op": "AND",
      "path": "18"
    },
    "12496": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5147,
        5173
      ],
      "op": "EQ",
      "path": "18"
    },
    "12497": {
      "branch": 225,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5147,
        5173
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12498": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5173
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12499": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5195
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12500": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5195
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12501": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5195
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30E6"
    },
    "12504": {
      "branch": 225,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5195
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12505": {
      "op": "POP"
    },
    "12506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12512": {
      "op": "SHL"
    },
    "12513": {
      "op": "SUB"
    },
    "12514": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5177,
        5195
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12515": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5177,
        5195
      ],
      "op": "AND",
      "path": "18"
    },
    "12516": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5177,
        5195
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12517": {
      "branch": 226,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5177,
        5195
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12518": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5128,
        5195
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12519": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5124,
        5605
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12520": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5124,
        5605
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3194"
    },
    "12523": {
      "branch": 226,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5124,
        5605
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12530": {
      "op": "SHL"
    },
    "12531": {
      "op": "SUB"
    },
    "12532": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5248
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12533": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5248
      ],
      "op": "AND",
      "path": "18"
    },
    "12534": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5251,
        5252
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12536": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5248
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12537": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5248
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12538": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5248
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12539": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5242
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x13"
    },
    "12541": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5248
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12543": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5248
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12544": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5248
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12546": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5248
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12547": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5248
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "12548": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5248
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12549": {
      "branch": 227,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5219,
        5252
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12550": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5215,
        5591
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3173"
    },
    "12553": {
      "branch": 227,
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5215,
        5591
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12560": {
      "op": "SHL"
    },
    "12561": {
      "op": "SUB"
    },
    "12562": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 165
    },
    "12563": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "AND",
      "path": "18"
    },
    "12564": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12566": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12567": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12568": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12569": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5331
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x13"
    },
    "12571": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12573": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12574": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12576": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12577": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "12578": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5337
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12579": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5341
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x312E"
    },
    "12582": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5341
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12583": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5340,
        5341
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "12585": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5340,
        5341
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12586": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5341
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3E0B"
    },
    "12589": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "jump": "i",
      "offset": [
        5308,
        5341
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12590": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5308,
        5341
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12597": {
      "op": "SHL"
    },
    "12598": {
      "op": "SUB"
    },
    "12599": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5305
      ],
      "op": "DUP5",
      "path": "18"
    },
    "12600": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5305
      ],
      "op": "AND",
      "path": "18"
    },
    "12601": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5305
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12603": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5305
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12604": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5305
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12605": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5305
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12606": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5299
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x13"
    },
    "12608": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5305
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12610": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5305
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12611": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5305
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12613": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5305
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12614": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5305
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "12615": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5341
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12616": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5341
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12617": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5276,
        5341
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12618": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5363,
        5481
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x316E"
    },
    "12621": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5363,
        5481
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12628": {
      "op": "SHL"
    },
    "12629": {
      "op": "SUB"
    },
    "12630": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5450
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 166
    },
    "12631": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5450
      ],
      "op": "AND",
      "path": "18"
    },
    "12632": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5453,
        5458
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12634": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5450
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12635": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5450
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12636": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5450
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12637": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5444
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x12"
    },
    "12639": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5450
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12641": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5450
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12642": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5450
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12644": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5450
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12645": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5450
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "12646": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5458
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12647": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5458
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12648": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12650": {
      "op": "NOT"
    },
    "12651": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5458
      ],
      "op": "AND",
      "path": "18"
    },
    "12652": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5458
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12653": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5429,
        5458
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12654": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5363,
        5481
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12655": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5215,
        5591
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3194"
    },
    "12658": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5215,
        5591
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12659": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5215,
        5591
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12666": {
      "op": "SHL"
    },
    "12667": {
      "op": "SUB"
    },
    "12668": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5564
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 167
    },
    "12669": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5564
      ],
      "op": "AND",
      "path": "18"
    },
    "12670": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5567,
        5572
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12672": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5564
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12673": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5564
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12674": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5564
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12675": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5558
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x12"
    },
    "12677": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5564
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12679": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5564
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12680": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5564
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12682": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5564
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12683": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5564
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "12684": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5572
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12685": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5572
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12686": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12688": {
      "op": "NOT"
    },
    "12689": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5572
      ],
      "op": "AND",
      "path": "18"
    },
    "12690": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5572
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12691": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5543,
        5572
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12692": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5215,
        5591
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12699": {
      "op": "SHL"
    },
    "12700": {
      "op": "SUB"
    },
    "12701": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 168
    },
    "12702": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "AND",
      "path": "18"
    },
    "12703": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12705": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12706": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12707": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12708": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5633
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x12"
    },
    "12710": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12712": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12713": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12714": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12715": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12717": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12718": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12719": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5637
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "12720": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5644
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12721": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5644
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12722": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12724": {
      "op": "NOT"
    },
    "12725": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5644
      ],
      "op": "AND",
      "path": "18"
    },
    "12726": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5640,
        5644
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "12728": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5644
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12729": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5644
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12730": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5644
      ],
      "op": "OR",
      "path": "18"
    },
    "12731": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5644
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12732": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5644
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12733": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5618,
        5644
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12734": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5711
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 169,
      "value": "0x13"
    },
    "12736": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5715
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12737": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5715
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "12738": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5715
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12739": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5715
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12740": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5715
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12741": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5715
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "12742": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5715
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12743": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5719
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x31CF"
    },
    "12746": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5719
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12747": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5719
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D43"
    },
    "12750": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "jump": "i",
      "offset": [
        5688,
        5719
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12751": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5688,
        5719
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12758": {
      "op": "SHL"
    },
    "12759": {
      "op": "SUB"
    },
    "12760": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5685
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12761": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5685
      ],
      "op": "AND",
      "path": "18"
    },
    "12762": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5685
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12764": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5685
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12765": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5685
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12766": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5685
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12767": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x13"
    },
    "12769": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5685
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12771": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5685
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12772": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5685
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12774": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5685
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12775": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5685
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "12776": {
      "fn": "CardinalNFT._afterTokenTransfer",
      "offset": [
        5658,
        5719
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12777": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "4"
    },
    "12778": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "4"
    },
    "12779": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "4"
    },
    "12780": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "12781": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12782": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12484,
        12488
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "12784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12790": {
      "op": "SHL"
    },
    "12791": {
      "op": "SUB"
    },
    "12792": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "DUP5",
      "path": "4"
    },
    "12793": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "AND",
      "path": "4"
    },
    "12794": {
      "op": "EXTCODESIZE"
    },
    "12795": {
      "op": "ISZERO"
    },
    "12796": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32EF"
    },
    "12799": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12800": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12802": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12803": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "12808": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12810": {
      "op": "SHL"
    },
    "12811": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12812": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12819": {
      "op": "SHL"
    },
    "12820": {
      "op": "SUB"
    },
    "12821": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "DUP6",
      "path": "4"
    },
    "12822": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "AND",
      "path": "4"
    },
    "12823": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12824": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x150B7A02"
    },
    "12829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12830": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3231"
    },
    "12833": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12834": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "12835": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12836": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "DUP10",
      "path": "4"
    },
    "12837": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12838": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "DUP9",
      "path": "4"
    },
    "12839": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "DUP9",
      "path": "4"
    },
    "12841": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12842": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "12844": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "4"
    },
    "12845": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3EB9"
    },
    "12848": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "4"
    },
    "12849": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12850": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12852": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12854": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12855": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP4",
      "path": "4"
    },
    "12857": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SUB",
      "path": "4"
    },
    "12858": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12859": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "12861": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP8",
      "path": "4"
    },
    "12862": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12863": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "12864": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "12865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12866": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "12867": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x324B"
    },
    "12870": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "12873": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "REVERT",
      "path": "4"
    },
    "12875": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12876": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "4"
    },
    "12877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "GAS",
      "path": "4"
    },
    "12878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "CALL",
      "path": "4"
    },
    "12879": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "12880": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "4"
    },
    "12881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "4"
    },
    "12882": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "4"
    },
    "12883": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12884": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "12885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x327B"
    },
    "12888": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12889": {
      "op": "POP"
    },
    "12890": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12892": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12893": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12894": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "12896": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "12897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12898": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "4"
    },
    "12900": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12902": {
      "op": "NOT"
    },
    "12903": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "AND",
      "path": "4"
    },
    "12904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP3",
      "path": "4"
    },
    "12905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "4"
    },
    "12906": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12907": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "12908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3278"
    },
    "12912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "4"
    },
    "12915": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3EF6"
    },
    "12919": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "4"
    },
    "12920": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12921": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "12923": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32D5"
    },
    "12927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "12929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "12932": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32A9"
    },
    "12935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "4"
    },
    "12941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "12943": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "NOT",
      "path": "4"
    },
    "12944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3F"
    },
    "12946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "12947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "4"
    },
    "12948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "AND",
      "path": "4"
    },
    "12949": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "4"
    },
    "12950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "4"
    },
    "12951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "12955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "4"
    },
    "12956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12957": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "12958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "12960": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP5",
      "path": "4"
    },
    "12963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "4"
    },
    "12964": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "12965": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32AE"
    },
    "12968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMP",
      "path": "4"
    },
    "12969": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "12972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "4"
    },
    "12974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12975": {
      "op": "POP"
    },
    "12976": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32CD"
    },
    "12981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 170,
      "value": "0x40"
    },
    "12984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12985": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12991": {
      "op": "SHL"
    },
    "12992": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "12996": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "ADD",
      "path": "4"
    },
    "12997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "13000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E22"
    },
    "13004": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12820,
        12880
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12992,
        12998
      ],
      "op": "DUP1",
      "path": "4"
    },
    "13007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12986,
        12999
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "13008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12977,
        12983
      ],
      "op": "DUP2",
      "path": "4"
    },
    "13009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12973,
        12975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "13011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12969,
        12984
      ],
      "op": "ADD",
      "path": "4"
    },
    "13012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12962,
        13000
      ],
      "op": "REVERT",
      "path": "4"
    },
    "13013": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13018": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13020": {
      "op": "SHL"
    },
    "13021": {
      "op": "SUB"
    },
    "13022": {
      "op": "NOT"
    },
    "13023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "AND",
      "path": "4",
      "statement": 171
    },
    "13024": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "13029": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "13031": {
      "op": "SHL"
    },
    "13032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "EQ",
      "path": "4"
    },
    "13033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13034": {
      "op": "POP"
    },
    "13035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x105D"
    },
    "13038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13040": {
      "op": "POP"
    },
    "13041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13091,
        13095
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 172,
      "value": "0x1"
    },
    "13043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13084,
        13095
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x105D"
    },
    "13046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13084,
        13095
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13047": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13048": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2891,
        2904
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "13050": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2940
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 173,
      "value": "0x3302"
    },
    "13053": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2932,
        2939
      ],
      "op": "DUP3",
      "path": "4"
    },
    "13054": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2931
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2727"
    },
    "13057": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2924,
        2940
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13058": {
      "branch": 243,
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2940
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13059": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3366"
    },
    "13062": {
      "branch": 243,
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13063": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "13065": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "13066": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13070": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13072": {
      "op": "SHL"
    },
    "13073": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP2",
      "path": "4"
    },
    "13074": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "13075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13077": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "13079": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP3",
      "path": "4"
    },
    "13080": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "ADD",
      "path": "4"
    },
    "13081": {
      "op": "MSTORE"
    },
    "13082": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "13084": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13086": {
      "op": "DUP3"
    },
    "13087": {
      "op": "ADD"
    },
    "13088": {
      "op": "MSTORE"
    },
    "13089": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "13122": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13124": {
      "op": "DUP3"
    },
    "13125": {
      "op": "ADD"
    },
    "13126": {
      "op": "MSTORE"
    },
    "13127": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "13143": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "13145": {
      "op": "SHL"
    },
    "13146": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13148": {
      "op": "DUP3"
    },
    "13149": {
      "op": "ADD"
    },
    "13150": {
      "op": "MSTORE"
    },
    "13151": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13153": {
      "op": "ADD"
    },
    "13154": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "13157": {
      "op": "JUMP"
    },
    "13158": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13159": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "13161": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x337D"
    },
    "13164": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "13166": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP1",
      "path": "4"
    },
    "13167": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "13168": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "13170": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "4"
    },
    "13171": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "ADD",
      "path": "4"
    },
    "13172": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13173": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "13174": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "13175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13177": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "4"
    },
    "13178": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "13179": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13180": {
      "fn": "ERC721._baseURI",
      "offset": [
        3388,
        3480
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13181": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13182": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13183": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "POP",
      "path": "4"
    },
    "13184": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3078,
        3079
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 174,
      "value": "0x0"
    },
    "13186": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3060,
        3067
      ],
      "op": "DUP2",
      "path": "4"
    },
    "13187": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3075
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "13188": {
      "branch": 244,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3079
      ],
      "op": "GT",
      "path": "4"
    },
    "13189": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x339D"
    },
    "13192": {
      "branch": 244,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13193": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "13195": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "13196": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "4"
    },
    "13197": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "13199": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "ADD",
      "path": "4"
    },
    "13200": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "13202": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "13203": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "4"
    },
    "13204": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "13206": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP2",
      "path": "4"
    },
    "13207": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "13208": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "POP",
      "path": "4"
    },
    "13209": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2093"
    },
    "13212": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13213": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13214": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3106,
        3113
      ],
      "op": "DUP1",
      "path": "4"
    },
    "13215": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33A7"
    },
    "13218": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3122
      ],
      "op": "DUP5",
      "path": "4"
    },
    "13219": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3486"
    },
    "13222": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13223": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13224": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "13226": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "13227": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "13229": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "ADD",
      "path": "4"
    },
    "13230": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33B8"
    },
    "13233": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "13234": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "13235": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13236": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E8A"
    },
    "13239": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13240": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13241": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "13243": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "13244": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "13246": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "4"
    },
    "13247": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP4",
      "path": "4"
    },
    "13248": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "4"
    },
    "13249": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "4"
    },
    "13250": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "4"
    },
    "13251": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "13252": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13253": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "13255": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "13256": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3140
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "13257": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "13258": {
      "op": "POP"
    },
    "13259": {
      "op": "POP"
    },
    "13260": {
      "op": "POP"
    },
    "13261": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13262": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2624,
        3196
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13269": {
      "op": "SHL"
    },
    "13270": {
      "op": "SUB"
    },
    "13271": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13272": {
      "branch": 247,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "AND",
      "path": "7"
    },
    "13273": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3429"
    },
    "13276": {
      "branch": 247,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13277": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 175,
      "value": "0x3424"
    },
    "13280": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2889,
        2896
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13281": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4015
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 176,
      "value": "0x9"
    },
    "13283": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13284": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "13285": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13287": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13288": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13289": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13290": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        3993
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "13292": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "13294": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13295": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "13297": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13298": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13299": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13300": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13301": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "13302": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 177,
      "value": "0x1"
    },
    "13304": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13305": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "7"
    },
    "13306": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13307": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "13308": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13309": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13310": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13311": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13312": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
    },
    "13345": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "7"
    },
    "13346": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "13347": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3902,
        4063
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13348": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13349": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x344C"
    },
    "13352": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13353": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13354": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2926,
        2928
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13361": {
      "op": "SHL"
    },
    "13362": {
      "op": "SUB"
    },
    "13363": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "7"
    },
    "13364": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2922
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13371": {
      "op": "SHL"
    },
    "13372": {
      "op": "SUB"
    },
    "13373": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "7"
    },
    "13374": {
      "branch": 248,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "EQ",
      "path": "7"
    },
    "13375": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x344C"
    },
    "13378": {
      "branch": 248,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13379": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 178,
      "value": "0x344C"
    },
    "13382": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2977,
        2981
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13383": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2983,
        2990
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13384": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2976
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3584"
    },
    "13387": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13388": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13395": {
      "op": "SHL"
    },
    "13396": {
      "op": "SUB"
    },
    "13397": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13398": {
      "branch": 249,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "AND",
      "path": "7"
    },
    "13399": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3463"
    },
    "13402": {
      "branch": 249,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13403": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 179,
      "value": "0xB4F"
    },
    "13406": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3084,
        3091
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13407": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3083
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3621"
    },
    "13410": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13411": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13412": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3119,
        3123
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13419": {
      "op": "SHL"
    },
    "13420": {
      "op": "SUB"
    },
    "13421": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "7"
    },
    "13422": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3115
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13429": {
      "op": "SHL"
    },
    "13430": {
      "op": "SUB"
    },
    "13431": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "7"
    },
    "13432": {
      "branch": 250,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "EQ",
      "path": "7"
    },
    "13433": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB4F"
    },
    "13436": {
      "branch": 250,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13437": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3179
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 180,
      "value": "0xB4F"
    },
    "13440": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13441": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3171,
        3178
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13442": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3166
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36D0"
    },
    "13445": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3139,
        3179
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13446": {
      "op": "JUMPDEST"
    },
    "13447": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13449": {
      "op": "DUP2"
    },
    "13450": {
      "op": "PUSH2",
      "value": "0x34AA"
    },
    "13453": {
      "op": "JUMPI"
    },
    "13454": {
      "op": "POP"
    },
    "13455": {
      "op": "POP"
    },
    "13456": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13458": {
      "op": "DUP1"
    },
    "13459": {
      "op": "MLOAD"
    },
    "13460": {
      "op": "DUP1"
    },
    "13461": {
      "op": "DUP3"
    },
    "13462": {
      "op": "ADD"
    },
    "13463": {
      "op": "SWAP1"
    },
    "13464": {
      "op": "SWAP2"
    },
    "13465": {
      "op": "MSTORE"
    },
    "13466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13468": {
      "op": "DUP2"
    },
    "13469": {
      "op": "MSTORE"
    },
    "13470": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "13472": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "13474": {
      "op": "SHL"
    },
    "13475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13477": {
      "op": "DUP3"
    },
    "13478": {
      "op": "ADD"
    },
    "13479": {
      "op": "MSTORE"
    },
    "13480": {
      "op": "SWAP1"
    },
    "13481": {
      "jump": "o",
      "op": "JUMP"
    },
    "13482": {
      "op": "JUMPDEST"
    },
    "13483": {
      "op": "DUP2"
    },
    "13484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13486": {
      "op": "JUMPDEST"
    },
    "13487": {
      "op": "DUP2"
    },
    "13488": {
      "op": "ISZERO"
    },
    "13489": {
      "op": "PUSH2",
      "value": "0x34D4"
    },
    "13492": {
      "op": "JUMPI"
    },
    "13493": {
      "op": "DUP1"
    },
    "13494": {
      "op": "PUSH2",
      "value": "0x34BE"
    },
    "13497": {
      "op": "DUP2"
    },
    "13498": {
      "op": "PUSH2",
      "value": "0x3D5B"
    },
    "13501": {
      "jump": "i",
      "op": "JUMP"
    },
    "13502": {
      "op": "JUMPDEST"
    },
    "13503": {
      "op": "SWAP2"
    },
    "13504": {
      "op": "POP"
    },
    "13505": {
      "op": "PUSH2",
      "value": "0x34CD"
    },
    "13508": {
      "op": "SWAP1"
    },
    "13509": {
      "op": "POP"
    },
    "13510": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "13512": {
      "op": "DUP4"
    },
    "13513": {
      "op": "PUSH2",
      "value": "0x3DC1"
    },
    "13516": {
      "jump": "i",
      "op": "JUMP"
    },
    "13517": {
      "op": "JUMPDEST"
    },
    "13518": {
      "op": "SWAP2"
    },
    "13519": {
      "op": "POP"
    },
    "13520": {
      "op": "PUSH2",
      "value": "0x34AE"
    },
    "13523": {
      "op": "JUMP"
    },
    "13524": {
      "op": "JUMPDEST"
    },
    "13525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13527": {
      "op": "DUP2"
    },
    "13528": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13537": {
      "op": "DUP2"
    },
    "13538": {
      "op": "GT"
    },
    "13539": {
      "op": "ISZERO"
    },
    "13540": {
      "op": "PUSH2",
      "value": "0x34EF"
    },
    "13543": {
      "op": "JUMPI"
    },
    "13544": {
      "op": "PUSH2",
      "value": "0x34EF"
    },
    "13547": {
      "op": "PUSH2",
      "value": "0x38C5"
    },
    "13550": {
      "jump": "i",
      "op": "JUMP"
    },
    "13551": {
      "op": "JUMPDEST"
    },
    "13552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13554": {
      "op": "MLOAD"
    },
    "13555": {
      "op": "SWAP1"
    },
    "13556": {
      "op": "DUP1"
    },
    "13557": {
      "op": "DUP3"
    },
    "13558": {
      "op": "MSTORE"
    },
    "13559": {
      "op": "DUP1"
    },
    "13560": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13562": {
      "op": "ADD"
    },
    "13563": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13565": {
      "op": "NOT"
    },
    "13566": {
      "op": "AND"
    },
    "13567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13569": {
      "op": "ADD"
    },
    "13570": {
      "op": "DUP3"
    },
    "13571": {
      "op": "ADD"
    },
    "13572": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13574": {
      "op": "MSTORE"
    },
    "13575": {
      "op": "DUP1"
    },
    "13576": {
      "op": "ISZERO"
    },
    "13577": {
      "op": "PUSH2",
      "value": "0x3519"
    },
    "13580": {
      "op": "JUMPI"
    },
    "13581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13583": {
      "op": "DUP3"
    },
    "13584": {
      "op": "ADD"
    },
    "13585": {
      "op": "DUP2"
    },
    "13586": {
      "op": "DUP1"
    },
    "13587": {
      "op": "CALLDATASIZE"
    },
    "13588": {
      "op": "DUP4"
    },
    "13589": {
      "op": "CALLDATACOPY"
    },
    "13590": {
      "op": "ADD"
    },
    "13591": {
      "op": "SWAP1"
    },
    "13592": {
      "op": "POP"
    },
    "13593": {
      "op": "JUMPDEST"
    },
    "13594": {
      "op": "POP"
    },
    "13595": {
      "op": "SWAP1"
    },
    "13596": {
      "op": "POP"
    },
    "13597": {
      "op": "JUMPDEST"
    },
    "13598": {
      "op": "DUP5"
    },
    "13599": {
      "op": "ISZERO"
    },
    "13600": {
      "op": "PUSH2",
      "value": "0x105D"
    },
    "13603": {
      "op": "JUMPI"
    },
    "13604": {
      "op": "PUSH2",
      "value": "0x352E"
    },
    "13607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13609": {
      "op": "DUP4"
    },
    "13610": {
      "op": "PUSH2",
      "value": "0x3E0B"
    },
    "13613": {
      "jump": "i",
      "op": "JUMP"
    },
    "13614": {
      "op": "JUMPDEST"
    },
    "13615": {
      "op": "SWAP2"
    },
    "13616": {
      "op": "POP"
    },
    "13617": {
      "op": "PUSH2",
      "value": "0x353B"
    },
    "13620": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "13622": {
      "op": "DUP7"
    },
    "13623": {
      "op": "PUSH2",
      "value": "0x3F13"
    },
    "13626": {
      "jump": "i",
      "op": "JUMP"
    },
    "13627": {
      "op": "JUMPDEST"
    },
    "13628": {
      "op": "PUSH2",
      "value": "0x3546"
    },
    "13631": {
      "op": "SWAP1"
    },
    "13632": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "13634": {
      "op": "PUSH2",
      "value": "0x3D43"
    },
    "13637": {
      "jump": "i",
      "op": "JUMP"
    },
    "13638": {
      "op": "JUMPDEST"
    },
    "13639": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "13641": {
      "op": "SHL"
    },
    "13642": {
      "op": "DUP2"
    },
    "13643": {
      "op": "DUP4"
    },
    "13644": {
      "op": "DUP2"
    },
    "13645": {
      "op": "MLOAD"
    },
    "13646": {
      "op": "DUP2"
    },
    "13647": {
      "op": "LT"
    },
    "13648": {
      "op": "PUSH2",
      "value": "0x355B"
    },
    "13651": {
      "op": "JUMPI"
    },
    "13652": {
      "op": "PUSH2",
      "value": "0x355B"
    },
    "13655": {
      "op": "PUSH2",
      "value": "0x3D76"
    },
    "13658": {
      "jump": "i",
      "op": "JUMP"
    },
    "13659": {
      "op": "JUMPDEST"
    },
    "13660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13662": {
      "op": "ADD"
    },
    "13663": {
      "op": "ADD"
    },
    "13664": {
      "op": "SWAP1"
    },
    "13665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13669": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "13671": {
      "op": "SHL"
    },
    "13672": {
      "op": "SUB"
    },
    "13673": {
      "op": "NOT"
    },
    "13674": {
      "op": "AND"
    },
    "13675": {
      "op": "SWAP1"
    },
    "13676": {
      "op": "DUP2"
    },
    "13677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13679": {
      "op": "BYTE"
    },
    "13680": {
      "op": "SWAP1"
    },
    "13681": {
      "op": "MSTORE8"
    },
    "13682": {
      "op": "POP"
    },
    "13683": {
      "op": "PUSH2",
      "value": "0x357D"
    },
    "13686": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "13688": {
      "op": "DUP7"
    },
    "13689": {
      "op": "PUSH2",
      "value": "0x3DC1"
    },
    "13692": {
      "jump": "i",
      "op": "JUMP"
    },
    "13693": {
      "op": "JUMPDEST"
    },
    "13694": {
      "op": "SWAP5"
    },
    "13695": {
      "op": "POP"
    },
    "13696": {
      "op": "PUSH2",
      "value": "0x351D"
    },
    "13699": {
      "op": "JUMP"
    },
    "13700": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13701": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13703": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4992,
        4993
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "13705": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3591"
    },
    "13708": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4984,
        4988
      ],
      "op": "DUP5",
      "path": "7"
    },
    "13709": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4983
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1442"
    },
    "13712": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13713": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13714": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x359B"
    },
    "13717": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13718": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13719": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E0B"
    },
    "13722": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13723": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13724": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5003,
        5021
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13726": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13727": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13728": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13729": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5041
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "13731": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "13733": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13734": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "13736": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13737": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13738": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "13739": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13740": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13741": {
      "op": "POP"
    },
    "13742": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13743": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13744": {
      "branch": 251,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "EQ",
      "path": "7"
    },
    "13745": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35EE"
    },
    "13748": {
      "branch": 251,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13755": {
      "op": "SHL"
    },
    "13756": {
      "op": "SUB"
    },
    "13757": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP5",
      "path": "7"
    },
    "13758": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "AND",
      "path": "7"
    },
    "13759": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5198,
        5217
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13761": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13762": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13763": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13764": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5232
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "13766": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "13768": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13769": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13770": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13771": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "13773": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13774": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13775": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13776": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP6",
      "path": "7"
    },
    "13777": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP5",
      "path": "7"
    },
    "13778": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13779": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13780": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13781": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13782": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13783": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13784": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "13785": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 181
    },
    "13786": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "7"
    },
    "13787": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13788": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13789": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "7"
    },
    "13790": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13791": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13792": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13793": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "13794": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 182
    },
    "13795": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13796": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5402
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "13798": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13799": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13800": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13801": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13802": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13803": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13804": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13805": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "13806": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13807": {
      "op": "POP"
    },
    "13808": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 183,
      "value": "0x0"
    },
    "13810": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13811": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13812": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13813": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5583
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "13815": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "13817": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13818": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13819": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13820": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "13822": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13823": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP5",
      "path": "7"
    },
    "13824": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13825": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "DUP5",
      "path": "7"
    },
    "13826": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13827": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "13828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13834": {
      "op": "SHL"
    },
    "13835": {
      "op": "SUB"
    },
    "13836": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 184
    },
    "13837": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "13838": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "AND",
      "path": "7"
    },
    "13839": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13840": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13841": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5621
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "13843": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13844": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13845": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13846": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13847": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13848": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13849": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13850": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13851": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13852": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13853": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13854": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13855": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5602,
        5643
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "13856": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13857": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13858": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6222
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "13860": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6229
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "13861": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13863": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13864": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3633"
    },
    "13867": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13868": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "13870": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13871": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E0B"
    },
    "13874": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13875": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13876": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6243,
        6261
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13878": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13879": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13880": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13881": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6279
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "13883": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "13885": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13886": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "13888": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13889": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13890": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "13891": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6642
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "13893": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13894": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "13895": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "13896": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "13897": {
      "op": "POP"
    },
    "13898": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13899": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "13900": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "DUP5",
      "path": "7"
    },
    "13901": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13902": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13903": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "LT",
      "path": "7"
    },
    "13904": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x365B"
    },
    "13907": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13908": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x365B"
    },
    "13911": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D76"
    },
    "13914": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13915": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13916": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13917": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13919": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13920": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "13922": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13924": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13925": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "ADD",
      "path": "7"
    },
    "13926": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "13927": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13928": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "POP",
      "path": "7"
    },
    "13929": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6694,
        6705
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 185
    },
    "13930": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6679
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "13932": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6680,
        6690
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13933": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13934": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "13935": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13936": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "LT",
      "path": "7"
    },
    "13937": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x367C"
    },
    "13940": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13941": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x367C"
    },
    "13944": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D76"
    },
    "13947": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13948": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13949": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13951": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13952": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13953": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13954": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "13956": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13957": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13958": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13959": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13960": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13961": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "ADD",
      "path": "7"
    },
    "13962": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "13963": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13964": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "13965": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "13966": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 186
    },
    "13967": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13968": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13969": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6788
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "13971": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13972": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13973": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13974": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "13976": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13977": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13978": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13979": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "DUP5",
      "path": "7"
    },
    "13980": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13981": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "13982": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 187
    },
    "13983": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13984": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13985": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13986": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "13987": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6935,
        6966
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "13988": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6986
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 188,
      "value": "0x9"
    },
    "13990": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13991": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "13992": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13993": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36B4"
    },
    "13996": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13997": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36B4"
    },
    "14000": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E74"
    },
    "14003": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14004": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14005": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "14007": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14008": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SUB",
      "path": "7"
    },
    "14009": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14010": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14011": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14012": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14014": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14015": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "14017": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14019": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "14020": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "ADD",
      "path": "7"
    },
    "14021": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14023": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14024": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "14025": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14026": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "14027": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "7"
    },
    "14028": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "7"
    },
    "14029": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "7"
    },
    "14030": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "POP",
      "path": "7"
    },
    "14031": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14032": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14033": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3574,
        3588
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14035": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36DB"
    },
    "14038": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3608,
        3610
      ],
      "op": "DUP4",
      "path": "7"
    },
    "14039": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1442"
    },
    "14042": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14043": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14050": {
      "op": "SHL"
    },
    "14051": {
      "op": "SUB"
    },
    "14052": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 189
    },
    "14053": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "14054": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "7"
    },
    "14055": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14057": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14058": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14059": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14060": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3633
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "14062": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "14064": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14065": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14066": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14067": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14069": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14070": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP4",
      "path": "7"
    },
    "14071": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "14072": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP7",
      "path": "7"
    },
    "14073": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP5",
      "path": "7"
    },
    "14074": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14075": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP3",
      "path": "7"
    },
    "14076": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14077": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14078": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP4",
      "path": "7"
    },
    "14079": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "14080": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "DUP6",
      "path": "7"
    },
    "14081": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14082": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "14083": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP4",
      "path": "7",
      "statement": 190
    },
    "14084": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "DUP3",
      "path": "7"
    },
    "14085": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14086": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3682
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "14088": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14089": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14090": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14091": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14092": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14093": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "14094": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14095": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14096": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14097": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "14098": {
      "op": "POP"
    },
    "14099": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14100": {
      "op": "JUMPDEST"
    },
    "14101": {
      "op": "DUP3"
    },
    "14102": {
      "op": "DUP1"
    },
    "14103": {
      "op": "SLOAD"
    },
    "14104": {
      "op": "PUSH2",
      "value": "0x3720"
    },
    "14107": {
      "op": "SWAP1"
    },
    "14108": {
      "op": "PUSH2",
      "value": "0x3C6C"
    },
    "14111": {
      "jump": "i",
      "op": "JUMP"
    },
    "14112": {
      "op": "JUMPDEST"
    },
    "14113": {
      "op": "SWAP1"
    },
    "14114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14116": {
      "op": "MSTORE"
    },
    "14117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14121": {
      "op": "KECCAK256"
    },
    "14122": {
      "op": "SWAP1"
    },
    "14123": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14125": {
      "op": "ADD"
    },
    "14126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14128": {
      "op": "SWAP1"
    },
    "14129": {
      "op": "DIV"
    },
    "14130": {
      "op": "DUP2"
    },
    "14131": {
      "op": "ADD"
    },
    "14132": {
      "op": "SWAP3"
    },
    "14133": {
      "op": "DUP3"
    },
    "14134": {
      "op": "PUSH2",
      "value": "0x3742"
    },
    "14137": {
      "op": "JUMPI"
    },
    "14138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14140": {
      "op": "DUP6"
    },
    "14141": {
      "op": "SSTORE"
    },
    "14142": {
      "op": "PUSH2",
      "value": "0x3788"
    },
    "14145": {
      "op": "JUMP"
    },
    "14146": {
      "op": "JUMPDEST"
    },
    "14147": {
      "op": "DUP3"
    },
    "14148": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14150": {
      "op": "LT"
    },
    "14151": {
      "op": "PUSH2",
      "value": "0x375B"
    },
    "14154": {
      "op": "JUMPI"
    },
    "14155": {
      "op": "DUP1"
    },
    "14156": {
      "op": "MLOAD"
    },
    "14157": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14159": {
      "op": "NOT"
    },
    "14160": {
      "op": "AND"
    },
    "14161": {
      "op": "DUP4"
    },
    "14162": {
      "op": "DUP1"
    },
    "14163": {
      "op": "ADD"
    },
    "14164": {
      "op": "OR"
    },
    "14165": {
      "op": "DUP6"
    },
    "14166": {
      "op": "SSTORE"
    },
    "14167": {
      "op": "PUSH2",
      "value": "0x3788"
    },
    "14170": {
      "op": "JUMP"
    },
    "14171": {
      "op": "JUMPDEST"
    },
    "14172": {
      "op": "DUP3"
    },
    "14173": {
      "op": "DUP1"
    },
    "14174": {
      "op": "ADD"
    },
    "14175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14177": {
      "op": "ADD"
    },
    "14178": {
      "op": "DUP6"
    },
    "14179": {
      "op": "SSTORE"
    },
    "14180": {
      "op": "DUP3"
    },
    "14181": {
      "op": "ISZERO"
    },
    "14182": {
      "op": "PUSH2",
      "value": "0x3788"
    },
    "14185": {
      "op": "JUMPI"
    },
    "14186": {
      "op": "SWAP2"
    },
    "14187": {
      "op": "DUP3"
    },
    "14188": {
      "op": "ADD"
    },
    "14189": {
      "op": "JUMPDEST"
    },
    "14190": {
      "op": "DUP3"
    },
    "14191": {
      "op": "DUP2"
    },
    "14192": {
      "op": "GT"
    },
    "14193": {
      "op": "ISZERO"
    },
    "14194": {
      "op": "PUSH2",
      "value": "0x3788"
    },
    "14197": {
      "op": "JUMPI"
    },
    "14198": {
      "op": "DUP3"
    },
    "14199": {
      "op": "MLOAD"
    },
    "14200": {
      "op": "DUP3"
    },
    "14201": {
      "op": "SSTORE"
    },
    "14202": {
      "op": "SWAP2"
    },
    "14203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14205": {
      "op": "ADD"
    },
    "14206": {
      "op": "SWAP2"
    },
    "14207": {
      "op": "SWAP1"
    },
    "14208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14210": {
      "op": "ADD"
    },
    "14211": {
      "op": "SWAP1"
    },
    "14212": {
      "op": "PUSH2",
      "value": "0x376D"
    },
    "14215": {
      "op": "JUMP"
    },
    "14216": {
      "op": "JUMPDEST"
    },
    "14217": {
      "op": "POP"
    },
    "14218": {
      "op": "PUSH2",
      "value": "0x3794"
    },
    "14221": {
      "op": "SWAP3"
    },
    "14222": {
      "op": "SWAP2"
    },
    "14223": {
      "op": "POP"
    },
    "14224": {
      "op": "PUSH2",
      "value": "0x3798"
    },
    "14227": {
      "jump": "i",
      "op": "JUMP"
    },
    "14228": {
      "op": "JUMPDEST"
    },
    "14229": {
      "op": "POP"
    },
    "14230": {
      "op": "SWAP1"
    },
    "14231": {
      "jump": "o",
      "op": "JUMP"
    },
    "14232": {
      "op": "JUMPDEST"
    },
    "14233": {
      "op": "JUMPDEST"
    },
    "14234": {
      "op": "DUP1"
    },
    "14235": {
      "op": "DUP3"
    },
    "14236": {
      "op": "GT"
    },
    "14237": {
      "op": "ISZERO"
    },
    "14238": {
      "op": "PUSH2",
      "value": "0x3794"
    },
    "14241": {
      "op": "JUMPI"
    },
    "14242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14244": {
      "op": "DUP2"
    },
    "14245": {
      "op": "SSTORE"
    },
    "14246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14248": {
      "op": "ADD"
    },
    "14249": {
      "op": "PUSH2",
      "value": "0x3799"
    },
    "14252": {
      "op": "JUMP"
    },
    "14253": {
      "op": "JUMPDEST"
    },
    "14254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14258": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14260": {
      "op": "SHL"
    },
    "14261": {
      "op": "SUB"
    },
    "14262": {
      "op": "NOT"
    },
    "14263": {
      "op": "DUP2"
    },
    "14264": {
      "op": "AND"
    },
    "14265": {
      "op": "DUP2"
    },
    "14266": {
      "op": "EQ"
    },
    "14267": {
      "op": "PUSH2",
      "value": "0x21E0"
    },
    "14270": {
      "op": "JUMPI"
    },
    "14271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14273": {
      "op": "DUP1"
    },
    "14274": {
      "op": "REVERT"
    },
    "14275": {
      "op": "JUMPDEST"
    },
    "14276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14280": {
      "op": "DUP3"
    },
    "14281": {
      "op": "DUP5"
    },
    "14282": {
      "op": "SUB"
    },
    "14283": {
      "op": "SLT"
    },
    "14284": {
      "op": "ISZERO"
    },
    "14285": {
      "op": "PUSH2",
      "value": "0x37D5"
    },
    "14288": {
      "op": "JUMPI"
    },
    "14289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14291": {
      "op": "DUP1"
    },
    "14292": {
      "op": "REVERT"
    },
    "14293": {
      "op": "JUMPDEST"
    },
    "14294": {
      "op": "DUP2"
    },
    "14295": {
      "op": "CALLDATALOAD"
    },
    "14296": {
      "op": "PUSH2",
      "value": "0x2093"
    },
    "14299": {
      "op": "DUP2"
    },
    "14300": {
      "op": "PUSH2",
      "value": "0x37AD"
    },
    "14303": {
      "jump": "i",
      "op": "JUMP"
    },
    "14304": {
      "op": "JUMPDEST"
    },
    "14305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14307": {
      "op": "JUMPDEST"
    },
    "14308": {
      "op": "DUP4"
    },
    "14309": {
      "op": "DUP2"
    },
    "14310": {
      "op": "LT"
    },
    "14311": {
      "op": "ISZERO"
    },
    "14312": {
      "op": "PUSH2",
      "value": "0x37FB"
    },
    "14315": {
      "op": "JUMPI"
    },
    "14316": {
      "op": "DUP2"
    },
    "14317": {
      "op": "DUP2"
    },
    "14318": {
      "op": "ADD"
    },
    "14319": {
      "op": "MLOAD"
    },
    "14320": {
      "op": "DUP4"
    },
    "14321": {
      "op": "DUP3"
    },
    "14322": {
      "op": "ADD"
    },
    "14323": {
      "op": "MSTORE"
    },
    "14324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14326": {
      "op": "ADD"
    },
    "14327": {
      "op": "PUSH2",
      "value": "0x37E3"
    },
    "14330": {
      "op": "JUMP"
    },
    "14331": {
      "op": "JUMPDEST"
    },
    "14332": {
      "op": "DUP4"
    },
    "14333": {
      "op": "DUP2"
    },
    "14334": {
      "op": "GT"
    },
    "14335": {
      "op": "ISZERO"
    },
    "14336": {
      "op": "PUSH2",
      "value": "0x1C99"
    },
    "14339": {
      "op": "JUMPI"
    },
    "14340": {
      "op": "POP"
    },
    "14341": {
      "op": "POP"
    },
    "14342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14344": {
      "op": "SWAP2"
    },
    "14345": {
      "op": "ADD"
    },
    "14346": {
      "op": "MSTORE"
    },
    "14347": {
      "jump": "o",
      "op": "JUMP"
    },
    "14348": {
      "op": "JUMPDEST"
    },
    "14349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14351": {
      "op": "DUP2"
    },
    "14352": {
      "op": "MLOAD"
    },
    "14353": {
      "op": "DUP1"
    },
    "14354": {
      "op": "DUP5"
    },
    "14355": {
      "op": "MSTORE"
    },
    "14356": {
      "op": "PUSH2",
      "value": "0x3824"
    },
    "14359": {
      "op": "DUP2"
    },
    "14360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14362": {
      "op": "DUP7"
    },
    "14363": {
      "op": "ADD"
    },
    "14364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14366": {
      "op": "DUP7"
    },
    "14367": {
      "op": "ADD"
    },
    "14368": {
      "op": "PUSH2",
      "value": "0x37E0"
    },
    "14371": {
      "jump": "i",
      "op": "JUMP"
    },
    "14372": {
      "op": "JUMPDEST"
    },
    "14373": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14375": {
      "op": "ADD"
    },
    "14376": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14378": {
      "op": "NOT"
    },
    "14379": {
      "op": "AND"
    },
    "14380": {
      "op": "SWAP3"
    },
    "14381": {
      "op": "SWAP1"
    },
    "14382": {
      "op": "SWAP3"
    },
    "14383": {
      "op": "ADD"
    },
    "14384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14386": {
      "op": "ADD"
    },
    "14387": {
      "op": "SWAP3"
    },
    "14388": {
      "op": "SWAP2"
    },
    "14389": {
      "op": "POP"
    },
    "14390": {
      "op": "POP"
    },
    "14391": {
      "jump": "o",
      "op": "JUMP"
    },
    "14392": {
      "op": "JUMPDEST"
    },
    "14393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14395": {
      "op": "DUP2"
    },
    "14396": {
      "op": "MSTORE"
    },
    "14397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14399": {
      "op": "PUSH2",
      "value": "0x2093"
    },
    "14402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14404": {
      "op": "DUP4"
    },
    "14405": {
      "op": "ADD"
    },
    "14406": {
      "op": "DUP5"
    },
    "14407": {
      "op": "PUSH2",
      "value": "0x380C"
    },
    "14410": {
      "jump": "i",
      "op": "JUMP"
    },
    "14411": {
      "op": "JUMPDEST"
    },
    "14412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14416": {
      "op": "DUP3"
    },
    "14417": {
      "op": "DUP5"
    },
    "14418": {
      "op": "SUB"
    },
    "14419": {
      "op": "SLT"
    },
    "14420": {
      "op": "ISZERO"
    },
    "14421": {
      "op": "PUSH2",
      "value": "0x385D"
    },
    "14424": {
      "op": "JUMPI"
    },
    "14425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14427": {
      "op": "DUP1"
    },
    "14428": {
      "op": "REVERT"
    },
    "14429": {
      "op": "JUMPDEST"
    },
    "14430": {
      "op": "POP"
    },
    "14431": {
      "op": "CALLDATALOAD"
    },
    "14432": {
      "op": "SWAP2"
    },
    "14433": {
      "op": "SWAP1"
    },
    "14434": {
      "op": "POP"
    },
    "14435": {
      "jump": "o",
      "op": "JUMP"
    },
    "14436": {
      "op": "JUMPDEST"
    },
    "14437": {
      "op": "DUP1"
    },
    "14438": {
      "op": "CALLDATALOAD"
    },
    "14439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14445": {
      "op": "SHL"
    },
    "14446": {
      "op": "SUB"
    },
    "14447": {
      "op": "DUP2"
    },
    "14448": {
      "op": "AND"
    },
    "14449": {
      "op": "DUP2"
    },
    "14450": {
      "op": "EQ"
    },
    "14451": {
      "op": "PUSH2",
      "value": "0x387B"
    },
    "14454": {
      "op": "JUMPI"
    },
    "14455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14457": {
      "op": "DUP1"
    },
    "14458": {
      "op": "REVERT"
    },
    "14459": {
      "op": "JUMPDEST"
    },
    "14460": {
      "op": "SWAP2"
    },
    "14461": {
      "op": "SWAP1"
    },
    "14462": {
      "op": "POP"
    },
    "14463": {
      "jump": "o",
      "op": "JUMP"
    },
    "14464": {
      "op": "JUMPDEST"
    },
    "14465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14467": {
      "op": "DUP1"
    },
    "14468": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14470": {
      "op": "DUP4"
    },
    "14471": {
      "op": "DUP6"
    },
    "14472": {
      "op": "SUB"
    },
    "14473": {
      "op": "SLT"
    },
    "14474": {
      "op": "ISZERO"
    },
    "14475": {
      "op": "PUSH2",
      "value": "0x3893"
    },
    "14478": {
      "op": "JUMPI"
    },
    "14479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14481": {
      "op": "DUP1"
    },
    "14482": {
      "op": "REVERT"
    },
    "14483": {
      "op": "JUMPDEST"
    },
    "14484": {
      "op": "PUSH2",
      "value": "0x389C"
    },
    "14487": {
      "op": "DUP4"
    },
    "14488": {
      "op": "PUSH2",
      "value": "0x3864"
    },
    "14491": {
      "jump": "i",
      "op": "JUMP"
    },
    "14492": {
      "op": "JUMPDEST"
    },
    "14493": {
      "op": "SWAP5"
    },
    "14494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14496": {
      "op": "SWAP4"
    },
    "14497": {
      "op": "SWAP1"
    },
    "14498": {
      "op": "SWAP4"
    },
    "14499": {
      "op": "ADD"
    },
    "14500": {
      "op": "CALLDATALOAD"
    },
    "14501": {
      "op": "SWAP4"
    },
    "14502": {
      "op": "POP"
    },
    "14503": {
      "op": "POP"
    },
    "14504": {
      "op": "POP"
    },
    "14505": {
      "jump": "o",
      "op": "JUMP"
    },
    "14506": {
      "op": "JUMPDEST"
    },
    "14507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14511": {
      "op": "DUP3"
    },
    "14512": {
      "op": "DUP5"
    },
    "14513": {
      "op": "SUB"
    },
    "14514": {
      "op": "SLT"
    },
    "14515": {
      "op": "ISZERO"
    },
    "14516": {
      "op": "PUSH2",
      "value": "0x38BC"
    },
    "14519": {
      "op": "JUMPI"
    },
    "14520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14522": {
      "op": "DUP1"
    },
    "14523": {
      "op": "REVERT"
    },
    "14524": {
      "op": "JUMPDEST"
    },
    "14525": {
      "op": "PUSH2",
      "value": "0x2093"
    },
    "14528": {
      "op": "DUP3"
    },
    "14529": {
      "op": "PUSH2",
      "value": "0x3864"
    },
    "14532": {
      "jump": "i",
      "op": "JUMP"
    },
    "14533": {
      "op": "JUMPDEST"
    },
    "14534": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14539": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14541": {
      "op": "SHL"
    },
    "14542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14544": {
      "op": "MSTORE"
    },
    "14545": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "14547": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14549": {
      "op": "MSTORE"
    },
    "14550": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14554": {
      "op": "REVERT"
    },
    "14555": {
      "op": "JUMPDEST"
    },
    "14556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14558": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14567": {
      "op": "DUP1"
    },
    "14568": {
      "op": "DUP5"
    },
    "14569": {
      "op": "GT"
    },
    "14570": {
      "op": "ISZERO"
    },
    "14571": {
      "op": "PUSH2",
      "value": "0x38F6"
    },
    "14574": {
      "op": "JUMPI"
    },
    "14575": {
      "op": "PUSH2",
      "value": "0x38F6"
    },
    "14578": {
      "op": "PUSH2",
      "value": "0x38C5"
    },
    "14581": {
      "jump": "i",
      "op": "JUMP"
    },
    "14582": {
      "op": "JUMPDEST"
    },
    "14583": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14585": {
      "op": "MLOAD"
    },
    "14586": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14588": {
      "op": "DUP6"
    },
    "14589": {
      "op": "ADD"
    },
    "14590": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14592": {
      "op": "NOT"
    },
    "14593": {
      "op": "SWAP1"
    },
    "14594": {
      "op": "DUP2"
    },
    "14595": {
      "op": "AND"
    },
    "14596": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "14598": {
      "op": "ADD"
    },
    "14599": {
      "op": "AND"
    },
    "14600": {
      "op": "DUP2"
    },
    "14601": {
      "op": "ADD"
    },
    "14602": {
      "op": "SWAP1"
    },
    "14603": {
      "op": "DUP3"
    },
    "14604": {
      "op": "DUP3"
    },
    "14605": {
      "op": "GT"
    },
    "14606": {
      "op": "DUP2"
    },
    "14607": {
      "op": "DUP4"
    },
    "14608": {
      "op": "LT"
    },
    "14609": {
      "op": "OR"
    },
    "14610": {
      "op": "ISZERO"
    },
    "14611": {
      "op": "PUSH2",
      "value": "0x391E"
    },
    "14614": {
      "op": "JUMPI"
    },
    "14615": {
      "op": "PUSH2",
      "value": "0x391E"
    },
    "14618": {
      "op": "PUSH2",
      "value": "0x38C5"
    },
    "14621": {
      "jump": "i",
      "op": "JUMP"
    },
    "14622": {
      "op": "JUMPDEST"
    },
    "14623": {
      "op": "DUP2"
    },
    "14624": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14626": {
      "op": "MSTORE"
    },
    "14627": {
      "op": "DUP1"
    },
    "14628": {
      "op": "SWAP4"
    },
    "14629": {
      "op": "POP"
    },
    "14630": {
      "op": "DUP6"
    },
    "14631": {
      "op": "DUP2"
    },
    "14632": {
      "op": "MSTORE"
    },
    "14633": {
      "op": "DUP7"
    },
    "14634": {
      "op": "DUP7"
    },
    "14635": {
      "op": "DUP7"
    },
    "14636": {
      "op": "ADD"
    },
    "14637": {
      "op": "GT"
    },
    "14638": {
      "op": "ISZERO"
    },
    "14639": {
      "op": "PUSH2",
      "value": "0x3937"
    },
    "14642": {
      "op": "JUMPI"
    },
    "14643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14645": {
      "op": "DUP1"
    },
    "14646": {
      "op": "REVERT"
    },
    "14647": {
      "op": "JUMPDEST"
    },
    "14648": {
      "op": "DUP6"
    },
    "14649": {
      "op": "DUP6"
    },
    "14650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14652": {
      "op": "DUP4"
    },
    "14653": {
      "op": "ADD"
    },
    "14654": {
      "op": "CALLDATACOPY"
    },
    "14655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14659": {
      "op": "DUP8"
    },
    "14660": {
      "op": "DUP4"
    },
    "14661": {
      "op": "ADD"
    },
    "14662": {
      "op": "ADD"
    },
    "14663": {
      "op": "MSTORE"
    },
    "14664": {
      "op": "POP"
    },
    "14665": {
      "op": "POP"
    },
    "14666": {
      "op": "POP"
    },
    "14667": {
      "op": "SWAP4"
    },
    "14668": {
      "op": "SWAP3"
    },
    "14669": {
      "op": "POP"
    },
    "14670": {
      "op": "POP"
    },
    "14671": {
      "op": "POP"
    },
    "14672": {
      "jump": "o",
      "op": "JUMP"
    },
    "14673": {
      "op": "JUMPDEST"
    },
    "14674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14676": {
      "op": "DUP3"
    },
    "14677": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14679": {
      "op": "DUP4"
    },
    "14680": {
      "op": "ADD"
    },
    "14681": {
      "op": "SLT"
    },
    "14682": {
      "op": "PUSH2",
      "value": "0x3962"
    },
    "14685": {
      "op": "JUMPI"
    },
    "14686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14688": {
      "op": "DUP1"
    },
    "14689": {
      "op": "REVERT"
    },
    "14690": {
      "op": "JUMPDEST"
    },
    "14691": {
      "op": "PUSH2",
      "value": "0x2093"
    },
    "14694": {
      "op": "DUP4"
    },
    "14695": {
      "op": "DUP4"
    },
    "14696": {
      "op": "CALLDATALOAD"
    },
    "14697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14699": {
      "op": "DUP6"
    },
    "14700": {
      "op": "ADD"
    },
    "14701": {
      "op": "PUSH2",
      "value": "0x38DB"
    },
    "14704": {
      "jump": "i",
      "op": "JUMP"
    },
    "14705": {
      "op": "JUMPDEST"
    },
    "14706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14708": {
      "op": "DUP1"
    },
    "14709": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14711": {
      "op": "DUP4"
    },
    "14712": {
      "op": "DUP6"
    },
    "14713": {
      "op": "SUB"
    },
    "14714": {
      "op": "SLT"
    },
    "14715": {
      "op": "ISZERO"
    },
    "14716": {
      "op": "PUSH2",
      "value": "0x3984"
    },
    "14719": {
      "op": "JUMPI"
    },
    "14720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14722": {
      "op": "DUP1"
    },
    "14723": {
      "op": "REVERT"
    },
    "14724": {
      "op": "JUMPDEST"
    },
    "14725": {
      "op": "DUP3"
    },
    "14726": {
      "op": "CALLDATALOAD"
    },
    "14727": {
      "op": "SWAP2"
    },
    "14728": {
      "op": "POP"
    },
    "14729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14731": {
      "op": "DUP4"
    },
    "14732": {
      "op": "ADD"
    },
    "14733": {
      "op": "CALLDATALOAD"
    },
    "14734": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14743": {
      "op": "DUP2"
    },
    "14744": {
      "op": "GT"
    },
    "14745": {
      "op": "ISZERO"
    },
    "14746": {
      "op": "PUSH2",
      "value": "0x39A2"
    },
    "14749": {
      "op": "JUMPI"
    },
    "14750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14752": {
      "op": "DUP1"
    },
    "14753": {
      "op": "REVERT"
    },
    "14754": {
      "op": "JUMPDEST"
    },
    "14755": {
      "op": "PUSH2",
      "value": "0x39AE"
    },
    "14758": {
      "op": "DUP6"
    },
    "14759": {
      "op": "DUP3"
    },
    "14760": {
      "op": "DUP7"
    },
    "14761": {
      "op": "ADD"
    },
    "14762": {
      "op": "PUSH2",
      "value": "0x3951"
    },
    "14765": {
      "jump": "i",
      "op": "JUMP"
    },
    "14766": {
      "op": "JUMPDEST"
    },
    "14767": {
      "op": "SWAP2"
    },
    "14768": {
      "op": "POP"
    },
    "14769": {
      "op": "POP"
    },
    "14770": {
      "op": "SWAP3"
    },
    "14771": {
      "op": "POP"
    },
    "14772": {
      "op": "SWAP3"
    },
    "14773": {
      "op": "SWAP1"
    },
    "14774": {
      "op": "POP"
    },
    "14775": {
      "jump": "o",
      "op": "JUMP"
    },
    "14776": {
      "op": "JUMPDEST"
    },
    "14777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14779": {
      "op": "DUP1"
    },
    "14780": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14782": {
      "op": "DUP4"
    },
    "14783": {
      "op": "DUP6"
    },
    "14784": {
      "op": "SUB"
    },
    "14785": {
      "op": "SLT"
    },
    "14786": {
      "op": "ISZERO"
    },
    "14787": {
      "op": "PUSH2",
      "value": "0x39CB"
    },
    "14790": {
      "op": "JUMPI"
    },
    "14791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14793": {
      "op": "DUP1"
    },
    "14794": {
      "op": "REVERT"
    },
    "14795": {
      "op": "JUMPDEST"
    },
    "14796": {
      "op": "POP"
    },
    "14797": {
      "op": "POP"
    },
    "14798": {
      "op": "DUP1"
    },
    "14799": {
      "op": "CALLDATALOAD"
    },
    "14800": {
      "op": "SWAP3"
    },
    "14801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14803": {
      "op": "SWAP1"
    },
    "14804": {
      "op": "SWAP2"
    },
    "14805": {
      "op": "ADD"
    },
    "14806": {
      "op": "CALLDATALOAD"
    },
    "14807": {
      "op": "SWAP2"
    },
    "14808": {
      "op": "POP"
    },
    "14809": {
      "jump": "o",
      "op": "JUMP"
    },
    "14810": {
      "op": "JUMPDEST"
    },
    "14811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14813": {
      "op": "DUP1"
    },
    "14814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14816": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14818": {
      "op": "DUP5"
    },
    "14819": {
      "op": "DUP7"
    },
    "14820": {
      "op": "SUB"
    },
    "14821": {
      "op": "SLT"
    },
    "14822": {
      "op": "ISZERO"
    },
    "14823": {
      "op": "PUSH2",
      "value": "0x39EF"
    },
    "14826": {
      "op": "JUMPI"
    },
    "14827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14829": {
      "op": "DUP1"
    },
    "14830": {
      "op": "REVERT"
    },
    "14831": {
      "op": "JUMPDEST"
    },
    "14832": {
      "op": "PUSH2",
      "value": "0x39F8"
    },
    "14835": {
      "op": "DUP5"
    },
    "14836": {
      "op": "PUSH2",
      "value": "0x3864"
    },
    "14839": {
      "jump": "i",
      "op": "JUMP"
    },
    "14840": {
      "op": "JUMPDEST"
    },
    "14841": {
      "op": "SWAP3"
    },
    "14842": {
      "op": "POP"
    },
    "14843": {
      "op": "PUSH2",
      "value": "0x3A06"
    },
    "14846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14848": {
      "op": "DUP6"
    },
    "14849": {
      "op": "ADD"
    },
    "14850": {
      "op": "PUSH2",
      "value": "0x3864"
    },
    "14853": {
      "jump": "i",
      "op": "JUMP"
    },
    "14854": {
      "op": "JUMPDEST"
    },
    "14855": {
      "op": "SWAP2"
    },
    "14856": {
      "op": "POP"
    },
    "14857": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14859": {
      "op": "DUP5"
    },
    "14860": {
      "op": "ADD"
    },
    "14861": {
      "op": "CALLDATALOAD"
    },
    "14862": {
      "op": "SWAP1"
    },
    "14863": {
      "op": "POP"
    },
    "14864": {
      "op": "SWAP3"
    },
    "14865": {
      "op": "POP"
    },
    "14866": {
      "op": "SWAP3"
    },
    "14867": {
      "op": "POP"
    },
    "14868": {
      "op": "SWAP3"
    },
    "14869": {
      "jump": "o",
      "op": "JUMP"
    },
    "14870": {
      "op": "JUMPDEST"
    },
    "14871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14875": {
      "op": "DUP1"
    },
    "14876": {
      "op": "DUP4"
    },
    "14877": {
      "op": "ADD"
    },
    "14878": {
      "op": "DUP2"
    },
    "14879": {
      "op": "DUP5"
    },
    "14880": {
      "op": "MSTORE"
    },
    "14881": {
      "op": "DUP1"
    },
    "14882": {
      "op": "DUP6"
    },
    "14883": {
      "op": "MLOAD"
    },
    "14884": {
      "op": "DUP1"
    },
    "14885": {
      "op": "DUP4"
    },
    "14886": {
      "op": "MSTORE"
    },
    "14887": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14889": {
      "op": "DUP7"
    },
    "14890": {
      "op": "ADD"
    },
    "14891": {
      "op": "SWAP2"
    },
    "14892": {
      "op": "POP"
    },
    "14893": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14895": {
      "op": "DUP2"
    },
    "14896": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14898": {
      "op": "SHL"
    },
    "14899": {
      "op": "DUP8"
    },
    "14900": {
      "op": "ADD"
    },
    "14901": {
      "op": "ADD"
    },
    "14902": {
      "op": "SWAP3"
    },
    "14903": {
      "op": "POP"
    },
    "14904": {
      "op": "DUP4"
    },
    "14905": {
      "op": "DUP8"
    },
    "14906": {
      "op": "ADD"
    },
    "14907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14909": {
      "op": "JUMPDEST"
    },
    "14910": {
      "op": "DUP3"
    },
    "14911": {
      "op": "DUP2"
    },
    "14912": {
      "op": "LT"
    },
    "14913": {
      "op": "ISZERO"
    },
    "14914": {
      "op": "PUSH2",
      "value": "0x3A6B"
    },
    "14917": {
      "op": "JUMPI"
    },
    "14918": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "14920": {
      "op": "NOT"
    },
    "14921": {
      "op": "DUP9"
    },
    "14922": {
      "op": "DUP7"
    },
    "14923": {
      "op": "SUB"
    },
    "14924": {
      "op": "ADD"
    },
    "14925": {
      "op": "DUP5"
    },
    "14926": {
      "op": "MSTORE"
    },
    "14927": {
      "op": "PUSH2",
      "value": "0x3A59"
    },
    "14930": {
      "op": "DUP6"
    },
    "14931": {
      "op": "DUP4"
    },
    "14932": {
      "op": "MLOAD"
    },
    "14933": {
      "op": "PUSH2",
      "value": "0x380C"
    },
    "14936": {
      "jump": "i",
      "op": "JUMP"
    },
    "14937": {
      "op": "JUMPDEST"
    },
    "14938": {
      "op": "SWAP5"
    },
    "14939": {
      "op": "POP"
    },
    "14940": {
      "op": "SWAP3"
    },
    "14941": {
      "op": "DUP6"
    },
    "14942": {
      "op": "ADD"
    },
    "14943": {
      "op": "SWAP3"
    },
    "14944": {
      "op": "SWAP1"
    },
    "14945": {
      "op": "DUP6"
    },
    "14946": {
      "op": "ADD"
    },
    "14947": {
      "op": "SWAP1"
    },
    "14948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14950": {
      "op": "ADD"
    },
    "14951": {
      "op": "PUSH2",
      "value": "0x3A3D"
    },
    "14954": {
      "op": "JUMP"
    },
    "14955": {
      "op": "JUMPDEST"
    },
    "14956": {
      "op": "POP"
    },
    "14957": {
      "op": "SWAP3"
    },
    "14958": {
      "op": "SWAP8"
    },
    "14959": {
      "op": "SWAP7"
    },
    "14960": {
      "op": "POP"
    },
    "14961": {
      "op": "POP"
    },
    "14962": {
      "op": "POP"
    },
    "14963": {
      "op": "POP"
    },
    "14964": {
      "op": "POP"
    },
    "14965": {
      "op": "POP"
    },
    "14966": {
      "op": "POP"
    },
    "14967": {
      "jump": "o",
      "op": "JUMP"
    },
    "14968": {
      "op": "JUMPDEST"
    },
    "14969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14971": {
      "op": "DUP1"
    },
    "14972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14974": {
      "op": "DUP1"
    },
    "14975": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14977": {
      "op": "DUP6"
    },
    "14978": {
      "op": "DUP8"
    },
    "14979": {
      "op": "SUB"
    },
    "14980": {
      "op": "SLT"
    },
    "14981": {
      "op": "ISZERO"
    },
    "14982": {
      "op": "PUSH2",
      "value": "0x3A8E"
    },
    "14985": {
      "op": "JUMPI"
    },
    "14986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14988": {
      "op": "DUP1"
    },
    "14989": {
      "op": "REVERT"
    },
    "14990": {
      "op": "JUMPDEST"
    },
    "14991": {
      "op": "DUP5"
    },
    "14992": {
      "op": "CALLDATALOAD"
    },
    "14993": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15002": {
      "op": "DUP2"
    },
    "15003": {
      "op": "GT"
    },
    "15004": {
      "op": "ISZERO"
    },
    "15005": {
      "op": "PUSH2",
      "value": "0x3AA5"
    },
    "15008": {
      "op": "JUMPI"
    },
    "15009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15011": {
      "op": "DUP1"
    },
    "15012": {
      "op": "REVERT"
    },
    "15013": {
      "op": "JUMPDEST"
    },
    "15014": {
      "op": "PUSH2",
      "value": "0x3AB1"
    },
    "15017": {
      "op": "DUP8"
    },
    "15018": {
      "op": "DUP3"
    },
    "15019": {
      "op": "DUP9"
    },
    "15020": {
      "op": "ADD"
    },
    "15021": {
      "op": "PUSH2",
      "value": "0x3951"
    },
    "15024": {
      "jump": "i",
      "op": "JUMP"
    },
    "15025": {
      "op": "JUMPDEST"
    },
    "15026": {
      "op": "SWAP8"
    },
    "15027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15029": {
      "op": "DUP8"
    },
    "15030": {
      "op": "ADD"
    },
    "15031": {
      "op": "CALLDATALOAD"
    },
    "15032": {
      "op": "SWAP8"
    },
    "15033": {
      "op": "POP"
    },
    "15034": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15036": {
      "op": "DUP8"
    },
    "15037": {
      "op": "ADD"
    },
    "15038": {
      "op": "CALLDATALOAD"
    },
    "15039": {
      "op": "SWAP7"
    },
    "15040": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15042": {
      "op": "ADD"
    },
    "15043": {
      "op": "CALLDATALOAD"
    },
    "15044": {
      "op": "SWAP6"
    },
    "15045": {
      "op": "POP"
    },
    "15046": {
      "op": "SWAP4"
    },
    "15047": {
      "op": "POP"
    },
    "15048": {
      "op": "POP"
    },
    "15049": {
      "op": "POP"
    },
    "15050": {
      "op": "POP"
    },
    "15051": {
      "jump": "o",
      "op": "JUMP"
    },
    "15052": {
      "op": "JUMPDEST"
    },
    "15053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15055": {
      "op": "DUP1"
    },
    "15056": {
      "op": "DUP3"
    },
    "15057": {
      "op": "MSTORE"
    },
    "15058": {
      "op": "DUP3"
    },
    "15059": {
      "op": "MLOAD"
    },
    "15060": {
      "op": "DUP3"
    },
    "15061": {
      "op": "DUP3"
    },
    "15062": {
      "op": "ADD"
    },
    "15063": {
      "op": "DUP2"
    },
    "15064": {
      "op": "SWAP1"
    },
    "15065": {
      "op": "MSTORE"
    },
    "15066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15068": {
      "op": "SWAP2"
    },
    "15069": {
      "op": "SWAP1"
    },
    "15070": {
      "op": "DUP5"
    },
    "15071": {
      "op": "DUP3"
    },
    "15072": {
      "op": "ADD"
    },
    "15073": {
      "op": "SWAP1"
    },
    "15074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15076": {
      "op": "DUP6"
    },
    "15077": {
      "op": "ADD"
    },
    "15078": {
      "op": "SWAP1"
    },
    "15079": {
      "op": "DUP5"
    },
    "15080": {
      "op": "JUMPDEST"
    },
    "15081": {
      "op": "DUP2"
    },
    "15082": {
      "op": "DUP2"
    },
    "15083": {
      "op": "LT"
    },
    "15084": {
      "op": "ISZERO"
    },
    "15085": {
      "op": "PUSH2",
      "value": "0x3B04"
    },
    "15088": {
      "op": "JUMPI"
    },
    "15089": {
      "op": "DUP4"
    },
    "15090": {
      "op": "MLOAD"
    },
    "15091": {
      "op": "DUP4"
    },
    "15092": {
      "op": "MSTORE"
    },
    "15093": {
      "op": "SWAP3"
    },
    "15094": {
      "op": "DUP5"
    },
    "15095": {
      "op": "ADD"
    },
    "15096": {
      "op": "SWAP3"
    },
    "15097": {
      "op": "SWAP2"
    },
    "15098": {
      "op": "DUP5"
    },
    "15099": {
      "op": "ADD"
    },
    "15100": {
      "op": "SWAP2"
    },
    "15101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15103": {
      "op": "ADD"
    },
    "15104": {
      "op": "PUSH2",
      "value": "0x3AE8"
    },
    "15107": {
      "op": "JUMP"
    },
    "15108": {
      "op": "JUMPDEST"
    },
    "15109": {
      "op": "POP"
    },
    "15110": {
      "op": "SWAP1"
    },
    "15111": {
      "op": "SWAP7"
    },
    "15112": {
      "op": "SWAP6"
    },
    "15113": {
      "op": "POP"
    },
    "15114": {
      "op": "POP"
    },
    "15115": {
      "op": "POP"
    },
    "15116": {
      "op": "POP"
    },
    "15117": {
      "op": "POP"
    },
    "15118": {
      "op": "POP"
    },
    "15119": {
      "jump": "o",
      "op": "JUMP"
    },
    "15120": {
      "op": "JUMPDEST"
    },
    "15121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15125": {
      "op": "DUP3"
    },
    "15126": {
      "op": "DUP5"
    },
    "15127": {
      "op": "SUB"
    },
    "15128": {
      "op": "SLT"
    },
    "15129": {
      "op": "ISZERO"
    },
    "15130": {
      "op": "PUSH2",
      "value": "0x3B22"
    },
    "15133": {
      "op": "JUMPI"
    },
    "15134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15136": {
      "op": "DUP1"
    },
    "15137": {
      "op": "REVERT"
    },
    "15138": {
      "op": "JUMPDEST"
    },
    "15139": {
      "op": "DUP2"
    },
    "15140": {
      "op": "CALLDATALOAD"
    },
    "15141": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15150": {
      "op": "DUP2"
    },
    "15151": {
      "op": "GT"
    },
    "15152": {
      "op": "ISZERO"
    },
    "15153": {
      "op": "PUSH2",
      "value": "0x3B39"
    },
    "15156": {
      "op": "JUMPI"
    },
    "15157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15159": {
      "op": "DUP1"
    },
    "15160": {
      "op": "REVERT"
    },
    "15161": {
      "op": "JUMPDEST"
    },
    "15162": {
      "op": "PUSH2",
      "value": "0x105D"
    },
    "15165": {
      "op": "DUP5"
    },
    "15166": {
      "op": "DUP3"
    },
    "15167": {
      "op": "DUP6"
    },
    "15168": {
      "op": "ADD"
    },
    "15169": {
      "op": "PUSH2",
      "value": "0x3951"
    },
    "15172": {
      "jump": "i",
      "op": "JUMP"
    },
    "15173": {
      "op": "JUMPDEST"
    },
    "15174": {
      "op": "DUP1"
    },
    "15175": {
      "op": "ISZERO"
    },
    "15176": {
      "op": "ISZERO"
    },
    "15177": {
      "op": "DUP2"
    },
    "15178": {
      "op": "EQ"
    },
    "15179": {
      "op": "PUSH2",
      "value": "0x21E0"
    },
    "15182": {
      "op": "JUMPI"
    },
    "15183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15185": {
      "op": "DUP1"
    },
    "15186": {
      "op": "REVERT"
    },
    "15187": {
      "op": "JUMPDEST"
    },
    "15188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15190": {
      "op": "DUP1"
    },
    "15191": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15193": {
      "op": "DUP4"
    },
    "15194": {
      "op": "DUP6"
    },
    "15195": {
      "op": "SUB"
    },
    "15196": {
      "op": "SLT"
    },
    "15197": {
      "op": "ISZERO"
    },
    "15198": {
      "op": "PUSH2",
      "value": "0x3B66"
    },
    "15201": {
      "op": "JUMPI"
    },
    "15202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15204": {
      "op": "DUP1"
    },
    "15205": {
      "op": "REVERT"
    },
    "15206": {
      "op": "JUMPDEST"
    },
    "15207": {
      "op": "PUSH2",
      "value": "0x3B6F"
    },
    "15210": {
      "op": "DUP4"
    },
    "15211": {
      "op": "PUSH2",
      "value": "0x3864"
    },
    "15214": {
      "jump": "i",
      "op": "JUMP"
    },
    "15215": {
      "op": "JUMPDEST"
    },
    "15216": {
      "op": "SWAP2"
    },
    "15217": {
      "op": "POP"
    },
    "15218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15220": {
      "op": "DUP4"
    },
    "15221": {
      "op": "ADD"
    },
    "15222": {
      "op": "CALLDATALOAD"
    },
    "15223": {
      "op": "PUSH2",
      "value": "0x3B7F"
    },
    "15226": {
      "op": "DUP2"
    },
    "15227": {
      "op": "PUSH2",
      "value": "0x3B45"
    },
    "15230": {
      "jump": "i",
      "op": "JUMP"
    },
    "15231": {
      "op": "JUMPDEST"
    },
    "15232": {
      "op": "DUP1"
    },
    "15233": {
      "op": "SWAP2"
    },
    "15234": {
      "op": "POP"
    },
    "15235": {
      "op": "POP"
    },
    "15236": {
      "op": "SWAP3"
    },
    "15237": {
      "op": "POP"
    },
    "15238": {
      "op": "SWAP3"
    },
    "15239": {
      "op": "SWAP1"
    },
    "15240": {
      "op": "POP"
    },
    "15241": {
      "jump": "o",
      "op": "JUMP"
    },
    "15242": {
      "op": "JUMPDEST"
    },
    "15243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15245": {
      "op": "DUP1"
    },
    "15246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15248": {
      "op": "DUP1"
    },
    "15249": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15251": {
      "op": "DUP6"
    },
    "15252": {
      "op": "DUP8"
    },
    "15253": {
      "op": "SUB"
    },
    "15254": {
      "op": "SLT"
    },
    "15255": {
      "op": "ISZERO"
    },
    "15256": {
      "op": "PUSH2",
      "value": "0x3BA0"
    },
    "15259": {
      "op": "JUMPI"
    },
    "15260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15262": {
      "op": "DUP1"
    },
    "15263": {
      "op": "REVERT"
    },
    "15264": {
      "op": "JUMPDEST"
    },
    "15265": {
      "op": "PUSH2",
      "value": "0x3BA9"
    },
    "15268": {
      "op": "DUP6"
    },
    "15269": {
      "op": "PUSH2",
      "value": "0x3864"
    },
    "15272": {
      "jump": "i",
      "op": "JUMP"
    },
    "15273": {
      "op": "JUMPDEST"
    },
    "15274": {
      "op": "SWAP4"
    },
    "15275": {
      "op": "POP"
    },
    "15276": {
      "op": "PUSH2",
      "value": "0x3BB7"
    },
    "15279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15281": {
      "op": "DUP7"
    },
    "15282": {
      "op": "ADD"
    },
    "15283": {
      "op": "PUSH2",
      "value": "0x3864"
    },
    "15286": {
      "jump": "i",
      "op": "JUMP"
    },
    "15287": {
      "op": "JUMPDEST"
    },
    "15288": {
      "op": "SWAP3"
    },
    "15289": {
      "op": "POP"
    },
    "15290": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15292": {
      "op": "DUP6"
    },
    "15293": {
      "op": "ADD"
    },
    "15294": {
      "op": "CALLDATALOAD"
    },
    "15295": {
      "op": "SWAP2"
    },
    "15296": {
      "op": "POP"
    },
    "15297": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15299": {
      "op": "DUP6"
    },
    "15300": {
      "op": "ADD"
    },
    "15301": {
      "op": "CALLDATALOAD"
    },
    "15302": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15311": {
      "op": "DUP2"
    },
    "15312": {
      "op": "GT"
    },
    "15313": {
      "op": "ISZERO"
    },
    "15314": {
      "op": "PUSH2",
      "value": "0x3BDA"
    },
    "15317": {
      "op": "JUMPI"
    },
    "15318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15320": {
      "op": "DUP1"
    },
    "15321": {
      "op": "REVERT"
    },
    "15322": {
      "op": "JUMPDEST"
    },
    "15323": {
      "op": "DUP6"
    },
    "15324": {
      "op": "ADD"
    },
    "15325": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15327": {
      "op": "DUP2"
    },
    "15328": {
      "op": "ADD"
    },
    "15329": {
      "op": "DUP8"
    },
    "15330": {
      "op": "SGT"
    },
    "15331": {
      "op": "PUSH2",
      "value": "0x3BEB"
    },
    "15334": {
      "op": "JUMPI"
    },
    "15335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15337": {
      "op": "DUP1"
    },
    "15338": {
      "op": "REVERT"
    },
    "15339": {
      "op": "JUMPDEST"
    },
    "15340": {
      "op": "PUSH2",
      "value": "0x3BFA"
    },
    "15343": {
      "op": "DUP8"
    },
    "15344": {
      "op": "DUP3"
    },
    "15345": {
      "op": "CALLDATALOAD"
    },
    "15346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15348": {
      "op": "DUP5"
    },
    "15349": {
      "op": "ADD"
    },
    "15350": {
      "op": "PUSH2",
      "value": "0x38DB"
    },
    "15353": {
      "jump": "i",
      "op": "JUMP"
    },
    "15354": {
      "op": "JUMPDEST"
    },
    "15355": {
      "op": "SWAP2"
    },
    "15356": {
      "op": "POP"
    },
    "15357": {
      "op": "POP"
    },
    "15358": {
      "op": "SWAP3"
    },
    "15359": {
      "op": "SWAP6"
    },
    "15360": {
      "op": "SWAP2"
    },
    "15361": {
      "op": "SWAP5"
    },
    "15362": {
      "op": "POP"
    },
    "15363": {
      "op": "SWAP3"
    },
    "15364": {
      "op": "POP"
    },
    "15365": {
      "jump": "o",
      "op": "JUMP"
    },
    "15366": {
      "op": "JUMPDEST"
    },
    "15367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15369": {
      "op": "DUP1"
    },
    "15370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15372": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15374": {
      "op": "DUP5"
    },
    "15375": {
      "op": "DUP7"
    },
    "15376": {
      "op": "SUB"
    },
    "15377": {
      "op": "SLT"
    },
    "15378": {
      "op": "ISZERO"
    },
    "15379": {
      "op": "PUSH2",
      "value": "0x3C1B"
    },
    "15382": {
      "op": "JUMPI"
    },
    "15383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15385": {
      "op": "DUP1"
    },
    "15386": {
      "op": "REVERT"
    },
    "15387": {
      "op": "JUMPDEST"
    },
    "15388": {
      "op": "PUSH2",
      "value": "0x3C24"
    },
    "15391": {
      "op": "DUP5"
    },
    "15392": {
      "op": "PUSH2",
      "value": "0x3864"
    },
    "15395": {
      "jump": "i",
      "op": "JUMP"
    },
    "15396": {
      "op": "JUMPDEST"
    },
    "15397": {
      "op": "SWAP6"
    },
    "15398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15400": {
      "op": "DUP6"
    },
    "15401": {
      "op": "ADD"
    },
    "15402": {
      "op": "CALLDATALOAD"
    },
    "15403": {
      "op": "SWAP6"
    },
    "15404": {
      "op": "POP"
    },
    "15405": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15407": {
      "op": "SWAP1"
    },
    "15408": {
      "op": "SWAP5"
    },
    "15409": {
      "op": "ADD"
    },
    "15410": {
      "op": "CALLDATALOAD"
    },
    "15411": {
      "op": "SWAP4"
    },
    "15412": {
      "op": "SWAP3"
    },
    "15413": {
      "op": "POP"
    },
    "15414": {
      "op": "POP"
    },
    "15415": {
      "op": "POP"
    },
    "15416": {
      "jump": "o",
      "op": "JUMP"
    },
    "15417": {
      "op": "JUMPDEST"
    },
    "15418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15420": {
      "op": "DUP1"
    },
    "15421": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15423": {
      "op": "DUP4"
    },
    "15424": {
      "op": "DUP6"
    },
    "15425": {
      "op": "SUB"
    },
    "15426": {
      "op": "SLT"
    },
    "15427": {
      "op": "ISZERO"
    },
    "15428": {
      "op": "PUSH2",
      "value": "0x3C4C"
    },
    "15431": {
      "op": "JUMPI"
    },
    "15432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15434": {
      "op": "DUP1"
    },
    "15435": {
      "op": "REVERT"
    },
    "15436": {
      "op": "JUMPDEST"
    },
    "15437": {
      "op": "PUSH2",
      "value": "0x3C55"
    },
    "15440": {
      "op": "DUP4"
    },
    "15441": {
      "op": "PUSH2",
      "value": "0x3864"
    },
    "15444": {
      "jump": "i",
      "op": "JUMP"
    },
    "15445": {
      "op": "JUMPDEST"
    },
    "15446": {
      "op": "SWAP2"
    },
    "15447": {
      "op": "POP"
    },
    "15448": {
      "op": "PUSH2",
      "value": "0x3C63"
    },
    "15451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15453": {
      "op": "DUP5"
    },
    "15454": {
      "op": "ADD"
    },
    "15455": {
      "op": "PUSH2",
      "value": "0x3864"
    },
    "15458": {
      "jump": "i",
      "op": "JUMP"
    },
    "15459": {
      "op": "JUMPDEST"
    },
    "15460": {
      "op": "SWAP1"
    },
    "15461": {
      "op": "POP"
    },
    "15462": {
      "op": "SWAP3"
    },
    "15463": {
      "op": "POP"
    },
    "15464": {
      "op": "SWAP3"
    },
    "15465": {
      "op": "SWAP1"
    },
    "15466": {
      "op": "POP"
    },
    "15467": {
      "jump": "o",
      "op": "JUMP"
    },
    "15468": {
      "op": "JUMPDEST"
    },
    "15469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15471": {
      "op": "DUP2"
    },
    "15472": {
      "op": "DUP2"
    },
    "15473": {
      "op": "SHR"
    },
    "15474": {
      "op": "SWAP1"
    },
    "15475": {
      "op": "DUP3"
    },
    "15476": {
      "op": "AND"
    },
    "15477": {
      "op": "DUP1"
    },
    "15478": {
      "op": "PUSH2",
      "value": "0x3C80"
    },
    "15481": {
      "op": "JUMPI"
    },
    "15482": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "15484": {
      "op": "DUP3"
    },
    "15485": {
      "op": "AND"
    },
    "15486": {
      "op": "SWAP2"
    },
    "15487": {
      "op": "POP"
    },
    "15488": {
      "op": "JUMPDEST"
    },
    "15489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15491": {
      "op": "DUP3"
    },
    "15492": {
      "op": "LT"
    },
    "15493": {
      "op": "DUP2"
    },
    "15494": {
      "op": "EQ"
    },
    "15495": {
      "op": "ISZERO"
    },
    "15496": {
      "op": "PUSH2",
      "value": "0x3CA1"
    },
    "15499": {
      "op": "JUMPI"
    },
    "15500": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15505": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15507": {
      "op": "SHL"
    },
    "15508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15510": {
      "op": "MSTORE"
    },
    "15511": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "15513": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15515": {
      "op": "MSTORE"
    },
    "15516": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15520": {
      "op": "REVERT"
    },
    "15521": {
      "op": "JUMPDEST"
    },
    "15522": {
      "op": "POP"
    },
    "15523": {
      "op": "SWAP2"
    },
    "15524": {
      "op": "SWAP1"
    },
    "15525": {
      "op": "POP"
    },
    "15526": {
      "jump": "o",
      "op": "JUMP"
    },
    "15527": {
      "op": "JUMPDEST"
    },
    "15528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15530": {
      "op": "DUP1"
    },
    "15531": {
      "op": "DUP3"
    },
    "15532": {
      "op": "MSTORE"
    },
    "15533": {
      "op": "DUP2"
    },
    "15534": {
      "op": "DUP2"
    },
    "15535": {
      "op": "ADD"
    },
    "15536": {
      "op": "MSTORE"
    },
    "15537": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "15570": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15572": {
      "op": "DUP3"
    },
    "15573": {
      "op": "ADD"
    },
    "15574": {
      "op": "MSTORE"
    },
    "15575": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15577": {
      "op": "ADD"
    },
    "15578": {
      "op": "SWAP1"
    },
    "15579": {
      "jump": "o",
      "op": "JUMP"
    },
    "15580": {
      "op": "JUMPDEST"
    },
    "15581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15583": {
      "op": "DUP1"
    },
    "15584": {
      "op": "DUP3"
    },
    "15585": {
      "op": "MSTORE"
    },
    "15586": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "15588": {
      "op": "SWAP1"
    },
    "15589": {
      "op": "DUP3"
    },
    "15590": {
      "op": "ADD"
    },
    "15591": {
      "op": "MSTORE"
    },
    "15592": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "15625": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15627": {
      "op": "DUP3"
    },
    "15628": {
      "op": "ADD"
    },
    "15629": {
      "op": "MSTORE"
    },
    "15630": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "15648": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "15650": {
      "op": "SHL"
    },
    "15651": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15653": {
      "op": "DUP3"
    },
    "15654": {
      "op": "ADD"
    },
    "15655": {
      "op": "MSTORE"
    },
    "15656": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15658": {
      "op": "ADD"
    },
    "15659": {
      "op": "SWAP1"
    },
    "15660": {
      "jump": "o",
      "op": "JUMP"
    },
    "15661": {
      "op": "JUMPDEST"
    },
    "15662": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15667": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15669": {
      "op": "SHL"
    },
    "15670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15672": {
      "op": "MSTORE"
    },
    "15673": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "15675": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15677": {
      "op": "MSTORE"
    },
    "15678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15682": {
      "op": "REVERT"
    },
    "15683": {
      "op": "JUMPDEST"
    },
    "15684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15686": {
      "op": "DUP3"
    },
    "15687": {
      "op": "NOT"
    },
    "15688": {
      "op": "DUP3"
    },
    "15689": {
      "op": "GT"
    },
    "15690": {
      "op": "ISZERO"
    },
    "15691": {
      "op": "PUSH2",
      "value": "0x3D56"
    },
    "15694": {
      "op": "JUMPI"
    },
    "15695": {
      "op": "PUSH2",
      "value": "0x3D56"
    },
    "15698": {
      "op": "PUSH2",
      "value": "0x3D2D"
    },
    "15701": {
      "jump": "i",
      "op": "JUMP"
    },
    "15702": {
      "op": "JUMPDEST"
    },
    "15703": {
      "op": "POP"
    },
    "15704": {
      "op": "ADD"
    },
    "15705": {
      "op": "SWAP1"
    },
    "15706": {
      "jump": "o",
      "op": "JUMP"
    },
    "15707": {
      "op": "JUMPDEST"
    },
    "15708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15712": {
      "op": "NOT"
    },
    "15713": {
      "op": "DUP3"
    },
    "15714": {
      "op": "EQ"
    },
    "15715": {
      "op": "ISZERO"
    },
    "15716": {
      "op": "PUSH2",
      "value": "0x3D6F"
    },
    "15719": {
      "op": "JUMPI"
    },
    "15720": {
      "op": "PUSH2",
      "value": "0x3D6F"
    },
    "15723": {
      "op": "PUSH2",
      "value": "0x3D2D"
    },
    "15726": {
      "jump": "i",
      "op": "JUMP"
    },
    "15727": {
      "op": "JUMPDEST"
    },
    "15728": {
      "op": "POP"
    },
    "15729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15731": {
      "op": "ADD"
    },
    "15732": {
      "op": "SWAP1"
    },
    "15733": {
      "jump": "o",
      "op": "JUMP"
    },
    "15734": {
      "op": "JUMPDEST"
    },
    "15735": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15740": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15742": {
      "op": "SHL"
    },
    "15743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15745": {
      "op": "MSTORE"
    },
    "15746": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "15748": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15750": {
      "op": "MSTORE"
    },
    "15751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15755": {
      "op": "REVERT"
    },
    "15756": {
      "op": "JUMPDEST"
    },
    "15757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15759": {
      "op": "DUP2"
    },
    "15760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15762": {
      "op": "NOT"
    },
    "15763": {
      "op": "DIV"
    },
    "15764": {
      "op": "DUP4"
    },
    "15765": {
      "op": "GT"
    },
    "15766": {
      "op": "DUP3"
    },
    "15767": {
      "op": "ISZERO"
    },
    "15768": {
      "op": "ISZERO"
    },
    "15769": {
      "op": "AND"
    },
    "15770": {
      "op": "ISZERO"
    },
    "15771": {
      "op": "PUSH2",
      "value": "0x3DA6"
    },
    "15774": {
      "op": "JUMPI"
    },
    "15775": {
      "op": "PUSH2",
      "value": "0x3DA6"
    },
    "15778": {
      "op": "PUSH2",
      "value": "0x3D2D"
    },
    "15781": {
      "jump": "i",
      "op": "JUMP"
    },
    "15782": {
      "op": "JUMPDEST"
    },
    "15783": {
      "op": "POP"
    },
    "15784": {
      "op": "MUL"
    },
    "15785": {
      "op": "SWAP1"
    },
    "15786": {
      "jump": "o",
      "op": "JUMP"
    },
    "15787": {
      "op": "JUMPDEST"
    },
    "15788": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15795": {
      "op": "SHL"
    },
    "15796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15798": {
      "op": "MSTORE"
    },
    "15799": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "15801": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15803": {
      "op": "MSTORE"
    },
    "15804": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15808": {
      "op": "REVERT"
    },
    "15809": {
      "op": "JUMPDEST"
    },
    "15810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15812": {
      "op": "DUP3"
    },
    "15813": {
      "op": "PUSH2",
      "value": "0x3DD0"
    },
    "15816": {
      "op": "JUMPI"
    },
    "15817": {
      "op": "PUSH2",
      "value": "0x3DD0"
    },
    "15820": {
      "op": "PUSH2",
      "value": "0x3DAB"
    },
    "15823": {
      "jump": "i",
      "op": "JUMP"
    },
    "15824": {
      "op": "JUMPDEST"
    },
    "15825": {
      "op": "POP"
    },
    "15826": {
      "op": "DIV"
    },
    "15827": {
      "op": "SWAP1"
    },
    "15828": {
      "jump": "o",
      "op": "JUMP"
    },
    "15829": {
      "op": "JUMPDEST"
    },
    "15830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15834": {
      "op": "DUP3"
    },
    "15835": {
      "op": "DUP5"
    },
    "15836": {
      "op": "SUB"
    },
    "15837": {
      "op": "SLT"
    },
    "15838": {
      "op": "ISZERO"
    },
    "15839": {
      "op": "PUSH2",
      "value": "0x3DE7"
    },
    "15842": {
      "op": "JUMPI"
    },
    "15843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15845": {
      "op": "DUP1"
    },
    "15846": {
      "op": "REVERT"
    },
    "15847": {
      "op": "JUMPDEST"
    },
    "15848": {
      "op": "POP"
    },
    "15849": {
      "op": "MLOAD"
    },
    "15850": {
      "op": "SWAP2"
    },
    "15851": {
      "op": "SWAP1"
    },
    "15852": {
      "op": "POP"
    },
    "15853": {
      "jump": "o",
      "op": "JUMP"
    },
    "15854": {
      "op": "JUMPDEST"
    },
    "15855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15859": {
      "op": "DUP3"
    },
    "15860": {
      "op": "DUP5"
    },
    "15861": {
      "op": "SUB"
    },
    "15862": {
      "op": "SLT"
    },
    "15863": {
      "op": "ISZERO"
    },
    "15864": {
      "op": "PUSH2",
      "value": "0x3E00"
    },
    "15867": {
      "op": "JUMPI"
    },
    "15868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15870": {
      "op": "DUP1"
    },
    "15871": {
      "op": "REVERT"
    },
    "15872": {
      "op": "JUMPDEST"
    },
    "15873": {
      "op": "DUP2"
    },
    "15874": {
      "op": "MLOAD"
    },
    "15875": {
      "op": "PUSH2",
      "value": "0x2093"
    },
    "15878": {
      "op": "DUP2"
    },
    "15879": {
      "op": "PUSH2",
      "value": "0x3B45"
    },
    "15882": {
      "jump": "i",
      "op": "JUMP"
    },
    "15883": {
      "op": "JUMPDEST"
    },
    "15884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15886": {
      "op": "DUP3"
    },
    "15887": {
      "op": "DUP3"
    },
    "15888": {
      "op": "LT"
    },
    "15889": {
      "op": "ISZERO"
    },
    "15890": {
      "op": "PUSH2",
      "value": "0x3E1D"
    },
    "15893": {
      "op": "JUMPI"
    },
    "15894": {
      "op": "PUSH2",
      "value": "0x3E1D"
    },
    "15897": {
      "op": "PUSH2",
      "value": "0x3D2D"
    },
    "15900": {
      "jump": "i",
      "op": "JUMP"
    },
    "15901": {
      "op": "JUMPDEST"
    },
    "15902": {
      "op": "POP"
    },
    "15903": {
      "op": "SUB"
    },
    "15904": {
      "op": "SWAP1"
    },
    "15905": {
      "jump": "o",
      "op": "JUMP"
    },
    "15906": {
      "op": "JUMPDEST"
    },
    "15907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15909": {
      "op": "DUP1"
    },
    "15910": {
      "op": "DUP3"
    },
    "15911": {
      "op": "MSTORE"
    },
    "15912": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "15914": {
      "op": "SWAP1"
    },
    "15915": {
      "op": "DUP3"
    },
    "15916": {
      "op": "ADD"
    },
    "15917": {
      "op": "MSTORE"
    },
    "15918": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "15951": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15953": {
      "op": "DUP3"
    },
    "15954": {
      "op": "ADD"
    },
    "15955": {
      "op": "MSTORE"
    },
    "15956": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "15975": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "15977": {
      "op": "SHL"
    },
    "15978": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15980": {
      "op": "DUP3"
    },
    "15981": {
      "op": "ADD"
    },
    "15982": {
      "op": "MSTORE"
    },
    "15983": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15985": {
      "op": "ADD"
    },
    "15986": {
      "op": "SWAP1"
    },
    "15987": {
      "jump": "o",
      "op": "JUMP"
    },
    "15988": {
      "op": "JUMPDEST"
    },
    "15989": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15994": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15996": {
      "op": "SHL"
    },
    "15997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15999": {
      "op": "MSTORE"
    },
    "16000": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "16002": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16004": {
      "op": "MSTORE"
    },
    "16005": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16009": {
      "op": "REVERT"
    },
    "16010": {
      "op": "JUMPDEST"
    },
    "16011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16013": {
      "op": "DUP4"
    },
    "16014": {
      "op": "MLOAD"
    },
    "16015": {
      "op": "PUSH2",
      "value": "0x3E9C"
    },
    "16018": {
      "op": "DUP2"
    },
    "16019": {
      "op": "DUP5"
    },
    "16020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16022": {
      "op": "DUP9"
    },
    "16023": {
      "op": "ADD"
    },
    "16024": {
      "op": "PUSH2",
      "value": "0x37E0"
    },
    "16027": {
      "jump": "i",
      "op": "JUMP"
    },
    "16028": {
      "op": "JUMPDEST"
    },
    "16029": {
      "op": "DUP4"
    },
    "16030": {
      "op": "MLOAD"
    },
    "16031": {
      "op": "SWAP1"
    },
    "16032": {
      "op": "DUP4"
    },
    "16033": {
      "op": "ADD"
    },
    "16034": {
      "op": "SWAP1"
    },
    "16035": {
      "op": "PUSH2",
      "value": "0x3EB0"
    },
    "16038": {
      "op": "DUP2"
    },
    "16039": {
      "op": "DUP4"
    },
    "16040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16042": {
      "op": "DUP9"
    },
    "16043": {
      "op": "ADD"
    },
    "16044": {
      "op": "PUSH2",
      "value": "0x37E0"
    },
    "16047": {
      "jump": "i",
      "op": "JUMP"
    },
    "16048": {
      "op": "JUMPDEST"
    },
    "16049": {
      "op": "ADD"
    },
    "16050": {
      "op": "SWAP5"
    },
    "16051": {
      "op": "SWAP4"
    },
    "16052": {
      "op": "POP"
    },
    "16053": {
      "op": "POP"
    },
    "16054": {
      "op": "POP"
    },
    "16055": {
      "op": "POP"
    },
    "16056": {
      "jump": "o",
      "op": "JUMP"
    },
    "16057": {
      "op": "JUMPDEST"
    },
    "16058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16064": {
      "op": "SHL"
    },
    "16065": {
      "op": "SUB"
    },
    "16066": {
      "op": "DUP6"
    },
    "16067": {
      "op": "DUP2"
    },
    "16068": {
      "op": "AND"
    },
    "16069": {
      "op": "DUP3"
    },
    "16070": {
      "op": "MSTORE"
    },
    "16071": {
      "op": "DUP5"
    },
    "16072": {
      "op": "AND"
    },
    "16073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16075": {
      "op": "DUP3"
    },
    "16076": {
      "op": "ADD"
    },
    "16077": {
      "op": "MSTORE"
    },
    "16078": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16080": {
      "op": "DUP2"
    },
    "16081": {
      "op": "ADD"
    },
    "16082": {
      "op": "DUP4"
    },
    "16083": {
      "op": "SWAP1"
    },
    "16084": {
      "op": "MSTORE"
    },
    "16085": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16087": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16089": {
      "op": "DUP3"
    },
    "16090": {
      "op": "ADD"
    },
    "16091": {
      "op": "DUP2"
    },
    "16092": {
      "op": "SWAP1"
    },
    "16093": {
      "op": "MSTORE"
    },
    "16094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16096": {
      "op": "SWAP1"
    },
    "16097": {
      "op": "PUSH2",
      "value": "0x3EEC"
    },
    "16100": {
      "op": "SWAP1"
    },
    "16101": {
      "op": "DUP4"
    },
    "16102": {
      "op": "ADD"
    },
    "16103": {
      "op": "DUP5"
    },
    "16104": {
      "op": "PUSH2",
      "value": "0x380C"
    },
    "16107": {
      "jump": "i",
      "op": "JUMP"
    },
    "16108": {
      "op": "JUMPDEST"
    },
    "16109": {
      "op": "SWAP7"
    },
    "16110": {
      "op": "SWAP6"
    },
    "16111": {
      "op": "POP"
    },
    "16112": {
      "op": "POP"
    },
    "16113": {
      "op": "POP"
    },
    "16114": {
      "op": "POP"
    },
    "16115": {
      "op": "POP"
    },
    "16116": {
      "op": "POP"
    },
    "16117": {
      "jump": "o",
      "op": "JUMP"
    },
    "16118": {
      "op": "JUMPDEST"
    },
    "16119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16123": {
      "op": "DUP3"
    },
    "16124": {
      "op": "DUP5"
    },
    "16125": {
      "op": "SUB"
    },
    "16126": {
      "op": "SLT"
    },
    "16127": {
      "op": "ISZERO"
    },
    "16128": {
      "op": "PUSH2",
      "value": "0x3F08"
    },
    "16131": {
      "op": "JUMPI"
    },
    "16132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16134": {
      "op": "DUP1"
    },
    "16135": {
      "op": "REVERT"
    },
    "16136": {
      "op": "JUMPDEST"
    },
    "16137": {
      "op": "DUP2"
    },
    "16138": {
      "op": "MLOAD"
    },
    "16139": {
      "op": "PUSH2",
      "value": "0x2093"
    },
    "16142": {
      "op": "DUP2"
    },
    "16143": {
      "op": "PUSH2",
      "value": "0x37AD"
    },
    "16146": {
      "jump": "i",
      "op": "JUMP"
    },
    "16147": {
      "op": "JUMPDEST"
    },
    "16148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16150": {
      "op": "DUP3"
    },
    "16151": {
      "op": "PUSH2",
      "value": "0x3F22"
    },
    "16154": {
      "op": "JUMPI"
    },
    "16155": {
      "op": "PUSH2",
      "value": "0x3F22"
    },
    "16158": {
      "op": "PUSH2",
      "value": "0x3DAB"
    },
    "16161": {
      "jump": "i",
      "op": "JUMP"
    },
    "16162": {
      "op": "JUMPDEST"
    },
    "16163": {
      "op": "POP"
    },
    "16164": {
      "op": "MOD"
    },
    "16165": {
      "op": "SWAP1"
    },
    "16166": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "c90554898f201205f9fa7e903f72a6adf367b20a",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.8;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Cardinal House NFT Contract\n * @dev NFT contract that will be used with the marketplace contract\n */\ncontract CardinalNFT is ERC721URIStorage, ERC721Enumerable, Ownable {\n    using Counters for Counters.Counter;\n\n    // Counter to give each NFT a unique ID.\n    Counters.Counter public _tokenIds;\n\n    // Address of the Cardinal NFT marketplace.\n    address public marketplaceAddress;\n\n    // Contract for USDC - for membership payments\n    IERC20 public USDC;\n\n    // Each NFT will be associated with an ID that determines the type of NFT it is\n    // This makes it easy to identify sets of NFTs like Original Cardinal NFTs, membership NFTs, and service NFTs\n    mapping(uint256 => uint256) public tokenIdToTypeId;\n\n    // Each NFT will have a unique listing fee that is kept track of in this mapping.\n    mapping(uint256 => uint256) public tokenIdToListingFee;\n    \n    // Mapping of token ID to address for whitelist spots.\n    mapping(uint256 => address) public tokenIdToWhitelistAddress;\n\n    // Mapping to determine if an address has a membership (either Original Cardinal NFT or membership NFT)\n    mapping(address => bool) public addressIsMember;\n\n    // Mapping to determine the number of membership NFTs an address has (especially if they have Original Cardinal NFT and membership NFT)\n    mapping(address => uint256) public addressToMemberNFTCount;\n\n    // Maps each membership NFT ID to the last block timestamp that the membership was paid for.\n    mapping(uint256 => uint256) public membershipNFTToLastPaid;\n\n    // Mapping to determine which addresses can add and remove other addresses from the member mapping.\n    mapping (address => bool) public addressIsAdmin;\n\n    // Mapping to determine membership discount for addresses.\n    mapping (address => uint256) public addressToMembershipDiscount;\n\n    // The type ID for the Original Cardinal NFTs.\n    uint256 public originalCardinalTypeId = 1;\n\n    // The type ID for the membership NFTs.\n    uint256 public membershipTypeId = 2;\n\n    // The type ID for the service NFTs.\n    uint256 public serviceTypeId = 3;\n\n    // Array of the Original Cardinal token IDs.\n    uint256[] public originalCardinalTokenIds;\n\n    // Array of the membership token IDs.\n    uint256[] public membershipTokenIds;\n\n    // The token URI for all membership NFTs\n    string public membershipTokenURI;\n\n    // The current price of the membership NFT in USDC\n    uint256 public membershipPriceInUSDC;\n\n    event membershipNFTMinted(address indexed owner, uint256 indexed tokenId);\n    event memberChargedForMembership(address indexed member, uint256 indexed tokenId, uint256 membershipPrice, uint256 currTimeStamp);\n    event membershipNFTBurnt(address indexed owner, uint256 indexed tokenId);\n    event tokenURIUpdated(uint256 indexed tokenId, string newTokenURI);\n    event membershipPriceUpdated(uint256 indexed newMembershipPrice);\n    event typeIdUpdated(string indexed typeIdThatWasUpdated, uint256 indexed newTypeId);\n    event memberDiscountSet(address indexed member, uint256 indexed discountAmount);\n\n    constructor(address _marketplaceAddress, address _USDC) ERC721(\"CardinalHouseNFT\", \"CRNLNFT\") {\n        marketplaceAddress = _marketplaceAddress;\n        USDC = IERC20(_USDC);\n    }\n\n    /**\n    * @dev Only owner function to burn a membership NFT\n    * @param tokenId the tokenId of the membership NFT to burn\n     */\n    function burnMembershipNFT(uint256 tokenId) private {\n        for (uint i = 0; i < membershipTokenIds.length; i++) {\n            if (membershipTokenIds[i] == tokenId) {\n                address NFTOwner = ownerOf(membershipTokenIds[i]);\n                _transfer(NFTOwner, address(this), membershipTokenIds[i]);\n\n                emit membershipNFTBurnt(NFTOwner, tokenId);\n\n                membershipTokenIds[i] = membershipTokenIds[membershipTokenIds.length-1];\n                membershipTokenIds.pop();\n            }\n        }\n    }\n\n    /**\n    * @dev Only owner function to burn a membership NFT\n    * @param tokenId the tokenId of the membership NFT to burn\n     */\n    function burnMembershiptNFTManually(uint256 tokenId) external onlyOwner {\n        burnMembershipNFT(tokenId);\n    }\n\n    /**\n     * @dev After a token transfer, update the addressToMember mapping if the NFT is an Original Cardinal or membership NFT\n     * @param from the sender's address\n     * @param to the recipient's address\n     * @param tokenId the tokenId that was transferred\n     */\n    function _afterTokenTransfer(address from, address to, uint256 tokenId) internal virtual override {\n        if (tokenIdToTypeId[tokenId] == membershipTypeId || tokenIdToTypeId[tokenId] == originalCardinalTypeId) {\n            if (from != owner() && from != marketplaceAddress && from != address(0)) {\n                if (addressToMemberNFTCount[from] > 0) {\n                    addressToMemberNFTCount[from] = addressToMemberNFTCount[from] - 1;\n                    if (addressToMemberNFTCount[from] == 0) {\n                        addressIsMember[from] = false;\n                    }\n                }\n                else {\n                    addressIsMember[from] = false;\n                }\n            }\n            addressIsMember[to] = true;\n            addressToMemberNFTCount[to] = addressToMemberNFTCount[to] + 1;\n        }\n\n        super._afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n    * @dev Allows someone to mint a membership NFT by paying USDC\n    * @return the ID of the newly minted membership NFT\n     */\n    function mintMembershipNFT() external returns (uint) {\n        uint256 currMembershipPriceInUSDC = membershipPriceInUSDC;\n\n        if (addressToMembershipDiscount[msg.sender] > 0) {\n            currMembershipPriceInUSDC = membershipPriceInUSDC * addressToMembershipDiscount[msg.sender] / 100;\n        }\n\n        require(USDC.balanceOf(msg.sender) >= currMembershipPriceInUSDC, \"You don't have enough USDC to pay for the membership NFT.\");\n        require(USDC.allowance(msg.sender, address(this)) >= currMembershipPriceInUSDC, \"You haven't approved this contract to spend enough of your USDC to pay for the membership NFT.\");\n        \n        USDC.transferFrom(msg.sender, address(this), currMembershipPriceInUSDC);\n\n        _tokenIds.increment();\n        uint256 newItemId = _tokenIds.current();\n\n        tokenIdToTypeId[newItemId] = membershipTypeId;\n        tokenIdToListingFee[newItemId] = 0;\n        _mint(msg.sender, newItemId);\n        membershipNFTToLastPaid[newItemId] = block.timestamp;\n        addressToMembershipDiscount[msg.sender] = 0;\n        _setTokenURI(newItemId, membershipTokenURI);\n        approve(address(this), newItemId);\n        setApprovalForAll(marketplaceAddress, true);\n\n        membershipTokenIds.push(newItemId);\n\n        emit membershipNFTMinted(msg.sender, newItemId);\n\n        return newItemId;\n    }\n\n    /**\n    * @dev Only owner function to update the timestamp for a membership NFT after it has been paid for for a month.\n    * @param tokenId the ID of the membership NFT to have the timestamp updated for\n    * @param lastPaidTimestamp the timestamp to update the membership NFT to for when it was last paid for\n     */\n    function updateMembershipNFTLastPaid(uint256 tokenId, uint256 lastPaidTimestamp) external onlyOwner {\n        membershipNFTToLastPaid[tokenId] = lastPaidTimestamp;\n    }\n\n    /**\n    * @dev Only owner function to take funds from an address to pay for the next month of a membership\n    * @param member the address of the member that is being charged for the next month of a membership\n    * @param tokenId the token ID that the member is being charged\n    * @param currTimeStamp the current timestamp for the transaction to avoid relying on block.timestamp\n    * @return 0 for success, 1 for failure and NFT burn\n     */\n    function chargeMemberForMembership(address member, uint256 tokenId, uint256 currTimeStamp) external onlyOwner returns (uint) {\n        require(ownerOf(tokenId) == member, \"This address doesn't own the NFT specified.\");\n        require(ownerOf(tokenId) != owner() && ownerOf(tokenId) != marketplaceAddress, \"Can't charge the owner or marketplace for the membership.\");\n\n        uint256 currMembershipPriceInUSDC = membershipPriceInUSDC;\n\n        if (addressToMembershipDiscount[member] > 0) {\n            currMembershipPriceInUSDC = membershipPriceInUSDC * addressToMembershipDiscount[member] / 100;\n        }\n\n        if (USDC.balanceOf(member) < currMembershipPriceInUSDC || USDC.allowance(member, address(this)) < currMembershipPriceInUSDC) {\n            burnMembershipNFT(tokenId);\n            return 1;\n        }\n\n        USDC.transferFrom(member, address(this), currMembershipPriceInUSDC);\n\n        if (currTimeStamp > 0) {\n            membershipNFTToLastPaid[tokenId] = currTimeStamp;\n        }\n        else {\n            membershipNFTToLastPaid[tokenId] = block.timestamp;\n        }\n\n        addressToMembershipDiscount[member] = 0;\n\n        emit memberChargedForMembership(member, tokenId, currMembershipPriceInUSDC, currTimeStamp);\n\n        return 0;\n    }\n\n    /**\n    * @dev Only owner function to withdraw the USDC that are paid to this contract for the Membership NFTs.\n     */\n    function withdrawMembershipNFTFunds() external onlyOwner {\n        USDC.transfer(owner(), USDC.balanceOf(address(this)));\n    }\n\n    /**\n    * @dev Only owner function to mint a new NFT.\n    * @param newTokenURI the token URI on IPFS for the NFT metadata\n    * @param typeId the type ID of the NFT to distinguish what type of NFT it is (Original Cardinal, membership, service)\n    * @param listingFee the fee the user pays when putting the NFT for sale on the marketplace\n    * @param currTimeStamp the current timestamp for the transaction to avoid relying on block.timestamp\n    * @return the ID of the newly minted NFT\n     */\n    function createToken(string memory newTokenURI, uint256 typeId, uint256 listingFee, uint256 currTimeStamp) external onlyOwner returns (uint) {\n        _tokenIds.increment();\n        uint256 newItemId = _tokenIds.current();\n\n        tokenIdToTypeId[newItemId] = typeId;\n        tokenIdToListingFee[newItemId] = listingFee;\n        _mint(msg.sender, newItemId);\n        _setTokenURI(newItemId, newTokenURI);\n        approve(address(this), newItemId);\n        setApprovalForAll(marketplaceAddress, true);\n\n        if (typeId == originalCardinalTypeId) {\n            originalCardinalTokenIds.push(newItemId);\n        }\n        else if (typeId == membershipTypeId) {\n            membershipTokenIds.push(newItemId);\n\n            if (currTimeStamp > 0) {\n                membershipNFTToLastPaid[newItemId] = currTimeStamp;\n            }\n            else {\n                membershipNFTToLastPaid[newItemId] = block.timestamp;\n            }\n        }\n\n        return newItemId;\n    }\n\n    /**\n    * @dev Setter function for the token URI of an NFT.\n    * @param tokenId the ID of the NFT to update the token URI of\n    * @param newTokenURI the token URI to update the NFT with\n     */\n    function setTokenURI(uint256 tokenId, string memory newTokenURI) external onlyOwner {\n        _setTokenURI(tokenId, newTokenURI);\n        emit tokenURIUpdated(tokenId, newTokenURI);\n    }\n\n    /**\n    * @dev Function to get all token URIs for tokens that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's NFTs\n     */\n    function getUserTokenURIs(address userAddress) external view returns (string[] memory) {\n        uint256 userTokenCount = balanceOf(userAddress);\n        uint256 currTokenId = 0;\n        string[] memory userNFTTokenURIs = new string[](userTokenCount);\n\n        for (uint256 i; i < userTokenCount; i++) {\n            currTokenId = tokenOfOwnerByIndex(userAddress, i);\n            userNFTTokenURIs[i] = tokenURI(currTokenId);\n        }\n\n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get all token IDs for tokens that a given user owns.\n    * @param userAddress the user's address to get token IDs of\n    * @return list of token IDs for a user's NFTs\n     */\n    function getUserTokenIDs(address userAddress) external view returns (uint256[] memory) {\n        uint256 userTokenCount = balanceOf(userAddress);\n        uint256[] memory userNFTTokenIDs = new uint256[](userTokenCount);\n\n        for (uint256 i; i < userTokenCount; i++) {\n            userNFTTokenIDs[i] = tokenOfOwnerByIndex(userAddress, i);\n        }\n\n        return userNFTTokenIDs;\n    }    \n\n    /**\n    * @dev Function to get all token URIs for Original Cardinal NFTs that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's Original Cardinal NFTs\n     */\n    function getUserOriginalCardinalTokenURIs(address userAddress) external view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == originalCardinalTypeId) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == originalCardinalTypeId) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get all token URIs for membership NFTs that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's membership NFTs\n     */\n    function getUserMembershipTokenURIs(address userAddress) external view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && (tokenIdToTypeId[id] == originalCardinalTypeId || tokenIdToTypeId[id] == membershipTypeId)) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && (tokenIdToTypeId[id] == originalCardinalTypeId || tokenIdToTypeId[id] == membershipTypeId)) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get all token URIs for service NFTs that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's service NFTs\n     */\n    function getUserServiceTokenURIs(address userAddress) external view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == serviceTypeId) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress && tokenIdToTypeId[id] == serviceTypeId) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev Function to get a list of all the Original Cardinal NFT IDs.\n    * @return list of the Original Cardinal NFT IDs\n     */\n    function getOriginalCardinalTokenIds() external view returns (uint256[] memory) {\n        return originalCardinalTokenIds;\n    }\n\n    /**\n    * @dev Function to get a list of all the membership NFT IDs.\n    * @return list of the membership NFT IDs\n     */\n    function getMembershipTokenIds() external view returns (uint256[] memory) {\n        return membershipTokenIds;\n    }\n\n    /**\n    * @dev Only owner function to update the timestamp for when a user last paid for their membership.\n    * @param tokenId the token ID to update the membership last paid timestamp for\n    * @param newLastPaid the new timestamp that represents when the user last paid for their membership NFT\n    */\n    function updateMembershipNFTToLastPaid(uint256 tokenId, uint256 newLastPaid) external onlyOwner {\n        membershipNFTToLastPaid[tokenId] = newLastPaid;\n    }\n\n    /**\n    * @dev Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.\n    * @param whiteListAddress the address of the user who will be able to purchase the NFT\n    * @param tokenId the ID of the NFT that the whitelist spot is for\n     */\n    function addWhiteListToToken(address whiteListAddress, uint256 tokenId) external onlyOwner {\n        tokenIdToWhitelistAddress[tokenId] = whiteListAddress;\n    }\n\n    /**\n    * @dev updates the listing fee of an NFT.\n    * @param tokenId the ID of the NFT to update the listing fee of\n    * @param newListingFee the listing fee value for the NFT\n     */\n    function updateTokenListingFee(uint256 tokenId, uint256 newListingFee) external onlyOwner {\n        tokenIdToListingFee[tokenId] = newListingFee;\n    }\n\n    /**\n    * @dev updates the type ID of an NFT.\n    * @param tokenId the ID of the NFT to update the type ID of\n    * @param newTypeId the type ID value for the NFT\n     */\n    function updateTokenTypeId(uint256 tokenId, uint256 newTypeId) external onlyOwner {\n        tokenIdToTypeId[tokenId] = newTypeId;\n    }\n\n    /**\n    * @dev updates the type ID that represents the Original Cardinal NFTs\n    * @param newOriginalCardinalTypeId the new type ID of the Original Cardinal NFTs\n     */\n    function updateOriginalCardinalTypeId(uint256 newOriginalCardinalTypeId) external onlyOwner {\n        originalCardinalTypeId = newOriginalCardinalTypeId;\n        emit typeIdUpdated(\"originalCardinalTypeId\", newOriginalCardinalTypeId);\n    }\n\n    /**\n    * @dev updates the type ID that represents the membership NFTs\n    * @param newMembershipTypeId the new type ID of the membership NFTs\n     */\n    function updateMembershipTypeId(uint256 newMembershipTypeId) external onlyOwner {\n        membershipTypeId = newMembershipTypeId;\n        emit typeIdUpdated(\"membershipTypeId\", newMembershipTypeId);\n    }\n\n    /**\n    * @dev updates the type ID that represents the service NFTs\n    * @param newServiceTypeId the new type ID of the service NFTs\n     */\n    function updateServiceTypeId(uint256 newServiceTypeId) external onlyOwner {\n        serviceTypeId = newServiceTypeId;\n        emit typeIdUpdated(\"serviceTypeId\", newServiceTypeId);\n    }\n\n    /**\n    * @dev updates the membership NFT token URI\n    * @param newMembershipTokenURI the new type ID of the service NFTs\n     */\n    function updateMembershipTokenURI(string memory newMembershipTokenURI) external onlyOwner {\n        membershipTokenURI = newMembershipTokenURI;\n    }\n\n    /**\n    * @dev sets the price of the membership NFTs in USDC\n    * @param newMembershipPrice the new price of the membership NFTs in USDC\n     */\n    function updateMembershipPrice(uint256 newMembershipPrice) external onlyOwner {\n        membershipPriceInUSDC = newMembershipPrice;\n        emit membershipPriceUpdated(newMembershipPrice);\n    }\n\n    /**\n    * @dev Only owner function to set the reference to the USDC contract\n    * @param _USDC the address for the USDC contract\n    */\n    function setUSDCContract(address _USDC) external onlyOwner {\n        USDC = IERC20(_USDC);\n    }\n\n    /**\n    * @dev Only owner function to update the admin mapping.\n    * @param adminAddress the address to admin rights for\n    * @param isAdmin boolean to determine if the address is an admin or not\n    */\n    function setAdminUser(address adminAddress, bool isAdmin) external onlyOwner {\n        addressIsAdmin[adminAddress] = isAdmin;\n    }\n\n    /**\n    * @dev Allows contract admins to manually add an address as a member. Necessary for memberships purchased through Patreon.\n    * @param memberAddress the address of the member being added\n    */\n    function addMember(address memberAddress) external {\n        require(addressIsAdmin[msg.sender], \"Only contract admins can add members.\");\n\n        addressIsMember[memberAddress] = true;\n    }\n\n    /**\n    * @dev Allows contract admins to manually remove an address as a member. Necessary for when a membership bought through Patreon expires.\n    * @param memberAddress the address to remove from the membership list\n    */\n    function removeMember(address memberAddress) external {\n        require(addressIsAdmin[msg.sender], \"Only contract admins can remove a member.\");\n\n        addressIsMember[memberAddress] = false;\n    }\n\n    /**\n    * @dev Allows contract admins to set a membership discount for an address.\n    * @param memberAddress the address to give the discount to\n    * @param discountAmount the discount amount, 90 for 90% of membership price, 75 for 75% of membership price, etc.\n    */\n    function setMemberDiscount(address memberAddress, uint256 discountAmount) external {\n        require(addressIsAdmin[msg.sender], \"Only contract admins can set a membership discount.\");\n        addressToMembershipDiscount[memberAddress] = discountAmount;\n        emit memberDiscountSet(memberAddress, discountAmount);\n    }\n\n    // Override function since both ERC721URIStorage and ERC721Enumerable inherit from ERC721 and so both have a definition for _burn.\n    function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {\n        super._burn(tokenId);\n    }\n\n    // Override function since both ERC721URIStorage and ERC721Enumerable inherit from ERC721 and so both have a definition for _beforeTokenTransfer.\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal override(ERC721, ERC721Enumerable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    // Override function since both ERC721URIStorage and ERC721Enumerable inherit from ERC721 and so both have a definition for supportsInterface.\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    // Override function since both ERC721URIStorage and ERC721Enumerable inherit from ERC721 and so both have a definition for tokenURI.\n    function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n        return super.tokenURI(tokenId);\n    }    \n}",
  "sourceMap": "551:22825:18:-:0;;;2359:1;2319:41;;2445:1;2411:35;;2525:1;2494:32;;3505:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:4;;;;;;;;;;;-1:-1:-1;;;1390:113:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:4;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:4;:::i;:::-;-1:-1:-1;1479:17:4;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;3609:18:18::1;:40:::0;;-1:-1:-1;;;;;3609:40:18;;::::1;-1:-1:-1::0;;;;;;3609:40:18;;::::1;;::::0;;;3659:4:::1;:20:::0;;;;;::::1;::::0;::::1;;::::0;;551:22825;;640:96:12;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;551:22825:18:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;551:22825:18;;;-1:-1:-1;551:22825:18;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:22;93:13;;-1:-1:-1;;;;;135:31:22;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:380::-;573:1;569:12;;;;616;;;637:61;;691:4;683:6;679:17;669:27;;637:61;744:2;736:6;733:14;713:18;710:38;707:161;;;790:10;785:3;781:20;778:1;771:31;825:4;822:1;815:15;853:4;850:1;843:15;707:161;;494:380;;;:::o;:::-;551:22825:18;;;;;;",
  "sourcePath": "contracts/CardinalNFT.sol",
  "type": "contract"
}