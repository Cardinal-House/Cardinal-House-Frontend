{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_marketplaceAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "CardinalNFTAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_USDC",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_defaultListingFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxNFTs",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_NFTPriceInUSDC",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "nodeRewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "nodeRewardsDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "nodeRunnerNFTMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        }
      ],
      "name": "tokenURIUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NFTPriceInUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_tokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "whiteListAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "addWhiteListToToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "addressIsMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToMaticCanClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToMaticClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cardinalNFT",
      "outputs": [
        {
          "internalType": "contract CardinalNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimNodeRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        }
      ],
      "name": "createToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultListingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositNodeRewards",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserTokenURIs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketplaceAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxNFTs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftCount",
          "type": "uint256"
        }
      ],
      "name": "mintNodeRunnerNFT",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nodeRunnerTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToListingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToWhitelistAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDefaultListingFee",
          "type": "uint256"
        }
      ],
      "name": "updateDefaultListingFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newMarketplaceAddress",
          "type": "address"
        }
      ],
      "name": "updateMarketplaceAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxNFTs",
          "type": "uint256"
        }
      ],
      "name": "updateMaxNFTs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newNFTPriceInUSDC",
          "type": "uint256"
        }
      ],
      "name": "updateNFTPriceInUSDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newNodeRunnerTokenURI",
          "type": "string"
        }
      ],
      "name": "updateNodeRunnerTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newListingFee",
          "type": "uint256"
        }
      ],
      "name": "updateTokenListingFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newUSDCAddress",
          "type": "address"
        }
      ],
      "name": "updateUSDCAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawNodeFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "10": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "11": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "12": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
    "13": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Strings.sol",
    "14": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
    "15": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "17": "contracts/CardinalNFT.sol",
    "18": "contracts/CardinalToken.sol",
    "19": "contracts/NodeRunner.sol",
    "2": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "20": "interfaces/Uniswap.sol",
    "3": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "4": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "5": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
    "6": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "7": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721Receiver.sol",
    "8": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
    "9": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/NodeRunner.sol",
    "exportedSymbols": {
      "Address": [
        5802
      ],
      "CardinalNFT": [
        5299
      ],
      "CardinalToken": [
        7118
      ],
      "Context": [
        5321
      ],
      "Counters": [
        3641
      ],
      "ERC165": [
        6029
      ],
      "ERC20": [
        2701
      ],
      "ERC721": [
        3567
      ],
      "ERC721URIStorage": [
        3847
      ],
      "IERC165": [
        7130
      ],
      "IERC20": [
        3719
      ],
      "IERC20Metadata": [
        5346
      ],
      "IERC721": [
        5462
      ],
      "IERC721Metadata": [
        5507
      ],
      "IERC721Receiver": [
        5480
      ],
      "IUniswapV2Factory": [
        7142
      ],
      "IUniswapV2Pair": [
        7146
      ],
      "IUniswapV2Router01": [
        7203
      ],
      "IUniswapV2Router02": [
        7263
      ],
      "NodeRunner": [
        1968
      ],
      "Ownable": [
        2073
      ],
      "Strings": [
        6005
      ]
    },
    "id": 1969,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1232,
        "literals": [
          "solidity",
          "0.8",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:19"
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 1233,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1969,
        "sourceUnit": 3642,
        "src": "56:52:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 1234,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1969,
        "sourceUnit": 3848,
        "src": "109:78:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 1235,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1969,
        "sourceUnit": 3568,
        "src": "188:57:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1236,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1969,
        "sourceUnit": 2074,
        "src": "246:52:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1237,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1969,
        "sourceUnit": 3720,
        "src": "299:56:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CardinalNFT.sol",
        "file": "./CardinalNFT.sol",
        "id": 1238,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1969,
        "sourceUnit": 5300,
        "src": "356:27:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1240,
              "name": "ERC721URIStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3847,
              "src": "516:16:19"
            },
            "id": 1241,
            "nodeType": "InheritanceSpecifier",
            "src": "516:16:19"
          },
          {
            "baseName": {
              "id": 1242,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2073,
              "src": "534:7:19"
            },
            "id": 1243,
            "nodeType": "InheritanceSpecifier",
            "src": "534:7:19"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1239,
          "nodeType": "StructuredDocumentation",
          "src": "385:107:19",
          "text": " @title Node Runner Contract\n @dev NFT contract that will be used with the marketplace contract"
        },
        "fullyImplemented": true,
        "id": 1968,
        "linearizedBaseContracts": [
          1968,
          2073,
          3847,
          3567,
          5507,
          5462,
          6029,
          7130,
          5321
        ],
        "name": "NodeRunner",
        "nameLocation": "502:10:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1247,
            "libraryName": {
              "id": 1244,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3641,
              "src": "554:8:19"
            },
            "nodeType": "UsingForDirective",
            "src": "548:36:19",
            "typeName": {
              "id": 1246,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1245,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3573,
                "src": "567:16:19"
              },
              "referencedDeclaration": 3573,
              "src": "567:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3573_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "aa46a400",
            "id": 1250,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "659:9:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "635:33:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$3573_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 1249,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1248,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3573,
                "src": "635:16:19"
              },
              "referencedDeclaration": 3573,
              "src": "635:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3573_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "daa17f49",
            "id": 1252,
            "mutability": "mutable",
            "name": "marketplaceAddress",
            "nameLocation": "740:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "725:33:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1251,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "725:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c98f56e0",
            "id": 1255,
            "mutability": "mutable",
            "name": "cardinalNFT",
            "nameLocation": "838:11:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "819:30:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CardinalNFT_$5299",
              "typeString": "contract CardinalNFT"
            },
            "typeName": {
              "id": 1254,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1253,
                "name": "CardinalNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5299,
                "src": "819:11:19"
              },
              "referencedDeclaration": 5299,
              "src": "819:11:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CardinalNFT_$5299",
                "typeString": "contract CardinalNFT"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89a30271",
            "id": 1258,
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "914:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "900:18:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3719",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1257,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1256,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3719,
                "src": "900:6:19"
              },
              "referencedDeclaration": 3719,
              "src": "900:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3719",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3e22ceb0",
            "id": 1260,
            "mutability": "mutable",
            "name": "defaultListingFee",
            "nameLocation": "976:17:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "961:32:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1259,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "961:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4e9e1ec6",
            "id": 1262,
            "mutability": "mutable",
            "name": "maxNFTs",
            "nameLocation": "1071:7:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "1056:22:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1261,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1056:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5196931",
            "id": 1264,
            "mutability": "mutable",
            "name": "NFTPriceInUSDC",
            "nameLocation": "1125:14:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "1110:29:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1263,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1110:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d283b986",
            "id": 1266,
            "mutability": "mutable",
            "name": "nodeRunnerTokenURI",
            "nameLocation": "1218:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "1204:32:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1265,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1204:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b063c954",
            "id": 1270,
            "mutability": "mutable",
            "name": "tokenIdToListingFee",
            "nameLocation": "1364:19:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "1329:54:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1269,
              "keyType": {
                "id": 1267,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1337:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1329:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1268,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1348:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c23a67a",
            "id": 1274,
            "mutability": "mutable",
            "name": "tokenIdToWhitelistAddress",
            "nameLocation": "1488:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "1453:60:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1273,
              "keyType": {
                "id": 1271,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1461:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1453:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1272,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1472:7:19",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5506a120",
            "id": 1278,
            "mutability": "mutable",
            "name": "addressToMaticCanClaim",
            "nameLocation": "1643:22:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "1608:57:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1277,
              "keyType": {
                "id": 1275,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1616:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1608:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1276,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1627:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c4a896c9",
            "id": 1282,
            "mutability": "mutable",
            "name": "addressToMaticClaimed",
            "nameLocation": "1776:21:19",
            "nodeType": "VariableDeclaration",
            "scope": 1968,
            "src": "1741:56:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1281,
              "keyType": {
                "id": 1279,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1749:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1741:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1280,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1760:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1288,
            "name": "nodeRunnerNFTMinted",
            "nameLocation": "1810:19:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1284,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1846:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1288,
                  "src": "1830:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1286,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1869:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1288,
                  "src": "1853:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1829:48:19"
            },
            "src": "1804:74:19"
          },
          {
            "anonymous": false,
            "id": 1292,
            "name": "nodeRewardsDeposited",
            "nameLocation": "1889:20:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1290,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1926:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1292,
                  "src": "1910:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1909:24:19"
            },
            "src": "1883:51:19"
          },
          {
            "anonymous": false,
            "id": 1298,
            "name": "nodeRewardsClaimed",
            "nameLocation": "1945:18:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1294,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "1980:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "1964:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1296,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1997:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "1989:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1989:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1963:41:19"
            },
            "src": "1939:66:19"
          },
          {
            "anonymous": false,
            "id": 1304,
            "name": "tokenURIUpdated",
            "nameLocation": "2016:15:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1300,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2048:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1304,
                  "src": "2032:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1302,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newTokenURI",
                  "nameLocation": "2064:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1304,
                  "src": "2057:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2057:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2031:45:19"
            },
            "src": "2010:67:19"
          },
          {
            "body": {
              "id": 1351,
              "nodeType": "Block",
              "src": "2279:260:19",
              "statements": [
                {
                  "expression": {
                    "id": 1325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1323,
                      "name": "marketplaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1252,
                      "src": "2289:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1324,
                      "name": "_marketplaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1306,
                      "src": "2310:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2289:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1326,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:40:19"
                },
                {
                  "expression": {
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1327,
                      "name": "cardinalNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1255,
                      "src": "2339:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CardinalNFT_$5299",
                        "typeString": "contract CardinalNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1329,
                          "name": "CardinalNFTAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1308,
                          "src": "2365:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 1328,
                        "name": "CardinalNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5299,
                        "src": "2353:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CardinalNFT_$5299_$",
                          "typeString": "type(contract CardinalNFT)"
                        }
                      },
                      "id": 1330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2353:31:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CardinalNFT_$5299",
                        "typeString": "contract CardinalNFT"
                      }
                    },
                    "src": "2339:45:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CardinalNFT_$5299",
                      "typeString": "contract CardinalNFT"
                    }
                  },
                  "id": 1332,
                  "nodeType": "ExpressionStatement",
                  "src": "2339:45:19"
                },
                {
                  "expression": {
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1333,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1258,
                      "src": "2394:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3719",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1335,
                          "name": "_USDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1310,
                          "src": "2408:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1334,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3719,
                        "src": "2401:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$3719_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2401:13:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3719",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2394:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3719",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1338,
                  "nodeType": "ExpressionStatement",
                  "src": "2394:20:19"
                },
                {
                  "expression": {
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1339,
                      "name": "defaultListingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1260,
                      "src": "2424:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1340,
                      "name": "_defaultListingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "2444:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2424:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1342,
                  "nodeType": "ExpressionStatement",
                  "src": "2424:38:19"
                },
                {
                  "expression": {
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1343,
                      "name": "maxNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1262,
                      "src": "2472:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1344,
                      "name": "_maxNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1314,
                      "src": "2482:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2472:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "2472:18:19"
                },
                {
                  "expression": {
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1347,
                      "name": "NFTPriceInUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1264,
                      "src": "2500:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1348,
                      "name": "_NFTPriceInUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1316,
                      "src": "2517:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2500:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1350,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:32:19"
                }
              ]
            },
            "id": 1352,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4e6f646552756e6e65724e4654",
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2253:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8f2003762c01a59e7c9d0bc8dd2836d74b41ea15d8ae8ffcc72e42eef24106ed",
                      "typeString": "literal_string \"NodeRunnerNFT\""
                    },
                    "value": "NodeRunnerNFT"
                  },
                  {
                    "hexValue": "4e524e4654",
                    "id": 1320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2270:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a0f53a9bc1cbe6da3d172935621bf4aa5ca482fae5e08ff03e45c91993777b28",
                      "typeString": "literal_string \"NRNFT\""
                    },
                    "value": "NRNFT"
                  }
                ],
                "id": 1321,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1318,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3567,
                  "src": "2246:6:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2246:32:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1306,
                  "mutability": "mutable",
                  "name": "_marketplaceAddress",
                  "nameLocation": "2103:19:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "2095:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2095:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "CardinalNFTAddress",
                  "nameLocation": "2140:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "2124:34:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:15:19",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "_USDC",
                  "nameLocation": "2168:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "2160:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2160:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "_defaultListingFee",
                  "nameLocation": "2183:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "2175:26:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1314,
                  "mutability": "mutable",
                  "name": "_maxNFTs",
                  "nameLocation": "2211:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "2203:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2203:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "_NFTPriceInUSDC",
                  "nameLocation": "2229:15:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "2221:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2221:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2094:151:19"
            },
            "returnParameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2279:0:19"
            },
            "scope": 1968,
            "src": "2083:456:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1509,
              "nodeType": "Block",
              "src": "2822:1416:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1362,
                          "name": "nftCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1355,
                          "src": "2840:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2851:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2840:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520746f206d696e74206174206c65617374206f6e65204e6f64652052756e6e6572204e46742e",
                        "id": 1365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2854:48:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b27d0bc47df3ef550a9bfd785fb6395eca410993532d8062fc2a9d3b826edb5",
                          "typeString": "literal_string \"You have to mint at least one Node Runner NFt.\""
                        },
                        "value": "You have to mint at least one Node Runner NFt."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b27d0bc47df3ef550a9bfd785fb6395eca410993532d8062fc2a9d3b826edb5",
                          "typeString": "literal_string \"You have to mint at least one Node Runner NFt.\""
                        }
                      ],
                      "id": 1361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2832:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2832:71:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1367,
                  "nodeType": "ExpressionStatement",
                  "src": "2832:71:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1369,
                            "name": "nftCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "2921:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1370,
                                "name": "_tokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1250,
                                "src": "2932:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Counter_$3573_storage",
                                  "typeString": "struct Counters.Counter storage ref"
                                }
                              },
                              "id": 1371,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3585,
                              "src": "2932:17:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3573_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3573_storage_ptr_$",
                                "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                              }
                            },
                            "id": 1372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2932:19:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2921:30:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1374,
                          "name": "maxNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1262,
                          "src": "2955:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2921:41:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206172656e277420656e6f756768204e6f64652052756e6e6572204e46547320666f722074686973206e6f646520666f7220796f7520746f206d696e7420796f7520616d6f756e7420796f752063686f73652e20416e6f74686572206e6f64652077696c6c20626520617661696c61626c6520736f6f6e21",
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2964:127:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9cf7bda1d3e07ba1240762af2ac99aacd6a52e5cb2ece0db7bc5369c79dd3e7",
                          "typeString": "literal_string \"There aren't enough Node Runner NFTs for this node for you to mint you amount you chose. Another node will be available soon!\""
                        },
                        "value": "There aren't enough Node Runner NFTs for this node for you to mint you amount you chose. Another node will be available soon!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9cf7bda1d3e07ba1240762af2ac99aacd6a52e5cb2ece0db7bc5369c79dd3e7",
                          "typeString": "literal_string \"There aren't enough Node Runner NFTs for this node for you to mint you amount you chose. Another node will be available soon!\""
                        }
                      ],
                      "id": 1368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2913:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2913:179:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1378,
                  "nodeType": "ExpressionStatement",
                  "src": "2913:179:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1382,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3138:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3138:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1380,
                            "name": "cardinalNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "3110:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$5299",
                              "typeString": "contract CardinalNFT"
                            }
                          },
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addressIsMember",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3887,
                          "src": "3110:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 1384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3110:39:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792043617264696e616c2043726577204d656d626572732063616e20706172746963697061746520696e204e6f64652052756e6e65722e",
                        "id": 1385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3151:60:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e32df0cdd9acbb897247a51942b951ee28107042086abdbe04ac9811d642b935",
                          "typeString": "literal_string \"Only Cardinal Crew Members can participate in Node Runner.\""
                        },
                        "value": "Only Cardinal Crew Members can participate in Node Runner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e32df0cdd9acbb897247a51942b951ee28107042086abdbe04ac9811d642b935",
                          "typeString": "literal_string \"Only Cardinal Crew Members can participate in Node Runner.\""
                        }
                      ],
                      "id": 1379,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3102:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3102:110:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1387,
                  "nodeType": "ExpressionStatement",
                  "src": "3102:110:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1391,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3245:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3245:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1389,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1258,
                              "src": "3230:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3719",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3658,
                            "src": "3230:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3230:26:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1394,
                          "name": "NFTPriceInUSDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1264,
                          "src": "3260:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3230:44:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f756768205553444320746f2070617920666f7220746865204e6f64652052756e6e6572204e46542e",
                        "id": 1396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3276:60:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a28b23f57906b5cdae7816ddd7579d21504b5a49b080b35fdba5d4ae780eee4a",
                          "typeString": "literal_string \"You don't have enough USDC to pay for the Node Runner NFT.\""
                        },
                        "value": "You don't have enough USDC to pay for the Node Runner NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a28b23f57906b5cdae7816ddd7579d21504b5a49b080b35fdba5d4ae780eee4a",
                          "typeString": "literal_string \"You don't have enough USDC to pay for the Node Runner NFT.\""
                        }
                      ],
                      "id": 1388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3222:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3222:115:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1398,
                  "nodeType": "ExpressionStatement",
                  "src": "3222:115:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1402,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3370:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3370:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1406,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3390:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NodeRunner_$1968",
                                    "typeString": "contract NodeRunner"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NodeRunner_$1968",
                                    "typeString": "contract NodeRunner"
                                  }
                                ],
                                "id": 1405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3382:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1404,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3382:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3382:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1400,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1258,
                              "src": "3355:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3719",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3678,
                            "src": "3355:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3355:41:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1409,
                          "name": "NFTPriceInUSDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1264,
                          "src": "3400:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3355:59:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520686176656e277420617070726f766564207468697320636f6e747261637420746f207370656e6420656e6f756768206f6620796f7572205553444320746f2070617920666f7220746865204e6f64652052756e6e6572204e46542e",
                        "id": 1411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3416:97:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dde8c6f554f079a035634fd0740b91d06375e4c67a1b91608e8cb109b1ce909",
                          "typeString": "literal_string \"You haven't approved this contract to spend enough of your USDC to pay for the Node Runner NFT.\""
                        },
                        "value": "You haven't approved this contract to spend enough of your USDC to pay for the Node Runner NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8dde8c6f554f079a035634fd0740b91d06375e4c67a1b91608e8cb109b1ce909",
                          "typeString": "literal_string \"You haven't approved this contract to spend enough of your USDC to pay for the Node Runner NFT.\""
                        }
                      ],
                      "id": 1399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3347:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3347:167:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1413,
                  "nodeType": "ExpressionStatement",
                  "src": "3347:167:19"
                },
                {
                  "assignments": [
                    1418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1418,
                      "mutability": "mutable",
                      "name": "mintedNFTIds",
                      "nameLocation": "3550:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1509,
                      "src": "3533:29:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3533:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1417,
                        "nodeType": "ArrayTypeName",
                        "src": "3533:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1424,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1422,
                        "name": "nftCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1355,
                        "src": "3579:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3565:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1419,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3569:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1420,
                        "nodeType": "ArrayTypeName",
                        "src": "3569:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 1423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3565:23:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3533:55:19"
                },
                {
                  "assignments": [
                    1426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1426,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "3606:1:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1509,
                      "src": "3598:9:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3598:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1428,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3610:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3598:13:19"
                },
                {
                  "body": {
                    "id": 1505,
                    "nodeType": "Block",
                    "src": "3656:546:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1443,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3688:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3688:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1447,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3708:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NodeRunner_$1968",
                                    "typeString": "contract NodeRunner"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NodeRunner_$1968",
                                    "typeString": "contract NodeRunner"
                                  }
                                ],
                                "id": 1446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3700:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1445,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3700:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3700:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1449,
                              "name": "NFTPriceInUSDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1264,
                              "src": "3715:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1440,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1258,
                              "src": "3670:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3719",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3700,
                            "src": "3670:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3670:60:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1451,
                        "nodeType": "ExpressionStatement",
                        "src": "3670:60:19"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1452,
                              "name": "_tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1250,
                              "src": "3745:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$3573_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 1454,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3599,
                            "src": "3745:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$3573_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3573_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 1455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3745:21:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1456,
                        "nodeType": "ExpressionStatement",
                        "src": "3745:21:19"
                      },
                      {
                        "assignments": [
                          1458
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1458,
                            "mutability": "mutable",
                            "name": "newItemId",
                            "nameLocation": "3788:9:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 1505,
                            "src": "3780:17:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1457,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3780:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1462,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1459,
                              "name": "_tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1250,
                              "src": "3800:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$3573_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 1460,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3585,
                            "src": "3800:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3573_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3573_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3800:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3780:39:19"
                      },
                      {
                        "expression": {
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1463,
                              "name": "tokenIdToListingFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1270,
                              "src": "3834:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1465,
                            "indexExpression": {
                              "id": 1464,
                              "name": "newItemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1458,
                              "src": "3854:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3834:30:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1466,
                            "name": "defaultListingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "3867:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3834:50:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1468,
                        "nodeType": "ExpressionStatement",
                        "src": "3834:50:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1470,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3904:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3904:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1472,
                              "name": "newItemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1458,
                              "src": "3916:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1469,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3291,
                            "src": "3898:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3898:28:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1474,
                        "nodeType": "ExpressionStatement",
                        "src": "3898:28:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1476,
                              "name": "newItemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1458,
                              "src": "3953:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1477,
                              "name": "nodeRunnerTokenURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1266,
                              "src": "3964:18:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 1475,
                            "name": "_setTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3816,
                            "src": "3940:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3940:43:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1479,
                        "nodeType": "ExpressionStatement",
                        "src": "3940:43:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1483,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4013:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NodeRunner_$1968",
                                    "typeString": "contract NodeRunner"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NodeRunner_$1968",
                                    "typeString": "contract NodeRunner"
                                  }
                                ],
                                "id": 1482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4005:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1481,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4005:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4005:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1485,
                              "name": "newItemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1458,
                              "src": "4020:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1480,
                            "name": "approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2961,
                            "src": "3997:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3997:33:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1487,
                        "nodeType": "ExpressionStatement",
                        "src": "3997:33:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1489,
                              "name": "marketplaceAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1252,
                              "src": "4062:18:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4082:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1488,
                            "name": "setApprovalForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2999,
                            "src": "4044:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 1491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4044:43:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1492,
                        "nodeType": "ExpressionStatement",
                        "src": "4044:43:19"
                      },
                      {
                        "expression": {
                          "id": 1497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1493,
                              "name": "mintedNFTIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1418,
                              "src": "4102:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1495,
                            "indexExpression": {
                              "id": 1494,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1426,
                              "src": "4115:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4102:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1496,
                            "name": "newItemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1458,
                            "src": "4120:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4102:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1498,
                        "nodeType": "ExpressionStatement",
                        "src": "4102:27:19"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1500,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4169:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4169:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1502,
                              "name": "newItemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1458,
                              "src": "4181:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1499,
                            "name": "nodeRunnerNFTMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1288,
                            "src": "4149:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4149:42:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1504,
                        "nodeType": "EmitStatement",
                        "src": "4144:47:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1433,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1426,
                      "src": "3634:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1434,
                      "name": "nftCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1355,
                      "src": "3638:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3634:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1506,
                  "initializationExpression": {
                    "expression": {
                      "id": 1431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1429,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1426,
                        "src": "3627:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 1430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3631:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3627:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1432,
                    "nodeType": "ExpressionStatement",
                    "src": "3627:5:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1436,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1426,
                        "src": "3648:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 1437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3653:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3648:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1439,
                    "nodeType": "ExpressionStatement",
                    "src": "3648:6:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "3622:580:19"
                },
                {
                  "expression": {
                    "id": 1507,
                    "name": "mintedNFTIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1418,
                    "src": "4219:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 1360,
                  "id": 1508,
                  "nodeType": "Return",
                  "src": "4212:19:19"
                }
              ]
            },
            "documentation": {
              "id": 1353,
              "nodeType": "StructuredDocumentation",
              "src": "2545:194:19",
              "text": " @dev Allows someone to mint a Node Runner NFT by paying USDC\n @param nftCount the number of NFTs to mint\n @return newItemId the ID of the newly minted Node Runner NFT"
            },
            "functionSelector": "f7634a17",
            "id": 1510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNodeRunnerNFT",
            "nameLocation": "2753:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1355,
                  "mutability": "mutable",
                  "name": "nftCount",
                  "nameLocation": "2779:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "2771:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2771:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2770:18:19"
            },
            "returnParameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "2807:13:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1357,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2807:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1358,
                    "nodeType": "ArrayTypeName",
                    "src": "2807:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2806:15:19"
            },
            "scope": 1968,
            "src": "2744:1494:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1569,
              "nodeType": "Block",
              "src": "4515:420:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1520,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "4525:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3573_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1522,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3599,
                      "src": "4525:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$3573_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3573_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 1523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4525:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1524,
                  "nodeType": "ExpressionStatement",
                  "src": "4525:21:19"
                },
                {
                  "assignments": [
                    1526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1526,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "4564:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1569,
                      "src": "4556:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1525,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4556:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1530,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1527,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "4576:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3573_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1528,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3585,
                      "src": "4576:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3573_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3573_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4576:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4556:39:19"
                },
                {
                  "expression": {
                    "id": 1535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1531,
                        "name": "tokenIdToListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "4606:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1533,
                      "indexExpression": {
                        "id": 1532,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1526,
                        "src": "4626:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4606:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1534,
                      "name": "defaultListingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1260,
                      "src": "4639:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4606:50:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1536,
                  "nodeType": "ExpressionStatement",
                  "src": "4606:50:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1538,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4672:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4672:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1540,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1526,
                        "src": "4684:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1537,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3291,
                      "src": "4666:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4666:28:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1542,
                  "nodeType": "ExpressionStatement",
                  "src": "4666:28:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1544,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1526,
                        "src": "4717:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1545,
                        "name": "nodeRunnerTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "4728:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 1543,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3816,
                      "src": "4704:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4704:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1547,
                  "nodeType": "ExpressionStatement",
                  "src": "4704:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1551,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4773:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NodeRunner_$1968",
                              "typeString": "contract NodeRunner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NodeRunner_$1968",
                              "typeString": "contract NodeRunner"
                            }
                          ],
                          "id": 1550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4765:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1549,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4765:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4765:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1553,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1526,
                        "src": "4780:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1548,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2961,
                      "src": "4757:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4757:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1555,
                  "nodeType": "ExpressionStatement",
                  "src": "4757:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1557,
                        "name": "marketplaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "4818:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4838:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1556,
                      "name": "setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2999,
                      "src": "4800:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4800:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1560,
                  "nodeType": "ExpressionStatement",
                  "src": "4800:43:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1562,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4879:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4879:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1564,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1526,
                        "src": "4891:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1561,
                      "name": "nodeRunnerNFTMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1288,
                      "src": "4859:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4859:42:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1566,
                  "nodeType": "EmitStatement",
                  "src": "4854:47:19"
                },
                {
                  "expression": {
                    "id": 1567,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1526,
                    "src": "4919:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1519,
                  "id": 1568,
                  "nodeType": "Return",
                  "src": "4912:16:19"
                }
              ]
            },
            "documentation": {
              "id": 1511,
              "nodeType": "StructuredDocumentation",
              "src": "4244:184:19",
              "text": " @dev Only owner function to mint a new NFT.\n @param newTokenURI the token URI on IPFS for the NFT metadata\n @return newItemId the ID of the newly minted NFT"
            },
            "functionSelector": "45576f94",
            "id": 1570,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1516,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1515,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "4490:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "4490:9:19"
              }
            ],
            "name": "createToken",
            "nameLocation": "4442:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1513,
                  "mutability": "mutable",
                  "name": "newTokenURI",
                  "nameLocation": "4468:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1570,
                  "src": "4454:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4454:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4453:27:19"
            },
            "returnParameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1518,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1570,
                  "src": "4509:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4509:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4508:6:19"
            },
            "scope": 1968,
            "src": "4433:502:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1630,
              "nodeType": "Block",
              "src": "5109:504:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1575,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5127:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5127:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1577,
                          "name": "maxNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1262,
                          "src": "5140:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5127:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d757374206465706f73697420656e6f756768204d6174696320736f2069742063616e206265206469766964656420627920746865206d6178696d756d206e756d626572206f66204e465420686f6c6465727320666f7220746865206e6f64652e",
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5149:103:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcbcb4dade7e74e4b043633642de009e876fb3bc73665fb1221aac3b67dd736c",
                          "typeString": "literal_string \"You must deposit enough Matic so it can be divided by the maximum number of NFT holders for the node.\""
                        },
                        "value": "You must deposit enough Matic so it can be divided by the maximum number of NFT holders for the node."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcbcb4dade7e74e4b043633642de009e876fb3bc73665fb1221aac3b67dd736c",
                          "typeString": "literal_string \"You must deposit enough Matic so it can be divided by the maximum number of NFT holders for the node.\""
                        }
                      ],
                      "id": 1574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5119:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5119:134:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1581,
                  "nodeType": "ExpressionStatement",
                  "src": "5119:134:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1583,
                              "name": "_tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1250,
                              "src": "5271:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$3573_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 1584,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3585,
                            "src": "5271:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3573_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3573_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5271:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5293:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5271:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f204e4654732068617665206265656e206d696e74656420666f722074686973206e6f6465207965742e",
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5296:45:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36c572d251c2bf3d03660a5d8d30f6a3b78dee0701d58cf65019c839dd2af63b",
                          "typeString": "literal_string \"No NFTs have been minted for this node yet.\""
                        },
                        "value": "No NFTs have been minted for this node yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36c572d251c2bf3d03660a5d8d30f6a3b78dee0701d58cf65019c839dd2af63b",
                          "typeString": "literal_string \"No NFTs have been minted for this node yet.\""
                        }
                      ],
                      "id": 1582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5263:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5263:79:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1590,
                  "nodeType": "ExpressionStatement",
                  "src": "5263:79:19"
                },
                {
                  "body": {
                    "id": 1623,
                    "nodeType": "Block",
                    "src": "5401:159:19",
                    "statements": [
                      {
                        "assignments": [
                          1604
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1604,
                            "mutability": "mutable",
                            "name": "NFTOwner",
                            "nameLocation": "5423:8:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 1623,
                            "src": "5415:16:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1603,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5415:7:19",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1608,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1606,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1592,
                              "src": "5442:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1605,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2847,
                            "src": "5434:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5434:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5415:29:19"
                      },
                      {
                        "expression": {
                          "id": 1621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1609,
                              "name": "addressToMaticCanClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1278,
                              "src": "5458:22:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1611,
                            "indexExpression": {
                              "id": 1610,
                              "name": "NFTOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1604,
                              "src": "5481:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5458:32:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1612,
                                "name": "addressToMaticCanClaim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1278,
                                "src": "5493:22:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1614,
                              "indexExpression": {
                                "id": 1613,
                                "name": "NFTOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1604,
                                "src": "5516:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5493:32:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1615,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5529:3:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1616,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "5529:9:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 1617,
                                    "name": "maxNFTs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1262,
                                    "src": "5541:7:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5529:19:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1619,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5528:21:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5493:56:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5458:91:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1622,
                        "nodeType": "ExpressionStatement",
                        "src": "5458:91:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1595,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1592,
                      "src": "5370:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1596,
                          "name": "_tokenIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1250,
                          "src": "5375:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$3573_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3585,
                        "src": "5375:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3573_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3573_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 1598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5375:19:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5370:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1624,
                  "initializationExpression": {
                    "assignments": [
                      1592
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1592,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5363:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 1624,
                        "src": "5358:6:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1591,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5358:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1594,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5367:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5358:10:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5396:3:19",
                      "subExpression": {
                        "id": 1600,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1592,
                        "src": "5396:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1602,
                    "nodeType": "ExpressionStatement",
                    "src": "5396:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "5353:207:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5596:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "5596:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1625,
                      "name": "nodeRewardsDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1292,
                      "src": "5575:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5575:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1629,
                  "nodeType": "EmitStatement",
                  "src": "5570:36:19"
                }
              ]
            },
            "documentation": {
              "id": 1571,
              "nodeType": "StructuredDocumentation",
              "src": "4941:116:19",
              "text": " @dev Function to deposit rewards in Matic from the node into the contract for NFT holders to claim."
            },
            "functionSelector": "88913ce2",
            "id": 1631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositNodeRewards",
            "nameLocation": "5071:18:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5089:2:19"
            },
            "returnParameters": {
              "id": 1573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5109:0:19"
            },
            "scope": 1968,
            "src": "5062:551:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1701,
              "nodeType": "Block",
              "src": "5734:700:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1638,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5780:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5780:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1636,
                            "name": "cardinalNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "5752:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalNFT_$5299",
                              "typeString": "contract CardinalNFT"
                            }
                          },
                          "id": 1637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addressIsMember",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3887,
                          "src": "5752:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 1640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5752:39:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792043617264696e616c2043726577204d656d626572732063616e20706172746963697061746520696e204e6f64652052756e6e65722e",
                        "id": 1641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5793:60:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e32df0cdd9acbb897247a51942b951ee28107042086abdbe04ac9811d642b935",
                          "typeString": "literal_string \"Only Cardinal Crew Members can participate in Node Runner.\""
                        },
                        "value": "Only Cardinal Crew Members can participate in Node Runner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e32df0cdd9acbb897247a51942b951ee28107042086abdbe04ac9811d642b935",
                          "typeString": "literal_string \"Only Cardinal Crew Members can participate in Node Runner.\""
                        }
                      ],
                      "id": 1635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5744:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5744:110:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1643,
                  "nodeType": "ExpressionStatement",
                  "src": "5744:110:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1645,
                            "name": "addressToMaticCanClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1278,
                            "src": "5872:22:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1648,
                          "indexExpression": {
                            "expression": {
                              "id": 1646,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5895:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5895:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5872:34:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5909:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5872:38:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520616e79206e6f6465207265776172647320746f20636c61696d2120496620796f75206861766520616e204e465420666f722074686973206e6f64652c20706c65617365207761697420756e74696c20746865206e65787420726577617264206465706f7369742e",
                        "id": 1651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5912:120:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ca6656c7842212fffbe0dd8075b2376118dcce24e81fe8afcb7f2c5b9efb76d",
                          "typeString": "literal_string \"You don't have any node rewards to claim! If you have an NFT for this node, please wait until the next reward deposit.\""
                        },
                        "value": "You don't have any node rewards to claim! If you have an NFT for this node, please wait until the next reward deposit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ca6656c7842212fffbe0dd8075b2376118dcce24e81fe8afcb7f2c5b9efb76d",
                          "typeString": "literal_string \"You don't have any node rewards to claim! If you have an NFT for this node, please wait until the next reward deposit.\""
                        }
                      ],
                      "id": 1644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5864:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5864:169:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1653,
                  "nodeType": "ExpressionStatement",
                  "src": "5864:169:19"
                },
                {
                  "assignments": [
                    1655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1655,
                      "mutability": "mutable",
                      "name": "claimAmount",
                      "nameLocation": "6060:11:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1701,
                      "src": "6052:19:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1654,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6052:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1660,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1656,
                      "name": "addressToMaticCanClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "6074:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1659,
                    "indexExpression": {
                      "expression": {
                        "id": 1657,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6097:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6097:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6074:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6052:56:19"
                },
                {
                  "expression": {
                    "id": 1666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1661,
                        "name": "addressToMaticCanClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1278,
                        "src": "6118:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1664,
                      "indexExpression": {
                        "expression": {
                          "id": 1662,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6141:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6141:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6118:34:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6155:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6118:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1667,
                  "nodeType": "ExpressionStatement",
                  "src": "6118:38:19"
                },
                {
                  "assignments": [
                    1669,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1669,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6172:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1701,
                      "src": "6167:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1668,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6167:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1677,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6221:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1670,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6185:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6185:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6185:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1673,
                          "name": "claimAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1655,
                          "src": "6208:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6185:35:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6185:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6166:58:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1679,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1669,
                        "src": "6242:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204d61746963",
                        "id": 1680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6251:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d39a509a33e745756f329c01e27b2800b81e44f8e850d4b574358bab66b75050",
                          "typeString": "literal_string \"Failed to send Matic\""
                        },
                        "value": "Failed to send Matic"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d39a509a33e745756f329c01e27b2800b81e44f8e850d4b574358bab66b75050",
                          "typeString": "literal_string \"Failed to send Matic\""
                        }
                      ],
                      "id": 1678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6234:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6234:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1682,
                  "nodeType": "ExpressionStatement",
                  "src": "6234:40:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1684,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6309:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6309:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1686,
                        "name": "claimAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "6321:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1683,
                      "name": "nodeRewardsClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "6290:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6290:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1688,
                  "nodeType": "EmitStatement",
                  "src": "6285:48:19"
                },
                {
                  "expression": {
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1689,
                        "name": "addressToMaticClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "6344:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1692,
                      "indexExpression": {
                        "expression": {
                          "id": 1690,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6366:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6366:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6344:33:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1693,
                          "name": "addressToMaticClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1282,
                          "src": "6380:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1696,
                        "indexExpression": {
                          "expression": {
                            "id": 1694,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6402:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6402:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6380:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1697,
                        "name": "claimAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "6416:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6380:47:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6344:83:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1700,
                  "nodeType": "ExpressionStatement",
                  "src": "6344:83:19"
                }
              ]
            },
            "documentation": {
              "id": 1632,
              "nodeType": "StructuredDocumentation",
              "src": "5619:73:19",
              "text": "@dev Function for NFT holders to claim their node rewards."
            },
            "functionSelector": "a58b603b",
            "id": 1702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimNodeRewards",
            "nameLocation": "5706:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5722:2:19"
            },
            "returnParameters": {
              "id": 1634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5734:0:19"
            },
            "scope": 1968,
            "src": "5697:737:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1722,
              "nodeType": "Block",
              "src": "6612:70:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1711,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "6636:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6636:7:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1717,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6668:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NodeRunner_$1968",
                                  "typeString": "contract NodeRunner"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_NodeRunner_$1968",
                                  "typeString": "contract NodeRunner"
                                }
                              ],
                              "id": 1716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6660:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1715,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6660:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6660:13:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1713,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1258,
                            "src": "6645:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3719",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3658,
                          "src": "6645:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6645:29:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1708,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1258,
                        "src": "6622:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3719",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3668,
                      "src": "6622:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6622:53:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1721,
                  "nodeType": "ExpressionStatement",
                  "src": "6622:53:19"
                }
              ]
            },
            "documentation": {
              "id": 1703,
              "nodeType": "StructuredDocumentation",
              "src": "6440:119:19",
              "text": " @dev Only owner function to withdraw the USDC that is paid to this contract for the Node Runner NFTs."
            },
            "functionSelector": "64ca44a5",
            "id": 1723,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1706,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1705,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "6602:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "6602:9:19"
              }
            ],
            "name": "withdrawNodeFunds",
            "nameLocation": "6573:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6590:2:19"
            },
            "returnParameters": {
              "id": 1707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6612:0:19"
            },
            "scope": 1968,
            "src": "6564:118:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1743,
              "nodeType": "Block",
              "src": "6972:103:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1734,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1726,
                        "src": "6995:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1735,
                        "name": "newTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1728,
                        "src": "7004:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1733,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3816,
                      "src": "6982:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6982:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1737,
                  "nodeType": "ExpressionStatement",
                  "src": "6982:34:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1739,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1726,
                        "src": "7047:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1740,
                        "name": "newTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1728,
                        "src": "7056:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1738,
                      "name": "tokenURIUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1304,
                      "src": "7031:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7031:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1742,
                  "nodeType": "EmitStatement",
                  "src": "7026:42:19"
                }
              ]
            },
            "documentation": {
              "id": 1724,
              "nodeType": "StructuredDocumentation",
              "src": "6688:195:19",
              "text": " @dev Setter function for the token URI of an NFT.\n @param tokenId the ID of the NFT to update the token URI of\n @param newTokenURI the token URI to update the NFT with"
            },
            "functionSelector": "162094c4",
            "id": 1744,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1731,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1730,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "6962:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "6962:9:19"
              }
            ],
            "name": "setTokenURI",
            "nameLocation": "6897:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1726,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6917:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1744,
                  "src": "6909:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6909:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1728,
                  "mutability": "mutable",
                  "name": "newTokenURI",
                  "nameLocation": "6940:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1744,
                  "src": "6926:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1727,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6926:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6908:44:19"
            },
            "returnParameters": {
              "id": 1732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6972:0:19"
            },
            "scope": 1968,
            "src": "6888:187:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1838,
              "nodeType": "Block",
              "src": "7377:658:19",
              "statements": [
                {
                  "assignments": [
                    1754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1754,
                      "mutability": "mutable",
                      "name": "NFTCount",
                      "nameLocation": "7392:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1838,
                      "src": "7387:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1753,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7387:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1758,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1755,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "7403:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3573_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1756,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3585,
                      "src": "7403:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3573_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3573_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7403:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7387:35:19"
                },
                {
                  "assignments": [
                    1760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1760,
                      "mutability": "mutable",
                      "name": "userNFTCount",
                      "nameLocation": "7437:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1838,
                      "src": "7432:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1759,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7432:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1762,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7452:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7432:21:19"
                },
                {
                  "assignments": [
                    1764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1764,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "7468:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1838,
                      "src": "7463:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1763,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7463:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1766,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7483:1:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7463:21:19"
                },
                {
                  "body": {
                    "id": 1788,
                    "nodeType": "Block",
                    "src": "7535:106:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1778,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1768,
                                "src": "7561:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1777,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2847,
                              "src": "7553:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 1779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7553:11:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1780,
                            "name": "userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1747,
                            "src": "7568:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7553:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1787,
                        "nodeType": "IfStatement",
                        "src": "7549:82:19",
                        "trueBody": {
                          "id": 1786,
                          "nodeType": "Block",
                          "src": "7581:50:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 1784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1782,
                                  "name": "userNFTCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1760,
                                  "src": "7599:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7615:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7599:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1785,
                              "nodeType": "ExpressionStatement",
                              "src": "7599:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1771,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1768,
                      "src": "7513:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1772,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1754,
                      "src": "7519:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7513:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1789,
                  "initializationExpression": {
                    "assignments": [
                      1768
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1768,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "7505:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 1789,
                        "src": "7500:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1767,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7500:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1770,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7510:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7500:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7529:4:19",
                      "subExpression": {
                        "id": 1774,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1768,
                        "src": "7529:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1776,
                    "nodeType": "ExpressionStatement",
                    "src": "7529:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "7495:146:19"
                },
                {
                  "assignments": [
                    1794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1794,
                      "mutability": "mutable",
                      "name": "userNFTTokenURIs",
                      "nameLocation": "7667:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1838,
                      "src": "7651:32:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1792,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7651:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1793,
                        "nodeType": "ArrayTypeName",
                        "src": "7651:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1800,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1798,
                        "name": "userNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1760,
                        "src": "7699:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7686:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1795,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7690:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1796,
                        "nodeType": "ArrayTypeName",
                        "src": "7690:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7686:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7651:61:19"
                },
                {
                  "body": {
                    "id": 1834,
                    "nodeType": "Block",
                    "src": "7763:224:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1812,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1802,
                                "src": "7789:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1811,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2847,
                              "src": "7781:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 1813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7781:11:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1814,
                            "name": "userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1747,
                            "src": "7796:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7781:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1833,
                        "nodeType": "IfStatement",
                        "src": "7777:200:19",
                        "trueBody": {
                          "id": 1832,
                          "nodeType": "Block",
                          "src": "7809:168:19",
                          "statements": [
                            {
                              "assignments": [
                                1817
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1817,
                                  "mutability": "mutable",
                                  "name": "currentNFT",
                                  "nameLocation": "7841:10:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1832,
                                  "src": "7827:24:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 1816,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7827:6:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1821,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1819,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1802,
                                    "src": "7863:2:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1818,
                                  "name": "tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    3794
                                  ],
                                  "referencedDeclaration": 3794,
                                  "src": "7854:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) view returns (string memory)"
                                  }
                                },
                                "id": 1820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7854:12:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7827:39:19"
                            },
                            {
                              "expression": {
                                "id": 1826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1822,
                                    "name": "userNFTTokenURIs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1794,
                                    "src": "7884:16:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 1824,
                                  "indexExpression": {
                                    "id": 1823,
                                    "name": "currentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1764,
                                    "src": "7901:12:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7884:30:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1825,
                                  "name": "currentNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1817,
                                  "src": "7917:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "7884:43:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 1827,
                              "nodeType": "ExpressionStatement",
                              "src": "7884:43:19"
                            },
                            {
                              "expression": {
                                "id": 1830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1828,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1764,
                                  "src": "7945:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1829,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7961:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7945:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1831,
                              "nodeType": "ExpressionStatement",
                              "src": "7945:17:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1805,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1802,
                      "src": "7741:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1806,
                      "name": "NFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1754,
                      "src": "7747:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7741:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1835,
                  "initializationExpression": {
                    "assignments": [
                      1802
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1802,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "7733:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 1835,
                        "src": "7728:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1801,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7728:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1804,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7738:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7728:11:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7757:4:19",
                      "subExpression": {
                        "id": 1808,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1802,
                        "src": "7757:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1810,
                    "nodeType": "ExpressionStatement",
                    "src": "7757:4:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "7723:264:19"
                },
                {
                  "expression": {
                    "id": 1836,
                    "name": "userNFTTokenURIs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1794,
                    "src": "8012:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1752,
                  "id": 1837,
                  "nodeType": "Return",
                  "src": "8005:23:19"
                }
              ]
            },
            "documentation": {
              "id": 1745,
              "nodeType": "StructuredDocumentation",
              "src": "7081:204:19",
              "text": " @dev Function to get all token URIs for tokens that a given user owns.\n @param userAddress the user's address to get token URIs of\n @return list of token URIs for a user's NFTs"
            },
            "functionSelector": "8f01785d",
            "id": 1839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTokenURIs",
            "nameLocation": "7299:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1747,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "7324:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1839,
                  "src": "7316:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7316:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7315:21:19"
            },
            "returnParameters": {
              "id": 1752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1839,
                  "src": "7360:15:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1749,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "7360:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1750,
                    "nodeType": "ArrayTypeName",
                    "src": "7360:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7359:17:19"
            },
            "scope": 1968,
            "src": "7290:745:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1851,
              "nodeType": "Block",
              "src": "8271:59:19",
              "statements": [
                {
                  "expression": {
                    "id": 1849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1847,
                      "name": "nodeRunnerTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1266,
                      "src": "8281:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1848,
                      "name": "newNodeRunnerTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1842,
                      "src": "8302:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8281:42:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1850,
                  "nodeType": "ExpressionStatement",
                  "src": "8281:42:19"
                }
              ]
            },
            "documentation": {
              "id": 1840,
              "nodeType": "StructuredDocumentation",
              "src": "8041:135:19",
              "text": " @dev updates the Node Runner NFT token URI\n @param newNodeRunnerTokenURI the new type ID of the Node Runner NFTs"
            },
            "functionSelector": "849ca618",
            "id": 1852,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1845,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1844,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "8261:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "8261:9:19"
              }
            ],
            "name": "updateNodeRunnerTokenURI",
            "nameLocation": "8190:24:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1842,
                  "mutability": "mutable",
                  "name": "newNodeRunnerTokenURI",
                  "nameLocation": "8229:21:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1852,
                  "src": "8215:35:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1841,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8215:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8214:37:19"
            },
            "returnParameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8271:0:19"
            },
            "scope": 1968,
            "src": "8181:149:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1868,
              "nodeType": "Block",
              "src": "8703:70:19",
              "statements": [
                {
                  "expression": {
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1862,
                        "name": "tokenIdToWhitelistAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1274,
                        "src": "8713:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1864,
                      "indexExpression": {
                        "id": 1863,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1857,
                        "src": "8739:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8713:34:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1865,
                      "name": "whiteListAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "8750:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8713:53:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1867,
                  "nodeType": "ExpressionStatement",
                  "src": "8713:53:19"
                }
              ]
            },
            "documentation": {
              "id": 1853,
              "nodeType": "StructuredDocumentation",
              "src": "8336:271:19",
              "text": " @dev Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.\n @param whiteListAddress the address of the user who will be able to purchase the NFT\n @param tokenId the ID of the NFT that the whitelist spot is for"
            },
            "functionSelector": "7417353f",
            "id": 1869,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1860,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1859,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "8693:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "8693:9:19"
              }
            ],
            "name": "addWhiteListToToken",
            "nameLocation": "8621:19:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1855,
                  "mutability": "mutable",
                  "name": "whiteListAddress",
                  "nameLocation": "8649:16:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1869,
                  "src": "8641:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8641:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1857,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8675:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1869,
                  "src": "8667:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8667:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8640:43:19"
            },
            "returnParameters": {
              "id": 1861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8703:0:19"
            },
            "scope": 1968,
            "src": "8612:161:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1885,
              "nodeType": "Block",
              "src": "9060:61:19",
              "statements": [
                {
                  "expression": {
                    "id": 1883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1879,
                        "name": "tokenIdToListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "9070:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1881,
                      "indexExpression": {
                        "id": 1880,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1872,
                        "src": "9090:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9070:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1882,
                      "name": "newListingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1874,
                      "src": "9101:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9070:44:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1884,
                  "nodeType": "ExpressionStatement",
                  "src": "9070:44:19"
                }
              ]
            },
            "documentation": {
              "id": 1870,
              "nodeType": "StructuredDocumentation",
              "src": "8779:186:19",
              "text": " @dev updates the listing fee of an NFT.\n @param tokenId the ID of the NFT to update the listing fee of\n @param newListingFee the listing fee value for the NFT"
            },
            "functionSelector": "7867ccd1",
            "id": 1886,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1877,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1876,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "9050:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "9050:9:19"
              }
            ],
            "name": "updateTokenListingFee",
            "nameLocation": "8979:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1872,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9009:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1886,
                  "src": "9001:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9001:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1874,
                  "mutability": "mutable",
                  "name": "newListingFee",
                  "nameLocation": "9026:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1886,
                  "src": "9018:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9018:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9000:40:19"
            },
            "returnParameters": {
              "id": 1878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9060:0:19"
            },
            "scope": 1968,
            "src": "8970:151:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1898,
              "nodeType": "Block",
              "src": "9334:59:19",
              "statements": [
                {
                  "expression": {
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1894,
                      "name": "marketplaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1252,
                      "src": "9344:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1895,
                      "name": "newMarketplaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1889,
                      "src": "9365:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9344:42:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1897,
                  "nodeType": "ExpressionStatement",
                  "src": "9344:42:19"
                }
              ]
            },
            "documentation": {
              "id": 1887,
              "nodeType": "StructuredDocumentation",
              "src": "9127:118:19",
              "text": " @dev updates the marketplace address.\n @param newMarketplaceAddress the new marketplace address"
            },
            "functionSelector": "e4ace31a",
            "id": 1899,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1892,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1891,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "9324:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "9324:9:19"
              }
            ],
            "name": "updateMarketplaceAddress",
            "nameLocation": "9259:24:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1889,
                  "mutability": "mutable",
                  "name": "newMarketplaceAddress",
                  "nameLocation": "9292:21:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "9284:29:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9284:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9283:31:19"
            },
            "returnParameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9334:0:19"
            },
            "scope": 1968,
            "src": "9250:143:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1913,
              "nodeType": "Block",
              "src": "9572:46:19",
              "statements": [
                {
                  "expression": {
                    "id": 1911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1907,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1258,
                      "src": "9582:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3719",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1909,
                          "name": "newUSDCAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1902,
                          "src": "9596:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1908,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3719,
                        "src": "9589:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$3719_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9589:22:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3719",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "9582:29:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3719",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1912,
                  "nodeType": "ExpressionStatement",
                  "src": "9582:29:19"
                }
              ]
            },
            "documentation": {
              "id": 1900,
              "nodeType": "StructuredDocumentation",
              "src": "9399:98:19",
              "text": " @dev updates the USDC contract.\n @param newUSDCAddress the new USDC address"
            },
            "functionSelector": "7d81c4c1",
            "id": 1914,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1905,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1904,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "9562:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "9562:9:19"
              }
            ],
            "name": "updateUSDCAddress",
            "nameLocation": "9511:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1902,
                  "mutability": "mutable",
                  "name": "newUSDCAddress",
                  "nameLocation": "9537:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1914,
                  "src": "9529:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9529:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9528:24:19"
            },
            "returnParameters": {
              "id": 1906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9572:0:19"
            },
            "scope": 1968,
            "src": "9502:116:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1926,
              "nodeType": "Block",
              "src": "9841:57:19",
              "statements": [
                {
                  "expression": {
                    "id": 1924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1922,
                      "name": "defaultListingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1260,
                      "src": "9851:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1923,
                      "name": "newDefaultListingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1917,
                      "src": "9871:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9851:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1925,
                  "nodeType": "ExpressionStatement",
                  "src": "9851:40:19"
                }
              ]
            },
            "documentation": {
              "id": 1915,
              "nodeType": "StructuredDocumentation",
              "src": "9624:130:19",
              "text": " @dev updates the default listing fee for the NFTs.\n @param newDefaultListingFee the new default listing fee"
            },
            "functionSelector": "28e6de93",
            "id": 1927,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1920,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1919,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "9831:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "9831:9:19"
              }
            ],
            "name": "updateDefaultListingFee",
            "nameLocation": "9768:23:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1917,
                  "mutability": "mutable",
                  "name": "newDefaultListingFee",
                  "nameLocation": "9800:20:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1927,
                  "src": "9792:28:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9792:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9791:30:19"
            },
            "returnParameters": {
              "id": 1921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9841:0:19"
            },
            "scope": 1968,
            "src": "9759:139:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1939,
              "nodeType": "Block",
              "src": "10177:37:19",
              "statements": [
                {
                  "expression": {
                    "id": 1937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1935,
                      "name": "maxNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1262,
                      "src": "10187:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1936,
                      "name": "newMaxNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1930,
                      "src": "10197:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10187:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1938,
                  "nodeType": "ExpressionStatement",
                  "src": "10187:20:19"
                }
              ]
            },
            "documentation": {
              "id": 1928,
              "nodeType": "StructuredDocumentation",
              "src": "9904:206:19",
              "text": " @dev updates the maximum number of NFTs that can be minted for the node this contract represents.\n @param newMaxNFTs the new maximum number of NFTs that can be minted in this contract"
            },
            "functionSelector": "983a7fa7",
            "id": 1940,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1933,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1932,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "10167:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "10167:9:19"
              }
            ],
            "name": "updateMaxNFTs",
            "nameLocation": "10124:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1930,
                  "mutability": "mutable",
                  "name": "newMaxNFTs",
                  "nameLocation": "10146:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1940,
                  "src": "10138:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10138:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10137:20:19"
            },
            "returnParameters": {
              "id": 1934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10177:0:19"
            },
            "scope": 1968,
            "src": "10115:99:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1952,
              "nodeType": "Block",
              "src": "10415:51:19",
              "statements": [
                {
                  "expression": {
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1948,
                      "name": "NFTPriceInUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1264,
                      "src": "10425:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1949,
                      "name": "newNFTPriceInUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1943,
                      "src": "10442:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10425:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1951,
                  "nodeType": "ExpressionStatement",
                  "src": "10425:34:19"
                }
              ]
            },
            "documentation": {
              "id": 1941,
              "nodeType": "StructuredDocumentation",
              "src": "10220:114:19",
              "text": " @dev updates the price of each NFT.\n @param newNFTPriceInUSDC the price of each NFT in USDC"
            },
            "functionSelector": "23002c71",
            "id": 1953,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1946,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1945,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "10405:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "10405:9:19"
              }
            ],
            "name": "updateNFTPriceInUSDC",
            "nameLocation": "10348:20:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1943,
                  "mutability": "mutable",
                  "name": "newNFTPriceInUSDC",
                  "nameLocation": "10377:17:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1953,
                  "src": "10369:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10369:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10368:27:19"
            },
            "returnParameters": {
              "id": 1947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10415:0:19"
            },
            "scope": 1968,
            "src": "10339:127:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1966,
              "nodeType": "Block",
              "src": "10715:57:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1963,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1956,
                        "src": "10760:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1961,
                        "name": "cardinalNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "10732:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CardinalNFT_$5299",
                          "typeString": "contract CardinalNFT"
                        }
                      },
                      "id": 1962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressIsMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3887,
                      "src": "10732:27:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10732:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1960,
                  "id": 1965,
                  "nodeType": "Return",
                  "src": "10725:40:19"
                }
              ]
            },
            "documentation": {
              "id": 1954,
              "nodeType": "StructuredDocumentation",
              "src": "10472:175:19",
              "text": " @dev function for the marketplace to determine if an address is a Cardinal Crew member.\n @param user the address to check the Cardinal Crew membership of"
            },
            "functionSelector": "28da575b",
            "id": 1967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addressIsMember",
            "nameLocation": "10661:15:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1956,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10685:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1967,
                  "src": "10677:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10677:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10676:14:19"
            },
            "returnParameters": {
              "id": 1960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1959,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1967,
                  "src": "10709:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1958,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10709:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10708:6:19"
            },
            "scope": 1968,
            "src": "10652:120:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1969,
        "src": "493:10281:19",
        "usedErrors": []
      }
    ],
    "src": "32:10742:19"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200334e3803806200334e833981016040819052620000349162000221565b604080518082018252600d81526c139bd919549d5b9b995c939195609a1b602080830191825283518085019094526005845264139493919560da1b908401528151919291620000869160009162000162565b5080516200009c90600190602084019062000162565b505050620000b9620000b36200010c60201b60201c565b62000110565b600980546001600160a01b03199081166001600160a01b0398891617909155600a8054821696881696909617909555600b80549095169390951692909217909255600c91909155600d55600e55620002ce565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001709062000291565b90600052602060002090601f016020900481019282620001945760008555620001df565b82601f10620001af57805160ff1916838001178555620001df565b82800160010185558215620001df579182015b82811115620001df578251825591602001919060010190620001c2565b50620001ed929150620001f1565b5090565b5b80821115620001ed5760008155600101620001f2565b6001600160a01b03811681146200021e57600080fd5b50565b60008060008060008060c087890312156200023b57600080fd5b8651620002488162000208565b60208801519096506200025b8162000208565b60408801519095506200026e8162000208565b80945050606087015192506080870151915060a087015190509295509295509295565b600181811c90821680620002a657607f821691505b60208210811415620002c857634e487b7160e01b600052602260045260246000fd5b50919050565b61307080620002de6000396000f3fe6080604052600436106102675760003560e01c8063849ca61811610144578063b88d4fde116100b6578063d283b9861161007a578063d283b98614610748578063daa17f491461075d578063e4ace31a1461077d578063e985e9c51461079d578063f2fde38b146107e6578063f7634a171461080657600080fd5b8063b88d4fde146106a5578063c4a896c9146106c5578063c5196931146106f2578063c87b56dd14610708578063c98f56e01461072857600080fd5b806395d89b411161010857806395d89b41146105f7578063983a7fa71461060c578063a22cb4651461062c578063a58b603b1461064c578063aa46a40014610661578063b063c9541461067857600080fd5b8063849ca6181461056457806388913ce21461058457806389a302711461058c5780638da5cb5b146105ac5780638f01785d146105ca57600080fd5b806345576f94116101dd57806364ca44a5116101a157806364ca44a5146104ba57806370a08231146104cf578063715018a6146104ef5780637417353f146105045780637867ccd1146105245780637d81c4c11461054457600080fd5b806345576f94146104015780634e9e1ec6146104215780635506a120146104375780635c23a67a146104645780636352211e1461049a57600080fd5b806323002c711161022f57806323002c711461033d57806323b872dd1461035d57806328da575b1461037d57806328e6de931461039d5780633e22ceb0146103bd57806342842e0e146103e157600080fd5b806301ffc9a71461026c57806306fdde03146102a1578063081812fc146102c3578063095ea7b3146102fb578063162094c41461031d575b600080fd5b34801561027857600080fd5b5061028c61028736600461293a565b610833565b60405190151581526020015b60405180910390f35b3480156102ad57600080fd5b506102b6610885565b60405161029891906129af565b3480156102cf57600080fd5b506102e36102de3660046129c2565b610917565b6040516001600160a01b039091168152602001610298565b34801561030757600080fd5b5061031b6103163660046129f2565b6109a4565b005b34801561032957600080fd5b5061031b610338366004612ac8565b610aba565b34801561034957600080fd5b5061031b6103583660046129c2565b610b2a565b34801561036957600080fd5b5061031b610378366004612b0f565b610b59565b34801561038957600080fd5b5061028c610398366004612b4b565b610b8a565b3480156103a957600080fd5b5061031b6103b83660046129c2565b610c08565b3480156103c957600080fd5b506103d3600c5481565b604051908152602001610298565b3480156103ed57600080fd5b5061031b6103fc366004612b0f565b610c37565b34801561040d57600080fd5b506103d361041c366004612b66565b610c52565b34801561042d57600080fd5b506103d3600d5481565b34801561044357600080fd5b506103d3610452366004612b4b565b60126020526000908152604090205481565b34801561047057600080fd5b506102e361047f3660046129c2565b6011602052600090815260409020546001600160a01b031681565b3480156104a657600080fd5b506102e36104b53660046129c2565b610da0565b3480156104c657600080fd5b5061031b610e17565b3480156104db57600080fd5b506103d36104ea366004612b4b565b610f60565b3480156104fb57600080fd5b5061031b610fe7565b34801561051057600080fd5b5061031b61051f3660046129f2565b61101d565b34801561053057600080fd5b5061031b61053f366004612b9b565b611075565b34801561055057600080fd5b5061031b61055f366004612b4b565b6110b1565b34801561057057600080fd5b5061031b61057f366004612b66565b6110fd565b61031b61113e565b34801561059857600080fd5b50600b546102e3906001600160a01b031681565b3480156105b857600080fd5b506007546001600160a01b03166102e3565b3480156105d657600080fd5b506105ea6105e5366004612b4b565b6112fa565b6040516102989190612bbd565b34801561060357600080fd5b506102b661142c565b34801561061857600080fd5b5061031b6106273660046129c2565b61143b565b34801561063857600080fd5b5061031b610647366004612c2d565b61146a565b34801561065857600080fd5b5061031b611475565b34801561066d57600080fd5b506008546103d39081565b34801561068457600080fd5b506103d36106933660046129c2565b60106020526000908152604090205481565b3480156106b157600080fd5b5061031b6106c0366004612c64565b6116d9565b3480156106d157600080fd5b506103d36106e0366004612b4b565b60136020526000908152604090205481565b3480156106fe57600080fd5b506103d3600e5481565b34801561071457600080fd5b506102b66107233660046129c2565b611711565b34801561073457600080fd5b50600a546102e3906001600160a01b031681565b34801561075457600080fd5b506102b6611888565b34801561076957600080fd5b506009546102e3906001600160a01b031681565b34801561078957600080fd5b5061031b610798366004612b4b565b611916565b3480156107a957600080fd5b5061028c6107b8366004612ce0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156107f257600080fd5b5061031b610801366004612b4b565b611962565b34801561081257600080fd5b506108266108213660046129c2565b6119fa565b6040516102989190612d13565b60006001600160e01b031982166380ac58cd60e01b148061086457506001600160e01b03198216635b5e139f60e01b145b8061087f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461089490612d57565b80601f01602080910402602001604051908101604052809291908181526020018280546108c090612d57565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b5050505050905090565b600061092282611f89565b6109885760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006109af82610da0565b9050806001600160a01b0316836001600160a01b03161415610a1d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161097f565b336001600160a01b0382161480610a395750610a3981336107b8565b610aab5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161097f565b610ab58383611fa6565b505050565b6007546001600160a01b03163314610ae45760405162461bcd60e51b815260040161097f90612d92565b610aee8282612014565b817fc794e2271b51f209d8a645eec85692351ad1adc857ab2e06f9c5af7961cf07d582604051610b1e91906129af565b60405180910390a25050565b6007546001600160a01b03163314610b545760405162461bcd60e51b815260040161097f90612d92565b600e55565b610b63338261209f565b610b7f5760405162461bcd60e51b815260040161097f90612dc7565b610ab5838383612185565b600a546040516328da575b60e01b81526001600160a01b03838116600483015260009216906328da575b9060240160206040518083038186803b158015610bd057600080fd5b505afa158015610be4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f9190612e18565b6007546001600160a01b03163314610c325760405162461bcd60e51b815260040161097f90612d92565b600c55565b610ab5838383604051806020016040528060008152506116d9565b6007546000906001600160a01b03163314610c7f5760405162461bcd60e51b815260040161097f90612d92565b610c8d600880546001019055565b6000610c9860085490565b600c546000828152601060205260409020559050610cb63382612321565b610d4a81600f8054610cc790612d57565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf390612d57565b8015610d405780601f10610d1557610100808354040283529160200191610d40565b820191906000526020600020905b815481529060010190602001808311610d2357829003601f168201915b5050505050612014565b610d5430826109a4565b600954610d6b906001600160a01b0316600161146a565b604051819033907f86c96e58b5e24fd4db3ea2d3803238d011fc9babe088b2cb856f8a1a80a224a990600090a390505b919050565b6000818152600260205260408120546001600160a01b03168061087f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161097f565b6007546001600160a01b03163314610e415760405162461bcd60e51b815260040161097f90612d92565b600b546001600160a01b031663a9059cbb610e646007546001600160a01b031690565b600b546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610ea757600080fd5b505afa158015610ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edf9190612e35565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610f2557600080fd5b505af1158015610f39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5d9190612e18565b50565b60006001600160a01b038216610fcb5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161097f565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146110115760405162461bcd60e51b815260040161097f90612d92565b61101b6000612454565b565b6007546001600160a01b031633146110475760405162461bcd60e51b815260040161097f90612d92565b600090815260116020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b0316331461109f5760405162461bcd60e51b815260040161097f90612d92565b60009182526010602052604090912055565b6007546001600160a01b031633146110db5760405162461bcd60e51b815260040161097f90612d92565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b031633146111275760405162461bcd60e51b815260040161097f90612d92565b805161113a90600f90602084019061288b565b5050565b600d543410156111ea5760405162461bcd60e51b815260206004820152606560248201527f596f75206d757374206465706f73697420656e6f756768204d6174696320736f60448201527f2069742063616e206265206469766964656420627920746865206d6178696d7560648201527f6d206e756d626572206f66204e465420686f6c6465727320666f7220746865206084820152643737b2329760d91b60a482015260c40161097f565b60006111f560085490565b116112565760405162461bcd60e51b815260206004820152602b60248201527f4e6f204e4654732068617665206265656e206d696e74656420666f722074686960448201526a39903737b232903cb2ba1760a91b606482015260840161097f565b60015b60085481116112cc57600061126d82610da0565b9050600d543461127d9190612e7a565b6001600160a01b0382166000908152601260205260409020546112a09190612e8e565b6001600160a01b03909116600090815260126020526040902055806112c481612ea6565b915050611259565b5060405134907f01212adf0641ffefb93fbb2948f91da450c6375780dba1d933e2ef7ba1c543ed90600090a2565b6060600061130760085490565b905060008060015b83811161135857856001600160a01b031661132982610da0565b6001600160a01b0316141561134657611343600184612e8e565b92505b8061135081612ea6565b91505061130f565b5060008267ffffffffffffffff81111561137457611374612a1c565b6040519080825280602002602001820160405280156113a757816020015b60608152602001906001900390816113925790505b50905060015b84811161142257866001600160a01b03166113c782610da0565b6001600160a01b031614156114105760006113e182611711565b9050808385815181106113f6576113f6612ec1565b602090810291909101015261140c600185612e8e565b9350505b8061141a81612ea6565b9150506113ad565b5095945050505050565b60606001805461089490612d57565b6007546001600160a01b031633146114655760405162461bcd60e51b815260040161097f90612d92565b600d55565b61113a3383836124a6565b600a546040516328da575b60e01b81523360048201526001600160a01b03909116906328da575b9060240160206040518083038186803b1580156114b857600080fd5b505afa1580156114cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f09190612e18565b61150c5760405162461bcd60e51b815260040161097f90612ed7565b336000908152601260205260409020546115d35760405162461bcd60e51b815260206004820152607660248201527f596f7520646f6e2774206861766520616e79206e6f646520726577617264732060448201527f746f20636c61696d2120496620796f75206861766520616e204e465420666f7260648201527f2074686973206e6f64652c20706c65617365207761697420756e74696c20746860848201527532903732bc3a103932bbb0b932103232b837b9b4ba1760511b60a482015260c40161097f565b33600081815260126020526040808220805490839055905190929083908381818185875af1925050503d8060008114611628576040519150601f19603f3d011682016040523d82523d6000602084013e61162d565b606091505b50509050806116755760405162461bcd60e51b81526020600482015260146024820152734661696c656420746f2073656e64204d6174696360601b604482015260640161097f565b60405182815233907fab9726b9e4373f49134c144584366728ebc3e8aba47220872606a5760ac9b0409060200160405180910390a2336000908152601360205260409020546116c5908390612e8e565b336000908152601360205260409020555050565b6116e3338361209f565b6116ff5760405162461bcd60e51b815260040161097f90612dc7565b61170b84848484612575565b50505050565b606061171c82611f89565b6117825760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b606482015260840161097f565b6000828152600660205260408120805461179b90612d57565b80601f01602080910402602001604051908101604052809291908181526020018280546117c790612d57565b80156118145780601f106117e957610100808354040283529160200191611814565b820191906000526020600020905b8154815290600101906020018083116117f757829003601f168201915b50505050509050600061183260408051602081019091526000815290565b9050805160001415611845575092915050565b81511561187757808260405160200161185f929190612f34565b60405160208183030381529060405292505050919050565b611880846125a8565b949350505050565b600f805461189590612d57565b80601f01602080910402602001604051908101604052809291908181526020018280546118c190612d57565b801561190e5780601f106118e35761010080835404028352916020019161190e565b820191906000526020600020905b8154815290600101906020018083116118f157829003601f168201915b505050505081565b6007546001600160a01b031633146119405760405162461bcd60e51b815260040161097f90612d92565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b0316331461198c5760405162461bcd60e51b815260040161097f90612d92565b6001600160a01b0381166119f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161097f565b610f5d81612454565b606060008211611a635760405162461bcd60e51b815260206004820152602e60248201527f596f75206861766520746f206d696e74206174206c65617374206f6e65204e6f60448201526d323290293ab73732b91027233a1760911b606482015260840161097f565b600d54600854611a739084612e8e565b1115611b335760405162461bcd60e51b815260206004820152607d60248201527f5468657265206172656e277420656e6f756768204e6f64652052756e6e65722060448201527f4e46547320666f722074686973206e6f646520666f7220796f7520746f206d6960648201527f6e7420796f7520616d6f756e7420796f752063686f73652e20416e6f7468657260848201527f206e6f64652077696c6c20626520617661696c61626c6520736f6f6e2100000060a482015260c40161097f565b600a546040516328da575b60e01b81523360048201526001600160a01b03909116906328da575b9060240160206040518083038186803b158015611b7657600080fd5b505afa158015611b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bae9190612e18565b611bca5760405162461bcd60e51b815260040161097f90612ed7565b600e54600b546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015611c1057600080fd5b505afa158015611c24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c489190612e35565b1015611cbc5760405162461bcd60e51b815260206004820152603a60248201527f596f7520646f6e2774206861766520656e6f756768205553444320746f20706160448201527f7920666f7220746865204e6f64652052756e6e6572204e46542e000000000000606482015260840161097f565b600e54600b54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e9060440160206040518083038186803b158015611d0857600080fd5b505afa158015611d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d409190612e35565b1015611dda5760405162461bcd60e51b815260206004820152605f60248201527f596f7520686176656e277420617070726f766564207468697320636f6e74726160448201527f637420746f207370656e6420656e6f756768206f6620796f757220555344432060648201527f746f2070617920666f7220746865204e6f64652052756e6e6572204e46542e00608482015260a40161097f565b60008267ffffffffffffffff811115611df557611df5612a1c565b604051908082528060200260200182016040528015611e1e578160200160208202803683370190505b50905060005b83811015611f8257600b54600e546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015611e8257600080fd5b505af1158015611e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eba9190612e18565b50611ec9600880546001019055565b6000611ed460085490565b600c546000828152601060205260409020559050611ef23382612321565b611f0381600f8054610cc790612d57565b611f0d30826109a4565b600954611f24906001600160a01b0316600161146a565b80838381518110611f3757611f37612ec1565b6020908102919091010152604051819033907f86c96e58b5e24fd4db3ea2d3803238d011fc9babe088b2cb856f8a1a80a224a990600090a350611f7b600182612e8e565b9050611e24565b5092915050565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611fdb82610da0565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61201d82611f89565b6120805760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161097f565b60008281526006602090815260409091208251610ab59284019061288b565b60006120aa82611f89565b61210b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161097f565b600061211683610da0565b9050806001600160a01b0316846001600160a01b031614806121515750836001600160a01b031661214684610917565b6001600160a01b0316145b8061188057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16611880565b826001600160a01b031661219882610da0565b6001600160a01b0316146121fc5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161097f565b6001600160a01b03821661225e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161097f565b612269600082611fa6565b6001600160a01b0383166000908152600360205260408120805460019290612292908490612f63565b90915550506001600160a01b03821660009081526003602052604081208054600192906122c0908490612e8e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166123775760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161097f565b61238081611f89565b156123cd5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161097f565b6001600160a01b03821660009081526003602052604081208054600192906123f6908490612e8e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156125085760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161097f565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612580848484612185565b61258c84848484612680565b61170b5760405162461bcd60e51b815260040161097f90612f7a565b60606125b382611f89565b6126175760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161097f565b600061262e60408051602081019091526000815290565b9050600081511161264e5760405180602001604052806000815250612679565b806126588461278d565b604051602001612669929190612f34565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b1561278257604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906126c4903390899088908890600401612fcc565b602060405180830381600087803b1580156126de57600080fd5b505af192505050801561270e575060408051601f3d908101601f1916820190925261270b91810190613009565b60015b612768573d80801561273c576040519150601f19603f3d011682016040523d82523d6000602084013e612741565b606091505b5080516127605760405162461bcd60e51b815260040161097f90612f7a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611880565b506001949350505050565b6060816127b15750506040805180820190915260018152600360fc1b602082015290565b8160005b81156127db57806127c581612ea6565b91506127d49050600a83612e7a565b91506127b5565b60008167ffffffffffffffff8111156127f6576127f6612a1c565b6040519080825280601f01601f191660200182016040528015612820576020820181803683370190505b5090505b841561188057612835600183612f63565b9150612842600a86613026565b61284d906030612e8e565b60f81b81838151811061286257612862612ec1565b60200101906001600160f81b031916908160001a905350612884600a86612e7a565b9450612824565b82805461289790612d57565b90600052602060002090601f0160209004810192826128b957600085556128ff565b82601f106128d257805160ff19168380011785556128ff565b828001600101855582156128ff579182015b828111156128ff5782518255916020019190600101906128e4565b5061290b92915061290f565b5090565b5b8082111561290b5760008155600101612910565b6001600160e01b031981168114610f5d57600080fd5b60006020828403121561294c57600080fd5b813561267981612924565b60005b8381101561297257818101518382015260200161295a565b8381111561170b5750506000910152565b6000815180845261299b816020860160208601612957565b601f01601f19169290920160200192915050565b6020815260006126796020830184612983565b6000602082840312156129d457600080fd5b5035919050565b80356001600160a01b0381168114610d9b57600080fd5b60008060408385031215612a0557600080fd5b612a0e836129db565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612a4d57612a4d612a1c565b604051601f8501601f19908116603f01168101908282118183101715612a7557612a75612a1c565b81604052809350858152868686011115612a8e57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112612ab957600080fd5b61267983833560208501612a32565b60008060408385031215612adb57600080fd5b82359150602083013567ffffffffffffffff811115612af957600080fd5b612b0585828601612aa8565b9150509250929050565b600080600060608486031215612b2457600080fd5b612b2d846129db565b9250612b3b602085016129db565b9150604084013590509250925092565b600060208284031215612b5d57600080fd5b612679826129db565b600060208284031215612b7857600080fd5b813567ffffffffffffffff811115612b8f57600080fd5b61188084828501612aa8565b60008060408385031215612bae57600080fd5b50508035926020909101359150565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612c1257603f19888603018452612c00858351612983565b94509285019290850190600101612be4565b5092979650505050505050565b8015158114610f5d57600080fd5b60008060408385031215612c4057600080fd5b612c49836129db565b91506020830135612c5981612c1f565b809150509250929050565b60008060008060808587031215612c7a57600080fd5b612c83856129db565b9350612c91602086016129db565b925060408501359150606085013567ffffffffffffffff811115612cb457600080fd5b8501601f81018713612cc557600080fd5b612cd487823560208401612a32565b91505092959194509250565b60008060408385031215612cf357600080fd5b612cfc836129db565b9150612d0a602084016129db565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015612d4b57835183529284019291840191600101612d2f565b50909695505050505050565b600181811c90821680612d6b57607f821691505b60208210811415612d8c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600060208284031215612e2a57600080fd5b815161267981612c1f565b600060208284031215612e4757600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082612e8957612e89612e4e565b500490565b60008219821115612ea157612ea1612e64565b500190565b6000600019821415612eba57612eba612e64565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6020808252603a908201527f4f6e6c792043617264696e616c2043726577204d656d626572732063616e207060408201527f6172746963697061746520696e204e6f64652052756e6e65722e000000000000606082015260800190565b60008351612f46818460208801612957565b835190830190612f5a818360208801612957565b01949350505050565b600082821015612f7557612f75612e64565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612fff90830184612983565b9695505050505050565b60006020828403121561301b57600080fd5b815161267981612924565b60008261303557613035612e4e565b50069056fea2646970667358221220441e0d3295c750a6c3c54b10690a21dfba9efdb8617c5757ebfbc33d45c6b91d64736f6c63430008080033",
  "bytecodeSha1": "79aaec04ffe0ad1ff264870d8b42f4f086ab68d7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.8+commit.dddeac2f"
  },
  "contractName": "NodeRunner",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "154": [
            2006,
            2028,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {},
      "13": {
        "Strings.toString": {
          "155": [
            601,
            611,
            false
          ]
        }
      },
      "14": {},
      "15": {},
      "17": {},
      "18": {},
      "19": {
        "NodeRunner.claimNodeRewards": {
          "126": [
            5752,
            5791,
            true
          ],
          "127": [
            6242,
            6249,
            true
          ]
        },
        "NodeRunner.depositNodeRewards": {
          "122": [
            5127,
            5147,
            true
          ],
          "123": [
            5271,
            5294,
            true
          ]
        },
        "NodeRunner.getUserTokenURIs": {
          "124": [
            7553,
            7579,
            false
          ],
          "125": [
            7781,
            7807,
            false
          ]
        },
        "NodeRunner.mintNodeRunnerNFT": {
          "128": [
            2840,
            2852,
            true
          ],
          "129": [
            2921,
            2962,
            true
          ],
          "130": [
            3110,
            3149,
            true
          ],
          "131": [
            3230,
            3274,
            true
          ],
          "132": [
            3355,
            3414,
            true
          ]
        }
      },
      "2": {},
      "20": {},
      "3": {},
      "4": {},
      "5": {
        "ERC721._isApprovedOrOwner": {
          "141": [
            7559,
            7575,
            true
          ]
        },
        "ERC721._mint": {
          "144": [
            9157,
            9173,
            true
          ],
          "145": [
            9228,
            9245,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "147": [
            6746,
            6794,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "146": [
            11615,
            11632,
            true
          ]
        },
        "ERC721._transfer": {
          "142": [
            10579,
            10610,
            true
          ],
          "143": [
            10670,
            10686,
            true
          ]
        },
        "ERC721.approve": {
          "134": [
            3674,
            3685,
            true
          ],
          "135": [
            3755,
            3776,
            true
          ],
          "136": [
            3780,
            3817,
            true
          ]
        },
        "ERC721.balanceOf": {
          "139": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.getApproved": {
          "133": [
            4102,
            4118,
            true
          ]
        },
        "ERC721.ownerOf": {
          "138": [
            2332,
            2351,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "140": [
            5536,
            5577,
            true
          ]
        },
        "ERC721.tokenURI": {
          "148": [
            2924,
            2940,
            true
          ],
          "149": [
            3054,
            3079,
            true
          ]
        },
        "ERC721.transferFrom": {
          "137": [
            4915,
            4956,
            true
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {
        "ERC721URIStorage._setTokenURI": {
          "153": [
            1376,
            1392,
            true
          ]
        },
        "ERC721URIStorage.tokenURI": {
          "150": [
            573,
            589,
            true
          ],
          "151": [
            813,
            836,
            false
          ],
          "152": [
            981,
            1008,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "103": [
            2378,
            2395
          ],
          "104": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "33": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "66": [
            1998,
            2071
          ],
          "67": [
            2081,
            2109
          ]
        }
      },
      "10": {
        "Address.isContract": {
          "112": [
            1458,
            1488
          ]
        }
      },
      "11": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "12": {
        "Counters.current": {
          "21": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "20": [
            1032,
            1051
          ]
        }
      },
      "13": {
        "Strings.toString": {
          "116": [
            627,
            637
          ],
          "117": [
            743,
            751
          ],
          "118": [
            765,
            775
          ],
          "119": [
            877,
            888
          ],
          "120": [
            902,
            958
          ],
          "121": [
            972,
            983
          ]
        }
      },
      "14": {
        "ERC165.supportsInterface": {
          "3": [
            930,
            977
          ]
        }
      },
      "15": {},
      "17": {},
      "18": {},
      "19": {
        "NodeRunner.addWhiteListToToken": {
          "34": [
            8713,
            8766
          ]
        },
        "NodeRunner.addressIsMember": {
          "16": [
            10725,
            10765
          ]
        },
        "NodeRunner.claimNodeRewards": {
          "52": [
            5744,
            5854
          ],
          "53": [
            5864,
            6033
          ],
          "54": [
            6118,
            6156
          ],
          "55": [
            6234,
            6274
          ],
          "56": [
            6285,
            6333
          ],
          "57": [
            6344,
            6427
          ]
        },
        "NodeRunner.createToken": {
          "19": [
            4525,
            4546
          ],
          "22": [
            4606,
            4656
          ],
          "23": [
            4666,
            4694
          ],
          "24": [
            4704,
            4747
          ],
          "25": [
            4757,
            4790
          ],
          "26": [
            4800,
            4843
          ],
          "27": [
            4854,
            4901
          ],
          "28": [
            4912,
            4928
          ]
        },
        "NodeRunner.depositNodeRewards": {
          "38": [
            5119,
            5253
          ],
          "39": [
            5263,
            5342
          ],
          "40": [
            5458,
            5549
          ],
          "41": [
            5396,
            5399
          ],
          "42": [
            5570,
            5606
          ]
        },
        "NodeRunner.getUserTokenURIs": {
          "43": [
            7599,
            7616
          ],
          "44": [
            7529,
            7533
          ],
          "45": [
            7884,
            7927
          ],
          "46": [
            7945,
            7962
          ],
          "47": [
            7757,
            7761
          ],
          "48": [
            8005,
            8028
          ]
        },
        "NodeRunner.mintNodeRunnerNFT": {
          "68": [
            2832,
            2903
          ],
          "69": [
            2913,
            3092
          ],
          "70": [
            3102,
            3212
          ],
          "71": [
            3222,
            3337
          ],
          "72": [
            3347,
            3514
          ],
          "73": [
            3670,
            3730
          ],
          "74": [
            3745,
            3766
          ],
          "75": [
            3834,
            3884
          ],
          "76": [
            3898,
            3926
          ],
          "77": [
            3940,
            3983
          ],
          "78": [
            3997,
            4030
          ],
          "79": [
            4044,
            4087
          ],
          "80": [
            4102,
            4129
          ],
          "81": [
            4144,
            4191
          ],
          "82": [
            3648,
            3654
          ],
          "83": [
            4212,
            4231
          ]
        },
        "NodeRunner.setTokenURI": {
          "11": [
            6982,
            7016
          ],
          "12": [
            7026,
            7068
          ]
        },
        "NodeRunner.updateDefaultListingFee": {
          "17": [
            9851,
            9891
          ]
        },
        "NodeRunner.updateMarketplaceAddress": {
          "65": [
            9344,
            9386
          ]
        },
        "NodeRunner.updateMaxNFTs": {
          "50": [
            10187,
            10207
          ]
        },
        "NodeRunner.updateNFTPriceInUSDC": {
          "13": [
            10425,
            10459
          ]
        },
        "NodeRunner.updateNodeRunnerTokenURI": {
          "37": [
            8281,
            8323
          ]
        },
        "NodeRunner.updateTokenListingFee": {
          "35": [
            9070,
            9114
          ]
        },
        "NodeRunner.updateUSDCAddress": {
          "36": [
            9582,
            9611
          ]
        },
        "NodeRunner.withdrawNodeFunds": {
          "30": [
            6622,
            6675
          ]
        }
      },
      "2": {},
      "20": {},
      "3": {},
      "4": {},
      "5": {
        "ERC721._approve": {
          "85": [
            11242,
            11271
          ],
          "86": [
            11281,
            11332
          ]
        },
        "ERC721._baseURI": {
          "61": [
            3464,
            3473
          ]
        },
        "ERC721._checkOnERC721Received": {
          "113": [
            12820,
            12880
          ],
          "114": [
            12654,
            12712
          ],
          "115": [
            13084,
            13095
          ]
        },
        "ERC721._exists": {
          "84": [
            7240,
            7277
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "89": [
            7551,
            7624
          ],
          "90": [
            7683,
            7779
          ]
        },
        "ERC721._mint": {
          "98": [
            9149,
            9210
          ],
          "99": [
            9220,
            9278
          ],
          "100": [
            9345,
            9363
          ],
          "101": [
            9373,
            9394
          ],
          "102": [
            9405,
            9443
          ]
        },
        "ERC721._safeTransfer": {
          "108": [
            6700,
            6728
          ],
          "109": [
            6738,
            6849
          ]
        },
        "ERC721._setApprovalForAll": {
          "105": [
            11607,
            11662
          ],
          "106": [
            11672,
            11718
          ],
          "107": [
            11728,
            11774
          ]
        },
        "ERC721._transfer": {
          "91": [
            10571,
            10652
          ],
          "92": [
            10662,
            10727
          ],
          "93": [
            10839,
            10868
          ],
          "94": [
            10879,
            10899
          ],
          "95": [
            10909,
            10927
          ],
          "96": [
            10937,
            10958
          ],
          "97": [
            10969,
            11001
          ]
        },
        "ERC721.approve": {
          "7": [
            3666,
            3723
          ],
          "9": [
            3734,
            3899
          ],
          "10": [
            3910,
            3931
          ]
        },
        "ERC721.balanceOf": {
          "31": [
            2020,
            2094
          ],
          "32": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4094,
            4167
          ],
          "6": [
            4178,
            4209
          ]
        },
        "ERC721.isApprovedForAll": {
          "1": [
            4615,
            4657
          ]
        },
        "ERC721.name": {
          "4": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "29": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "18": [
            5255,
            5294
          ],
          "58": [
            5528,
            5631
          ],
          "59": [
            5641,
            5680
          ]
        },
        "ERC721.setApprovalForAll": {
          "51": [
            4377,
            4429
          ]
        },
        "ERC721.supportsInterface": {
          "2": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "49": [
            2731,
            2745
          ]
        },
        "ERC721.tokenURI": {
          "110": [
            2916,
            2992
          ],
          "111": [
            3047,
            3140
          ]
        },
        "ERC721.transferFrom": {
          "14": [
            4907,
            5010
          ],
          "15": [
            5021,
            5049
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {
        "ERC721URIStorage._setTokenURI": {
          "87": [
            1368,
            1443
          ],
          "88": [
            1453,
            1484
          ]
        },
        "ERC721URIStorage.tokenURI": {
          "60": [
            565,
            643
          ],
          "62": [
            852,
            868
          ],
          "63": [
            1024,
            1072
          ],
          "64": [
            1093,
            1123
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "CardinalNFT",
    "CardinalToken",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721URIStorage",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Receiver",
    "IUniswapV2Factory",
    "IUniswapV2Router02",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Strings"
  ],
  "deployedBytecode": "6080604052600436106102675760003560e01c8063849ca61811610144578063b88d4fde116100b6578063d283b9861161007a578063d283b98614610748578063daa17f491461075d578063e4ace31a1461077d578063e985e9c51461079d578063f2fde38b146107e6578063f7634a171461080657600080fd5b8063b88d4fde146106a5578063c4a896c9146106c5578063c5196931146106f2578063c87b56dd14610708578063c98f56e01461072857600080fd5b806395d89b411161010857806395d89b41146105f7578063983a7fa71461060c578063a22cb4651461062c578063a58b603b1461064c578063aa46a40014610661578063b063c9541461067857600080fd5b8063849ca6181461056457806388913ce21461058457806389a302711461058c5780638da5cb5b146105ac5780638f01785d146105ca57600080fd5b806345576f94116101dd57806364ca44a5116101a157806364ca44a5146104ba57806370a08231146104cf578063715018a6146104ef5780637417353f146105045780637867ccd1146105245780637d81c4c11461054457600080fd5b806345576f94146104015780634e9e1ec6146104215780635506a120146104375780635c23a67a146104645780636352211e1461049a57600080fd5b806323002c711161022f57806323002c711461033d57806323b872dd1461035d57806328da575b1461037d57806328e6de931461039d5780633e22ceb0146103bd57806342842e0e146103e157600080fd5b806301ffc9a71461026c57806306fdde03146102a1578063081812fc146102c3578063095ea7b3146102fb578063162094c41461031d575b600080fd5b34801561027857600080fd5b5061028c61028736600461293a565b610833565b60405190151581526020015b60405180910390f35b3480156102ad57600080fd5b506102b6610885565b60405161029891906129af565b3480156102cf57600080fd5b506102e36102de3660046129c2565b610917565b6040516001600160a01b039091168152602001610298565b34801561030757600080fd5b5061031b6103163660046129f2565b6109a4565b005b34801561032957600080fd5b5061031b610338366004612ac8565b610aba565b34801561034957600080fd5b5061031b6103583660046129c2565b610b2a565b34801561036957600080fd5b5061031b610378366004612b0f565b610b59565b34801561038957600080fd5b5061028c610398366004612b4b565b610b8a565b3480156103a957600080fd5b5061031b6103b83660046129c2565b610c08565b3480156103c957600080fd5b506103d3600c5481565b604051908152602001610298565b3480156103ed57600080fd5b5061031b6103fc366004612b0f565b610c37565b34801561040d57600080fd5b506103d361041c366004612b66565b610c52565b34801561042d57600080fd5b506103d3600d5481565b34801561044357600080fd5b506103d3610452366004612b4b565b60126020526000908152604090205481565b34801561047057600080fd5b506102e361047f3660046129c2565b6011602052600090815260409020546001600160a01b031681565b3480156104a657600080fd5b506102e36104b53660046129c2565b610da0565b3480156104c657600080fd5b5061031b610e17565b3480156104db57600080fd5b506103d36104ea366004612b4b565b610f60565b3480156104fb57600080fd5b5061031b610fe7565b34801561051057600080fd5b5061031b61051f3660046129f2565b61101d565b34801561053057600080fd5b5061031b61053f366004612b9b565b611075565b34801561055057600080fd5b5061031b61055f366004612b4b565b6110b1565b34801561057057600080fd5b5061031b61057f366004612b66565b6110fd565b61031b61113e565b34801561059857600080fd5b50600b546102e3906001600160a01b031681565b3480156105b857600080fd5b506007546001600160a01b03166102e3565b3480156105d657600080fd5b506105ea6105e5366004612b4b565b6112fa565b6040516102989190612bbd565b34801561060357600080fd5b506102b661142c565b34801561061857600080fd5b5061031b6106273660046129c2565b61143b565b34801561063857600080fd5b5061031b610647366004612c2d565b61146a565b34801561065857600080fd5b5061031b611475565b34801561066d57600080fd5b506008546103d39081565b34801561068457600080fd5b506103d36106933660046129c2565b60106020526000908152604090205481565b3480156106b157600080fd5b5061031b6106c0366004612c64565b6116d9565b3480156106d157600080fd5b506103d36106e0366004612b4b565b60136020526000908152604090205481565b3480156106fe57600080fd5b506103d3600e5481565b34801561071457600080fd5b506102b66107233660046129c2565b611711565b34801561073457600080fd5b50600a546102e3906001600160a01b031681565b34801561075457600080fd5b506102b6611888565b34801561076957600080fd5b506009546102e3906001600160a01b031681565b34801561078957600080fd5b5061031b610798366004612b4b565b611916565b3480156107a957600080fd5b5061028c6107b8366004612ce0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156107f257600080fd5b5061031b610801366004612b4b565b611962565b34801561081257600080fd5b506108266108213660046129c2565b6119fa565b6040516102989190612d13565b60006001600160e01b031982166380ac58cd60e01b148061086457506001600160e01b03198216635b5e139f60e01b145b8061087f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461089490612d57565b80601f01602080910402602001604051908101604052809291908181526020018280546108c090612d57565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b5050505050905090565b600061092282611f89565b6109885760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006109af82610da0565b9050806001600160a01b0316836001600160a01b03161415610a1d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161097f565b336001600160a01b0382161480610a395750610a3981336107b8565b610aab5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161097f565b610ab58383611fa6565b505050565b6007546001600160a01b03163314610ae45760405162461bcd60e51b815260040161097f90612d92565b610aee8282612014565b817fc794e2271b51f209d8a645eec85692351ad1adc857ab2e06f9c5af7961cf07d582604051610b1e91906129af565b60405180910390a25050565b6007546001600160a01b03163314610b545760405162461bcd60e51b815260040161097f90612d92565b600e55565b610b63338261209f565b610b7f5760405162461bcd60e51b815260040161097f90612dc7565b610ab5838383612185565b600a546040516328da575b60e01b81526001600160a01b03838116600483015260009216906328da575b9060240160206040518083038186803b158015610bd057600080fd5b505afa158015610be4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f9190612e18565b6007546001600160a01b03163314610c325760405162461bcd60e51b815260040161097f90612d92565b600c55565b610ab5838383604051806020016040528060008152506116d9565b6007546000906001600160a01b03163314610c7f5760405162461bcd60e51b815260040161097f90612d92565b610c8d600880546001019055565b6000610c9860085490565b600c546000828152601060205260409020559050610cb63382612321565b610d4a81600f8054610cc790612d57565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf390612d57565b8015610d405780601f10610d1557610100808354040283529160200191610d40565b820191906000526020600020905b815481529060010190602001808311610d2357829003601f168201915b5050505050612014565b610d5430826109a4565b600954610d6b906001600160a01b0316600161146a565b604051819033907f86c96e58b5e24fd4db3ea2d3803238d011fc9babe088b2cb856f8a1a80a224a990600090a390505b919050565b6000818152600260205260408120546001600160a01b03168061087f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161097f565b6007546001600160a01b03163314610e415760405162461bcd60e51b815260040161097f90612d92565b600b546001600160a01b031663a9059cbb610e646007546001600160a01b031690565b600b546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610ea757600080fd5b505afa158015610ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edf9190612e35565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610f2557600080fd5b505af1158015610f39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5d9190612e18565b50565b60006001600160a01b038216610fcb5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161097f565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146110115760405162461bcd60e51b815260040161097f90612d92565b61101b6000612454565b565b6007546001600160a01b031633146110475760405162461bcd60e51b815260040161097f90612d92565b600090815260116020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b0316331461109f5760405162461bcd60e51b815260040161097f90612d92565b60009182526010602052604090912055565b6007546001600160a01b031633146110db5760405162461bcd60e51b815260040161097f90612d92565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b031633146111275760405162461bcd60e51b815260040161097f90612d92565b805161113a90600f90602084019061288b565b5050565b600d543410156111ea5760405162461bcd60e51b815260206004820152606560248201527f596f75206d757374206465706f73697420656e6f756768204d6174696320736f60448201527f2069742063616e206265206469766964656420627920746865206d6178696d7560648201527f6d206e756d626572206f66204e465420686f6c6465727320666f7220746865206084820152643737b2329760d91b60a482015260c40161097f565b60006111f560085490565b116112565760405162461bcd60e51b815260206004820152602b60248201527f4e6f204e4654732068617665206265656e206d696e74656420666f722074686960448201526a39903737b232903cb2ba1760a91b606482015260840161097f565b60015b60085481116112cc57600061126d82610da0565b9050600d543461127d9190612e7a565b6001600160a01b0382166000908152601260205260409020546112a09190612e8e565b6001600160a01b03909116600090815260126020526040902055806112c481612ea6565b915050611259565b5060405134907f01212adf0641ffefb93fbb2948f91da450c6375780dba1d933e2ef7ba1c543ed90600090a2565b6060600061130760085490565b905060008060015b83811161135857856001600160a01b031661132982610da0565b6001600160a01b0316141561134657611343600184612e8e565b92505b8061135081612ea6565b91505061130f565b5060008267ffffffffffffffff81111561137457611374612a1c565b6040519080825280602002602001820160405280156113a757816020015b60608152602001906001900390816113925790505b50905060015b84811161142257866001600160a01b03166113c782610da0565b6001600160a01b031614156114105760006113e182611711565b9050808385815181106113f6576113f6612ec1565b602090810291909101015261140c600185612e8e565b9350505b8061141a81612ea6565b9150506113ad565b5095945050505050565b60606001805461089490612d57565b6007546001600160a01b031633146114655760405162461bcd60e51b815260040161097f90612d92565b600d55565b61113a3383836124a6565b600a546040516328da575b60e01b81523360048201526001600160a01b03909116906328da575b9060240160206040518083038186803b1580156114b857600080fd5b505afa1580156114cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f09190612e18565b61150c5760405162461bcd60e51b815260040161097f90612ed7565b336000908152601260205260409020546115d35760405162461bcd60e51b815260206004820152607660248201527f596f7520646f6e2774206861766520616e79206e6f646520726577617264732060448201527f746f20636c61696d2120496620796f75206861766520616e204e465420666f7260648201527f2074686973206e6f64652c20706c65617365207761697420756e74696c20746860848201527532903732bc3a103932bbb0b932103232b837b9b4ba1760511b60a482015260c40161097f565b33600081815260126020526040808220805490839055905190929083908381818185875af1925050503d8060008114611628576040519150601f19603f3d011682016040523d82523d6000602084013e61162d565b606091505b50509050806116755760405162461bcd60e51b81526020600482015260146024820152734661696c656420746f2073656e64204d6174696360601b604482015260640161097f565b60405182815233907fab9726b9e4373f49134c144584366728ebc3e8aba47220872606a5760ac9b0409060200160405180910390a2336000908152601360205260409020546116c5908390612e8e565b336000908152601360205260409020555050565b6116e3338361209f565b6116ff5760405162461bcd60e51b815260040161097f90612dc7565b61170b84848484612575565b50505050565b606061171c82611f89565b6117825760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b606482015260840161097f565b6000828152600660205260408120805461179b90612d57565b80601f01602080910402602001604051908101604052809291908181526020018280546117c790612d57565b80156118145780601f106117e957610100808354040283529160200191611814565b820191906000526020600020905b8154815290600101906020018083116117f757829003601f168201915b50505050509050600061183260408051602081019091526000815290565b9050805160001415611845575092915050565b81511561187757808260405160200161185f929190612f34565b60405160208183030381529060405292505050919050565b611880846125a8565b949350505050565b600f805461189590612d57565b80601f01602080910402602001604051908101604052809291908181526020018280546118c190612d57565b801561190e5780601f106118e35761010080835404028352916020019161190e565b820191906000526020600020905b8154815290600101906020018083116118f157829003601f168201915b505050505081565b6007546001600160a01b031633146119405760405162461bcd60e51b815260040161097f90612d92565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b0316331461198c5760405162461bcd60e51b815260040161097f90612d92565b6001600160a01b0381166119f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161097f565b610f5d81612454565b606060008211611a635760405162461bcd60e51b815260206004820152602e60248201527f596f75206861766520746f206d696e74206174206c65617374206f6e65204e6f60448201526d323290293ab73732b91027233a1760911b606482015260840161097f565b600d54600854611a739084612e8e565b1115611b335760405162461bcd60e51b815260206004820152607d60248201527f5468657265206172656e277420656e6f756768204e6f64652052756e6e65722060448201527f4e46547320666f722074686973206e6f646520666f7220796f7520746f206d6960648201527f6e7420796f7520616d6f756e7420796f752063686f73652e20416e6f7468657260848201527f206e6f64652077696c6c20626520617661696c61626c6520736f6f6e2100000060a482015260c40161097f565b600a546040516328da575b60e01b81523360048201526001600160a01b03909116906328da575b9060240160206040518083038186803b158015611b7657600080fd5b505afa158015611b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bae9190612e18565b611bca5760405162461bcd60e51b815260040161097f90612ed7565b600e54600b546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015611c1057600080fd5b505afa158015611c24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c489190612e35565b1015611cbc5760405162461bcd60e51b815260206004820152603a60248201527f596f7520646f6e2774206861766520656e6f756768205553444320746f20706160448201527f7920666f7220746865204e6f64652052756e6e6572204e46542e000000000000606482015260840161097f565b600e54600b54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e9060440160206040518083038186803b158015611d0857600080fd5b505afa158015611d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d409190612e35565b1015611dda5760405162461bcd60e51b815260206004820152605f60248201527f596f7520686176656e277420617070726f766564207468697320636f6e74726160448201527f637420746f207370656e6420656e6f756768206f6620796f757220555344432060648201527f746f2070617920666f7220746865204e6f64652052756e6e6572204e46542e00608482015260a40161097f565b60008267ffffffffffffffff811115611df557611df5612a1c565b604051908082528060200260200182016040528015611e1e578160200160208202803683370190505b50905060005b83811015611f8257600b54600e546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015611e8257600080fd5b505af1158015611e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eba9190612e18565b50611ec9600880546001019055565b6000611ed460085490565b600c546000828152601060205260409020559050611ef23382612321565b611f0381600f8054610cc790612d57565b611f0d30826109a4565b600954611f24906001600160a01b0316600161146a565b80838381518110611f3757611f37612ec1565b6020908102919091010152604051819033907f86c96e58b5e24fd4db3ea2d3803238d011fc9babe088b2cb856f8a1a80a224a990600090a350611f7b600182612e8e565b9050611e24565b5092915050565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611fdb82610da0565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61201d82611f89565b6120805760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161097f565b60008281526006602090815260409091208251610ab59284019061288b565b60006120aa82611f89565b61210b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161097f565b600061211683610da0565b9050806001600160a01b0316846001600160a01b031614806121515750836001600160a01b031661214684610917565b6001600160a01b0316145b8061188057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16611880565b826001600160a01b031661219882610da0565b6001600160a01b0316146121fc5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161097f565b6001600160a01b03821661225e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161097f565b612269600082611fa6565b6001600160a01b0383166000908152600360205260408120805460019290612292908490612f63565b90915550506001600160a01b03821660009081526003602052604081208054600192906122c0908490612e8e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166123775760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161097f565b61238081611f89565b156123cd5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161097f565b6001600160a01b03821660009081526003602052604081208054600192906123f6908490612e8e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156125085760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161097f565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612580848484612185565b61258c84848484612680565b61170b5760405162461bcd60e51b815260040161097f90612f7a565b60606125b382611f89565b6126175760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161097f565b600061262e60408051602081019091526000815290565b9050600081511161264e5760405180602001604052806000815250612679565b806126588461278d565b604051602001612669929190612f34565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b1561278257604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906126c4903390899088908890600401612fcc565b602060405180830381600087803b1580156126de57600080fd5b505af192505050801561270e575060408051601f3d908101601f1916820190925261270b91810190613009565b60015b612768573d80801561273c576040519150601f19603f3d011682016040523d82523d6000602084013e612741565b606091505b5080516127605760405162461bcd60e51b815260040161097f90612f7a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611880565b506001949350505050565b6060816127b15750506040805180820190915260018152600360fc1b602082015290565b8160005b81156127db57806127c581612ea6565b91506127d49050600a83612e7a565b91506127b5565b60008167ffffffffffffffff8111156127f6576127f6612a1c565b6040519080825280601f01601f191660200182016040528015612820576020820181803683370190505b5090505b841561188057612835600183612f63565b9150612842600a86613026565b61284d906030612e8e565b60f81b81838151811061286257612862612ec1565b60200101906001600160f81b031916908160001a905350612884600a86612e7a565b9450612824565b82805461289790612d57565b90600052602060002090601f0160209004810192826128b957600085556128ff565b82601f106128d257805160ff19168380011785556128ff565b828001600101855582156128ff579182015b828111156128ff5782518255916020019190600101906128e4565b5061290b92915061290f565b5090565b5b8082111561290b5760008155600101612910565b6001600160e01b031981168114610f5d57600080fd5b60006020828403121561294c57600080fd5b813561267981612924565b60005b8381101561297257818101518382015260200161295a565b8381111561170b5750506000910152565b6000815180845261299b816020860160208601612957565b601f01601f19169290920160200192915050565b6020815260006126796020830184612983565b6000602082840312156129d457600080fd5b5035919050565b80356001600160a01b0381168114610d9b57600080fd5b60008060408385031215612a0557600080fd5b612a0e836129db565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612a4d57612a4d612a1c565b604051601f8501601f19908116603f01168101908282118183101715612a7557612a75612a1c565b81604052809350858152868686011115612a8e57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112612ab957600080fd5b61267983833560208501612a32565b60008060408385031215612adb57600080fd5b82359150602083013567ffffffffffffffff811115612af957600080fd5b612b0585828601612aa8565b9150509250929050565b600080600060608486031215612b2457600080fd5b612b2d846129db565b9250612b3b602085016129db565b9150604084013590509250925092565b600060208284031215612b5d57600080fd5b612679826129db565b600060208284031215612b7857600080fd5b813567ffffffffffffffff811115612b8f57600080fd5b61188084828501612aa8565b60008060408385031215612bae57600080fd5b50508035926020909101359150565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612c1257603f19888603018452612c00858351612983565b94509285019290850190600101612be4565b5092979650505050505050565b8015158114610f5d57600080fd5b60008060408385031215612c4057600080fd5b612c49836129db565b91506020830135612c5981612c1f565b809150509250929050565b60008060008060808587031215612c7a57600080fd5b612c83856129db565b9350612c91602086016129db565b925060408501359150606085013567ffffffffffffffff811115612cb457600080fd5b8501601f81018713612cc557600080fd5b612cd487823560208401612a32565b91505092959194509250565b60008060408385031215612cf357600080fd5b612cfc836129db565b9150612d0a602084016129db565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015612d4b57835183529284019291840191600101612d2f565b50909695505050505050565b600181811c90821680612d6b57607f821691505b60208210811415612d8c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600060208284031215612e2a57600080fd5b815161267981612c1f565b600060208284031215612e4757600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082612e8957612e89612e4e565b500490565b60008219821115612ea157612ea1612e64565b500190565b6000600019821415612eba57612eba612e64565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6020808252603a908201527f4f6e6c792043617264696e616c2043726577204d656d626572732063616e207060408201527f6172746963697061746520696e204e6f64652052756e6e65722e000000000000606082015260800190565b60008351612f46818460208801612957565b835190830190612f5a818360208801612957565b01949350505050565b600082821015612f7557612f75612e64565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612fff90830184612983565b9695505050505050565b60006020828403121561301b57600080fd5b815161267981612924565b60008261303557613035612e4e565b50069056fea2646970667358221220441e0d3295c750a6c3c54b10690a21dfba9efdb8617c5757ebfbc33d45c6b91d64736f6c63430008080033",
  "deployedSourceMap": "493:10281:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:5;;;;;;;;;;-1:-1:-1;1570:300:5;;;;;:::i;:::-;;:::i;:::-;;;565:14:21;;558:22;540:41;;528:2;513:18;1570:300:5;;;;;;;;2488:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;;;;;-1:-1:-1;3999:217:5;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:21;;;1674:51;;1662:2;1647:18;3999:217:5;1528:203:21;3537:401:5;;;;;;;;;;-1:-1:-1;3537:401:5;;;;;:::i;:::-;;:::i;:::-;;6888:187:19;;;;;;;;;;-1:-1:-1;6888:187:19;;;;;:::i;:::-;;:::i;10339:127::-;;;;;;;;;;-1:-1:-1;10339:127:19;;;;;:::i;:::-;;:::i;4726:330:5:-;;;;;;;;;;-1:-1:-1;4726:330:5;;;;;:::i;:::-;;:::i;10652:120:19:-;;;;;;;;;;-1:-1:-1;10652:120:19;;;;;:::i;:::-;;:::i;9759:139::-;;;;;;;;;;-1:-1:-1;9759:139:19;;;;;:::i;:::-;;:::i;961:32::-;;;;;;;;;;;;;;;;;;;4234:25:21;;;4222:2;4207:18;961:32:19;4088:177:21;5122:179:5;;;;;;;;;;-1:-1:-1;5122:179:5;;;;;:::i;:::-;;:::i;4433:502:19:-;;;;;;;;;;-1:-1:-1;4433:502:19;;;;;:::i;:::-;;:::i;1056:22::-;;;;;;;;;;;;;;;;1608:57;;;;;;;;;;-1:-1:-1;1608:57:19;;;;;:::i;:::-;;;;;;;;;;;;;;1453:60;;;;;;;;;;-1:-1:-1;1453:60:19;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1453:60:19;;;2191:235:5;;;;;;;;;;-1:-1:-1;2191:235:5;;;;;:::i;:::-;;:::i;6564:118:19:-;;;;;;;;;;;;;:::i;1929:205:5:-;;;;;;;;;;-1:-1:-1;1929:205:5;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;8612:161:19:-;;;;;;;;;;-1:-1:-1;8612:161:19;;;;;:::i;:::-;;:::i;8970:151::-;;;;;;;;;;-1:-1:-1;8970:151:19;;;;;:::i;:::-;;:::i;9502:116::-;;;;;;;;;;-1:-1:-1;9502:116:19;;;;;:::i;:::-;;:::i;8181:149::-;;;;;;;;;;-1:-1:-1;8181:149:19;;;;;:::i;:::-;;:::i;5062:551::-;;;:::i;900:18::-;;;;;;;;;;-1:-1:-1;900:18:19;;;;-1:-1:-1;;;;;900:18:19;;;1036:85:0;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;7290:745:19;;;;;;;;;;-1:-1:-1;7290:745:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2650:102:5:-;;;;;;;;;;;;;:::i;10115:99:19:-;;;;;;;;;;-1:-1:-1;10115:99:19;;;;;:::i;:::-;;:::i;4283:153:5:-;;;;;;;;;;-1:-1:-1;4283:153:5;;;;;:::i;:::-;;:::i;5697:737:19:-;;;;;;;;;;;;;:::i;635:33::-;;;;;;;;;;-1:-1:-1;635:33:19;;;;;;1329:54;;;;;;;;;;-1:-1:-1;1329:54:19;;;;;:::i;:::-;;;;;;;;;;;;;;5367:320:5;;;;;;;;;;-1:-1:-1;5367:320:5;;;;;:::i;:::-;;:::i;1741:56:19:-;;;;;;;;;;-1:-1:-1;1741:56:19;;;;;:::i;:::-;;;;;;;;;;;;;;1110:29;;;;;;;;;;;;;;;;467:663:8;;;;;;;;;;-1:-1:-1;467:663:8;;;;;:::i;:::-;;:::i;819:30:19:-;;;;;;;;;;-1:-1:-1;819:30:19;;;;-1:-1:-1;;;;;819:30:19;;;1204:32;;;;;;;;;;;;;:::i;725:33::-;;;;;;;;;;-1:-1:-1;725:33:19;;;;-1:-1:-1;;;;;725:33:19;;;9250:143;;;;;;;;;;-1:-1:-1;9250:143:19;;;;;:::i;:::-;;:::i;4502:162:5:-;;;;;;;;;;-1:-1:-1;4502:162:5;;;;;:::i;:::-;-1:-1:-1;;;;;4622:25:5;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2744:1494:19:-;;;;;;;;;;-1:-1:-1;2744:1494:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1570:300:5:-;1672:4;-1:-1:-1;;;;;;1707:40:5;;-1:-1:-1;;;1707:40:5;;:104;;-1:-1:-1;;;;;;;1763:48:5;;-1:-1:-1;;;1763:48:5;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:5;1688:175;1570:300;-1:-1:-1;;1570:300:5:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;4102:16;4110:7;4102;:16::i;:::-;4094:73;;;;-1:-1:-1;;;4094:73:5;;8713:2:21;4094:73:5;;;8695:21:21;8752:2;8732:18;;;8725:30;8791:34;8771:18;;;8764:62;-1:-1:-1;;;8842:18:21;;;8835:42;8894:19;;4094:73:5;;;;;;;;;-1:-1:-1;4185:24:5;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:5;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:5;:2;-1:-1:-1;;;;;3674:11:5;;;3666:57;;;;-1:-1:-1;;;3666:57:5;;9126:2:21;3666:57:5;;;9108:21:21;9165:2;9145:18;;;9138:30;9204:34;9184:18;;;9177:62;-1:-1:-1;;;9255:18:21;;;9248:31;9296:19;;3666:57:5;8924:397:21;3666:57:5;719:10:11;-1:-1:-1;;;;;3755:21:5;;;;:62;;-1:-1:-1;3780:37:5;3797:5;719:10:11;4502:162:5;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:5;;9528:2:21;3734:165:5;;;9510:21:21;9567:2;9547:18;;;9540:30;9606:34;9586:18;;;9579:62;9677:26;9657:18;;;9650:54;9721:19;;3734:165:5;9326:420:21;3734:165:5;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;6888:187:19:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6982:34:19::1;6995:7;7004:11;6982:12;:34::i;:::-;7047:7;7031:37;7056:11;7031:37;;;;;;:::i;:::-;;;;;;;;6888:187:::0;;:::o;10339:127::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;10425:14:19::1;:34:::0;10339:127::o;4726:330:5:-;4915:41;719:10:11;4948:7:5;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:5;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;10652:120:19:-;10732:11;;:33;;-1:-1:-1;;;10732:33:19;;-1:-1:-1;;;;;1692:32:21;;;10732:33:19;;;1674:51:21;10709:4:19;;10732:11;;:27;;1647:18:21;;10732:33:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9759:139::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9851:17:19::1;:40:::0;9759:139::o;5122:179:5:-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;4433:502:19:-;1108:6:0;;4509:4:19;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4525:21:19::1;:9;1032:19:12::0;;1050:1;1032:19;;;945:123;4525:21:19::1;4556:17;4576:19;:9;918:14:12::0;;827:112;4576:19:19::1;4639:17;::::0;4606:30:::1;::::0;;;:19:::1;:30;::::0;;;;:50;4556:39;-1:-1:-1;4666:28:19::1;4672:10;4556:39:::0;4666:5:::1;:28::i;:::-;4704:43;4717:9;4728:18;4704:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:43::i;:::-;4757:33;4773:4;4780:9;4757:7;:33::i;:::-;4818:18;::::0;4800:43:::1;::::0;-1:-1:-1;;;;;4818:18:19::1;::::0;4800:17:::1;:43::i;:::-;4859:42;::::0;4891:9;;4879:10:::1;::::0;4859:42:::1;::::0;;;::::1;4919:9:::0;-1:-1:-1;1318:1:0::1;4433:502:19::0;;;:::o;2191:235:5:-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:5;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:5;;10982:2:21;2324:73:5;;;10964:21:21;11021:2;11001:18;;;10994:30;11060:34;11040:18;;;11033:62;-1:-1:-1;;;11111:18:21;;;11104:39;11160:19;;2324:73:5;10780:405:21;6564:118:19;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6622:4:19::1;::::0;-1:-1:-1;;;;;6622:4:19::1;:13;6636:7;1108:6:0::0;;-1:-1:-1;;;;;1108:6:0;;1036:85;6636:7:19::1;6645:4;::::0;:29:::1;::::0;-1:-1:-1;;;6645:29:19;;6668:4:::1;6645:29;::::0;::::1;1674:51:21::0;-1:-1:-1;;;;;6645:4:19;;::::1;::::0;:14:::1;::::0;1647:18:21;;6645:29:19::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6622:53;::::0;-1:-1:-1;;;;;;6622:53:19::1;::::0;;;;;;-1:-1:-1;;;;;11571:32:21;;;6622:53:19::1;::::0;::::1;11553:51:21::0;11620:18;;;11613:34;11526:18;;6622:53:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6564:118::o:0;1929:205:5:-;2001:7;-1:-1:-1;;;;;2028:19:5;;2020:74;;;;-1:-1:-1;;;2020:74:5;;11860:2:21;2020:74:5;;;11842:21:21;11899:2;11879:18;;;11872:30;11938:34;11918:18;;;11911:62;-1:-1:-1;;;11989:18:21;;;11982:40;12039:19;;2020:74:5;11658:406:21;2020:74:5;-1:-1:-1;;;;;;2111:16:5;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;8612:161:19:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8713:34:19::1;::::0;;;:25:::1;:34;::::0;;;;:53;;-1:-1:-1;;;;;;8713:53:19::1;-1:-1:-1::0;;;;;8713:53:19;;;::::1;::::0;;;::::1;::::0;;8612:161::o;8970:151::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9070:28:19::1;::::0;;;:19:::1;:28;::::0;;;;;:44;8970:151::o;9502:116::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9582:4:19::1;:29:::0;;-1:-1:-1;;;;;;9582:29:19::1;-1:-1:-1::0;;;;;9582:29:19;;;::::1;::::0;;;::::1;::::0;;9502:116::o;8181:149::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8281:42:19;;::::1;::::0;:18:::1;::::0;:42:::1;::::0;::::1;::::0;::::1;:::i;:::-;;8181:149:::0;:::o;5062:551::-;5140:7;;5127:9;:20;;5119:134;;;;-1:-1:-1;;;5119:134:19;;12271:2:21;5119:134:19;;;12253:21:21;12310:3;12290:18;;;12283:31;12350:34;12330:18;;;12323:62;12421:34;12401:18;;;12394:62;12493:34;12472:19;;;12465:63;-1:-1:-1;;;12544:19:21;;;12537:36;12590:19;;5119:134:19;12069:546:21;5119:134:19;5293:1;5271:19;:9;918:14:12;;827:112;5271:19:19;:23;5263:79;;;;-1:-1:-1;;;5263:79:19;;12822:2:21;5263:79:19;;;12804:21:21;12861:2;12841:18;;;12834:30;12900:34;12880:18;;;12873:62;-1:-1:-1;;;12951:18:21;;;12944:41;13002:19;;5263:79:19;12620:407:21;5263:79:19;5367:1;5353:207;5375:9;918:14:12;5370:1:19;:24;5353:207;;5415:16;5434:10;5442:1;5434:7;:10::i;:::-;5415:29;;5541:7;;5529:9;:19;;;;:::i;:::-;-1:-1:-1;;;;;5493:32:19;;;;;;:22;:32;;;;;;:56;;;;:::i;:::-;-1:-1:-1;;;;;5458:32:19;;;;;;;:22;:32;;;;;:91;5396:3;;;;:::i;:::-;;;;5353:207;;;-1:-1:-1;5575:31:19;;5596:9;;5575:31;;;;;5062:551::o;7290:745::-;7360:15;7387:13;7403:19;:9;918:14:12;;827:112;7403:19:19;7387:35;-1:-1:-1;7432:17:19;;7510:1;7495:146;7519:8;7513:2;:14;7495:146;;7568:11;-1:-1:-1;;;;;7553:26:19;:11;7561:2;7553:7;:11::i;:::-;-1:-1:-1;;;;;7553:26:19;;7549:82;;;7599:17;7615:1;7599:17;;:::i;:::-;;;7549:82;7529:4;;;;:::i;:::-;;;;7495:146;;;;7651:32;7699:12;7686:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7651:61:19;-1:-1:-1;7738:1:19;7723:264;7747:8;7741:2;:14;7723:264;;7796:11;-1:-1:-1;;;;;7781:26:19;:11;7789:2;7781:7;:11::i;:::-;-1:-1:-1;;;;;7781:26:19;;7777:200;;;7827:24;7854:12;7863:2;7854:8;:12::i;:::-;7827:39;;7917:10;7884:16;7901:12;7884:30;;;;;;;;:::i;:::-;;;;;;;;;;:43;7945:17;7961:1;7945:17;;:::i;:::-;;;7809:168;7777:200;7757:4;;;;:::i;:::-;;;;7723:264;;;-1:-1:-1;8012:16:19;7290:745;-1:-1:-1;;;;;7290:745:19:o;2650:102:5:-;2706:13;2738:7;2731:14;;;;;:::i;10115:99:19:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;10187:7:19::1;:20:::0;10115:99::o;4283:153:5:-;4377:52;719:10:11;4410:8:5;4420;4377:18;:52::i;5697:737:19:-;5752:11;;:39;;-1:-1:-1;;;5752:39:19;;5780:10;5752:39;;;1674:51:21;-1:-1:-1;;;;;5752:11:19;;;;:27;;1647:18:21;;5752:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5744:110;;;;-1:-1:-1;;;5744:110:19;;;;;;;:::i;:::-;5895:10;5909:1;5872:34;;;:22;:34;;;;;;5864:169;;;;-1:-1:-1;;;5864:169:19;;14455:2:21;5864:169:19;;;14437:21:21;14494:3;14474:18;;;14467:31;14534:34;14514:18;;;14507:62;14605:34;14585:18;;;14578:62;14677:34;14656:19;;;14649:63;-1:-1:-1;;;14728:19:21;;;14721:53;14791:19;;5864:169:19;14253:563:21;5864:169:19;6097:10;6052:19;6074:34;;;:22;:34;;;;;;;;6118:38;;;;6185:39;;6074:34;;6097:10;6074:34;;6052:19;6185:39;6052:19;6185:39;6074:34;6097:10;6185:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6166:58;;;6242:7;6234:40;;;;-1:-1:-1;;;6234:40:19;;15233:2:21;6234:40:19;;;15215:21:21;15272:2;15252:18;;;15245:30;-1:-1:-1;;;15291:18:21;;;15284:50;15351:18;;6234:40:19;15031:344:21;6234:40:19;6290:43;;4234:25:21;;;6309:10:19;;6290:43;;4222:2:21;4207:18;6290:43:19;;;;;;;6402:10;6380:33;;;;:21;:33;;;;;;:47;;6416:11;;6380:47;:::i;:::-;6366:10;6344:33;;;;:21;:33;;;;;:83;-1:-1:-1;;5697:737:19:o;5367:320:5:-;5536:41;719:10:11;5569:7:5;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:5;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;467:663:8:-;540:13;573:16;581:7;573;:16::i;:::-;565:78;;;;-1:-1:-1;;;565:78:8;;15582:2:21;565:78:8;;;15564:21:21;15621:2;15601:18;;;15594:30;15660:34;15640:18;;;15633:62;-1:-1:-1;;;15711:18:21;;;15704:47;15768:19;;565:78:8;15380:413:21;565:78:8;654:23;680:19;;;:10;:19;;;;;654:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:18;730:10;3464:9:5;;;;;;;;;-1:-1:-1;3464:9:5;;;3388:92;730:10:8;709:31;;819:4;813:18;835:1;813:23;809:70;;;-1:-1:-1;859:9:8;467:663;-1:-1:-1;;467:663:8:o;809:70::-;981:23;;:27;977:106;;1055:4;1061:9;1038:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1024:48;;;;467:663;;;:::o;977:106::-;1100:23;1115:7;1100:14;:23::i;:::-;1093:30;467:663;-1:-1:-1;;;;467:663:8:o;1204:32:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9250:143::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9344:18:19::1;:42:::0;;-1:-1:-1;;;;;;9344:42:19::1;-1:-1:-1::0;;;;;9344:42:19;;;::::1;::::0;;;::::1;::::0;;9250:143::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;16475:2:21;1998:73:0::1;::::0;::::1;16457:21:21::0;16514:2;16494:18;;;16487:30;16553:34;16533:18;;;16526:62;-1:-1:-1;;;16604:18:21;;;16597:36;16650:19;;1998:73:0::1;16273:402:21::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;2744:1494:19:-:0;2807:13;2851:1;2840:8;:12;2832:71;;;;-1:-1:-1;;;2832:71:19;;16882:2:21;2832:71:19;;;16864:21:21;16921:2;16901:18;;;16894:30;16960:34;16940:18;;;16933:62;-1:-1:-1;;;17011:18:21;;;17004:44;17065:19;;2832:71:19;16680:410:21;2832:71:19;2955:7;;2932:9;918:14:12;2921:30:19;;:8;:30;:::i;:::-;:41;;2913:179;;;;-1:-1:-1;;;2913:179:19;;17297:2:21;2913:179:19;;;17279:21:21;17336:3;17316:18;;;17309:31;17376:34;17356:18;;;17349:62;17447:34;17427:18;;;17420:62;17519:34;17498:19;;;17491:63;17591:31;17570:19;;;17563:60;17640:19;;2913:179:19;17095:570:21;2913:179:19;3110:11;;:39;;-1:-1:-1;;;3110:39:19;;3138:10;3110:39;;;1674:51:21;-1:-1:-1;;;;;3110:11:19;;;;:27;;1647:18:21;;3110:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3102:110;;;;-1:-1:-1;;;3102:110:19;;;;;;;:::i;:::-;3260:14;;3230:4;;:26;;-1:-1:-1;;;3230:26:19;;3245:10;3230:26;;;1674:51:21;-1:-1:-1;;;;;3230:4:19;;;;:14;;1647:18:21;;3230:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;3222:115;;;;-1:-1:-1;;;3222:115:19;;17872:2:21;3222:115:19;;;17854:21:21;17911:2;17891:18;;;17884:30;17950:34;17930:18;;;17923:62;18021:28;18001:18;;;17994:56;18067:19;;3222:115:19;17670:422:21;3222:115:19;3400:14;;3355:4;;:41;;-1:-1:-1;;;3355:41:19;;3370:10;3355:41;;;18309:34:21;3390:4:19;18359:18:21;;;18352:43;-1:-1:-1;;;;;3355:4:19;;;;:14;;18244:18:21;;3355:41:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;3347:167;;;;-1:-1:-1;;;3347:167:19;;18608:2:21;3347:167:19;;;18590:21:21;18647:2;18627:18;;;18620:30;18686:34;18666:18;;;18659:62;18757:34;18737:18;;;18730:62;18829:33;18808:19;;;18801:62;18880:19;;3347:167:19;18406:499:21;3347:167:19;3533:29;3579:8;3565:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3565:23:19;;3533:55;;3598:9;3622:580;3638:8;3634:1;:12;3622:580;;;3670:4;;3715:14;;3670:60;;-1:-1:-1;;;3670:60:19;;3688:10;3670:60;;;19150:34:21;3708:4:19;19200:18:21;;;19193:43;19252:18;;;19245:34;;;;-1:-1:-1;;;;;3670:4:19;;;;:17;;19085:18:21;;3670:60:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3745:21;:9;1032:19:12;;1050:1;1032:19;;;945:123;3745:21:19;3780:17;3800:19;:9;918:14:12;;827:112;3800:19:19;3867:17;;3834:30;;;;:19;:30;;;;;:50;3780:39;-1:-1:-1;3898:28:19;3904:10;3780:39;3898:5;:28::i;:::-;3940:43;3953:9;3964:18;3940:43;;;;;:::i;:::-;3997:33;4013:4;4020:9;3997:7;:33::i;:::-;4062:18;;4044:43;;-1:-1:-1;;;;;4062:18:19;;4044:17;:43::i;:::-;4120:9;4102:12;4115:1;4102:15;;;;;;;;:::i;:::-;;;;;;;;;;:27;4149:42;;4181:9;;4169:10;;4149:42;;;;;-1:-1:-1;3648:6:19;3653:1;3648:6;;:::i;:::-;;;3622:580;;;-1:-1:-1;4219:12:19;2744:1494;-1:-1:-1;;2744:1494:19:o;7159:125:5:-;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:5;:30;;;7159:125::o;11168:171::-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:5;-1:-1:-1;;;;;11242:29:5;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:5;;;;;;;;;;;11168:171;;:::o;1277:214:8:-;1376:16;1384:7;1376;:16::i;:::-;1368:75;;;;-1:-1:-1;;;1368:75:8;;19492:2:21;1368:75:8;;;19474:21:21;19531:2;19511:18;;;19504:30;19570:34;19550:18;;;19543:62;-1:-1:-1;;;19621:18:21;;;19614:44;19675:19;;1368:75:8;19290:410:21;1368:75:8;1453:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;7442:344:5:-;7535:4;7559:16;7567:7;7559;:16::i;:::-;7551:73;;;;-1:-1:-1;;;7551:73:5;;19907:2:21;7551:73:5;;;19889:21:21;19946:2;19926:18;;;19919:30;19985:34;19965:18;;;19958:62;-1:-1:-1;;;20036:18:21;;;20029:42;20088:19;;7551:73:5;19705:408:21;7551:73:5;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:5;:7;-1:-1:-1;;;;;7691:16:5;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:5;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:5;;7691:51;:87;;;-1:-1:-1;;;;;;4622:25:5;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7746:32;4502:162;10452:605;10606:4;-1:-1:-1;;;;;10579:31:5;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:5;;10571:81;;;;-1:-1:-1;;;10571:81:5;;20320:2:21;10571:81:5;;;20302:21:21;20359:2;20339:18;;;20332:30;20398:34;20378:18;;;20371:62;-1:-1:-1;;;20449:18:21;;;20442:35;20494:19;;10571:81:5;20118:401:21;10571:81:5;-1:-1:-1;;;;;10670:16:5;;10662:65;;;;-1:-1:-1;;;10662:65:5;;20726:2:21;10662:65:5;;;20708:21:21;20765:2;20745:18;;;20738:30;20804:34;20784:18;;;20777:62;-1:-1:-1;;;20855:18:21;;;20848:34;20899:19;;10662:65:5;20524:400:21;10662:65:5;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:5;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:5;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:5;-1:-1:-1;;;;;10937:21:5;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;3607:331;3537:401;;:::o;9078:427::-;-1:-1:-1;;;;;9157:16:5;;9149:61;;;;-1:-1:-1;;;9149:61:5;;21261:2:21;9149:61:5;;;21243:21:21;;;21280:18;;;21273:30;21339:34;21319:18;;;21312:62;21391:18;;9149:61:5;21059:356:21;9149:61:5;9229:16;9237:7;9229;:16::i;:::-;9228:17;9220:58;;;;-1:-1:-1;;;9220:58:5;;21622:2:21;9220:58:5;;;21604:21:21;21661:2;21641:18;;;21634:30;21700;21680:18;;;21673:58;21748:18;;9220:58:5;21420:352:21;9220:58:5;-1:-1:-1;;;;;9345:13:5;;;;;;:9;:13;;;;;:18;;9362:1;;9345:13;:18;;9362:1;;9345:18;:::i;:::-;;;;-1:-1:-1;;9373:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9373:21:5;-1:-1:-1;;;;;9373:21:5;;;;;;;;9410:33;;9373:16;;;9410:33;;9373:16;;9410:33;8281:42:19::1;8181:149:::0;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;11474:307:5:-;11624:8;-1:-1:-1;;;;;11615:17:5;:5;-1:-1:-1;;;;;11615:17:5;;;11607:55;;;;-1:-1:-1;;;11607:55:5;;21979:2:21;11607:55:5;;;21961:21:21;22018:2;21998:18;;;21991:30;22057:27;22037:18;;;22030:55;22102:18;;11607:55:5;21777:349:21;11607:55:5;-1:-1:-1;;;;;11672:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:5;;;;;;;;;;11733:41;;540::21;;;11733::5;;513:18:21;11733:41:5;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:5;;;;;;;:::i;2818:329::-;2891:13;2924:16;2932:7;2924;:16::i;:::-;2916:76;;;;-1:-1:-1;;;2916:76:5;;22752:2:21;2916:76:5;;;22734:21:21;22791:2;22771:18;;;22764:30;22830:34;22810:18;;;22803:62;-1:-1:-1;;;22881:18:21;;;22874:45;22936:19;;2916:76:5;22550:411:21;2916:76:5;3003:21;3027:10;3464:9;;;;;;;;;-1:-1:-1;3464:9:5;;;3388:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:5:o;12334:778::-;12484:4;-1:-1:-1;;;;;12504:13:5;;1465:19:10;:23;12500:606:5;;12539:72;;-1:-1:-1;;;12539:72:5;;-1:-1:-1;;;;;12539:36:5;;;;;:72;;719:10:11;;12590:4:5;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:5;;;;;;;;-1:-1:-1;;12539:72:5;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:5;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:5;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:5;-1:-1:-1;;;12661:51:5;;-1:-1:-1;12654:58:5;;12500:606;-1:-1:-1;13091:4:5;12334:778;;;;;;:::o;328:703:13:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:13;;;;;;;;;;;;-1:-1:-1;;;627:10:13;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:13;;-1:-1:-1;773:2:13;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:13;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:13;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:13;;;;;;;;-1:-1:-1;972:11:13;981:2;972:11;;:::i;:::-;;;844:150;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:21;-1:-1:-1;;;;;;88:32:21;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:21;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:21;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:21:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:21;;1343:180;-1:-1:-1;1343:180:21:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:21;;1843:42;;1833:70;;1899:1;1896;1889:12;1914:254;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:21:o;2173:127::-;2234:10;2229:3;2225:20;2222:1;2215:31;2265:4;2262:1;2255:15;2289:4;2286:1;2279:15;2305:632;2370:5;2400:18;2441:2;2433:6;2430:14;2427:40;;;2447:18;;:::i;:::-;2522:2;2516:9;2490:2;2576:15;;-1:-1:-1;;2572:24:21;;;2598:2;2568:33;2564:42;2552:55;;;2622:18;;;2642:22;;;2619:46;2616:72;;;2668:18;;:::i;:::-;2708:10;2704:2;2697:22;2737:6;2728:15;;2767:6;2759;2752:22;2807:3;2798:6;2793:3;2789:16;2786:25;2783:45;;;2824:1;2821;2814:12;2783:45;2874:6;2869:3;2862:4;2854:6;2850:17;2837:44;2929:1;2922:4;2913:6;2905;2901:19;2897:30;2890:41;;;;2305:632;;;;;:::o;2942:222::-;2985:5;3038:3;3031:4;3023:6;3019:17;3015:27;3005:55;;3056:1;3053;3046:12;3005:55;3078:80;3154:3;3145:6;3132:20;3125:4;3117:6;3113:17;3078:80;:::i;3169:390::-;3247:6;3255;3308:2;3296:9;3287:7;3283:23;3279:32;3276:52;;;3324:1;3321;3314:12;3276:52;3360:9;3347:23;3337:33;;3421:2;3410:9;3406:18;3393:32;3448:18;3440:6;3437:30;3434:50;;;3480:1;3477;3470:12;3434:50;3503;3545:7;3536:6;3525:9;3521:22;3503:50;:::i;:::-;3493:60;;;3169:390;;;;;:::o;3564:328::-;3641:6;3649;3657;3710:2;3698:9;3689:7;3685:23;3681:32;3678:52;;;3726:1;3723;3716:12;3678:52;3749:29;3768:9;3749:29;:::i;:::-;3739:39;;3797:38;3831:2;3820:9;3816:18;3797:38;:::i;:::-;3787:48;;3882:2;3871:9;3867:18;3854:32;3844:42;;3564:328;;;;;:::o;3897:186::-;3956:6;4009:2;3997:9;3988:7;3984:23;3980:32;3977:52;;;4025:1;4022;4015:12;3977:52;4048:29;4067:9;4048:29;:::i;4270:322::-;4339:6;4392:2;4380:9;4371:7;4367:23;4363:32;4360:52;;;4408:1;4405;4398:12;4360:52;4448:9;4435:23;4481:18;4473:6;4470:30;4467:50;;;4513:1;4510;4503:12;4467:50;4536;4578:7;4569:6;4558:9;4554:22;4536:50;:::i;4597:248::-;4665:6;4673;4726:2;4714:9;4705:7;4701:23;4697:32;4694:52;;;4742:1;4739;4732:12;4694:52;-1:-1:-1;;4765:23:21;;;4835:2;4820:18;;;4807:32;;-1:-1:-1;4597:248:21:o;5073:803::-;5235:4;5264:2;5304;5293:9;5289:18;5334:2;5323:9;5316:21;5357:6;5392;5386:13;5423:6;5415;5408:22;5461:2;5450:9;5446:18;5439:25;;5523:2;5513:6;5510:1;5506:14;5495:9;5491:30;5487:39;5473:53;;5561:2;5553:6;5549:15;5582:1;5592:255;5606:6;5603:1;5600:13;5592:255;;;5699:2;5695:7;5683:9;5675:6;5671:22;5667:36;5662:3;5655:49;5727:40;5760:6;5751;5745:13;5727:40;:::i;:::-;5717:50;-1:-1:-1;5825:12:21;;;;5790:15;;;;5628:1;5621:9;5592:255;;;-1:-1:-1;5864:6:21;;5073:803;-1:-1:-1;;;;;;;5073:803:21:o;5881:118::-;5967:5;5960:13;5953:21;5946:5;5943:32;5933:60;;5989:1;5986;5979:12;6004:315;6069:6;6077;6130:2;6118:9;6109:7;6105:23;6101:32;6098:52;;;6146:1;6143;6136:12;6098:52;6169:29;6188:9;6169:29;:::i;:::-;6159:39;;6248:2;6237:9;6233:18;6220:32;6261:28;6283:5;6261:28;:::i;:::-;6308:5;6298:15;;;6004:315;;;;;:::o;6324:667::-;6419:6;6427;6435;6443;6496:3;6484:9;6475:7;6471:23;6467:33;6464:53;;;6513:1;6510;6503:12;6464:53;6536:29;6555:9;6536:29;:::i;:::-;6526:39;;6584:38;6618:2;6607:9;6603:18;6584:38;:::i;:::-;6574:48;;6669:2;6658:9;6654:18;6641:32;6631:42;;6724:2;6713:9;6709:18;6696:32;6751:18;6743:6;6740:30;6737:50;;;6783:1;6780;6773:12;6737:50;6806:22;;6859:4;6851:13;;6847:27;-1:-1:-1;6837:55:21;;6888:1;6885;6878:12;6837:55;6911:74;6977:7;6972:2;6959:16;6954:2;6950;6946:11;6911:74;:::i;:::-;6901:84;;;6324:667;;;;;;;:::o;7224:260::-;7292:6;7300;7353:2;7341:9;7332:7;7328:23;7324:32;7321:52;;;7369:1;7366;7359:12;7321:52;7392:29;7411:9;7392:29;:::i;:::-;7382:39;;7440:38;7474:2;7463:9;7459:18;7440:38;:::i;:::-;7430:48;;7224:260;;;;;:::o;7489:632::-;7660:2;7712:21;;;7782:13;;7685:18;;;7804:22;;;7631:4;;7660:2;7883:15;;;;7857:2;7842:18;;;7631:4;7926:169;7940:6;7937:1;7934:13;7926:169;;;8001:13;;7989:26;;8070:15;;;;8035:12;;;;7962:1;7955:9;7926:169;;;-1:-1:-1;8112:3:21;;7489:632;-1:-1:-1;;;;;;7489:632:21:o;8126:380::-;8205:1;8201:12;;;;8248;;;8269:61;;8323:4;8315:6;8311:17;8301:27;;8269:61;8376:2;8368:6;8365:14;8345:18;8342:38;8339:161;;;8422:10;8417:3;8413:20;8410:1;8403:31;8457:4;8454:1;8447:15;8485:4;8482:1;8475:15;8339:161;;8126:380;;;:::o;9751:356::-;9953:2;9935:21;;;9972:18;;;9965:30;10031:34;10026:2;10011:18;;10004:62;10098:2;10083:18;;9751:356::o;10112:413::-;10314:2;10296:21;;;10353:2;10333:18;;;10326:30;10392:34;10387:2;10372:18;;10365:62;-1:-1:-1;;;10458:2:21;10443:18;;10436:47;10515:3;10500:19;;10112:413::o;10530:245::-;10597:6;10650:2;10638:9;10629:7;10625:23;10621:32;10618:52;;;10666:1;10663;10656:12;10618:52;10698:9;10692:16;10717:28;10739:5;10717:28;:::i;11190:184::-;11260:6;11313:2;11301:9;11292:7;11288:23;11284:32;11281:52;;;11329:1;11326;11319:12;11281:52;-1:-1:-1;11352:16:21;;11190:184;-1:-1:-1;11190:184:21:o;13032:127::-;13093:10;13088:3;13084:20;13081:1;13074:31;13124:4;13121:1;13114:15;13148:4;13145:1;13138:15;13164:127;13225:10;13220:3;13216:20;13213:1;13206:31;13256:4;13253:1;13246:15;13280:4;13277:1;13270:15;13296:120;13336:1;13362;13352:35;;13367:18;;:::i;:::-;-1:-1:-1;13401:9:21;;13296:120::o;13421:128::-;13461:3;13492:1;13488:6;13485:1;13482:13;13479:39;;;13498:18;;:::i;:::-;-1:-1:-1;13534:9:21;;13421:128::o;13554:135::-;13593:3;-1:-1:-1;;13614:17:21;;13611:43;;;13634:18;;:::i;:::-;-1:-1:-1;13681:1:21;13670:13;;13554:135::o;13694:127::-;13755:10;13750:3;13746:20;13743:1;13736:31;13786:4;13783:1;13776:15;13810:4;13807:1;13800:15;13826:422;14028:2;14010:21;;;14067:2;14047:18;;;14040:30;14106:34;14101:2;14086:18;;14079:62;14177:28;14172:2;14157:18;;14150:56;14238:3;14223:19;;13826:422::o;15798:470::-;15977:3;16015:6;16009:13;16031:53;16077:6;16072:3;16065:4;16057:6;16053:17;16031:53;:::i;:::-;16147:13;;16106:16;;;;16169:57;16147:13;16106:16;16203:4;16191:17;;16169:57;:::i;:::-;16242:20;;15798:470;-1:-1:-1;;;;15798:470:21:o;20929:125::-;20969:4;20997:1;20994;20991:8;20988:34;;;21002:18;;:::i;:::-;-1:-1:-1;21039:9:21;;20929:125::o;22131:414::-;22333:2;22315:21;;;22372:2;22352:18;;;22345:30;22411:34;22406:2;22391:18;;22384:62;-1:-1:-1;;;22477:2:21;22462:18;;22455:48;22535:3;22520:19;;22131:414::o;22966:489::-;-1:-1:-1;;;;;23235:15:21;;;23217:34;;23287:15;;23282:2;23267:18;;23260:43;23334:2;23319:18;;23312:34;;;23382:3;23377:2;23362:18;;23355:31;;;23160:4;;23403:46;;23429:19;;23421:6;23403:46;:::i;:::-;23395:54;22966:489;-1:-1:-1;;;;;;22966:489:21:o;23460:249::-;23529:6;23582:2;23570:9;23561:7;23557:23;23553:32;23550:52;;;23598:1;23595;23588:12;23550:52;23630:9;23624:16;23649:30;23673:5;23649:30;:::i;23714:112::-;23746:1;23772;23762:35;;23777:18;;:::i;:::-;-1:-1:-1;23811:9:21;;23714:112::o",
  "language": "Solidity",
  "natspec": {
    "details": "NFT contract that will be used with the marketplace contract",
    "kind": "dev",
    "methods": {
      "addWhiteListToToken(address,uint256)": {
        "details": "Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.",
        "params": {
          "tokenId": "the ID of the NFT that the whitelist spot is for",
          "whiteListAddress": "the address of the user who will be able to purchase the NFT"
        }
      },
      "addressIsMember(address)": {
        "details": "function for the marketplace to determine if an address is a Cardinal Crew member.",
        "params": {
          "user": "the address to check the Cardinal Crew membership of"
        }
      },
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "claimNodeRewards()": {
        "details": "Function for NFT holders to claim their node rewards."
      },
      "createToken(string)": {
        "details": "Only owner function to mint a new NFT.",
        "params": {
          "newTokenURI": "the token URI on IPFS for the NFT metadata"
        },
        "returns": {
          "_0": "newItemId the ID of the newly minted NFT"
        }
      },
      "depositNodeRewards()": {
        "details": "Function to deposit rewards in Matic from the node into the contract for NFT holders to claim."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getUserTokenURIs(address)": {
        "details": "Function to get all token URIs for tokens that a given user owns.",
        "params": {
          "userAddress": "the user's address to get token URIs of"
        },
        "returns": {
          "_0": "list of token URIs for a user's NFTs"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mintNodeRunnerNFT(uint256)": {
        "details": "Allows someone to mint a Node Runner NFT by paying USDC",
        "params": {
          "nftCount": "the number of NFTs to mint"
        },
        "returns": {
          "_0": "newItemId the ID of the newly minted Node Runner NFT"
        }
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "setTokenURI(uint256,string)": {
        "details": "Setter function for the token URI of an NFT.",
        "params": {
          "newTokenURI": "the token URI to update the NFT with",
          "tokenId": "the ID of the NFT to update the token URI of"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateDefaultListingFee(uint256)": {
        "details": "updates the default listing fee for the NFTs.",
        "params": {
          "newDefaultListingFee": "the new default listing fee"
        }
      },
      "updateMarketplaceAddress(address)": {
        "details": "updates the marketplace address.",
        "params": {
          "newMarketplaceAddress": "the new marketplace address"
        }
      },
      "updateMaxNFTs(uint256)": {
        "details": "updates the maximum number of NFTs that can be minted for the node this contract represents.",
        "params": {
          "newMaxNFTs": "the new maximum number of NFTs that can be minted in this contract"
        }
      },
      "updateNFTPriceInUSDC(uint256)": {
        "details": "updates the price of each NFT.",
        "params": {
          "newNFTPriceInUSDC": "the price of each NFT in USDC"
        }
      },
      "updateNodeRunnerTokenURI(string)": {
        "details": "updates the Node Runner NFT token URI",
        "params": {
          "newNodeRunnerTokenURI": "the new type ID of the Node Runner NFTs"
        }
      },
      "updateTokenListingFee(uint256,uint256)": {
        "details": "updates the listing fee of an NFT.",
        "params": {
          "newListingFee": "the listing fee value for the NFT",
          "tokenId": "the ID of the NFT to update the listing fee of"
        }
      },
      "updateUSDCAddress(address)": {
        "details": "updates the USDC contract.",
        "params": {
          "newUSDCAddress": "the new USDC address"
        }
      },
      "withdrawNodeFunds()": {
        "details": "Only owner function to withdraw the USDC that is paid to this contract for the Node Runner NFTs."
      }
    },
    "title": "Node Runner Contract",
    "version": 1
  },
  "offset": [
    493,
    10774
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x267 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x849CA618 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD283B986 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD283B986 EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xDAA17F49 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0xE4ACE31A EQ PUSH2 0x77D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7E6 JUMPI DUP1 PUSH4 0xF7634A17 EQ PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0xC4A896C9 EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0xC5196931 EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xC98F56E0 EQ PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0x983A7FA7 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0xA58B603B EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0xAA46A400 EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0xB063C954 EQ PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x849CA618 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x88913CE2 EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x8F01785D EQ PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45576F94 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x64CA44A5 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x64CA44A5 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x7417353F EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x7867CCD1 EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0x7D81C4C1 EQ PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45576F94 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x4E9E1EC6 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x5506A120 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x5C23A67A EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23002C71 GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x23002C71 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x28DA575B EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x28E6DE93 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x3E22CEB0 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x31D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x293A JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x29C2 JUMP JUMPDEST PUSH2 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x29F2 JUMP JUMPDEST PUSH2 0x9A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0xABA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x29C2 JUMP JUMPDEST PUSH2 0xB2A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0F JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B4B JUMP JUMPDEST PUSH2 0xB8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x29C2 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x3FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0F JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH2 0x41C CALLDATASIZE PUSH1 0x4 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0xC52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B4B JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x29C2 JUMP JUMPDEST PUSH2 0xDA0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0xE17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2B4B JUMP JUMPDEST PUSH2 0xF60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0xFE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x51F CALLDATASIZE PUSH1 0x4 PUSH2 0x29F2 JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x53F CALLDATASIZE PUSH1 0x4 PUSH2 0x2B9B JUMP JUMPDEST PUSH2 0x1075 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x2B4B JUMP JUMPDEST PUSH2 0x10B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x57F CALLDATASIZE PUSH1 0x4 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x31B PUSH2 0x113E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x2E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EA PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B4B JUMP JUMPDEST PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x2BBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH2 0x142C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x627 CALLDATASIZE PUSH1 0x4 PUSH2 0x29C2 JUMP JUMPDEST PUSH2 0x143B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x647 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x146A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x1475 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x3D3 SWAP1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH2 0x693 CALLDATASIZE PUSH1 0x4 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x6C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C64 JUMP JUMPDEST PUSH2 0x16D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH2 0x6E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B4B JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH2 0x723 CALLDATASIZE PUSH1 0x4 PUSH2 0x29C2 JUMP JUMPDEST PUSH2 0x1711 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x2E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH2 0x1888 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x798 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B4B JUMP JUMPDEST PUSH2 0x1916 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x7B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x801 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B4B JUMP JUMPDEST PUSH2 0x1962 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x826 PUSH2 0x821 CALLDATASIZE PUSH1 0x4 PUSH2 0x29C2 JUMP JUMPDEST PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x2D13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x864 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x87F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x894 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8C0 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x90D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x90D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x922 DUP3 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0x988 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AF DUP3 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xA39 JUMPI POP PUSH2 0xA39 DUP2 CALLER PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH2 0xAB5 DUP4 DUP4 PUSH2 0x1FA6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0xAEE DUP3 DUP3 PUSH2 0x2014 JUMP JUMPDEST DUP2 PUSH32 0xC794E2271B51F209D8A645EEC85692351AD1ADC857AB2E06F9C5AF7961CF07D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH2 0xB63 CALLER DUP3 PUSH2 0x209F JUMP JUMPDEST PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2DC7 JUMP JUMPDEST PUSH2 0xAB5 DUP4 DUP4 DUP4 PUSH2 0x2185 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x28DA575B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x28DA575B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x2E18 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH2 0xAB5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0xC8D PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC98 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE SWAP1 POP PUSH2 0xCB6 CALLER DUP3 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0xD4A DUP2 PUSH1 0xF DUP1 SLOAD PUSH2 0xCC7 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCF3 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD40 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD15 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD40 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD23 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x2014 JUMP JUMPDEST PUSH2 0xD54 ADDRESS DUP3 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xD6B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0x86C96E58B5E24FD4DB3EA2D3803238D011FC9BABE088B2CB856F8A1A80A224A9 SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xE64 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEDF SWAP2 SWAP1 PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5D SWAP2 SWAP1 PUSH2 0x2E18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1011 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0x101B PUSH1 0x0 PUSH2 0x2454 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1047 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x109F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x113A SWAP1 PUSH1 0xF SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x288B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD SLOAD CALLVALUE LT ISZERO PUSH2 0x11EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206465706F73697420656E6F756768204D6174696320736F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2069742063616E206265206469766964656420627920746865206D6178696D75 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6D206E756D626572206F66204E465420686F6C6465727320666F722074686520 PUSH1 0x84 DUP3 ADD MSTORE PUSH5 0x3737B23297 PUSH1 0xD9 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F5 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST GT PUSH2 0x1256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F204E4654732068617665206265656E206D696E74656420666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x39903737B232903CB2BA17 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0x12CC JUMPI PUSH1 0x0 PUSH2 0x126D DUP3 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP PUSH1 0xD SLOAD CALLVALUE PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x2E7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x12C4 DUP2 PUSH2 0x2EA6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1259 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLVALUE SWAP1 PUSH32 0x1212ADF0641FFEFB93FBB2948F91DA450C6375780DBA1D933E2EF7BA1C543ED SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1307 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT PUSH2 0x1358 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1329 DUP3 PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1346 JUMPI PUSH2 0x1343 PUSH1 0x1 DUP5 PUSH2 0x2E8E JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x1350 DUP2 PUSH2 0x2EA6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x130F JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1374 JUMPI PUSH2 0x1374 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13A7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1392 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0x1422 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13C7 DUP3 PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1410 JUMPI PUSH1 0x0 PUSH2 0x13E1 DUP3 PUSH2 0x1711 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x13F6 JUMPI PUSH2 0x13F6 PUSH2 0x2EC1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x140C PUSH1 0x1 DUP6 PUSH2 0x2E8E JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x141A DUP2 PUSH2 0x2EA6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13AD JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x894 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1465 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH2 0x113A CALLER DUP4 DUP4 PUSH2 0x24A6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x28DA575B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x28DA575B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F0 SWAP2 SWAP1 PUSH2 0x2E18 JUMP JUMPDEST PUSH2 0x150C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x15D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x76 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520616E79206E6F6465207265776172647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F20636C61696D2120496620796F75206861766520616E204E465420666F72 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x2074686973206E6F64652C20706C65617365207761697420756E74696C207468 PUSH1 0x84 DUP3 ADD MSTORE PUSH22 0x32903732BC3A103932BBB0B932103232B837B9B4BA17 PUSH1 0x51 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x97F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1628 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x162D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4661696C656420746F2073656E64204D61746963 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xAB9726B9E4373F49134C144584366728EBC3E8ABA47220872606A5760AC9B040 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x16C5 SWAP1 DUP4 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH2 0x16E3 CALLER DUP4 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x16FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2DC7 JUMP JUMPDEST PUSH2 0x170B DUP5 DUP5 DUP5 DUP5 PUSH2 0x2575 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x171C DUP3 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0x1782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x179B SWAP1 PUSH2 0x2D57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17C7 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1814 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1814 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1832 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1845 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1877 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x185F SWAP3 SWAP2 SWAP1 PUSH2 0x2F34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1880 DUP5 PUSH2 0x25A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x1895 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18C1 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x190E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x190E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1940 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH2 0xF5D DUP2 PUSH2 0x2454 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 GT PUSH2 0x1A63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520746F206D696E74206174206C65617374206F6E65204E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x323290293AB73732B91027233A17 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x8 SLOAD PUSH2 0x1A73 SWAP1 DUP5 PUSH2 0x2E8E JUMP JUMPDEST GT ISZERO PUSH2 0x1B33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206172656E277420656E6F756768204E6F64652052756E6E657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4E46547320666F722074686973206E6F646520666F7220796F7520746F206D69 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E7420796F7520616D6F756E7420796F752063686F73652E20416E6F74686572 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x206E6F64652077696C6C20626520617661696C61626C6520736F6F6E21000000 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x28DA575B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x28DA575B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BAE SWAP2 SWAP1 PUSH2 0x2E18 JUMP JUMPDEST PUSH2 0x1BCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C48 SWAP2 SWAP1 PUSH2 0x2E35 JUMP JUMPDEST LT ISZERO PUSH2 0x1CBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768205553444320746F207061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7920666F7220746865204E6F64652052756E6E6572204E46542E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D40 SWAP2 SWAP1 PUSH2 0x2E35 JUMP JUMPDEST LT ISZERO PUSH2 0x1DDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176656E277420617070726F766564207468697320636F6E747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x637420746F207370656E6420656E6F756768206F6620796F7572205553444320 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x746F2070617920666F7220746865204E6F64652052756E6E6572204E46542E00 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DF5 JUMPI PUSH2 0x1DF5 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E1E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F82 JUMPI PUSH1 0xB SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EBA SWAP2 SWAP1 PUSH2 0x2E18 JUMP JUMPDEST POP PUSH2 0x1EC9 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED4 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE SWAP1 POP PUSH2 0x1EF2 CALLER DUP3 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x1F03 DUP2 PUSH1 0xF DUP1 SLOAD PUSH2 0xCC7 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST PUSH2 0x1F0D ADDRESS DUP3 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1F24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x146A JUMP JUMPDEST DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F37 JUMPI PUSH2 0x1F37 PUSH2 0x2EC1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0x86C96E58B5E24FD4DB3EA2D3803238D011FC9BABE088B2CB856F8A1A80A224A9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH2 0x1F7B PUSH1 0x1 DUP3 PUSH2 0x2E8E JUMP JUMPDEST SWAP1 POP PUSH2 0x1E24 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x1FDB DUP3 PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x201D DUP3 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0x2080 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0xAB5 SWAP3 DUP5 ADD SWAP1 PUSH2 0x288B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AA DUP3 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0x210B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2116 DUP4 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2151 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2146 DUP5 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x1880 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1880 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2198 DUP3 PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x21FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x225E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH2 0x2269 PUSH1 0x0 DUP3 PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2292 SWAP1 DUP5 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x22C0 SWAP1 DUP5 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2377 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x97F JUMP JUMPDEST PUSH2 0x2380 DUP2 PUSH2 0x1F89 JUMP JUMPDEST ISZERO PUSH2 0x23CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x23F6 SWAP1 DUP5 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2508 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2580 DUP5 DUP5 DUP5 PUSH2 0x2185 JUMP JUMPDEST PUSH2 0x258C DUP5 DUP5 DUP5 DUP5 PUSH2 0x2680 JUMP JUMPDEST PUSH2 0x170B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2F7A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x25B3 DUP3 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0x2617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262E PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x264E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2679 JUMP JUMPDEST DUP1 PUSH2 0x2658 DUP5 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2669 SWAP3 SWAP2 SWAP1 PUSH2 0x2F34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2782 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x26C4 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x270E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x270B SWAP2 DUP2 ADD SWAP1 PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2768 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x273C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2760 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2F7A JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x1880 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x27B1 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x27DB JUMPI DUP1 PUSH2 0x27C5 DUP2 PUSH2 0x2EA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x27D4 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2E7A JUMP JUMPDEST SWAP2 POP PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F6 JUMPI PUSH2 0x27F6 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2820 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1880 JUMPI PUSH2 0x2835 PUSH1 0x1 DUP4 PUSH2 0x2F63 JUMP JUMPDEST SWAP2 POP PUSH2 0x2842 PUSH1 0xA DUP7 PUSH2 0x3026 JUMP JUMPDEST PUSH2 0x284D SWAP1 PUSH1 0x30 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2862 JUMPI PUSH2 0x2862 PUSH2 0x2EC1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2884 PUSH1 0xA DUP7 PUSH2 0x2E7A JUMP JUMPDEST SWAP5 POP PUSH2 0x2824 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2897 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x28B9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x28FF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x28D2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x28FF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x28FF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x28FF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x28E4 JUMP JUMPDEST POP PUSH2 0x290B SWAP3 SWAP2 POP PUSH2 0x290F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x290B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xF5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x294C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2679 DUP2 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2972 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x295A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x170B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x299B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2679 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2983 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0E DUP4 PUSH2 0x29DB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2A4D JUMPI PUSH2 0x2A4D PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2A75 JUMPI PUSH2 0x2A75 PUSH2 0x2A1C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2A8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2679 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2A32 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2ADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B05 DUP6 DUP3 DUP7 ADD PUSH2 0x2AA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B2D DUP5 PUSH2 0x29DB JUMP JUMPDEST SWAP3 POP PUSH2 0x2B3B PUSH1 0x20 DUP6 ADD PUSH2 0x29DB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2679 DUP3 PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1880 DUP5 DUP3 DUP6 ADD PUSH2 0x2AA8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C12 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x2C00 DUP6 DUP4 MLOAD PUSH2 0x2983 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2BE4 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C49 DUP4 PUSH2 0x29DB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C59 DUP2 PUSH2 0x2C1F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C83 DUP6 PUSH2 0x29DB JUMP JUMPDEST SWAP4 POP PUSH2 0x2C91 PUSH1 0x20 DUP7 ADD PUSH2 0x29DB JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2CC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CD4 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2A32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CFC DUP4 PUSH2 0x29DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0A PUSH1 0x20 DUP5 ADD PUSH2 0x29DB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D4B JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2D2F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2D6B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2D8C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2679 DUP2 PUSH2 0x2C1F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2E89 JUMPI PUSH2 0x2E89 PUSH2 0x2E4E JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2EA1 JUMPI PUSH2 0x2EA1 PUSH2 0x2E64 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2EBA JUMPI PUSH2 0x2EBA PUSH2 0x2E64 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3A SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792043617264696E616C2043726577204D656D626572732063616E2070 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6172746963697061746520696E204E6F64652052756E6E65722E000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x2F46 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2957 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2F5A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2957 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2F75 JUMPI PUSH2 0x2F75 PUSH2 0x2E64 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2FFF SWAP1 DUP4 ADD DUP5 PUSH2 0x2983 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2679 DUP2 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3035 JUMPI PUSH2 0x3035 PUSH2 0x2E4E JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY 0x1E 0xD ORIGIN SWAP6 0xC7 POP 0xA6 0xC3 0xC5 0x4B LT PUSH10 0xA21DFBA9EFDB8617C57 JUMPI 0xEB 0xFB 0xC3 RETURNDATASIZE GASLIMIT 0xC6 0xB9 SAR PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "8": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "LT",
      "path": "19"
    },
    "9": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x267"
    },
    "12": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "16": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "SHR",
      "path": "19"
    },
    "19": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "20": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x849CA618"
    },
    "25": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "GT",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x144"
    },
    "29": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "30": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "31": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB88D4FDE"
    },
    "36": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "GT",
      "path": "19"
    },
    "37": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB6"
    },
    "40": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "41": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "42": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD283B986"
    },
    "47": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "GT",
      "path": "19"
    },
    "48": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "52": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "53": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD283B986"
    },
    "58": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "59": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x748"
    },
    "62": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "63": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "64": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDAA17F49"
    },
    "69": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "70": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x75D"
    },
    "73": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "74": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "75": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE4ACE31A"
    },
    "80": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "81": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x77D"
    },
    "84": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "85": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "86": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE985E9C5"
    },
    "91": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "92": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x79D"
    },
    "95": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "96": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "97": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF2FDE38B"
    },
    "102": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "103": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7E6"
    },
    "106": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "107": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "108": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF7634A17"
    },
    "113": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "114": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x806"
    },
    "117": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "118": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "121": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "REVERT",
      "path": "19"
    },
    "122": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "123": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "124": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB88D4FDE"
    },
    "129": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "130": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6A5"
    },
    "133": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "134": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "135": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC4A896C9"
    },
    "140": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "141": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6C5"
    },
    "144": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "145": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "146": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC5196931"
    },
    "151": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "152": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6F2"
    },
    "155": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "156": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "157": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC87B56DD"
    },
    "162": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "163": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x708"
    },
    "166": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "167": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "168": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC98F56E0"
    },
    "173": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "174": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x728"
    },
    "177": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "178": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "181": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "REVERT",
      "path": "19"
    },
    "182": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "183": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "184": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95D89B41"
    },
    "189": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "GT",
      "path": "19"
    },
    "190": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "194": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "195": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95D89B41"
    },
    "200": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "201": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5F7"
    },
    "204": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "205": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "206": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x983A7FA7"
    },
    "211": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "212": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x60C"
    },
    "215": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "216": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "217": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA22CB465"
    },
    "222": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "223": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x62C"
    },
    "226": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "227": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "228": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA58B603B"
    },
    "233": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "234": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x64C"
    },
    "237": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "238": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "239": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xAA46A400"
    },
    "244": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "245": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x661"
    },
    "248": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "249": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "250": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB063C954"
    },
    "255": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "256": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x678"
    },
    "259": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "260": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "263": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "REVERT",
      "path": "19"
    },
    "264": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "265": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "266": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x849CA618"
    },
    "271": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "272": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x564"
    },
    "275": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "276": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "277": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x88913CE2"
    },
    "282": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "283": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x584"
    },
    "286": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "287": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "288": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x89A30271"
    },
    "293": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "294": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x58C"
    },
    "297": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "298": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "299": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8DA5CB5B"
    },
    "304": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "305": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5AC"
    },
    "308": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "309": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "310": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8F01785D"
    },
    "315": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "316": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5CA"
    },
    "319": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "320": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "322": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "323": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "REVERT",
      "path": "19"
    },
    "324": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "325": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "326": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x45576F94"
    },
    "331": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "GT",
      "path": "19"
    },
    "332": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DD"
    },
    "335": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "336": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "337": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x64CA44A5"
    },
    "342": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "GT",
      "path": "19"
    },
    "343": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A1"
    },
    "346": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "347": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "348": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x64CA44A5"
    },
    "353": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "354": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4BA"
    },
    "357": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "358": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "359": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "364": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "365": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4CF"
    },
    "368": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "369": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "370": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x715018A6"
    },
    "375": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "376": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4EF"
    },
    "379": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "380": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "381": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7417353F"
    },
    "386": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "387": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x504"
    },
    "390": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "391": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "392": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7867CCD1"
    },
    "397": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "398": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x524"
    },
    "401": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "402": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "403": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7D81C4C1"
    },
    "408": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "409": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x544"
    },
    "412": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "413": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "415": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "416": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "REVERT",
      "path": "19"
    },
    "417": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "418": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "419": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x45576F94"
    },
    "424": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "425": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x401"
    },
    "428": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "429": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "430": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4E9E1EC6"
    },
    "435": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "436": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x421"
    },
    "439": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "440": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "441": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5506A120"
    },
    "446": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "447": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x437"
    },
    "450": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "451": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "452": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5C23A67A"
    },
    "457": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "458": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x464"
    },
    "461": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "462": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "463": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6352211E"
    },
    "468": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "469": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x49A"
    },
    "472": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "473": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "475": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "476": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "REVERT",
      "path": "19"
    },
    "477": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "478": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "479": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23002C71"
    },
    "484": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "GT",
      "path": "19"
    },
    "485": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22F"
    },
    "488": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "489": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "490": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23002C71"
    },
    "495": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "496": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33D"
    },
    "499": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "500": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "501": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23B872DD"
    },
    "506": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "507": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35D"
    },
    "510": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "511": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "512": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x28DA575B"
    },
    "517": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "518": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37D"
    },
    "521": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "522": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "523": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x28E6DE93"
    },
    "528": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "529": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x39D"
    },
    "532": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "533": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "534": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x3E22CEB0"
    },
    "539": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "540": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3BD"
    },
    "543": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "544": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "545": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x42842E0E"
    },
    "550": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "551": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3E1"
    },
    "554": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "555": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "557": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "558": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "REVERT",
      "path": "19"
    },
    "559": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "560": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "561": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1FFC9A7"
    },
    "566": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "567": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26C"
    },
    "570": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "571": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "572": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6FDDE03"
    },
    "577": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "578": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A1"
    },
    "581": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "582": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "583": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x81812FC"
    },
    "588": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "589": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C3"
    },
    "592": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "593": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "594": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95EA7B3"
    },
    "599": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "600": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FB"
    },
    "603": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "604": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "605": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x162094C4"
    },
    "610": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "EQ",
      "path": "19"
    },
    "611": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31D"
    },
    "614": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "615": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "616": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "618": {
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "619": {
      "first_revert": true,
      "fn": null,
      "offset": [
        493,
        10774
      ],
      "op": "REVERT",
      "path": "19"
    },
    "620": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "621": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "622": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "5"
    },
    "623": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "624": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x278"
    },
    "627": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "5"
    },
    "631": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "REVERT",
      "path": "5"
    },
    "632": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28C"
    },
    "637": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x287"
    },
    "640": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "641": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "643": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x293A"
    },
    "646": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "5"
    },
    "647": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "648": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x833"
    },
    "651": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "5"
    },
    "652": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "653": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "655": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "656": {
      "op": "SWAP1"
    },
    "657": {
      "op": "ISZERO"
    },
    "658": {
      "op": "ISZERO"
    },
    "659": {
      "op": "DUP2"
    },
    "660": {
      "op": "MSTORE"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "663": {
      "op": "ADD"
    },
    "664": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "665": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "667": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "668": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "5"
    },
    "669": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "670": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SUB",
      "path": "5"
    },
    "671": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "672": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "RETURN",
      "path": "5"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "DUP1",
      "path": "5"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AD"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "DUP1",
      "path": "5"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "REVERT",
      "path": "5"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "686": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "POP",
      "path": "5"
    },
    "687": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B6"
    },
    "690": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x885"
    },
    "693": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "5"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "697": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x298"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "702": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29AF"
    },
    "706": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "5"
    },
    "707": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "708": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "709": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "DUP1",
      "path": "5"
    },
    "710": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "711": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CF"
    },
    "714": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "715": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "717": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "DUP1",
      "path": "5"
    },
    "718": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "REVERT",
      "path": "5"
    },
    "719": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "720": {
      "op": "POP"
    },
    "721": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E3"
    },
    "724": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DE"
    },
    "727": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "728": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "730": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29C2"
    },
    "733": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "734": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "735": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x917"
    },
    "738": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "739": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "740": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "742": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "749": {
      "op": "SHL"
    },
    "750": {
      "op": "SUB"
    },
    "751": {
      "op": "SWAP1"
    },
    "752": {
      "op": "SWAP2"
    },
    "753": {
      "op": "AND"
    },
    "754": {
      "op": "DUP2"
    },
    "755": {
      "op": "MSTORE"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x298"
    },
    "762": {
      "op": "JUMP"
    },
    "763": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "764": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "765": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "DUP1",
      "path": "5"
    },
    "766": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "767": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x307"
    },
    "770": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "771": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "773": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "DUP1",
      "path": "5"
    },
    "774": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "REVERT",
      "path": "5"
    },
    "775": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "776": {
      "op": "POP"
    },
    "777": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31B"
    },
    "780": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x316"
    },
    "783": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "784": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "786": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29F2"
    },
    "789": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "790": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "791": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9A4"
    },
    "794": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "795": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "796": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "STOP",
      "path": "5"
    },
    "797": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "798": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "799": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "DUP1",
      "path": "19"
    },
    "800": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "801": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x329"
    },
    "804": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "805": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "807": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "DUP1",
      "path": "19"
    },
    "808": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "REVERT",
      "path": "19"
    },
    "809": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "810": {
      "op": "POP"
    },
    "811": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "814": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x338"
    },
    "817": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "818": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "820": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2AC8"
    },
    "823": {
      "fn": "NodeRunner.setTokenURI",
      "jump": "i",
      "offset": [
        6888,
        7075
      ],
      "op": "JUMP",
      "path": "19"
    },
    "824": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "825": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xABA"
    },
    "828": {
      "fn": "NodeRunner.setTokenURI",
      "jump": "i",
      "offset": [
        6888,
        7075
      ],
      "op": "JUMP",
      "path": "19"
    },
    "829": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "830": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "831": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "DUP1",
      "path": "19"
    },
    "832": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "833": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x349"
    },
    "836": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "837": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "839": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "DUP1",
      "path": "19"
    },
    "840": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "REVERT",
      "path": "19"
    },
    "841": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "842": {
      "op": "POP"
    },
    "843": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "846": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x358"
    },
    "849": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "850": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "852": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29C2"
    },
    "855": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "jump": "i",
      "offset": [
        10339,
        10466
      ],
      "op": "JUMP",
      "path": "19"
    },
    "856": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "857": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB2A"
    },
    "860": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "jump": "i",
      "offset": [
        10339,
        10466
      ],
      "op": "JUMP",
      "path": "19"
    },
    "861": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "862": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "863": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "DUP1",
      "path": "5"
    },
    "864": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "865": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x369"
    },
    "868": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "869": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "871": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "DUP1",
      "path": "5"
    },
    "872": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "REVERT",
      "path": "5"
    },
    "873": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "874": {
      "op": "POP"
    },
    "875": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31B"
    },
    "878": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x378"
    },
    "881": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "882": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "884": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B0F"
    },
    "887": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "5"
    },
    "888": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "889": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB59"
    },
    "892": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "5"
    },
    "893": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "894": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "895": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "DUP1",
      "path": "19"
    },
    "896": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "897": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x389"
    },
    "900": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "901": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "903": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "DUP1",
      "path": "19"
    },
    "904": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "REVERT",
      "path": "19"
    },
    "905": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "906": {
      "op": "POP"
    },
    "907": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x28C"
    },
    "910": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x398"
    },
    "913": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "914": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "916": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B4B"
    },
    "919": {
      "fn": "NodeRunner.addressIsMember",
      "jump": "i",
      "offset": [
        10652,
        10772
      ],
      "op": "JUMP",
      "path": "19"
    },
    "920": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "921": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB8A"
    },
    "924": {
      "fn": "NodeRunner.addressIsMember",
      "jump": "i",
      "offset": [
        10652,
        10772
      ],
      "op": "JUMP",
      "path": "19"
    },
    "925": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "926": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "927": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "DUP1",
      "path": "19"
    },
    "928": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "929": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A9"
    },
    "932": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "933": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "935": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "DUP1",
      "path": "19"
    },
    "936": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "REVERT",
      "path": "19"
    },
    "937": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "942": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3B8"
    },
    "945": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "946": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "948": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29C2"
    },
    "951": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "jump": "i",
      "offset": [
        9759,
        9898
      ],
      "op": "JUMP",
      "path": "19"
    },
    "952": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "953": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC08"
    },
    "956": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "jump": "i",
      "offset": [
        9759,
        9898
      ],
      "op": "JUMP",
      "path": "19"
    },
    "957": {
      "offset": [
        961,
        993
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "958": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "959": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "DUP1",
      "path": "19"
    },
    "960": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "961": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C9"
    },
    "964": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "965": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "967": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "DUP1",
      "path": "19"
    },
    "968": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "REVERT",
      "path": "19"
    },
    "969": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "970": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "POP",
      "path": "19"
    },
    "971": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D3"
    },
    "974": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "976": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "977": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "DUP2",
      "path": "19"
    },
    "978": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "JUMP",
      "path": "19"
    },
    "979": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "980": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "982": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        961,
        993
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "983": {
      "op": "SWAP1"
    },
    "984": {
      "op": "DUP2"
    },
    "985": {
      "op": "MSTORE"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "offset": [
        961,
        993
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x298"
    },
    "992": {
      "op": "JUMP"
    },
    "993": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "994": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "995": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "DUP1",
      "path": "5"
    },
    "996": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "997": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3ED"
    },
    "1000": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1001": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1003": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1004": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1005": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31B"
    },
    "1010": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FC"
    },
    "1013": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1014": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1016": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B0F"
    },
    "1019": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1020": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1021": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC37"
    },
    "1024": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1025": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1026": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1027": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1028": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1029": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x40D"
    },
    "1032": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1033": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1035": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1036": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1037": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1038": {
      "op": "POP"
    },
    "1039": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D3"
    },
    "1042": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x41C"
    },
    "1045": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1046": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1048": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B66"
    },
    "1051": {
      "fn": "NodeRunner.createToken",
      "jump": "i",
      "offset": [
        4433,
        4935
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1052": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1053": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC52"
    },
    "1056": {
      "fn": "NodeRunner.createToken",
      "jump": "i",
      "offset": [
        4433,
        4935
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1057": {
      "offset": [
        1056,
        1078
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1058": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1059": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1060": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1061": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42D"
    },
    "1064": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1065": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1067": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1068": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1069": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1070": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "POP",
      "path": "19"
    },
    "1071": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D3"
    },
    "1074": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "1076": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1077": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1078": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1056,
        1078
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1079": {
      "offset": [
        1608,
        1665
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1080": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1081": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1082": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1083": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x443"
    },
    "1086": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1087": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1089": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1090": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1091": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1092": {
      "op": "POP"
    },
    "1093": {
      "offset": [
        1608,
        1665
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D3"
    },
    "1096": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "1099": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1100": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1102": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B4B"
    },
    "1105": {
      "fn": "NodeRunner.createToken",
      "jump": "i",
      "offset": [
        1608,
        1665
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1106": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1107": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "1109": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1111": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1112": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1114": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1115": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1116": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1117": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1119": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1120": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1121": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1122": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1123": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1608,
        1665
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1124": {
      "offset": [
        1453,
        1513
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1125": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1126": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1127": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1128": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x470"
    },
    "1131": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1132": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1134": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1135": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1136": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1137": {
      "op": "POP"
    },
    "1138": {
      "offset": [
        1453,
        1513
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E3"
    },
    "1141": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x47F"
    },
    "1144": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1145": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1147": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29C2"
    },
    "1150": {
      "fn": "NodeRunner.createToken",
      "jump": "i",
      "offset": [
        1453,
        1513
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1151": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1152": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "1154": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1156": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1157": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1159": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1160": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1161": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1162": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1164": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1165": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1166": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1173": {
      "op": "SHL"
    },
    "1174": {
      "op": "SUB"
    },
    "1175": {
      "offset": [
        1453,
        1513
      ],
      "op": "AND",
      "path": "19"
    },
    "1176": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1177": {
      "fn": "NodeRunner.createToken",
      "offset": [
        1453,
        1513
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1178": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1179": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1180": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1181": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1182": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4A6"
    },
    "1185": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1186": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1188": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1189": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1190": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1191": {
      "op": "POP"
    },
    "1192": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E3"
    },
    "1195": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B5"
    },
    "1198": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1199": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1201": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29C2"
    },
    "1204": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1205": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1206": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDA0"
    },
    "1209": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1210": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1211": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1212": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1213": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1214": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4C6"
    },
    "1217": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1218": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1220": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1221": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1222": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1223": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "POP",
      "path": "19"
    },
    "1224": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "1227": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE17"
    },
    "1230": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "jump": "i",
      "offset": [
        6564,
        6682
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1231": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1232": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1233": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1234": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1235": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4DB"
    },
    "1238": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1239": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1241": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1242": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1243": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1244": {
      "op": "POP"
    },
    "1245": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D3"
    },
    "1248": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4EA"
    },
    "1251": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1252": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1254": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B4B"
    },
    "1257": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1258": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1259": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF60"
    },
    "1262": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1263": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1264": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1265": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1266": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1267": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FB"
    },
    "1270": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1271": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1273": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1274": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1275": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1276": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1277": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31B"
    },
    "1280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE7"
    },
    "1283": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1284": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1285": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1286": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1287": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1288": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x510"
    },
    "1291": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1292": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1294": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1295": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1296": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1297": {
      "op": "POP"
    },
    "1298": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "1301": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x51F"
    },
    "1304": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1305": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1307": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29F2"
    },
    "1310": {
      "fn": "NodeRunner.addWhiteListToToken",
      "jump": "i",
      "offset": [
        8612,
        8773
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1311": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1312": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x101D"
    },
    "1315": {
      "fn": "NodeRunner.addWhiteListToToken",
      "jump": "i",
      "offset": [
        8612,
        8773
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1316": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1317": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1318": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1319": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1320": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x530"
    },
    "1323": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1324": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1326": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1327": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1328": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "1333": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x53F"
    },
    "1336": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1337": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1339": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B9B"
    },
    "1342": {
      "fn": "NodeRunner.updateTokenListingFee",
      "jump": "i",
      "offset": [
        8970,
        9121
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1343": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1344": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1075"
    },
    "1347": {
      "fn": "NodeRunner.updateTokenListingFee",
      "jump": "i",
      "offset": [
        8970,
        9121
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1348": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1349": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1350": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1351": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1352": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x550"
    },
    "1355": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1356": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1358": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1359": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1360": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "1365": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x55F"
    },
    "1368": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1369": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1371": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B4B"
    },
    "1374": {
      "fn": "NodeRunner.updateUSDCAddress",
      "jump": "i",
      "offset": [
        9502,
        9618
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1375": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1376": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10B1"
    },
    "1379": {
      "fn": "NodeRunner.updateUSDCAddress",
      "jump": "i",
      "offset": [
        9502,
        9618
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1380": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1381": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1382": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1383": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1384": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x570"
    },
    "1387": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1388": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1390": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1391": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1392": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1393": {
      "op": "POP"
    },
    "1394": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "1397": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x57F"
    },
    "1400": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1401": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1403": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B66"
    },
    "1406": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "jump": "i",
      "offset": [
        8181,
        8330
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1407": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1408": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10FD"
    },
    "1411": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "jump": "i",
      "offset": [
        8181,
        8330
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1412": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5062,
        5613
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1413": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5062,
        5613
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "1416": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5062,
        5613
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x113E"
    },
    "1419": {
      "fn": "NodeRunner.depositNodeRewards",
      "jump": "i",
      "offset": [
        5062,
        5613
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1420": {
      "offset": [
        900,
        918
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1421": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1422": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1423": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1424": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x598"
    },
    "1427": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1428": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1430": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1431": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1432": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1433": {
      "op": "POP"
    },
    "1434": {
      "offset": [
        900,
        918
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "1436": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1437": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E3"
    },
    "1440": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1447": {
      "op": "SHL"
    },
    "1448": {
      "op": "SUB"
    },
    "1449": {
      "offset": [
        900,
        918
      ],
      "op": "AND",
      "path": "19"
    },
    "1450": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1451": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        900,
        918
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1452": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1453": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1454": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1455": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1456": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B8"
    },
    "1459": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1460": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1462": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1463": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1464": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1465": {
      "op": "POP"
    },
    "1466": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x7"
    },
    "1468": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1478": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "1481": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1482": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1483": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1484": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1485": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1486": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5D6"
    },
    "1489": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1490": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1492": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1493": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1494": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5EA"
    },
    "1499": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5E5"
    },
    "1502": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1503": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1505": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B4B"
    },
    "1508": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7290,
        8035
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1509": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1510": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12FA"
    },
    "1513": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7290,
        8035
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1514": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1515": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1517": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1518": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x298"
    },
    "1521": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1522": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1523": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BBD"
    },
    "1526": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7290,
        8035
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1527": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1528": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1529": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1530": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1531": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x603"
    },
    "1534": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1535": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1537": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1538": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1539": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1540": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "POP",
      "path": "5"
    },
    "1541": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B6"
    },
    "1544": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x142C"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1548": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1549": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1550": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1551": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1552": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x618"
    },
    "1555": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1556": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1558": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1559": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1560": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "1565": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x627"
    },
    "1568": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1569": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1571": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29C2"
    },
    "1574": {
      "fn": "NodeRunner.updateMaxNFTs",
      "jump": "i",
      "offset": [
        10115,
        10214
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1575": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1576": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x143B"
    },
    "1579": {
      "fn": "NodeRunner.updateMaxNFTs",
      "jump": "i",
      "offset": [
        10115,
        10214
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1580": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1581": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1582": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1583": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1584": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x638"
    },
    "1587": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1588": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1590": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1591": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1592": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31B"
    },
    "1597": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x647"
    },
    "1600": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1601": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1603": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C2D"
    },
    "1606": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1607": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1608": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x146A"
    },
    "1611": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1612": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1613": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1614": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1615": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1616": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x658"
    },
    "1619": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1620": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1622": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1623": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1624": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1625": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "POP",
      "path": "19"
    },
    "1626": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "1629": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1475"
    },
    "1632": {
      "fn": "NodeRunner.claimNodeRewards",
      "jump": "i",
      "offset": [
        5697,
        6434
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1633": {
      "offset": [
        635,
        668
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1634": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1635": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1636": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1637": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x66D"
    },
    "1640": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1641": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1643": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1644": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1645": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1646": {
      "op": "POP"
    },
    "1647": {
      "offset": [
        635,
        668
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "1649": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1650": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D3"
    },
    "1653": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1654": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1655": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        635,
        668
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1656": {
      "offset": [
        1329,
        1383
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1657": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1658": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1659": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1660": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x684"
    },
    "1663": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1664": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1666": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1667": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1668": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "offset": [
        1329,
        1383
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D3"
    },
    "1673": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x693"
    },
    "1676": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1677": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1679": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29C2"
    },
    "1682": {
      "fn": "NodeRunner.claimNodeRewards",
      "jump": "i",
      "offset": [
        1329,
        1383
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1683": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1684": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "1686": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1688": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1689": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1691": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1692": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1693": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1694": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1696": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1697": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1698": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1699": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1700": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        1329,
        1383
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1702": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1703": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1705": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6B1"
    },
    "1708": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1709": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1711": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1712": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1713": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1714": {
      "op": "POP"
    },
    "1715": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31B"
    },
    "1718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6C0"
    },
    "1721": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1722": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1724": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C64"
    },
    "1727": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1728": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1729": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16D9"
    },
    "1732": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1733": {
      "offset": [
        1741,
        1797
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1734": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1735": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1736": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1737": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6D1"
    },
    "1740": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1741": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1743": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1744": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1745": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1746": {
      "op": "POP"
    },
    "1747": {
      "offset": [
        1741,
        1797
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D3"
    },
    "1750": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6E0"
    },
    "1753": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1754": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1756": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B4B"
    },
    "1759": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        1741,
        1797
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1760": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1761": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "1763": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1765": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1766": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1768": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1769": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1770": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1771": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1773": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1774": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1775": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1776": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1777": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1741,
        1797
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1778": {
      "offset": [
        1110,
        1139
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1779": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1780": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1781": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1782": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6FE"
    },
    "1785": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1786": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1788": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1789": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1790": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1791": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "POP",
      "path": "19"
    },
    "1792": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D3"
    },
    "1795": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "1797": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1798": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1799": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1110,
        1139
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1800": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1801": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1802": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1803": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1804": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x714"
    },
    "1807": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1808": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1810": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1811": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1812": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B6"
    },
    "1817": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x723"
    },
    "1820": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1821": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1823": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x29C2"
    },
    "1826": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1827": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1828": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1711"
    },
    "1831": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1832": {
      "offset": [
        819,
        849
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1833": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1834": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1835": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1836": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x734"
    },
    "1839": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1840": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1842": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1843": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1844": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1845": {
      "op": "POP"
    },
    "1846": {
      "offset": [
        819,
        849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "1848": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1849": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E3"
    },
    "1852": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1859": {
      "op": "SHL"
    },
    "1860": {
      "op": "SUB"
    },
    "1861": {
      "offset": [
        819,
        849
      ],
      "op": "AND",
      "path": "19"
    },
    "1862": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1863": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        849
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1864": {
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1865": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1866": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1867": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1868": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x754"
    },
    "1871": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1872": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1874": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1875": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1876": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1877": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "POP",
      "path": "19"
    },
    "1878": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B6"
    },
    "1881": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1888"
    },
    "1884": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1885": {
      "offset": [
        725,
        758
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1886": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1887": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1888": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1889": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x769"
    },
    "1892": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1893": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1895": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1896": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1897": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1898": {
      "op": "POP"
    },
    "1899": {
      "offset": [
        725,
        758
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "1901": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1902": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E3"
    },
    "1905": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1912": {
      "op": "SHL"
    },
    "1913": {
      "op": "SUB"
    },
    "1914": {
      "offset": [
        725,
        758
      ],
      "op": "AND",
      "path": "19"
    },
    "1915": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1916": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        725,
        758
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1917": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1918": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1919": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1920": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1921": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x789"
    },
    "1924": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1925": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1927": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1928": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1929": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1930": {
      "op": "POP"
    },
    "1931": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31B"
    },
    "1934": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x798"
    },
    "1937": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1938": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1940": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B4B"
    },
    "1943": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "jump": "i",
      "offset": [
        9250,
        9393
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1944": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1945": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1916"
    },
    "1948": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "jump": "i",
      "offset": [
        9250,
        9393
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1949": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1950": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1951": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1952": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1953": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7A9"
    },
    "1956": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1957": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1959": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1960": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1961": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1962": {
      "op": "POP"
    },
    "1963": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28C"
    },
    "1966": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7B8"
    },
    "1969": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1970": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1972": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CE0"
    },
    "1975": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1976": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1983": {
      "op": "SHL"
    },
    "1984": {
      "op": "SUB"
    },
    "1985": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 1
    },
    "1986": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1987": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "5"
    },
    "1988": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1990": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1991": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1992": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1993": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1995": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1997": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1998": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1999": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2000": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2002": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2003": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2004": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2005": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2006": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2007": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2008": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "2009": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2010": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2011": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2012": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2013": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2014": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2015": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2016": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2017": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2019": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "2020": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2021": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2023": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2024": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2025": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2026": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F2"
    },
    "2029": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2034": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31B"
    },
    "2039": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x801"
    },
    "2042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2043": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4B"
    },
    "2048": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2049": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1962"
    },
    "2053": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2054": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2055": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2056": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2057": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2058": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x812"
    },
    "2061": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2062": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2064": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2065": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2066": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2067": {
      "op": "POP"
    },
    "2068": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x826"
    },
    "2071": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x821"
    },
    "2074": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2075": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2077": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29C2"
    },
    "2080": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        2744,
        4238
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2081": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2082": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19FA"
    },
    "2085": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        2744,
        4238
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2086": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2087": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2089": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2090": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x298"
    },
    "2093": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2094": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2095": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D13"
    },
    "2098": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        2744,
        4238
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2099": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2100": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2108": {
      "op": "SHL"
    },
    "2109": {
      "op": "SUB"
    },
    "2110": {
      "op": "NOT"
    },
    "2111": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 2
    },
    "2112": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "5"
    },
    "2113": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2120": {
      "op": "SHL"
    },
    "2121": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "5"
    },
    "2122": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2123": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x864"
    },
    "2126": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2127": {
      "op": "POP"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2134": {
      "op": "SHL"
    },
    "2135": {
      "op": "SUB"
    },
    "2136": {
      "op": "NOT"
    },
    "2137": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2138": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "5"
    },
    "2139": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2146": {
      "op": "SHL"
    },
    "2147": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "5"
    },
    "2148": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2149": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2150": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x87F"
    },
    "2153": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2154": {
      "op": "POP"
    },
    "2155": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2162": {
      "op": "SHL"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "op": "SUB"
    },
    "2171": {
      "op": "NOT"
    },
    "2172": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 3
    },
    "2173": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "14"
    },
    "2174": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "14"
    },
    "2175": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2176": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1688,
        1863
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2177": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2178": {
      "op": "POP"
    },
    "2179": {
      "op": "POP"
    },
    "2180": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2181": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2182": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2184": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x0"
    },
    "2186": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2187": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2188": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x894"
    },
    "2191": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2192": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D57"
    },
    "2195": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2196": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2197": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2198": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2200": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2201": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2203": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2204": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2205": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "5"
    },
    "2206": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "5"
    },
    "2207": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2209": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2210": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2212": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2213": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2214": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2215": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2216": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2218": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2219": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2220": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2221": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2222": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2223": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2224": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2225": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2226": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2228": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2229": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2230": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2231": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2232": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8C0"
    },
    "2235": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2236": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D57"
    },
    "2239": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2240": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2241": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2242": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2243": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x90D"
    },
    "2246": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2247": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2248": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2250": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "5"
    },
    "2251": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E2"
    },
    "2254": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2255": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2258": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2259": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2260": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2261": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "5"
    },
    "2262": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "5"
    },
    "2263": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2264": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2265": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2266": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2268": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2269": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2270": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x90D"
    },
    "2273": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2274": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2275": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2276": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2277": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2278": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2279": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2281": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2282": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2284": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2286": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2287": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2288": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2289": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2290": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2291": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2292": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2293": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2294": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2296": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2297": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2298": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2300": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2301": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2302": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2303": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "5"
    },
    "2304": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F0"
    },
    "2307": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2308": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2309": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2310": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "5"
    },
    "2311": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2313": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "5"
    },
    "2314": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2315": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "5"
    },
    "2316": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2317": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2318": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2319": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2320": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2321": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2322": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2323": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2324": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "5"
    },
    "2325": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2326": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2327": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2328": {
      "fn": "ERC721.getApproved",
      "offset": [
        4075,
        4082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2330": {
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4118
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 5,
      "value": "0x922"
    },
    "2333": {
      "fn": "ERC721.getApproved",
      "offset": [
        4110,
        4117
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2334": {
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F89"
    },
    "2337": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4102,
        4118
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2338": {
      "branch": 133,
      "fn": "ERC721.getApproved",
      "offset": [
        4102,
        4118
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2339": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x988"
    },
    "2342": {
      "branch": 133,
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2343": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2345": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2346": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2352": {
      "op": "SHL"
    },
    "2353": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2354": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2357": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2359": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2360": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "ADD",
      "path": "5"
    },
    "2361": {
      "op": "MSTORE"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2366": {
      "op": "DUP3"
    },
    "2367": {
      "op": "ADD"
    },
    "2368": {
      "op": "MSTORE"
    },
    "2369": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2404": {
      "op": "DUP3"
    },
    "2405": {
      "op": "ADD"
    },
    "2406": {
      "op": "MSTORE"
    },
    "2407": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2422": {
      "op": "SHL"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2425": {
      "op": "DUP3"
    },
    "2426": {
      "op": "ADD"
    },
    "2427": {
      "op": "MSTORE"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2430": {
      "op": "ADD"
    },
    "2431": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2432": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2434": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2435": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2436": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2437": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SUB",
      "path": "5"
    },
    "2438": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2439": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "2440": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2441": {
      "op": "POP"
    },
    "2442": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x0"
    },
    "2444": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2445": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2446": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2447": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2449": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2451": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2452": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2454": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2455": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2456": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2463": {
      "op": "SHL"
    },
    "2464": {
      "op": "SUB"
    },
    "2465": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "AND",
      "path": "5"
    },
    "2466": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2467": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2468": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2469": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3630
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2471": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AF"
    },
    "2474": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3655
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2475": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDA0"
    },
    "2478": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2479": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2480": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2481": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "POP",
      "path": "5"
    },
    "2482": {
      "fn": "ERC721.approve",
      "offset": [
        3680,
        3685
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 7
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2489": {
      "op": "SHL"
    },
    "2490": {
      "op": "SUB"
    },
    "2491": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "5"
    },
    "2492": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3676
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2499": {
      "op": "SHL"
    },
    "2500": {
      "op": "SUB"
    },
    "2501": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "5"
    },
    "2502": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "EQ",
      "path": "5"
    },
    "2503": {
      "branch": 134,
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2504": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA1D"
    },
    "2507": {
      "branch": 134,
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2508": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2510": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2511": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2517": {
      "op": "SHL"
    },
    "2518": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2519": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2522": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2524": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2525": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "2526": {
      "op": "MSTORE"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2531": {
      "op": "DUP3"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2569": {
      "op": "DUP3"
    },
    "2570": {
      "op": "ADD"
    },
    "2571": {
      "op": "MSTORE"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2576": {
      "op": "SHL"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2579": {
      "op": "DUP3"
    },
    "2580": {
      "op": "ADD"
    },
    "2581": {
      "op": "MSTORE"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2584": {
      "op": "ADD"
    },
    "2585": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "2588": {
      "op": "JUMP"
    },
    "2589": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2590": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 8
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2597": {
      "op": "SHL"
    },
    "2598": {
      "op": "SUB"
    },
    "2599": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 9
    },
    "2600": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "AND",
      "path": "5"
    },
    "2601": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "EQ",
      "path": "5"
    },
    "2602": {
      "branch": 135,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2603": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA39"
    },
    "2606": {
      "branch": 135,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA39"
    },
    "2611": {
      "fn": "ERC721.approve",
      "offset": [
        3797,
        3802
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2612": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2613": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7B8"
    },
    "2616": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2617": {
      "branch": 136,
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2618": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAAB"
    },
    "2621": {
      "branch": 136,
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2622": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2624": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2625": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2631": {
      "op": "SHL"
    },
    "2632": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2633": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2636": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2638": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2639": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "ADD",
      "path": "5"
    },
    "2640": {
      "op": "MSTORE"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2645": {
      "op": "DUP3"
    },
    "2646": {
      "op": "ADD"
    },
    "2647": {
      "op": "MSTORE"
    },
    "2648": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2683": {
      "op": "DUP3"
    },
    "2684": {
      "op": "ADD"
    },
    "2685": {
      "op": "MSTORE"
    },
    "2686": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2721": {
      "op": "DUP3"
    },
    "2722": {
      "op": "ADD"
    },
    "2723": {
      "op": "MSTORE"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2726": {
      "op": "ADD"
    },
    "2727": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "2730": {
      "op": "JUMP"
    },
    "2731": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2732": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 10,
      "value": "0xAB5"
    },
    "2735": {
      "fn": "ERC721.approve",
      "offset": [
        3919,
        3921
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2736": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3930
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2737": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FA6"
    },
    "2740": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2741": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2742": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "2743": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "2744": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "2745": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2746": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2747": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2749": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2756": {
      "op": "SHL"
    },
    "2757": {
      "op": "SUB"
    },
    "2758": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2759": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2760": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2761": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE4"
    },
    "2764": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2765": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2767": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2768": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2774": {
      "op": "SHL"
    },
    "2775": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2776": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2777": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2779": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2780": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "2783": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2784": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "2787": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2788": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2789": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6982,
        7016
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 11,
      "value": "0xAEE"
    },
    "2792": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6995,
        7002
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2793": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7004,
        7015
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2794": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6982,
        6994
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2014"
    },
    "2797": {
      "fn": "NodeRunner.setTokenURI",
      "jump": "i",
      "offset": [
        6982,
        7016
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2798": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6982,
        7016
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2799": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7047,
        7054
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 12
    },
    "2800": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xC794E2271B51F209D8A645EEC85692351AD1ADC857AB2E06F9C5AF7961CF07D5"
    },
    "2833": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7056,
        7067
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2834": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2836": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2837": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB1E"
    },
    "2840": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2841": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2842": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29AF"
    },
    "2845": {
      "fn": "NodeRunner.setTokenURI",
      "jump": "i",
      "offset": [
        7031,
        7068
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2846": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2847": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2849": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2850": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2851": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2852": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "SUB",
      "path": "19"
    },
    "2853": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2854": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        7031,
        7068
      ],
      "op": "LOG2",
      "path": "19"
    },
    "2855": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "POP",
      "path": "19"
    },
    "2856": {
      "fn": "NodeRunner.setTokenURI",
      "offset": [
        6888,
        7075
      ],
      "op": "POP",
      "path": "19"
    },
    "2857": {
      "fn": "NodeRunner.setTokenURI",
      "jump": "o",
      "offset": [
        6888,
        7075
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2858": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10339,
        10466
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2859": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2861": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2868": {
      "op": "SHL"
    },
    "2869": {
      "op": "SUB"
    },
    "2870": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2871": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2872": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2873": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB54"
    },
    "2876": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2877": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2879": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2880": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2886": {
      "op": "SHL"
    },
    "2887": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2888": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2891": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2892": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "2895": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2896": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "2899": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2900": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2901": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10425,
        10439
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 13,
      "value": "0xE"
    },
    "2903": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "offset": [
        10425,
        10459
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "2904": {
      "fn": "NodeRunner.updateNFTPriceInUSDC",
      "jump": "o",
      "offset": [
        10339,
        10466
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2905": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2906": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 14,
      "value": "0xB63"
    },
    "2909": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2910": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4948,
        4955
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2911": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4933
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x209F"
    },
    "2914": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2915": {
      "branch": 137,
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2916": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB7F"
    },
    "2919": {
      "branch": 137,
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2920": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2922": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2923": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2929": {
      "op": "SHL"
    },
    "2930": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2931": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2932": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2934": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "ADD",
      "path": "5"
    },
    "2935": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "2938": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2939": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DC7"
    },
    "2942": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2943": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2944": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5049
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 15,
      "value": "0xAB5"
    },
    "2947": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5031,
        5035
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2948": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5037,
        5039
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2949": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5041,
        5048
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2950": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5030
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2185"
    },
    "2953": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5021,
        5049
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2954": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10652,
        10772
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2955": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10743
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 16,
      "value": "0xA"
    },
    "2957": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10743
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2958": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2960": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2961": {
      "op": "PUSH4",
      "value": "0x28DA575B"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2968": {
      "op": "SHL"
    },
    "2969": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2970": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2977": {
      "op": "SHL"
    },
    "2978": {
      "op": "SUB"
    },
    "2979": {
      "op": "DUP4"
    },
    "2980": {
      "op": "DUP2"
    },
    "2981": {
      "op": "AND"
    },
    "2982": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2984": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2985": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "ADD",
      "path": "19"
    },
    "2986": {
      "op": "MSTORE"
    },
    "2987": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10709,
        10713
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2989": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10709,
        10713
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2990": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10743
      ],
      "op": "AND",
      "path": "19"
    },
    "2991": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10743
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2992": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10759
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x28DA575B"
    },
    "2997": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10759
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3000": {
      "op": "ADD"
    },
    "3001": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3003": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3005": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3006": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3007": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3008": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "SUB",
      "path": "19"
    },
    "3009": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3010": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3011": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3012": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3013": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3014": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3015": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3016": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBD0"
    },
    "3019": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3020": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3022": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3023": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3024": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3025": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "POP",
      "path": "19"
    },
    "3026": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "GAS",
      "path": "19"
    },
    "3027": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "3028": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3029": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3030": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3031": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBE4"
    },
    "3034": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3035": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3036": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3038": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3039": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3040": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3041": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3043": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3044": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3045": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "POP",
      "path": "19"
    },
    "3046": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "POP",
      "path": "19"
    },
    "3047": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "POP",
      "path": "19"
    },
    "3048": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "POP",
      "path": "19"
    },
    "3049": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3051": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3052": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3053": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3055": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "NOT",
      "path": "19"
    },
    "3056": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3058": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3059": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "ADD",
      "path": "19"
    },
    "3060": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "AND",
      "path": "19"
    },
    "3061": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3062": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "ADD",
      "path": "19"
    },
    "3063": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3064": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3066": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3067": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "POP",
      "path": "19"
    },
    "3068": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3069": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "ADD",
      "path": "19"
    },
    "3070": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3071": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x87F"
    },
    "3074": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3075": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3076": {
      "fn": "NodeRunner.addressIsMember",
      "offset": [
        10732,
        10765
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E18"
    },
    "3079": {
      "fn": "NodeRunner.addressIsMember",
      "jump": "i",
      "offset": [
        10732,
        10765
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3080": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9759,
        9898
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3081": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3083": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3090": {
      "op": "SHL"
    },
    "3091": {
      "op": "SUB"
    },
    "3092": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3093": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3094": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3095": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC32"
    },
    "3098": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3099": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3101": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3102": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3108": {
      "op": "SHL"
    },
    "3109": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3110": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3111": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3113": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3114": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "3117": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3118": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "3121": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3122": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3123": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9851,
        9868
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 17,
      "value": "0xC"
    },
    "3125": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "offset": [
        9851,
        9891
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3126": {
      "fn": "NodeRunner.updateDefaultListingFee",
      "jump": "o",
      "offset": [
        9759,
        9898
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3127": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3128": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 18,
      "value": "0xAB5"
    },
    "3131": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5272,
        5276
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3132": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5278,
        5280
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3133": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5282,
        5289
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3134": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3136": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3137": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3138": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3140": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "ADD",
      "path": "5"
    },
    "3141": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3143": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3144": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3145": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3147": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3148": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3149": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "POP",
      "path": "5"
    },
    "3150": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5271
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16D9"
    },
    "3153": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5255,
        5294
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3154": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3155": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3157": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3158": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4509,
        4513
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3160": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4509,
        4513
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3167": {
      "op": "SHL"
    },
    "3168": {
      "op": "SUB"
    },
    "3169": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3170": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3171": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3172": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7F"
    },
    "3175": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3176": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3178": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3185": {
      "op": "SHL"
    },
    "3186": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3187": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3188": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3190": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3191": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "3194": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3195": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "3198": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3199": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3200": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4525,
        4546
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 19,
      "value": "0xC8D"
    },
    "3203": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4525,
        4534
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "3205": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 20
    },
    "3206": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3207": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3209": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "12"
    },
    "3210": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3211": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3212": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3213": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4525,
        4546
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3214": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4556,
        4573
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3216": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4576,
        4595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC98"
    },
    "3219": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4576,
        4585
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "3221": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12",
      "statement": 21
    },
    "3222": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3223": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3224": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4576,
        4595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3225": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4639,
        4656
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 22,
      "value": "0xC"
    },
    "3227": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4639,
        4656
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3228": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4606,
        4636
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3230": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4606,
        4636
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3231": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4606,
        4636
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3232": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4606,
        4636
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3233": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4606,
        4625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "3235": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4606,
        4636
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3237": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4606,
        4636
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3238": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4606,
        4636
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3240": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4606,
        4636
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3241": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4606,
        4636
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3242": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4606,
        4656
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3243": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4556,
        4595
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3244": {
      "op": "POP"
    },
    "3245": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4666,
        4694
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 23,
      "value": "0xCB6"
    },
    "3248": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4672,
        4682
      ],
      "op": "CALLER",
      "path": "19"
    },
    "3249": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4556,
        4595
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3250": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4666,
        4671
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2321"
    },
    "3253": {
      "fn": "NodeRunner.createToken",
      "jump": "i",
      "offset": [
        4666,
        4694
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3254": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4666,
        4694
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3255": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 24,
      "value": "0xD4A"
    },
    "3258": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4717,
        4726
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3259": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4728,
        4746
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "3261": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3262": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3263": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCC7"
    },
    "3266": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3267": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D57"
    },
    "3270": {
      "fn": "NodeRunner.createToken",
      "jump": "i",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3271": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3272": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3273": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3275": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "ADD",
      "path": "19"
    },
    "3276": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3278": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3279": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3280": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DIV",
      "path": "19"
    },
    "3281": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "MUL",
      "path": "19"
    },
    "3282": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3284": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "ADD",
      "path": "19"
    },
    "3285": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3287": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3288": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3289": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3290": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "ADD",
      "path": "19"
    },
    "3291": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3293": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3294": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3295": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3296": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3297": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3298": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3299": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3300": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3301": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3303": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "ADD",
      "path": "19"
    },
    "3304": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3305": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3306": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3307": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCF3"
    },
    "3310": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3311": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D57"
    },
    "3314": {
      "fn": "NodeRunner.createToken",
      "jump": "i",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3315": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3316": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3317": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3318": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD40"
    },
    "3321": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3322": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3323": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3325": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "LT",
      "path": "19"
    },
    "3326": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD15"
    },
    "3329": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3330": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "3333": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3334": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3335": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3336": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DIV",
      "path": "19"
    },
    "3337": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "MUL",
      "path": "19"
    },
    "3338": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3339": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3340": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3341": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3343": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "ADD",
      "path": "19"
    },
    "3344": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3345": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD40"
    },
    "3348": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3349": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3350": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3351": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "ADD",
      "path": "19"
    },
    "3352": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3353": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3354": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3356": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3357": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3359": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3361": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3362": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3363": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3364": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3365": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3366": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3367": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3368": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3369": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3371": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "ADD",
      "path": "19"
    },
    "3372": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3373": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3375": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "ADD",
      "path": "19"
    },
    "3376": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3377": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3378": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "GT",
      "path": "19"
    },
    "3379": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD23"
    },
    "3382": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3383": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3384": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3385": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SUB",
      "path": "19"
    },
    "3386": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3388": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "AND",
      "path": "19"
    },
    "3389": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3390": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "ADD",
      "path": "19"
    },
    "3391": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3392": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3393": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "POP",
      "path": "19"
    },
    "3394": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "POP",
      "path": "19"
    },
    "3395": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "POP",
      "path": "19"
    },
    "3396": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "POP",
      "path": "19"
    },
    "3397": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "POP",
      "path": "19"
    },
    "3398": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4716
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2014"
    },
    "3401": {
      "fn": "NodeRunner.createToken",
      "jump": "i",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3402": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4704,
        4747
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3403": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4757,
        4790
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 25,
      "value": "0xD54"
    },
    "3406": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4773,
        4777
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "3407": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4780,
        4789
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3408": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4757,
        4764
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A4"
    },
    "3411": {
      "fn": "NodeRunner.createToken",
      "jump": "i",
      "offset": [
        4757,
        4790
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3412": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4757,
        4790
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3413": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4818,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 26,
      "value": "0x9"
    },
    "3415": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4818,
        4836
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3416": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4800,
        4843
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD6B"
    },
    "3419": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4800,
        4843
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3426": {
      "op": "SHL"
    },
    "3427": {
      "op": "SUB"
    },
    "3428": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4818,
        4836
      ],
      "op": "AND",
      "path": "19"
    },
    "3429": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4818,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3431": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4800,
        4817
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x146A"
    },
    "3434": {
      "fn": "NodeRunner.createToken",
      "jump": "i",
      "offset": [
        4800,
        4843
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3435": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4800,
        4843
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3436": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4859,
        4901
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 27,
      "value": "0x40"
    },
    "3438": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4859,
        4901
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3439": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4891,
        4900
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3440": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4891,
        4900
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3441": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4879,
        4889
      ],
      "op": "CALLER",
      "path": "19"
    },
    "3442": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4879,
        4889
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3443": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4859,
        4901
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x86C96E58B5E24FD4DB3EA2D3803238D011FC9BABE088B2CB856F8A1A80A224A9"
    },
    "3476": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4859,
        4901
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3477": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4859,
        4901
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3479": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4859,
        4901
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3480": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4859,
        4901
      ],
      "op": "LOG3",
      "path": "19"
    },
    "3481": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4919,
        4928
      ],
      "op": "SWAP1",
      "path": "19",
      "statement": 28
    },
    "3482": {
      "op": "POP"
    },
    "3483": {
      "offset": [
        1318,
        1319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3484": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3485": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3486": {
      "fn": "NodeRunner.createToken",
      "offset": [
        4433,
        4935
      ],
      "op": "POP",
      "path": "19"
    },
    "3487": {
      "fn": "NodeRunner.createToken",
      "jump": "o",
      "offset": [
        4433,
        4935
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3488": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3489": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3491": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3492": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3493": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3494": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3496": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3498": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3499": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3501": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3502": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3503": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3510": {
      "op": "SHL"
    },
    "3511": {
      "op": "SUB"
    },
    "3512": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "5"
    },
    "3513": {
      "branch": 138,
      "fn": "ERC721.ownerOf",
      "offset": [
        2332,
        2351
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 29
    },
    "3514": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x87F"
    },
    "3517": {
      "branch": 138,
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3518": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3520": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3527": {
      "op": "SHL"
    },
    "3528": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3529": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3532": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3534": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3535": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "5"
    },
    "3536": {
      "op": "MSTORE"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3541": {
      "op": "DUP3"
    },
    "3542": {
      "op": "ADD"
    },
    "3543": {
      "op": "MSTORE"
    },
    "3544": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3579": {
      "op": "DUP3"
    },
    "3580": {
      "op": "ADD"
    },
    "3581": {
      "op": "MSTORE"
    },
    "3582": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3594": {
      "op": "SHL"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3597": {
      "op": "DUP3"
    },
    "3598": {
      "op": "ADD"
    },
    "3599": {
      "op": "MSTORE"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3602": {
      "op": "ADD"
    },
    "3603": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "3606": {
      "op": "JUMP"
    },
    "3607": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6564,
        6682
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3608": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3610": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3617": {
      "op": "SHL"
    },
    "3618": {
      "op": "SUB"
    },
    "3619": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3620": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3621": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3622": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE41"
    },
    "3625": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3626": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3628": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3629": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3635": {
      "op": "SHL"
    },
    "3636": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3637": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3638": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3641": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "3644": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3645": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "3648": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3649": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3650": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6626
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 30,
      "value": "0xB"
    },
    "3652": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6626
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3659": {
      "op": "SHL"
    },
    "3660": {
      "op": "SUB"
    },
    "3661": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6626
      ],
      "op": "AND",
      "path": "19"
    },
    "3662": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6635
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA9059CBB"
    },
    "3667": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6636,
        6643
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE64"
    },
    "3670": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3672": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3679": {
      "op": "SHL"
    },
    "3680": {
      "op": "SUB"
    },
    "3681": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3682": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3683": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3684": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6636,
        6643
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3685": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6649
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3687": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6649
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3688": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3690": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3691": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3698": {
      "op": "SHL"
    },
    "3699": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3700": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3701": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6668,
        6672
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "3702": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3704": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3705": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "ADD",
      "path": "19"
    },
    "3706": {
      "op": "MSTORE"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3713": {
      "op": "SHL"
    },
    "3714": {
      "op": "SUB"
    },
    "3715": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6649
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3716": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6649
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3717": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6649
      ],
      "op": "AND",
      "path": "19"
    },
    "3718": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6649
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3719": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6659
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "3724": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6659
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3727": {
      "op": "ADD"
    },
    "3728": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3730": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3732": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3733": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3734": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3735": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "SUB",
      "path": "19"
    },
    "3736": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3737": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3738": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3739": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3740": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3741": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3742": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3743": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEA7"
    },
    "3746": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3747": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3749": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3750": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3751": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3752": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "POP",
      "path": "19"
    },
    "3753": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "GAS",
      "path": "19"
    },
    "3754": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "3755": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3756": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3757": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3758": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEBB"
    },
    "3761": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3762": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3763": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3765": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3766": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3767": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3768": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3770": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3771": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3772": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "POP",
      "path": "19"
    },
    "3773": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "POP",
      "path": "19"
    },
    "3774": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "POP",
      "path": "19"
    },
    "3775": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "POP",
      "path": "19"
    },
    "3776": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3778": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3779": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3780": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3782": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "NOT",
      "path": "19"
    },
    "3783": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3785": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3786": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "ADD",
      "path": "19"
    },
    "3787": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "AND",
      "path": "19"
    },
    "3788": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3789": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "ADD",
      "path": "19"
    },
    "3790": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3791": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3793": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3794": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "POP",
      "path": "19"
    },
    "3795": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3796": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "ADD",
      "path": "19"
    },
    "3797": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3798": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEDF"
    },
    "3801": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3802": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3803": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E35"
    },
    "3806": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "jump": "i",
      "offset": [
        6645,
        6674
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3807": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6645,
        6674
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3808": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3810": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3817": {
      "op": "SHL"
    },
    "3818": {
      "op": "SUB"
    },
    "3819": {
      "op": "NOT"
    },
    "3820": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "3822": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3823": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3824": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "SHL",
      "path": "19"
    },
    "3825": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "AND",
      "path": "19"
    },
    "3826": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3827": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3834": {
      "op": "SHL"
    },
    "3835": {
      "op": "SUB"
    },
    "3836": {
      "op": "SWAP1"
    },
    "3837": {
      "op": "SWAP3"
    },
    "3838": {
      "op": "AND"
    },
    "3839": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3841": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3842": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "ADD",
      "path": "19"
    },
    "3843": {
      "op": "MSTORE"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3846": {
      "op": "DUP3"
    },
    "3847": {
      "op": "ADD"
    },
    "3848": {
      "op": "MSTORE"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3851": {
      "op": "ADD"
    },
    "3852": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3854": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3856": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3857": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3858": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3859": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "SUB",
      "path": "19"
    },
    "3860": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3861": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3863": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3864": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3865": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3866": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3867": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3868": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3869": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF25"
    },
    "3872": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3873": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3875": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3876": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3877": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3878": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "POP",
      "path": "19"
    },
    "3879": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "GAS",
      "path": "19"
    },
    "3880": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "CALL",
      "path": "19"
    },
    "3881": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3882": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3883": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3884": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF39"
    },
    "3887": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3888": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3889": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3891": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3892": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3893": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3894": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3896": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3897": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3898": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "POP",
      "path": "19"
    },
    "3899": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "POP",
      "path": "19"
    },
    "3900": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "POP",
      "path": "19"
    },
    "3901": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "POP",
      "path": "19"
    },
    "3902": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3904": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3905": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3906": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3908": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "NOT",
      "path": "19"
    },
    "3909": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3911": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3912": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "ADD",
      "path": "19"
    },
    "3913": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "AND",
      "path": "19"
    },
    "3914": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3915": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "ADD",
      "path": "19"
    },
    "3916": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3917": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3919": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3920": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "POP",
      "path": "19"
    },
    "3921": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3922": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "ADD",
      "path": "19"
    },
    "3923": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3924": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF5D"
    },
    "3927": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3928": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3929": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E18"
    },
    "3932": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "jump": "i",
      "offset": [
        6622,
        6675
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3933": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3934": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "offset": [
        6622,
        6675
      ],
      "op": "POP",
      "path": "19"
    },
    "3935": {
      "fn": "NodeRunner.withdrawNodeFunds",
      "jump": "o",
      "offset": [
        6564,
        6682
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3936": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3937": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3945": {
      "op": "SHL"
    },
    "3946": {
      "op": "SUB"
    },
    "3947": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 31
    },
    "3948": {
      "branch": 139,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "5"
    },
    "3949": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFCB"
    },
    "3952": {
      "branch": 139,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3953": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3955": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3956": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3962": {
      "op": "SHL"
    },
    "3963": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3964": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3967": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3969": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3970": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "5"
    },
    "3971": {
      "op": "MSTORE"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3976": {
      "op": "DUP3"
    },
    "3977": {
      "op": "ADD"
    },
    "3978": {
      "op": "MSTORE"
    },
    "3979": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4014": {
      "op": "DUP3"
    },
    "4015": {
      "op": "ADD"
    },
    "4016": {
      "op": "MSTORE"
    },
    "4017": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4030": {
      "op": "SHL"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4033": {
      "op": "DUP3"
    },
    "4034": {
      "op": "ADD"
    },
    "4035": {
      "op": "MSTORE"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4038": {
      "op": "ADD"
    },
    "4039": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "4042": {
      "op": "JUMP"
    },
    "4043": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4044": {
      "op": "POP"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4051": {
      "op": "SHL"
    },
    "4052": {
      "op": "SUB"
    },
    "4053": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "5",
      "statement": 32
    },
    "4054": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4056": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4057": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4058": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4059": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4061": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4063": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4064": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4066": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4067": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4068": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4069": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4070": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4071": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4072": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4074": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4081": {
      "op": "SHL"
    },
    "4082": {
      "op": "SUB"
    },
    "4083": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4084": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4085": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4086": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1011"
    },
    "4089": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4090": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4092": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4099": {
      "op": "SHL"
    },
    "4100": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4101": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4102": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4104": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4105": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "4108": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4109": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "4112": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4113": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4114": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0x101B"
    },
    "4117": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4119": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2454"
    },
    "4122": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4123": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4124": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4125": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8612,
        8773
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4126": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4128": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4135": {
      "op": "SHL"
    },
    "4136": {
      "op": "SUB"
    },
    "4137": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4138": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4139": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4140": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1047"
    },
    "4143": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4144": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4146": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4147": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4153": {
      "op": "SHL"
    },
    "4154": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4155": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4156": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4158": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4159": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "4162": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4163": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "4166": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4167": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4168": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8747
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 34,
      "value": "0x0"
    },
    "4170": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8747
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4171": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8747
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4172": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8747
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4173": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8738
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "4175": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4177": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8747
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4178": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4180": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8747
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4181": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8747
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4182": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4183": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4190": {
      "op": "SHL"
    },
    "4191": {
      "op": "SUB"
    },
    "4192": {
      "op": "NOT"
    },
    "4193": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "AND",
      "path": "19"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4200": {
      "op": "SHL"
    },
    "4201": {
      "op": "SUB"
    },
    "4202": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4203": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4204": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4205": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "AND",
      "path": "19"
    },
    "4206": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4207": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4208": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4209": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "OR",
      "path": "19"
    },
    "4210": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4211": {
      "fn": "NodeRunner.addWhiteListToToken",
      "offset": [
        8713,
        8766
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4212": {
      "fn": "NodeRunner.addWhiteListToToken",
      "jump": "o",
      "offset": [
        8612,
        8773
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4213": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        8970,
        9121
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4214": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4216": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4223": {
      "op": "SHL"
    },
    "4224": {
      "op": "SUB"
    },
    "4225": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4226": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4227": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4228": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x109F"
    },
    "4231": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4232": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4234": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4241": {
      "op": "SHL"
    },
    "4242": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4243": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4244": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4246": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4247": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "4250": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4251": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "4254": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4255": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4256": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9098
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 35,
      "value": "0x0"
    },
    "4258": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9098
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4259": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9098
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4260": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9098
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4261": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9089
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "4263": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4265": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9098
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4266": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4268": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9098
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4269": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9098
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4270": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9098
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4271": {
      "fn": "NodeRunner.updateTokenListingFee",
      "offset": [
        9070,
        9114
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4272": {
      "fn": "NodeRunner.updateTokenListingFee",
      "jump": "o",
      "offset": [
        8970,
        9121
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4273": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9502,
        9618
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4274": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4276": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4283": {
      "op": "SHL"
    },
    "4284": {
      "op": "SUB"
    },
    "4285": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4286": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4287": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4288": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DB"
    },
    "4291": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4292": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4294": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4301": {
      "op": "SHL"
    },
    "4302": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4303": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4304": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4306": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4307": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "4310": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4311": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "4314": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4315": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4316": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9586
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 36,
      "value": "0xB"
    },
    "4318": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4319": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4326": {
      "op": "SHL"
    },
    "4327": {
      "op": "SUB"
    },
    "4328": {
      "op": "NOT"
    },
    "4329": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "AND",
      "path": "19"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4336": {
      "op": "SHL"
    },
    "4337": {
      "op": "SUB"
    },
    "4338": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4339": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4340": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4341": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "AND",
      "path": "19"
    },
    "4342": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4343": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4344": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4345": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "OR",
      "path": "19"
    },
    "4346": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4347": {
      "fn": "NodeRunner.updateUSDCAddress",
      "offset": [
        9582,
        9611
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4348": {
      "fn": "NodeRunner.updateUSDCAddress",
      "jump": "o",
      "offset": [
        9502,
        9618
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4349": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4350": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4352": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4359": {
      "op": "SHL"
    },
    "4360": {
      "op": "SUB"
    },
    "4361": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4362": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4363": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4364": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1127"
    },
    "4367": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4368": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4370": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4377": {
      "op": "SHL"
    },
    "4378": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4379": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4380": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4382": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4383": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "4386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4387": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "4390": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4391": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4392": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 37
    },
    "4393": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4394": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x113A"
    },
    "4397": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4398": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8299
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "4400": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8299
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4401": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4403": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4404": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "ADD",
      "path": "19"
    },
    "4405": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4406": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x288B"
    },
    "4409": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "jump": "i",
      "offset": [
        8281,
        8323
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4410": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4411": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "POP",
      "path": "19"
    },
    "4412": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "POP",
      "path": "19"
    },
    "4413": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "jump": "o",
      "offset": [
        8181,
        8330
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4414": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5062,
        5613
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4415": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5140,
        5147
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 38,
      "value": "0xD"
    },
    "4417": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5140,
        5147
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4418": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5127,
        5136
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "4419": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5127,
        5147
      ],
      "op": "LT",
      "path": "19"
    },
    "4420": {
      "branch": 122,
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5127,
        5147
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4421": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5119,
        5253
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x11EA"
    },
    "4424": {
      "branch": 122,
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5119,
        5253
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4425": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5119,
        5253
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4427": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5119,
        5253
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4428": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4434": {
      "op": "SHL"
    },
    "4435": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5119,
        5253
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4436": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5119,
        5253
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4439": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5119,
        5253
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4441": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5119,
        5253
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4442": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5119,
        5253
      ],
      "op": "ADD",
      "path": "19"
    },
    "4443": {
      "op": "MSTORE"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4448": {
      "op": "DUP3"
    },
    "4449": {
      "op": "ADD"
    },
    "4450": {
      "op": "MSTORE"
    },
    "4451": {
      "op": "PUSH32",
      "value": "0x596F75206D757374206465706F73697420656E6F756768204D6174696320736F"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4486": {
      "op": "DUP3"
    },
    "4487": {
      "op": "ADD"
    },
    "4488": {
      "op": "MSTORE"
    },
    "4489": {
      "op": "PUSH32",
      "value": "0x2069742063616E206265206469766964656420627920746865206D6178696D75"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4524": {
      "op": "DUP3"
    },
    "4525": {
      "op": "ADD"
    },
    "4526": {
      "op": "MSTORE"
    },
    "4527": {
      "op": "PUSH32",
      "value": "0x6D206E756D626572206F66204E465420686F6C6465727320666F722074686520"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4562": {
      "op": "DUP3"
    },
    "4563": {
      "op": "ADD"
    },
    "4564": {
      "op": "MSTORE"
    },
    "4565": {
      "op": "PUSH5",
      "value": "0x3737B23297"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "4573": {
      "op": "SHL"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4576": {
      "op": "DUP3"
    },
    "4577": {
      "op": "ADD"
    },
    "4578": {
      "op": "MSTORE"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "4581": {
      "op": "ADD"
    },
    "4582": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5119,
        5253
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97F"
    },
    "4585": {
      "op": "JUMP"
    },
    "4586": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5119,
        5253
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4587": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5293,
        5294
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 39,
      "value": "0x0"
    },
    "4589": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5271,
        5290
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x11F5"
    },
    "4592": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5271,
        5280
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "4594": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4595": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4596": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4597": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5271,
        5290
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4598": {
      "branch": 123,
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5271,
        5294
      ],
      "op": "GT",
      "path": "19"
    },
    "4599": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5263,
        5342
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1256"
    },
    "4602": {
      "branch": 123,
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5263,
        5342
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4603": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5263,
        5342
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4605": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5263,
        5342
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4606": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4612": {
      "op": "SHL"
    },
    "4613": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5263,
        5342
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4614": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5263,
        5342
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4617": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5263,
        5342
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4619": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5263,
        5342
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4620": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5263,
        5342
      ],
      "op": "ADD",
      "path": "19"
    },
    "4621": {
      "op": "MSTORE"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4626": {
      "op": "DUP3"
    },
    "4627": {
      "op": "ADD"
    },
    "4628": {
      "op": "MSTORE"
    },
    "4629": {
      "op": "PUSH32",
      "value": "0x4E6F204E4654732068617665206265656E206D696E74656420666F7220746869"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4664": {
      "op": "DUP3"
    },
    "4665": {
      "op": "ADD"
    },
    "4666": {
      "op": "MSTORE"
    },
    "4667": {
      "op": "PUSH11",
      "value": "0x39903737B232903CB2BA17"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "4681": {
      "op": "SHL"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4684": {
      "op": "DUP3"
    },
    "4685": {
      "op": "ADD"
    },
    "4686": {
      "op": "MSTORE"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4689": {
      "op": "ADD"
    },
    "4690": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5263,
        5342
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97F"
    },
    "4693": {
      "op": "JUMP"
    },
    "4694": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5263,
        5342
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4695": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5367,
        5368
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4697": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5353,
        5560
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4698": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5375,
        5384
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "4700": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4701": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5370,
        5371
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4702": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5370,
        5394
      ],
      "op": "GT",
      "path": "19"
    },
    "4703": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5353,
        5560
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12CC"
    },
    "4706": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5353,
        5560
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4707": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5415,
        5431
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4709": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5434,
        5444
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x126D"
    },
    "4712": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5442,
        5443
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4713": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5434,
        5441
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDA0"
    },
    "4716": {
      "fn": "NodeRunner.depositNodeRewards",
      "jump": "i",
      "offset": [
        5434,
        5444
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4717": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5434,
        5444
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4718": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5415,
        5444
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4719": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5415,
        5444
      ],
      "op": "POP",
      "path": "19"
    },
    "4720": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5541,
        5548
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 40,
      "value": "0xD"
    },
    "4722": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5541,
        5548
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4723": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5529,
        5538
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "4724": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5529,
        5548
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x127D"
    },
    "4727": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5529,
        5548
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4728": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5529,
        5548
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4729": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5529,
        5548
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E7A"
    },
    "4732": {
      "fn": "NodeRunner.depositNodeRewards",
      "jump": "i",
      "offset": [
        5529,
        5548
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4733": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5529,
        5548
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4740": {
      "op": "SHL"
    },
    "4741": {
      "op": "SUB"
    },
    "4742": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4743": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "AND",
      "path": "19"
    },
    "4744": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4746": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4747": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4748": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4749": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5515
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "4751": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4753": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4754": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4756": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4757": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4758": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5525
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4759": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5549
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12A0"
    },
    "4762": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5549
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4763": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5549
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4764": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5549
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E8E"
    },
    "4767": {
      "fn": "NodeRunner.depositNodeRewards",
      "jump": "i",
      "offset": [
        5493,
        5549
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4768": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5493,
        5549
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4775": {
      "op": "SHL"
    },
    "4776": {
      "op": "SUB"
    },
    "4777": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4778": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4779": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "AND",
      "path": "19"
    },
    "4780": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4782": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4783": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4784": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4785": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5480
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "4787": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4789": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4790": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4792": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4793": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5490
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4794": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5458,
        5549
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4795": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5396,
        5399
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 41
    },
    "4796": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5396,
        5399
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12C4"
    },
    "4799": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5396,
        5399
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4800": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5396,
        5399
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA6"
    },
    "4803": {
      "fn": "NodeRunner.depositNodeRewards",
      "jump": "i",
      "offset": [
        5396,
        5399
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4804": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5396,
        5399
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4805": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5396,
        5399
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4806": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5396,
        5399
      ],
      "op": "POP",
      "path": "19"
    },
    "4807": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5396,
        5399
      ],
      "op": "POP",
      "path": "19"
    },
    "4808": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5353,
        5560
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1259"
    },
    "4811": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5353,
        5560
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4812": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5353,
        5560
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4813": {
      "op": "POP"
    },
    "4814": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5575,
        5606
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 42,
      "value": "0x40"
    },
    "4816": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5575,
        5606
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4817": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5596,
        5605
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "4818": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5596,
        5605
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4819": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5575,
        5606
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x1212ADF0641FFEFB93FBB2948F91DA450C6375780DBA1D933E2EF7BA1C543ED"
    },
    "4852": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5575,
        5606
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4853": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5575,
        5606
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4855": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5575,
        5606
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4856": {
      "fn": "NodeRunner.depositNodeRewards",
      "offset": [
        5575,
        5606
      ],
      "op": "LOG2",
      "path": "19"
    },
    "4857": {
      "fn": "NodeRunner.depositNodeRewards",
      "jump": "o",
      "offset": [
        5062,
        5613
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4858": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4859": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7360,
        7375
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "4861": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7387,
        7400
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4863": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7403,
        7422
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1307"
    },
    "4866": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7403,
        7412
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "4868": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4869": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4870": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4871": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7403,
        7422
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4872": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7387,
        7422
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4873": {
      "op": "POP"
    },
    "4874": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7432,
        7449
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4876": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7432,
        7449
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4877": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7510,
        7511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4879": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7495,
        7641
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4880": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7519,
        7527
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4881": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7513,
        7515
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4882": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7513,
        7527
      ],
      "op": "GT",
      "path": "19"
    },
    "4883": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7495,
        7641
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1358"
    },
    "4886": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7495,
        7641
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4887": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7568,
        7579
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4894": {
      "op": "SHL"
    },
    "4895": {
      "op": "SUB"
    },
    "4896": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7553,
        7579
      ],
      "op": "AND",
      "path": "19"
    },
    "4897": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7553,
        7564
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1329"
    },
    "4900": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7561,
        7563
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4901": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7553,
        7560
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDA0"
    },
    "4904": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7553,
        7564
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4905": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7553,
        7564
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4912": {
      "op": "SHL"
    },
    "4913": {
      "op": "SUB"
    },
    "4914": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7553,
        7579
      ],
      "op": "AND",
      "path": "19"
    },
    "4915": {
      "branch": 124,
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7553,
        7579
      ],
      "op": "EQ",
      "path": "19"
    },
    "4916": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7549,
        7631
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4917": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7549,
        7631
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1346"
    },
    "4920": {
      "branch": 124,
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7549,
        7631
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4921": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7599,
        7616
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 43,
      "value": "0x1343"
    },
    "4924": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7615,
        7616
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4926": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7599,
        7616
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4927": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7599,
        7616
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E8E"
    },
    "4930": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7599,
        7616
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4931": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7599,
        7616
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4932": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7599,
        7616
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4933": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7599,
        7616
      ],
      "op": "POP",
      "path": "19"
    },
    "4934": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7549,
        7631
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4935": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7529,
        7533
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 44
    },
    "4936": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7529,
        7533
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1350"
    },
    "4939": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7529,
        7533
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4940": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7529,
        7533
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA6"
    },
    "4943": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7529,
        7533
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4944": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7529,
        7533
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4945": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7529,
        7533
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4946": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7529,
        7533
      ],
      "op": "POP",
      "path": "19"
    },
    "4947": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7529,
        7533
      ],
      "op": "POP",
      "path": "19"
    },
    "4948": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7495,
        7641
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x130F"
    },
    "4951": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7495,
        7641
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4952": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7495,
        7641
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4953": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7495,
        7641
      ],
      "op": "POP",
      "path": "19"
    },
    "4954": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7651,
        7683
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4956": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7699,
        7711
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4957": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4966": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4967": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "GT",
      "path": "19"
    },
    "4968": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4969": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1374"
    },
    "4972": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4973": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1374"
    },
    "4976": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A1C"
    },
    "4979": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7686,
        7712
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4980": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4981": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4983": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4984": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4985": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4986": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4987": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4988": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4989": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4991": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "MUL",
      "path": "19"
    },
    "4992": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4994": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "ADD",
      "path": "19"
    },
    "4995": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4996": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "ADD",
      "path": "19"
    },
    "4997": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4999": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5000": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5001": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5002": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13A7"
    },
    "5005": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5006": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5007": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5009": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "ADD",
      "path": "19"
    },
    "5010": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5011": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "5013": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5014": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5015": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5017": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "ADD",
      "path": "19"
    },
    "5018": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5019": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5021": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5022": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "SUB",
      "path": "19"
    },
    "5023": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5024": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5025": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1392"
    },
    "5028": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5029": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5030": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "POP",
      "path": "19"
    },
    "5031": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7686,
        7712
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5032": {
      "op": "POP"
    },
    "5033": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7651,
        7712
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5034": {
      "op": "POP"
    },
    "5035": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7738,
        7739
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5037": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7723,
        7987
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5038": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7747,
        7755
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5039": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7741,
        7743
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5040": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7741,
        7755
      ],
      "op": "GT",
      "path": "19"
    },
    "5041": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7723,
        7987
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1422"
    },
    "5044": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7723,
        7987
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5045": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7796,
        7807
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5052": {
      "op": "SHL"
    },
    "5053": {
      "op": "SUB"
    },
    "5054": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7781,
        7807
      ],
      "op": "AND",
      "path": "19"
    },
    "5055": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7781,
        7792
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13C7"
    },
    "5058": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7789,
        7791
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5059": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7781,
        7788
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDA0"
    },
    "5062": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7781,
        7792
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5063": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7781,
        7792
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5070": {
      "op": "SHL"
    },
    "5071": {
      "op": "SUB"
    },
    "5072": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7781,
        7807
      ],
      "op": "AND",
      "path": "19"
    },
    "5073": {
      "branch": 125,
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7781,
        7807
      ],
      "op": "EQ",
      "path": "19"
    },
    "5074": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7777,
        7977
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5075": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7777,
        7977
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1410"
    },
    "5078": {
      "branch": 125,
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7777,
        7977
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5079": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7827,
        7851
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5081": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7854,
        7866
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13E1"
    },
    "5084": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7863,
        7865
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5085": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7854,
        7862
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1711"
    },
    "5088": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7854,
        7866
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5089": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7854,
        7866
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5090": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7827,
        7866
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5091": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7827,
        7866
      ],
      "op": "POP",
      "path": "19"
    },
    "5092": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7917,
        7927
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 45
    },
    "5093": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7900
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5094": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7901,
        7913
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5095": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5096": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5097": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5098": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "LT",
      "path": "19"
    },
    "5099": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13F6"
    },
    "5102": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5103": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13F6"
    },
    "5106": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EC1"
    },
    "5109": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7884,
        7914
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5110": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5111": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5113": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5114": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5115": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "MUL",
      "path": "19"
    },
    "5116": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5117": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5118": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5119": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "ADD",
      "path": "19"
    },
    "5120": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7914
      ],
      "op": "ADD",
      "path": "19"
    },
    "5121": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7884,
        7927
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5122": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7945,
        7962
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 46,
      "value": "0x140C"
    },
    "5125": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7961,
        7962
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5127": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7945,
        7962
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5128": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7945,
        7962
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E8E"
    },
    "5131": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7945,
        7962
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5132": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7945,
        7962
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5133": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7945,
        7962
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5134": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7945,
        7962
      ],
      "op": "POP",
      "path": "19"
    },
    "5135": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7809,
        7977
      ],
      "op": "POP",
      "path": "19"
    },
    "5136": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7777,
        7977
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5137": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7757,
        7761
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 47
    },
    "5138": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7757,
        7761
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x141A"
    },
    "5141": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7757,
        7761
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5142": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7757,
        7761
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA6"
    },
    "5145": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "i",
      "offset": [
        7757,
        7761
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5146": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7757,
        7761
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5147": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7757,
        7761
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5148": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7757,
        7761
      ],
      "op": "POP",
      "path": "19"
    },
    "5149": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7757,
        7761
      ],
      "op": "POP",
      "path": "19"
    },
    "5150": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7723,
        7987
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13AD"
    },
    "5153": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7723,
        7987
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5154": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7723,
        7987
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5155": {
      "op": "POP"
    },
    "5156": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        8012,
        8028
      ],
      "op": "SWAP6",
      "path": "19",
      "statement": 48
    },
    "5157": {
      "fn": "NodeRunner.getUserTokenURIs",
      "offset": [
        7290,
        8035
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "5158": {
      "op": "POP"
    },
    "5159": {
      "op": "POP"
    },
    "5160": {
      "op": "POP"
    },
    "5161": {
      "op": "POP"
    },
    "5162": {
      "op": "POP"
    },
    "5163": {
      "fn": "NodeRunner.getUserTokenURIs",
      "jump": "o",
      "offset": [
        7290,
        8035
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5164": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5165": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5167": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 49,
      "value": "0x1"
    },
    "5169": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5170": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5171": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x894"
    },
    "5174": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5175": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D57"
    },
    "5178": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5179": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10115,
        10214
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5180": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "5182": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5189": {
      "op": "SHL"
    },
    "5190": {
      "op": "SUB"
    },
    "5191": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5192": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5193": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5194": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1465"
    },
    "5197": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5198": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5200": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5201": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5207": {
      "op": "SHL"
    },
    "5208": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5209": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5210": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5212": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5213": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "5216": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5217": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "5220": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5221": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5222": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10187,
        10194
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 50,
      "value": "0xD"
    },
    "5224": {
      "fn": "NodeRunner.updateMaxNFTs",
      "offset": [
        10187,
        10207
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5225": {
      "fn": "NodeRunner.updateMaxNFTs",
      "jump": "o",
      "offset": [
        10115,
        10214
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5226": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5227": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4429
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 51,
      "value": "0x113A"
    },
    "5230": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5231": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4410,
        4418
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5232": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4420,
        4428
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5233": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4395
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24A6"
    },
    "5236": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4429
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5237": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5697,
        6434
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5238": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5763
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 52,
      "value": "0xA"
    },
    "5240": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5763
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5241": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5243": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5244": {
      "op": "PUSH4",
      "value": "0x28DA575B"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5251": {
      "op": "SHL"
    },
    "5252": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5253": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5254": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5780,
        5790
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5255": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5257": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5258": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "ADD",
      "path": "19"
    },
    "5259": {
      "op": "MSTORE"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5266": {
      "op": "SHL"
    },
    "5267": {
      "op": "SUB"
    },
    "5268": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5763
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5269": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5763
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5270": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5763
      ],
      "op": "AND",
      "path": "19"
    },
    "5271": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5763
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5272": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5779
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x28DA575B"
    },
    "5277": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5779
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5280": {
      "op": "ADD"
    },
    "5281": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5283": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5285": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5286": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5287": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5288": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "SUB",
      "path": "19"
    },
    "5289": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5290": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5291": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5292": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5293": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5294": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5295": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5296": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14B8"
    },
    "5299": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5300": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5302": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5303": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5304": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5305": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "POP",
      "path": "19"
    },
    "5306": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "GAS",
      "path": "19"
    },
    "5307": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "5308": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5309": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5310": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5311": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14CC"
    },
    "5314": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5315": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5316": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5318": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5319": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5320": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5321": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5323": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5324": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5325": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "POP",
      "path": "19"
    },
    "5326": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "POP",
      "path": "19"
    },
    "5327": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "POP",
      "path": "19"
    },
    "5328": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "POP",
      "path": "19"
    },
    "5329": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5331": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5332": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5333": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5335": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "NOT",
      "path": "19"
    },
    "5336": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5338": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5339": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "ADD",
      "path": "19"
    },
    "5340": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "AND",
      "path": "19"
    },
    "5341": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5342": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "ADD",
      "path": "19"
    },
    "5343": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5344": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5346": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5347": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "POP",
      "path": "19"
    },
    "5348": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5349": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "ADD",
      "path": "19"
    },
    "5350": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5351": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14F0"
    },
    "5354": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5355": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5356": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E18"
    },
    "5359": {
      "fn": "NodeRunner.claimNodeRewards",
      "jump": "i",
      "offset": [
        5752,
        5791
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5360": {
      "branch": 126,
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5752,
        5791
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5361": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x150C"
    },
    "5364": {
      "branch": 126,
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5365": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5367": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5374": {
      "op": "SHL"
    },
    "5375": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5376": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5377": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5379": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "ADD",
      "path": "19"
    },
    "5380": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97F"
    },
    "5383": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5384": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2ED7"
    },
    "5387": {
      "fn": "NodeRunner.claimNodeRewards",
      "jump": "i",
      "offset": [
        5744,
        5854
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5388": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5744,
        5854
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5389": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5895,
        5905
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 53
    },
    "5390": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5909,
        5910
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5392": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5872,
        5906
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5393": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5872,
        5906
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5394": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5872,
        5906
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5395": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5872,
        5894
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "5397": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5872,
        5906
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5399": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5872,
        5906
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5400": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5872,
        5906
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5402": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5872,
        5906
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5403": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5872,
        5906
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5404": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5872,
        5906
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5405": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5864,
        6033
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15D3"
    },
    "5408": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5864,
        6033
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5409": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5864,
        6033
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5411": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5864,
        6033
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5418": {
      "op": "SHL"
    },
    "5419": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5864,
        6033
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5420": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5864,
        6033
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5423": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5864,
        6033
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5425": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5864,
        6033
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5426": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5864,
        6033
      ],
      "op": "ADD",
      "path": "19"
    },
    "5427": {
      "op": "MSTORE"
    },
    "5428": {
      "op": "PUSH1",
      "value": "0x76"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5432": {
      "op": "DUP3"
    },
    "5433": {
      "op": "ADD"
    },
    "5434": {
      "op": "MSTORE"
    },
    "5435": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520616E79206E6F6465207265776172647320"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5470": {
      "op": "DUP3"
    },
    "5471": {
      "op": "ADD"
    },
    "5472": {
      "op": "MSTORE"
    },
    "5473": {
      "op": "PUSH32",
      "value": "0x746F20636C61696D2120496620796F75206861766520616E204E465420666F72"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5508": {
      "op": "DUP3"
    },
    "5509": {
      "op": "ADD"
    },
    "5510": {
      "op": "MSTORE"
    },
    "5511": {
      "op": "PUSH32",
      "value": "0x2074686973206E6F64652C20706C65617365207761697420756E74696C207468"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5546": {
      "op": "DUP3"
    },
    "5547": {
      "op": "ADD"
    },
    "5548": {
      "op": "MSTORE"
    },
    "5549": {
      "op": "PUSH22",
      "value": "0x32903732BC3A103932BBB0B932103232B837B9B4BA17"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "5574": {
      "op": "SHL"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5577": {
      "op": "DUP3"
    },
    "5578": {
      "op": "ADD"
    },
    "5579": {
      "op": "MSTORE"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "5582": {
      "op": "ADD"
    },
    "5583": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5864,
        6033
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97F"
    },
    "5586": {
      "op": "JUMP"
    },
    "5587": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        5864,
        6033
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5588": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6097,
        6107
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5589": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6052,
        6071
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5591": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5592": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5593": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5594": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6096
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "5596": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5598": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5599": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5601": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5602": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5603": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5604": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5605": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5606": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6118,
        6156
      ],
      "op": "SWAP1",
      "path": "19",
      "statement": 54
    },
    "5607": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6118,
        6156
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5608": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6118,
        6156
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5609": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6118,
        6156
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5610": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5611": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5612": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5613": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5614": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6097,
        6107
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5615": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5616": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5617": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6052,
        6071
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5618": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5619": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6052,
        6071
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5620": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5621": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6074,
        6108
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5622": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6097,
        6107
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5623": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "GAS",
      "path": "19"
    },
    "5624": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "CALL",
      "path": "19"
    },
    "5625": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5626": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "POP",
      "path": "19"
    },
    "5627": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "POP",
      "path": "19"
    },
    "5628": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "POP",
      "path": "19"
    },
    "5629": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5630": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5631": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5633": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5634": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "EQ",
      "path": "19"
    },
    "5635": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1628"
    },
    "5638": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5639": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5641": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5642": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5643": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "POP",
      "path": "19"
    },
    "5644": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5646": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "NOT",
      "path": "19"
    },
    "5647": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3F"
    },
    "5649": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5650": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "ADD",
      "path": "19"
    },
    "5651": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "AND",
      "path": "19"
    },
    "5652": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5653": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "ADD",
      "path": "19"
    },
    "5654": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5656": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5657": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5658": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5659": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5660": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5661": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5663": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5665": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5666": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "ADD",
      "path": "19"
    },
    "5667": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5668": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x162D"
    },
    "5671": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5672": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5673": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "5675": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5676": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "POP",
      "path": "19"
    },
    "5677": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5678": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6185,
        6224
      ],
      "op": "POP",
      "path": "19"
    },
    "5679": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6166,
        6224
      ],
      "op": "POP",
      "path": "19"
    },
    "5680": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6166,
        6224
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5681": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6166,
        6224
      ],
      "op": "POP",
      "path": "19"
    },
    "5682": {
      "branch": 127,
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6242,
        6249
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 55
    },
    "5683": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6234,
        6274
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1675"
    },
    "5686": {
      "branch": 127,
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6234,
        6274
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5687": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6234,
        6274
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5689": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6234,
        6274
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5696": {
      "op": "SHL"
    },
    "5697": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6234,
        6274
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5698": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6234,
        6274
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5701": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6234,
        6274
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5703": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6234,
        6274
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5704": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6234,
        6274
      ],
      "op": "ADD",
      "path": "19"
    },
    "5705": {
      "op": "MSTORE"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5710": {
      "op": "DUP3"
    },
    "5711": {
      "op": "ADD"
    },
    "5712": {
      "op": "MSTORE"
    },
    "5713": {
      "op": "PUSH20",
      "value": "0x4661696C656420746F2073656E64204D61746963"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5736": {
      "op": "SHL"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5739": {
      "op": "DUP3"
    },
    "5740": {
      "op": "ADD"
    },
    "5741": {
      "op": "MSTORE"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5744": {
      "op": "ADD"
    },
    "5745": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6234,
        6274
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97F"
    },
    "5748": {
      "op": "JUMP"
    },
    "5749": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6234,
        6274
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5750": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6290,
        6333
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 56,
      "value": "0x40"
    },
    "5752": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6290,
        6333
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5753": {
      "op": "DUP3"
    },
    "5754": {
      "op": "DUP2"
    },
    "5755": {
      "op": "MSTORE"
    },
    "5756": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6309,
        6319
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5757": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6309,
        6319
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5758": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6290,
        6333
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xAB9726B9E4373F49134C144584366728EBC3E8ABA47220872606A5760AC9B040"
    },
    "5791": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6290,
        6333
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5794": {
      "op": "ADD"
    },
    "5795": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6290,
        6333
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5797": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6290,
        6333
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5798": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6290,
        6333
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5799": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6290,
        6333
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5800": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6290,
        6333
      ],
      "op": "SUB",
      "path": "19"
    },
    "5801": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6290,
        6333
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5802": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6290,
        6333
      ],
      "op": "LOG2",
      "path": "19"
    },
    "5803": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6402,
        6412
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 57
    },
    "5804": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6413
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5806": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6413
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5807": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6413
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5808": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6413
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5809": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6401
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "5811": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6413
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5813": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6413
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5814": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6413
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5816": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6413
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5817": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6413
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5818": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6413
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5819": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6427
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16C5"
    },
    "5822": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6427
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5823": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6416,
        6427
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5824": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6416,
        6427
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5825": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6427
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E8E"
    },
    "5828": {
      "fn": "NodeRunner.claimNodeRewards",
      "jump": "i",
      "offset": [
        6380,
        6427
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5829": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6380,
        6427
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5830": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6366,
        6376
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5831": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6344,
        6377
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5833": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6344,
        6377
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5834": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6344,
        6377
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5835": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6344,
        6377
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5836": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6344,
        6365
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "5838": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6344,
        6377
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5840": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6344,
        6377
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5841": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6344,
        6377
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5843": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6344,
        6377
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5844": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6344,
        6377
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5845": {
      "fn": "NodeRunner.claimNodeRewards",
      "offset": [
        6344,
        6427
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5846": {
      "op": "POP"
    },
    "5847": {
      "op": "POP"
    },
    "5848": {
      "fn": "NodeRunner.claimNodeRewards",
      "jump": "o",
      "offset": [
        5697,
        6434
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5849": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5850": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 58,
      "value": "0x16E3"
    },
    "5853": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5854": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5576
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5855": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5554
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x209F"
    },
    "5858": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5859": {
      "branch": 140,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5860": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16FF"
    },
    "5863": {
      "branch": 140,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5864": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5866": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5867": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5873": {
      "op": "SHL"
    },
    "5874": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5875": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5876": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5878": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "ADD",
      "path": "5"
    },
    "5879": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "5882": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5883": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DC7"
    },
    "5886": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5887": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5888": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 59,
      "value": "0x170B"
    },
    "5891": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5655,
        5659
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5892": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5661,
        5663
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5893": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5894": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5674,
        5679
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5895": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2575"
    },
    "5898": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5899": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5900": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "5901": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "5902": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "5903": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "5"
    },
    "5904": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5905": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5906": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        540,
        553
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "5908": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        589
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 60,
      "value": "0x171C"
    },
    "5911": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        581,
        588
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5912": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        580
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F89"
    },
    "5915": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        573,
        589
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5916": {
      "branch": 150,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        573,
        589
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5917": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1782"
    },
    "5920": {
      "branch": 150,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5921": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5923": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5924": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5930": {
      "op": "SHL"
    },
    "5931": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5932": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5935": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5937": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5938": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "ADD",
      "path": "8"
    },
    "5939": {
      "op": "MSTORE"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5944": {
      "op": "DUP3"
    },
    "5945": {
      "op": "ADD"
    },
    "5946": {
      "op": "MSTORE"
    },
    "5947": {
      "op": "PUSH32",
      "value": "0x45524337323155524953746F726167653A2055524920717565727920666F7220"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5982": {
      "op": "DUP3"
    },
    "5983": {
      "op": "ADD"
    },
    "5984": {
      "op": "MSTORE"
    },
    "5985": {
      "op": "PUSH17",
      "value": "0x3737B732BC34B9BA32B73A103A37B5B2B7"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "6005": {
      "op": "SHL"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6008": {
      "op": "DUP3"
    },
    "6009": {
      "op": "ADD"
    },
    "6010": {
      "op": "MSTORE"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6013": {
      "op": "ADD"
    },
    "6014": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x97F"
    },
    "6017": {
      "op": "JUMP"
    },
    "6018": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        565,
        643
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6019": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        677
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6021": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6022": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6023": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6024": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        690
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "6026": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6028": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6029": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6031": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6032": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        680,
        699
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "6033": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6034": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6035": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x179B"
    },
    "6038": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6039": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D57"
    },
    "6042": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6043": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6044": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6045": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6047": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "6048": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6050": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6051": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6052": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DIV",
      "path": "8"
    },
    "6053": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MUL",
      "path": "8"
    },
    "6054": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6056": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "6057": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6059": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6060": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6061": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6062": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "6063": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6065": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6066": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6067": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6068": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6069": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6070": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6071": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6072": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6073": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6075": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "6076": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6077": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6078": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6079": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17C7"
    },
    "6082": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6083": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D57"
    },
    "6086": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6087": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6088": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6089": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6090": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1814"
    },
    "6093": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6094": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6095": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6097": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "LT",
      "path": "8"
    },
    "6098": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17E9"
    },
    "6101": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6102": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "6105": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6106": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6107": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6108": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DIV",
      "path": "8"
    },
    "6109": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MUL",
      "path": "8"
    },
    "6110": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6111": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6112": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6113": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6115": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "6116": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6117": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1814"
    },
    "6120": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6121": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6122": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6123": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "6124": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6125": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6126": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6128": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6129": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6131": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6133": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "6134": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6135": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6136": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6137": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6138": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6139": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6140": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6141": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6143": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "6144": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6145": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6147": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "6148": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6149": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6150": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "GT",
      "path": "8"
    },
    "6151": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17F7"
    },
    "6154": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6155": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6156": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6157": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SUB",
      "path": "8"
    },
    "6158": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6160": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "AND",
      "path": "8"
    },
    "6161": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6162": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "ADD",
      "path": "8"
    },
    "6163": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6164": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6165": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "6166": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "6167": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "6168": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "6169": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "6170": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6171": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        654,
        699
      ],
      "op": "POP",
      "path": "8"
    },
    "6172": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6174": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        730,
        740
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1832"
    },
    "6177": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 61,
      "value": "0x40"
    },
    "6179": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6180": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6181": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6183": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6184": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "6185": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6186": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6187": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6190": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6191": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6192": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6193": {
      "fn": "ERC721._baseURI",
      "offset": [
        3388,
        3480
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6194": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        730,
        740
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6195": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        740
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6196": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        709,
        740
      ],
      "op": "POP",
      "path": "8"
    },
    "6197": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        819,
        823
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6198": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        813,
        831
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6199": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        835,
        836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6201": {
      "branch": 151,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        813,
        836
      ],
      "op": "EQ",
      "path": "8"
    },
    "6202": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6203": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1845"
    },
    "6206": {
      "branch": 151,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6207": {
      "op": "POP"
    },
    "6208": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        859,
        868
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 62
    },
    "6209": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6210": {
      "op": "POP"
    },
    "6211": {
      "op": "POP"
    },
    "6212": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "o",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6213": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        809,
        879
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6214": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1004
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6215": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1004
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6216": {
      "branch": 152,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        981,
        1008
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6217": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1877"
    },
    "6220": {
      "branch": 152,
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6221": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1055,
        1059
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 63
    },
    "6222": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1061,
        1070
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6223": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6225": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6226": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6228": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "ADD",
      "path": "8"
    },
    "6229": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x185F"
    },
    "6232": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6233": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6234": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6235": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F34"
    },
    "6238": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        1038,
        1071
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6239": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6240": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6242": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6243": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6245": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6246": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6247": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SUB",
      "path": "8"
    },
    "6248": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SUB",
      "path": "8"
    },
    "6249": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6250": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6251": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6252": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6254": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1038,
        1071
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6255": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6256": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "6257": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "6258": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1024,
        1072
      ],
      "op": "POP",
      "path": "8"
    },
    "6259": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6260": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6261": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "POP",
      "path": "8"
    },
    "6262": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "o",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6263": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        977,
        1083
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6264": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1100,
        1123
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 64,
      "value": "0x1880"
    },
    "6267": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1115,
        1122
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6268": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1100,
        1114
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25A8"
    },
    "6271": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        1100,
        1123
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6272": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1100,
        1123
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6273": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1093,
        1123
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "6274": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        467,
        1130
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "6275": {
      "op": "POP"
    },
    "6276": {
      "op": "POP"
    },
    "6277": {
      "op": "POP"
    },
    "6278": {
      "op": "POP"
    },
    "6279": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "o",
      "offset": [
        467,
        1130
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6280": {
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6281": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "6283": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6284": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6285": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1895"
    },
    "6288": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6289": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D57"
    },
    "6292": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6293": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6294": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6295": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6297": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "ADD",
      "path": "19"
    },
    "6298": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6300": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6301": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6302": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DIV",
      "path": "19"
    },
    "6303": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "MUL",
      "path": "19"
    },
    "6304": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6306": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "ADD",
      "path": "19"
    },
    "6307": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6309": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6310": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6311": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6312": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "ADD",
      "path": "19"
    },
    "6313": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6315": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6316": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6317": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6318": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6319": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6320": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6321": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6322": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6323": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6325": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "ADD",
      "path": "19"
    },
    "6326": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6327": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6328": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6329": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18C1"
    },
    "6332": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6333": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D57"
    },
    "6336": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "i",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6337": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6338": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6339": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6340": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x190E"
    },
    "6343": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6344": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6345": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6347": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "LT",
      "path": "19"
    },
    "6348": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18E3"
    },
    "6351": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6352": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "6355": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6356": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6357": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6358": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DIV",
      "path": "19"
    },
    "6359": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "MUL",
      "path": "19"
    },
    "6360": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6361": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6362": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6363": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6365": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "ADD",
      "path": "19"
    },
    "6366": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6367": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x190E"
    },
    "6370": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6371": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6372": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6373": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "ADD",
      "path": "19"
    },
    "6374": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6375": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6376": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6378": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6379": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6381": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6383": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6384": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6385": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6386": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6387": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6388": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6389": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6390": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6391": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6393": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "ADD",
      "path": "19"
    },
    "6394": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6395": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6397": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "ADD",
      "path": "19"
    },
    "6398": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6399": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6400": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "GT",
      "path": "19"
    },
    "6401": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18F1"
    },
    "6404": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6405": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6406": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6407": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SUB",
      "path": "19"
    },
    "6408": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6410": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "AND",
      "path": "19"
    },
    "6411": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6412": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "ADD",
      "path": "19"
    },
    "6413": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6414": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6415": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "POP",
      "path": "19"
    },
    "6416": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "POP",
      "path": "19"
    },
    "6417": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "POP",
      "path": "19"
    },
    "6418": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "POP",
      "path": "19"
    },
    "6419": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "POP",
      "path": "19"
    },
    "6420": {
      "fn": "ERC721URIStorage.tokenURI",
      "offset": [
        1204,
        1236
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6421": {
      "fn": "ERC721URIStorage.tokenURI",
      "jump": "o",
      "offset": [
        1204,
        1236
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6422": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9250,
        9393
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6423": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6425": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6432": {
      "op": "SHL"
    },
    "6433": {
      "op": "SUB"
    },
    "6434": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6435": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6436": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6437": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1940"
    },
    "6440": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6441": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6443": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6444": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6448": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6450": {
      "op": "SHL"
    },
    "6451": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6452": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6453": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6455": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6456": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "6459": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6460": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "6463": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6464": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6465": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9362
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 65,
      "value": "0x9"
    },
    "6467": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6468": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6475": {
      "op": "SHL"
    },
    "6476": {
      "op": "SUB"
    },
    "6477": {
      "op": "NOT"
    },
    "6478": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "AND",
      "path": "19"
    },
    "6479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6485": {
      "op": "SHL"
    },
    "6486": {
      "op": "SUB"
    },
    "6487": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6488": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6489": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6490": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "AND",
      "path": "19"
    },
    "6491": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6492": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6493": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6494": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "OR",
      "path": "19"
    },
    "6495": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6496": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "offset": [
        9344,
        9386
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6497": {
      "fn": "NodeRunner.updateMarketplaceAddress",
      "jump": "o",
      "offset": [
        9250,
        9393
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6498": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6499": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6501": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6508": {
      "op": "SHL"
    },
    "6509": {
      "op": "SUB"
    },
    "6510": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6511": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6512": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6513": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x198C"
    },
    "6516": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6517": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6519": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6526": {
      "op": "SHL"
    },
    "6527": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6528": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6529": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6531": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6532": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "6535": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6536": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D92"
    },
    "6539": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6540": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6547": {
      "op": "SHL"
    },
    "6548": {
      "op": "SUB"
    },
    "6549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 66
    },
    "6550": {
      "branch": 154,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "6551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19F1"
    },
    "6554": {
      "branch": 154,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6557": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6558": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6562": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6564": {
      "op": "SHL"
    },
    "6565": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6566": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6569": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6571": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6572": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "6573": {
      "op": "MSTORE"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6578": {
      "op": "DUP3"
    },
    "6579": {
      "op": "ADD"
    },
    "6580": {
      "op": "MSTORE"
    },
    "6581": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "6614": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6616": {
      "op": "DUP3"
    },
    "6617": {
      "op": "ADD"
    },
    "6618": {
      "op": "MSTORE"
    },
    "6619": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6628": {
      "op": "SHL"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6631": {
      "op": "DUP3"
    },
    "6632": {
      "op": "ADD"
    },
    "6633": {
      "op": "MSTORE"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6636": {
      "op": "ADD"
    },
    "6637": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "6640": {
      "op": "JUMP"
    },
    "6641": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6642": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 67,
      "value": "0xF5D"
    },
    "6645": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6646": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2454"
    },
    "6649": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6650": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6651": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2807,
        2820
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "6653": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2851,
        2852
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 68,
      "value": "0x0"
    },
    "6655": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2840,
        2848
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6656": {
      "branch": 128,
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2840,
        2852
      ],
      "op": "GT",
      "path": "19"
    },
    "6657": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2832,
        2903
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A63"
    },
    "6660": {
      "branch": 128,
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2832,
        2903
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6661": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2832,
        2903
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6663": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2832,
        2903
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6664": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6668": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6670": {
      "op": "SHL"
    },
    "6671": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2832,
        2903
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6672": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2832,
        2903
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6675": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2832,
        2903
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6677": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2832,
        2903
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6678": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2832,
        2903
      ],
      "op": "ADD",
      "path": "19"
    },
    "6679": {
      "op": "MSTORE"
    },
    "6680": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "6682": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6684": {
      "op": "DUP3"
    },
    "6685": {
      "op": "ADD"
    },
    "6686": {
      "op": "MSTORE"
    },
    "6687": {
      "op": "PUSH32",
      "value": "0x596F75206861766520746F206D696E74206174206C65617374206F6E65204E6F"
    },
    "6720": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6722": {
      "op": "DUP3"
    },
    "6723": {
      "op": "ADD"
    },
    "6724": {
      "op": "MSTORE"
    },
    "6725": {
      "op": "PUSH14",
      "value": "0x323290293AB73732B91027233A17"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "6742": {
      "op": "SHL"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6745": {
      "op": "DUP3"
    },
    "6746": {
      "op": "ADD"
    },
    "6747": {
      "op": "MSTORE"
    },
    "6748": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6750": {
      "op": "ADD"
    },
    "6751": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2832,
        2903
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97F"
    },
    "6754": {
      "op": "JUMP"
    },
    "6755": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2832,
        2903
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6756": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2955,
        2962
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 69,
      "value": "0xD"
    },
    "6758": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2955,
        2962
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6759": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2932,
        2941
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "6761": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6762": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2921,
        2951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A73"
    },
    "6765": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2921,
        2951
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6766": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2921,
        2929
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6767": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2921,
        2951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E8E"
    },
    "6770": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        2921,
        2951
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6771": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2921,
        2951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6772": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2921,
        2962
      ],
      "op": "GT",
      "path": "19"
    },
    "6773": {
      "branch": 129,
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2921,
        2962
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6774": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2913,
        3092
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B33"
    },
    "6777": {
      "branch": 129,
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2913,
        3092
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6778": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2913,
        3092
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6780": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2913,
        3092
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6787": {
      "op": "SHL"
    },
    "6788": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2913,
        3092
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6789": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2913,
        3092
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6792": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2913,
        3092
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6794": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2913,
        3092
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6795": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2913,
        3092
      ],
      "op": "ADD",
      "path": "19"
    },
    "6796": {
      "op": "MSTORE"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6801": {
      "op": "DUP3"
    },
    "6802": {
      "op": "ADD"
    },
    "6803": {
      "op": "MSTORE"
    },
    "6804": {
      "op": "PUSH32",
      "value": "0x5468657265206172656E277420656E6F756768204E6F64652052756E6E657220"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6839": {
      "op": "DUP3"
    },
    "6840": {
      "op": "ADD"
    },
    "6841": {
      "op": "MSTORE"
    },
    "6842": {
      "op": "PUSH32",
      "value": "0x4E46547320666F722074686973206E6F646520666F7220796F7520746F206D69"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6877": {
      "op": "DUP3"
    },
    "6878": {
      "op": "ADD"
    },
    "6879": {
      "op": "MSTORE"
    },
    "6880": {
      "op": "PUSH32",
      "value": "0x6E7420796F7520616D6F756E7420796F752063686F73652E20416E6F74686572"
    },
    "6913": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6915": {
      "op": "DUP3"
    },
    "6916": {
      "op": "ADD"
    },
    "6917": {
      "op": "MSTORE"
    },
    "6918": {
      "op": "PUSH32",
      "value": "0x206E6F64652077696C6C20626520617661696C61626C6520736F6F6E21000000"
    },
    "6951": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "6953": {
      "op": "DUP3"
    },
    "6954": {
      "op": "ADD"
    },
    "6955": {
      "op": "MSTORE"
    },
    "6956": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "6958": {
      "op": "ADD"
    },
    "6959": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2913,
        3092
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97F"
    },
    "6962": {
      "op": "JUMP"
    },
    "6963": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2913,
        3092
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6964": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3121
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 70,
      "value": "0xA"
    },
    "6966": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3121
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6967": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6969": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6970": {
      "op": "PUSH4",
      "value": "0x28DA575B"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6977": {
      "op": "SHL"
    },
    "6978": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6979": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6980": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3138,
        3148
      ],
      "op": "CALLER",
      "path": "19"
    },
    "6981": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6983": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6984": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "ADD",
      "path": "19"
    },
    "6985": {
      "op": "MSTORE"
    },
    "6986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6992": {
      "op": "SHL"
    },
    "6993": {
      "op": "SUB"
    },
    "6994": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3121
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6995": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3121
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6996": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3121
      ],
      "op": "AND",
      "path": "19"
    },
    "6997": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3121
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6998": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3137
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x28DA575B"
    },
    "7003": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3137
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7006": {
      "op": "ADD"
    },
    "7007": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7009": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7011": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7012": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7013": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7014": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "SUB",
      "path": "19"
    },
    "7015": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7016": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7017": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7018": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "7019": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7020": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7021": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7022": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B76"
    },
    "7025": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7026": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7028": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7029": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7030": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7031": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "POP",
      "path": "19"
    },
    "7032": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "GAS",
      "path": "19"
    },
    "7033": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "7034": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7035": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7036": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7037": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B8A"
    },
    "7040": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7041": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7042": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7044": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7045": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "7046": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7047": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7049": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7050": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7051": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "POP",
      "path": "19"
    },
    "7052": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "POP",
      "path": "19"
    },
    "7053": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "POP",
      "path": "19"
    },
    "7054": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "POP",
      "path": "19"
    },
    "7055": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7057": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7058": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7059": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7061": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "NOT",
      "path": "19"
    },
    "7062": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7064": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7065": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "ADD",
      "path": "19"
    },
    "7066": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "AND",
      "path": "19"
    },
    "7067": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7068": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "ADD",
      "path": "19"
    },
    "7069": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7070": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7072": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7073": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "POP",
      "path": "19"
    },
    "7074": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7075": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "ADD",
      "path": "19"
    },
    "7076": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7077": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BAE"
    },
    "7080": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7081": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7082": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E18"
    },
    "7085": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        3110,
        3149
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7086": {
      "branch": 130,
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3110,
        3149
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7087": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BCA"
    },
    "7090": {
      "branch": 130,
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7091": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7093": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7094": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7100": {
      "op": "SHL"
    },
    "7101": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7102": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7103": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7105": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "ADD",
      "path": "19"
    },
    "7106": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97F"
    },
    "7109": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7110": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2ED7"
    },
    "7113": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        3102,
        3212
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7114": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3102,
        3212
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7115": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3260,
        3274
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 71,
      "value": "0xE"
    },
    "7117": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3260,
        3274
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7118": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3234
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "7120": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3234
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7121": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7123": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7124": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7131": {
      "op": "SHL"
    },
    "7132": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7133": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7134": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3245,
        3255
      ],
      "op": "CALLER",
      "path": "19"
    },
    "7135": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7137": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7138": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "ADD",
      "path": "19"
    },
    "7139": {
      "op": "MSTORE"
    },
    "7140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7146": {
      "op": "SHL"
    },
    "7147": {
      "op": "SUB"
    },
    "7148": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3234
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7149": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3234
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7150": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3234
      ],
      "op": "AND",
      "path": "19"
    },
    "7151": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3234
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7152": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3244
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "7157": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3244
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7160": {
      "op": "ADD"
    },
    "7161": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7163": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7165": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7166": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7167": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7168": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "SUB",
      "path": "19"
    },
    "7169": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7170": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7171": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7172": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "7173": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7174": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7175": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7176": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C10"
    },
    "7179": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7180": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7182": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7183": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7184": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7185": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "POP",
      "path": "19"
    },
    "7186": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "GAS",
      "path": "19"
    },
    "7187": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "7188": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7189": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7190": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7191": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C24"
    },
    "7194": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7195": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7196": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7198": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7199": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "7200": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7201": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7203": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7204": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7205": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "POP",
      "path": "19"
    },
    "7206": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "POP",
      "path": "19"
    },
    "7207": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "POP",
      "path": "19"
    },
    "7208": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "POP",
      "path": "19"
    },
    "7209": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7211": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7212": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7213": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7215": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "NOT",
      "path": "19"
    },
    "7216": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7218": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7219": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "ADD",
      "path": "19"
    },
    "7220": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "AND",
      "path": "19"
    },
    "7221": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7222": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "ADD",
      "path": "19"
    },
    "7223": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7224": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7226": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7227": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "POP",
      "path": "19"
    },
    "7228": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7229": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "ADD",
      "path": "19"
    },
    "7230": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7231": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C48"
    },
    "7234": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7235": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7236": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E35"
    },
    "7239": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        3230,
        3256
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7240": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3256
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7241": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3274
      ],
      "op": "LT",
      "path": "19"
    },
    "7242": {
      "branch": 131,
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3230,
        3274
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7243": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3222,
        3337
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CBC"
    },
    "7246": {
      "branch": 131,
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3222,
        3337
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7247": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3222,
        3337
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7249": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3222,
        3337
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7256": {
      "op": "SHL"
    },
    "7257": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3222,
        3337
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7258": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3222,
        3337
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7261": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3222,
        3337
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7263": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3222,
        3337
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7264": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3222,
        3337
      ],
      "op": "ADD",
      "path": "19"
    },
    "7265": {
      "op": "MSTORE"
    },
    "7266": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "7268": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7270": {
      "op": "DUP3"
    },
    "7271": {
      "op": "ADD"
    },
    "7272": {
      "op": "MSTORE"
    },
    "7273": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F756768205553444320746F207061"
    },
    "7306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7308": {
      "op": "DUP3"
    },
    "7309": {
      "op": "ADD"
    },
    "7310": {
      "op": "MSTORE"
    },
    "7311": {
      "op": "PUSH32",
      "value": "0x7920666F7220746865204E6F64652052756E6E6572204E46542E000000000000"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7346": {
      "op": "DUP3"
    },
    "7347": {
      "op": "ADD"
    },
    "7348": {
      "op": "MSTORE"
    },
    "7349": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7351": {
      "op": "ADD"
    },
    "7352": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3222,
        3337
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97F"
    },
    "7355": {
      "op": "JUMP"
    },
    "7356": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3222,
        3337
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7357": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3400,
        3414
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 72,
      "value": "0xE"
    },
    "7359": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3400,
        3414
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7360": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3359
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "7362": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3359
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7363": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7365": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7366": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7373": {
      "op": "SHL"
    },
    "7374": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7375": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7376": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3370,
        3380
      ],
      "op": "CALLER",
      "path": "19"
    },
    "7377": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7379": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7380": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "ADD",
      "path": "19"
    },
    "7381": {
      "op": "MSTORE"
    },
    "7382": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3390,
        3394
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7385": {
      "op": "DUP3"
    },
    "7386": {
      "op": "ADD"
    },
    "7387": {
      "op": "MSTORE"
    },
    "7388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7394": {
      "op": "SHL"
    },
    "7395": {
      "op": "SUB"
    },
    "7396": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3359
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7397": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3359
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7398": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3359
      ],
      "op": "AND",
      "path": "19"
    },
    "7399": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3359
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7400": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3369
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDD62ED3E"
    },
    "7405": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3369
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7408": {
      "op": "ADD"
    },
    "7409": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7411": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7413": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7414": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7415": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7416": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "SUB",
      "path": "19"
    },
    "7417": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7418": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7419": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7420": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "7421": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7422": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7423": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7424": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D08"
    },
    "7427": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7428": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7430": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7431": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7432": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7433": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "POP",
      "path": "19"
    },
    "7434": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "GAS",
      "path": "19"
    },
    "7435": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "7436": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7437": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7438": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7439": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D1C"
    },
    "7442": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7443": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7444": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7446": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7447": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "7448": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7449": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7451": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7452": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7453": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "POP",
      "path": "19"
    },
    "7454": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "POP",
      "path": "19"
    },
    "7455": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "POP",
      "path": "19"
    },
    "7456": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "POP",
      "path": "19"
    },
    "7457": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7459": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7460": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7461": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7463": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "NOT",
      "path": "19"
    },
    "7464": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7466": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7467": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "ADD",
      "path": "19"
    },
    "7468": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "AND",
      "path": "19"
    },
    "7469": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7470": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "ADD",
      "path": "19"
    },
    "7471": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7472": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7474": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7475": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "POP",
      "path": "19"
    },
    "7476": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7477": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "ADD",
      "path": "19"
    },
    "7478": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7479": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D40"
    },
    "7482": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7483": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7484": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E35"
    },
    "7487": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        3355,
        3396
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7488": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3396
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7489": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3414
      ],
      "op": "LT",
      "path": "19"
    },
    "7490": {
      "branch": 132,
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3355,
        3414
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7491": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3347,
        3514
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DDA"
    },
    "7494": {
      "branch": 132,
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3347,
        3514
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7495": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3347,
        3514
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7497": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3347,
        3514
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7504": {
      "op": "SHL"
    },
    "7505": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3347,
        3514
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7506": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3347,
        3514
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7509": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3347,
        3514
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7511": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3347,
        3514
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7512": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3347,
        3514
      ],
      "op": "ADD",
      "path": "19"
    },
    "7513": {
      "op": "MSTORE"
    },
    "7514": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "7516": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7518": {
      "op": "DUP3"
    },
    "7519": {
      "op": "ADD"
    },
    "7520": {
      "op": "MSTORE"
    },
    "7521": {
      "op": "PUSH32",
      "value": "0x596F7520686176656E277420617070726F766564207468697320636F6E747261"
    },
    "7554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7556": {
      "op": "DUP3"
    },
    "7557": {
      "op": "ADD"
    },
    "7558": {
      "op": "MSTORE"
    },
    "7559": {
      "op": "PUSH32",
      "value": "0x637420746F207370656E6420656E6F756768206F6620796F7572205553444320"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7594": {
      "op": "DUP3"
    },
    "7595": {
      "op": "ADD"
    },
    "7596": {
      "op": "MSTORE"
    },
    "7597": {
      "op": "PUSH32",
      "value": "0x746F2070617920666F7220746865204E6F64652052756E6E6572204E46542E00"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7632": {
      "op": "DUP3"
    },
    "7633": {
      "op": "ADD"
    },
    "7634": {
      "op": "MSTORE"
    },
    "7635": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "7637": {
      "op": "ADD"
    },
    "7638": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3347,
        3514
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97F"
    },
    "7641": {
      "op": "JUMP"
    },
    "7642": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3347,
        3514
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7643": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3533,
        3562
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7645": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3579,
        3587
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7646": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7655": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7656": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "GT",
      "path": "19"
    },
    "7657": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7658": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DF5"
    },
    "7661": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7662": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DF5"
    },
    "7665": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A1C"
    },
    "7668": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        3565,
        3588
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7669": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7670": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7672": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7673": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7674": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7675": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7676": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7677": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7678": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7680": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "MUL",
      "path": "19"
    },
    "7681": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7683": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "ADD",
      "path": "19"
    },
    "7684": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7685": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "ADD",
      "path": "19"
    },
    "7686": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7688": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7689": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7690": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7691": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E1E"
    },
    "7694": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7695": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7696": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7698": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "ADD",
      "path": "19"
    },
    "7699": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7701": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7702": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "MUL",
      "path": "19"
    },
    "7703": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7704": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "7705": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7706": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "CALLDATACOPY",
      "path": "19"
    },
    "7707": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "ADD",
      "path": "19"
    },
    "7708": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7709": {
      "op": "POP"
    },
    "7710": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7711": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3565,
        3588
      ],
      "op": "POP",
      "path": "19"
    },
    "7712": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3533,
        3588
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7713": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3533,
        3588
      ],
      "op": "POP",
      "path": "19"
    },
    "7714": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3598,
        3607
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7716": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3622,
        4202
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7717": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3638,
        3646
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7718": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3634,
        3635
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7719": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3634,
        3646
      ],
      "op": "LT",
      "path": "19"
    },
    "7720": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3622,
        4202
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7721": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3622,
        4202
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F82"
    },
    "7724": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3622,
        4202
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7725": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3674
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 73,
      "value": "0xB"
    },
    "7727": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3674
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7728": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3715,
        3729
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "7730": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3715,
        3729
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7731": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7733": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7734": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7739": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7741": {
      "op": "SHL"
    },
    "7742": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7743": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7744": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3688,
        3698
      ],
      "op": "CALLER",
      "path": "19"
    },
    "7745": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7747": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7748": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "ADD",
      "path": "19"
    },
    "7749": {
      "op": "MSTORE"
    },
    "7750": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3708,
        3712
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "7751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7753": {
      "op": "DUP3"
    },
    "7754": {
      "op": "ADD"
    },
    "7755": {
      "op": "MSTORE"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7758": {
      "op": "DUP2"
    },
    "7759": {
      "op": "ADD"
    },
    "7760": {
      "op": "SWAP2"
    },
    "7761": {
      "op": "SWAP1"
    },
    "7762": {
      "op": "SWAP2"
    },
    "7763": {
      "op": "MSTORE"
    },
    "7764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7770": {
      "op": "SHL"
    },
    "7771": {
      "op": "SUB"
    },
    "7772": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3674
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7773": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3674
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7774": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3674
      ],
      "op": "AND",
      "path": "19"
    },
    "7775": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3674
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7776": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3687
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23B872DD"
    },
    "7781": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3687
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7782": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7784": {
      "op": "ADD"
    },
    "7785": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7787": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7789": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7790": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7791": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7792": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "SUB",
      "path": "19"
    },
    "7793": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7794": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7796": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP8",
      "path": "19"
    },
    "7797": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7798": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "7799": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7800": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7801": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7802": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E82"
    },
    "7805": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7806": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7808": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7809": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7810": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7811": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "POP",
      "path": "19"
    },
    "7812": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "GAS",
      "path": "19"
    },
    "7813": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "CALL",
      "path": "19"
    },
    "7814": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7815": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7816": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7817": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E96"
    },
    "7820": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7821": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7822": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7824": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7825": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "7826": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7827": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7829": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "REVERT",
      "path": "19"
    },
    "7830": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7831": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "POP",
      "path": "19"
    },
    "7832": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "POP",
      "path": "19"
    },
    "7833": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "POP",
      "path": "19"
    },
    "7834": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "POP",
      "path": "19"
    },
    "7835": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7837": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7838": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7839": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7841": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "NOT",
      "path": "19"
    },
    "7842": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7844": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7845": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "ADD",
      "path": "19"
    },
    "7846": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "AND",
      "path": "19"
    },
    "7847": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7848": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "ADD",
      "path": "19"
    },
    "7849": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7850": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7852": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7853": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "POP",
      "path": "19"
    },
    "7854": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7855": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "ADD",
      "path": "19"
    },
    "7856": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7857": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EBA"
    },
    "7860": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7861": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7862": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E18"
    },
    "7865": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        3670,
        3730
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7866": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7867": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3670,
        3730
      ],
      "op": "POP",
      "path": "19"
    },
    "7868": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3745,
        3766
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 74,
      "value": "0x1EC9"
    },
    "7871": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3745,
        3754
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "7873": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7874": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7875": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7877": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "12"
    },
    "7878": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7879": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7880": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7881": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3745,
        3766
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7882": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3780,
        3797
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7884": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3800,
        3819
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1ED4"
    },
    "7887": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3800,
        3809
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "7889": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7890": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7891": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7892": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3800,
        3819
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7893": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3867,
        3884
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 75,
      "value": "0xC"
    },
    "7895": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3867,
        3884
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7896": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3834,
        3864
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7898": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3834,
        3864
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7899": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3834,
        3864
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7900": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3834,
        3864
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7901": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3834,
        3853
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "7903": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3834,
        3864
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7905": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3834,
        3864
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7906": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3834,
        3864
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7908": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3834,
        3864
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7909": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3834,
        3864
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7910": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3834,
        3884
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7911": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3780,
        3819
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7912": {
      "op": "POP"
    },
    "7913": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3898,
        3926
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 76,
      "value": "0x1EF2"
    },
    "7916": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3904,
        3914
      ],
      "op": "CALLER",
      "path": "19"
    },
    "7917": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3780,
        3819
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7918": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3898,
        3903
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2321"
    },
    "7921": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        3898,
        3926
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7922": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3898,
        3926
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7923": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3940,
        3983
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 77,
      "value": "0x1F03"
    },
    "7926": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3953,
        3962
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7927": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3964,
        3982
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "7929": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3940,
        3983
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7930": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3940,
        3983
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7931": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3940,
        3983
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCC7"
    },
    "7934": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3940,
        3983
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7935": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3940,
        3983
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D57"
    },
    "7938": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        3940,
        3983
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7939": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3940,
        3983
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7940": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3997,
        4030
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 78,
      "value": "0x1F0D"
    },
    "7943": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4013,
        4017
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "7944": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4020,
        4029
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7945": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3997,
        4004
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A4"
    },
    "7948": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        3997,
        4030
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7949": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3997,
        4030
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7950": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4062,
        4080
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 79,
      "value": "0x9"
    },
    "7952": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4062,
        4080
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7953": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4044,
        4087
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F24"
    },
    "7956": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4044,
        4087
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7963": {
      "op": "SHL"
    },
    "7964": {
      "op": "SUB"
    },
    "7965": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4062,
        4080
      ],
      "op": "AND",
      "path": "19"
    },
    "7966": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4062,
        4080
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7968": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4044,
        4061
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x146A"
    },
    "7971": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        4044,
        4087
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7972": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4044,
        4087
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7973": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4120,
        4129
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 80
    },
    "7974": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4114
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7975": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4115,
        4116
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7976": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7977": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7978": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7979": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "LT",
      "path": "19"
    },
    "7980": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F37"
    },
    "7983": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7984": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F37"
    },
    "7987": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EC1"
    },
    "7990": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        4102,
        4117
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7991": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7992": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7994": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7995": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7996": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "MUL",
      "path": "19"
    },
    "7997": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7998": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7999": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8000": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "ADD",
      "path": "19"
    },
    "8001": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4117
      ],
      "op": "ADD",
      "path": "19"
    },
    "8002": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4102,
        4129
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8003": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4149,
        4191
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 81,
      "value": "0x40"
    },
    "8005": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4149,
        4191
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8006": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4181,
        4190
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8007": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4181,
        4190
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8008": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4169,
        4179
      ],
      "op": "CALLER",
      "path": "19"
    },
    "8009": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4169,
        4179
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8010": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4149,
        4191
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x86C96E58B5E24FD4DB3EA2D3803238D011FC9BABE088B2CB856F8A1A80A224A9"
    },
    "8043": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4149,
        4191
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8044": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4149,
        4191
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8046": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4149,
        4191
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8047": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4149,
        4191
      ],
      "op": "LOG3",
      "path": "19"
    },
    "8048": {
      "op": "POP"
    },
    "8049": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3648,
        3654
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 82,
      "value": "0x1F7B"
    },
    "8052": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3653,
        3654
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8054": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3648,
        3654
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8055": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3648,
        3654
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E8E"
    },
    "8058": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "i",
      "offset": [
        3648,
        3654
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8059": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3648,
        3654
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8060": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3648,
        3654
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8061": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3648,
        3654
      ],
      "op": "POP",
      "path": "19"
    },
    "8062": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3622,
        4202
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E24"
    },
    "8065": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3622,
        4202
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8066": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        3622,
        4202
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8067": {
      "op": "POP"
    },
    "8068": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        4219,
        4231
      ],
      "op": "SWAP3",
      "path": "19",
      "statement": 83
    },
    "8069": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "offset": [
        2744,
        4238
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8070": {
      "op": "POP"
    },
    "8071": {
      "op": "POP"
    },
    "8072": {
      "fn": "NodeRunner.mintNodeRunnerNFT",
      "jump": "o",
      "offset": [
        2744,
        4238
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8073": {
      "fn": "ERC721._exists",
      "offset": [
        7159,
        7284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8074": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8076": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 84
    },
    "8077": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8078": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8079": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "8081": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8083": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8084": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8086": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8087": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8088": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8095": {
      "op": "SHL"
    },
    "8096": {
      "op": "SUB"
    },
    "8097": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "5"
    },
    "8098": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8099": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8100": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8101": {
      "fn": "ERC721._exists",
      "jump": "o",
      "offset": [
        7159,
        7284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8102": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8103": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 85,
      "value": "0x0"
    },
    "8105": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8106": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8107": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8108": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11257
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "8110": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8112": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8113": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8115": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8116": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8117": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8118": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8125": {
      "op": "SHL"
    },
    "8126": {
      "op": "SUB"
    },
    "8127": {
      "op": "NOT"
    },
    "8128": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "5"
    },
    "8129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8135": {
      "op": "SHL"
    },
    "8136": {
      "op": "SUB"
    },
    "8137": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8138": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "5"
    },
    "8139": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8140": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8141": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "OR",
      "path": "5"
    },
    "8142": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8143": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8144": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8145": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8146": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8147": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 86,
      "value": "0x1FDB"
    },
    "8150": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8151": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11309
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDA0"
    },
    "8154": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8155": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8162": {
      "op": "SHL"
    },
    "8163": {
      "op": "SUB"
    },
    "8164": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "AND",
      "path": "5"
    },
    "8165": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8198": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8200": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8201": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8203": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8204": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8205": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8206": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SUB",
      "path": "5"
    },
    "8207": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8208": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "LOG4",
      "path": "5"
    },
    "8209": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "5"
    },
    "8210": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "5"
    },
    "8211": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8212": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1277,
        1491
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8213": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1392
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 87,
      "value": "0x201D"
    },
    "8216": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1384,
        1391
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8217": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1383
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F89"
    },
    "8220": {
      "fn": "ERC721URIStorage._setTokenURI",
      "jump": "i",
      "offset": [
        1376,
        1392
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8221": {
      "branch": 153,
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1376,
        1392
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8222": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2080"
    },
    "8225": {
      "branch": 153,
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8226": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8228": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8235": {
      "op": "SHL"
    },
    "8236": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8237": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8240": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "8242": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8243": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "ADD",
      "path": "8"
    },
    "8244": {
      "op": "MSTORE"
    },
    "8245": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8249": {
      "op": "DUP3"
    },
    "8250": {
      "op": "ADD"
    },
    "8251": {
      "op": "MSTORE"
    },
    "8252": {
      "op": "PUSH32",
      "value": "0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E"
    },
    "8285": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8287": {
      "op": "DUP3"
    },
    "8288": {
      "op": "ADD"
    },
    "8289": {
      "op": "MSTORE"
    },
    "8290": {
      "op": "PUSH14",
      "value": "0x32BC34B9BA32B73A103A37B5B2B7"
    },
    "8305": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "8307": {
      "op": "SHL"
    },
    "8308": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8310": {
      "op": "DUP3"
    },
    "8311": {
      "op": "ADD"
    },
    "8312": {
      "op": "MSTORE"
    },
    "8313": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8315": {
      "op": "ADD"
    },
    "8316": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x97F"
    },
    "8319": {
      "op": "JUMP"
    },
    "8320": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1368,
        1443
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8321": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 88,
      "value": "0x0"
    },
    "8323": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8324": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8325": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8326": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1463
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "8328": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8330": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8331": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8332": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8333": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8335": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8336": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8337": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1472
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "8338": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8339": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8340": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAB5"
    },
    "8343": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "8344": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "DUP5",
      "path": "8"
    },
    "8345": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "ADD",
      "path": "8"
    },
    "8346": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8347": {
      "fn": "ERC721URIStorage._setTokenURI",
      "offset": [
        1453,
        1484
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x288B"
    },
    "8350": {
      "fn": "ERC721URIStorage._setTokenURI",
      "jump": "i",
      "offset": [
        1453,
        1484
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8351": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8352": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7539
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8354": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7575
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 89,
      "value": "0x20AA"
    },
    "8357": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7567,
        7574
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8358": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7566
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F89"
    },
    "8361": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7559,
        7575
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8362": {
      "branch": 141,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7559,
        7575
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8363": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x210B"
    },
    "8366": {
      "branch": 141,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8367": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8369": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8370": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8374": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8376": {
      "op": "SHL"
    },
    "8377": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8378": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8381": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "8383": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8384": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "ADD",
      "path": "5"
    },
    "8385": {
      "op": "MSTORE"
    },
    "8386": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "8388": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8390": {
      "op": "DUP3"
    },
    "8391": {
      "op": "ADD"
    },
    "8392": {
      "op": "MSTORE"
    },
    "8393": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "8426": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8428": {
      "op": "DUP3"
    },
    "8429": {
      "op": "ADD"
    },
    "8430": {
      "op": "MSTORE"
    },
    "8431": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "8446": {
      "op": "SHL"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8449": {
      "op": "DUP3"
    },
    "8450": {
      "op": "ADD"
    },
    "8451": {
      "op": "MSTORE"
    },
    "8452": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8454": {
      "op": "ADD"
    },
    "8455": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "8458": {
      "op": "JUMP"
    },
    "8459": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8460": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8462": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2116"
    },
    "8465": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7672
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8466": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDA0"
    },
    "8469": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8470": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8471": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8472": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "POP",
      "path": "5"
    },
    "8473": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7702,
        7707
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 90
    },
    "8474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8480": {
      "op": "SHL"
    },
    "8481": {
      "op": "SUB"
    },
    "8482": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "5"
    },
    "8483": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7698
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8490": {
      "op": "SHL"
    },
    "8491": {
      "op": "SUB"
    },
    "8492": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "5"
    },
    "8493": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "EQ",
      "path": "5"
    },
    "8494": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8495": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2151"
    },
    "8498": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8499": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "POP",
      "path": "5"
    },
    "8500": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8507": {
      "op": "SHL"
    },
    "8508": {
      "op": "SUB"
    },
    "8509": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "5"
    },
    "8510": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2146"
    },
    "8513": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7723,
        7730
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8514": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x917"
    },
    "8517": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8518": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8525": {
      "op": "SHL"
    },
    "8526": {
      "op": "SUB"
    },
    "8527": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "5"
    },
    "8528": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "EQ",
      "path": "5"
    },
    "8529": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8530": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8531": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1880"
    },
    "8534": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8535": {
      "op": "POP"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8542": {
      "op": "SHL"
    },
    "8543": {
      "op": "SUB"
    },
    "8544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "5"
    },
    "8547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8552": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "8554": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8556": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8557": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8558": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8559": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8561": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8562": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8563": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8564": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "8565": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP9",
      "path": "5"
    },
    "8566": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "8567": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8568": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8569": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8570": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8571": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8572": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8573": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8574": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "8576": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "5"
    },
    "8577": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7778
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1880"
    },
    "8580": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8581": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        11057
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8582": {
      "fn": "ERC721._transfer",
      "offset": [
        10606,
        10610
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 91
    },
    "8583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8589": {
      "op": "SHL"
    },
    "8590": {
      "op": "SUB"
    },
    "8591": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "5"
    },
    "8592": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2198"
    },
    "8595": {
      "fn": "ERC721._transfer",
      "offset": [
        10594,
        10601
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8596": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10593
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDA0"
    },
    "8599": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8600": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8607": {
      "op": "SHL"
    },
    "8608": {
      "op": "SUB"
    },
    "8609": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "5"
    },
    "8610": {
      "branch": 142,
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "EQ",
      "path": "5"
    },
    "8611": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21FC"
    },
    "8614": {
      "branch": 142,
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8615": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8617": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8624": {
      "op": "SHL"
    },
    "8625": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8626": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8629": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "8631": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8632": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "ADD",
      "path": "5"
    },
    "8633": {
      "op": "MSTORE"
    },
    "8634": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "8636": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8638": {
      "op": "DUP3"
    },
    "8639": {
      "op": "ADD"
    },
    "8640": {
      "op": "MSTORE"
    },
    "8641": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8676": {
      "op": "DUP3"
    },
    "8677": {
      "op": "ADD"
    },
    "8678": {
      "op": "MSTORE"
    },
    "8679": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "8687": {
      "op": "SHL"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8690": {
      "op": "DUP3"
    },
    "8691": {
      "op": "ADD"
    },
    "8692": {
      "op": "MSTORE"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8695": {
      "op": "ADD"
    },
    "8696": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "8699": {
      "op": "JUMP"
    },
    "8700": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8707": {
      "op": "SHL"
    },
    "8708": {
      "op": "SUB"
    },
    "8709": {
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 92
    },
    "8710": {
      "branch": 143,
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "AND",
      "path": "5"
    },
    "8711": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x225E"
    },
    "8714": {
      "branch": 143,
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8715": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8717": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8718": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8722": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8724": {
      "op": "SHL"
    },
    "8725": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8726": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8729": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "8731": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8732": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "ADD",
      "path": "5"
    },
    "8733": {
      "op": "MSTORE"
    },
    "8734": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8736": {
      "op": "DUP1"
    },
    "8737": {
      "op": "DUP3"
    },
    "8738": {
      "op": "ADD"
    },
    "8739": {
      "op": "MSTORE"
    },
    "8740": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "8773": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8775": {
      "op": "DUP3"
    },
    "8776": {
      "op": "ADD"
    },
    "8777": {
      "op": "MSTORE"
    },
    "8778": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8785": {
      "op": "SHL"
    },
    "8786": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8788": {
      "op": "DUP3"
    },
    "8789": {
      "op": "ADD"
    },
    "8790": {
      "op": "MSTORE"
    },
    "8791": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8793": {
      "op": "ADD"
    },
    "8794": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "8797": {
      "op": "JUMP"
    },
    "8798": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8799": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 93,
      "value": "0x2269"
    },
    "8802": {
      "fn": "ERC721._transfer",
      "offset": [
        10856,
        10857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8804": {
      "fn": "ERC721._transfer",
      "offset": [
        10860,
        10867
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8805": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FA6"
    },
    "8808": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8809": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8816": {
      "op": "SHL"
    },
    "8817": {
      "op": "SUB"
    },
    "8818": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 94
    },
    "8819": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "AND",
      "path": "5"
    },
    "8820": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8822": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8823": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8824": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8825": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10888
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8827": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8829": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8830": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8832": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8833": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8834": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8835": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8836": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "8838": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8839": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8840": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2292"
    },
    "8843": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8844": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8845": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8846": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F63"
    },
    "8849": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8850": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8851": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8852": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8853": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8854": {
      "op": "POP"
    },
    "8855": {
      "op": "POP"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8862": {
      "op": "SHL"
    },
    "8863": {
      "op": "SUB"
    },
    "8864": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 95
    },
    "8865": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "AND",
      "path": "5"
    },
    "8866": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8868": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8869": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8870": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8871": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10918
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8873": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8875": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8876": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8878": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8879": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8880": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8881": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8882": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "8884": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8885": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8886": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22C0"
    },
    "8889": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8890": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8891": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8892": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E8E"
    },
    "8895": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8896": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8897": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8898": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8899": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8900": {
      "op": "POP"
    },
    "8901": {
      "op": "POP"
    },
    "8902": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 96,
      "value": "0x0"
    },
    "8904": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8905": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8906": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8907": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10944
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "8909": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8911": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8912": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8914": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8915": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8916": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8917": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8918": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8925": {
      "op": "SHL"
    },
    "8926": {
      "op": "SUB"
    },
    "8927": {
      "op": "NOT"
    },
    "8928": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "5"
    },
    "8929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8935": {
      "op": "SHL"
    },
    "8936": {
      "op": "SUB"
    },
    "8937": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP7",
      "path": "5"
    },
    "8938": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8939": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "5"
    },
    "8940": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8941": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8942": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "OR",
      "path": "5"
    },
    "8943": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8944": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8945": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8946": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 97
    },
    "8947": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8948": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8949": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "8950": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8951": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "DUP8",
      "path": "5"
    },
    "8952": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "AND",
      "path": "5"
    },
    "8953": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8954": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8987": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8988": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "LOG4",
      "path": "5"
    },
    "8989": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "8990": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "8991": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "8992": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8993": {
      "fn": "ERC721._mint",
      "offset": [
        9078,
        9505
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9000": {
      "op": "SHL"
    },
    "9001": {
      "op": "SUB"
    },
    "9002": {
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 98
    },
    "9003": {
      "branch": 144,
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "AND",
      "path": "5"
    },
    "9004": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2377"
    },
    "9007": {
      "branch": 144,
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9008": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9010": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9011": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9015": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9017": {
      "op": "SHL"
    },
    "9018": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9019": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9022": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9024": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9025": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "ADD",
      "path": "5"
    },
    "9026": {
      "op": "DUP2"
    },
    "9027": {
      "op": "SWAP1"
    },
    "9028": {
      "op": "MSTORE"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9031": {
      "op": "DUP3"
    },
    "9032": {
      "op": "ADD"
    },
    "9033": {
      "op": "MSTORE"
    },
    "9034": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "9067": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9069": {
      "op": "DUP3"
    },
    "9070": {
      "op": "ADD"
    },
    "9071": {
      "op": "MSTORE"
    },
    "9072": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9074": {
      "op": "ADD"
    },
    "9075": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "9078": {
      "op": "JUMP"
    },
    "9079": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9080": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9245
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 99,
      "value": "0x2380"
    },
    "9083": {
      "fn": "ERC721._mint",
      "offset": [
        9237,
        9244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9084": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9236
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F89"
    },
    "9087": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9229,
        9245
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9088": {
      "fn": "ERC721._mint",
      "offset": [
        9229,
        9245
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9089": {
      "branch": 145,
      "fn": "ERC721._mint",
      "offset": [
        9228,
        9245
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9090": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23CD"
    },
    "9093": {
      "branch": 145,
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9094": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9096": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9097": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9103": {
      "op": "SHL"
    },
    "9104": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9105": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9108": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9110": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9111": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "ADD",
      "path": "5"
    },
    "9112": {
      "op": "MSTORE"
    },
    "9113": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9117": {
      "op": "DUP3"
    },
    "9118": {
      "op": "ADD"
    },
    "9119": {
      "op": "MSTORE"
    },
    "9120": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9155": {
      "op": "DUP3"
    },
    "9156": {
      "op": "ADD"
    },
    "9157": {
      "op": "MSTORE"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9160": {
      "op": "ADD"
    },
    "9161": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "9164": {
      "op": "JUMP"
    },
    "9165": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9172": {
      "op": "SHL"
    },
    "9173": {
      "op": "SUB"
    },
    "9174": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 100
    },
    "9175": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "AND",
      "path": "5"
    },
    "9176": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9178": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9179": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9180": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9181": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9354
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "9183": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9185": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9186": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9188": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9189": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9190": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9191": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9192": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "9194": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9195": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9196": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23F6"
    },
    "9199": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9200": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9201": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9202": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E8E"
    },
    "9205": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9206": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9207": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9208": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9209": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9210": {
      "op": "POP"
    },
    "9211": {
      "op": "POP"
    },
    "9212": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 101,
      "value": "0x0"
    },
    "9214": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9215": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9216": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9217": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9380
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "9219": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9221": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9222": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9224": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9225": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9226": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9227": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9228": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9235": {
      "op": "SHL"
    },
    "9236": {
      "op": "SUB"
    },
    "9237": {
      "op": "NOT"
    },
    "9238": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "5"
    },
    "9239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9245": {
      "op": "SHL"
    },
    "9246": {
      "op": "SUB"
    },
    "9247": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP7",
      "path": "5"
    },
    "9248": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "5"
    },
    "9249": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9250": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9251": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "OR",
      "path": "5"
    },
    "9252": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9253": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9254": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9255": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 102
    },
    "9256": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9257": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9258": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9259": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9260": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9293": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9294": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9295": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9296": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "LOG4",
      "path": "5"
    },
    "9297": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8281,
        8323
      ],
      "op": "POP",
      "path": "19"
    },
    "9298": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "offset": [
        8181,
        8330
      ],
      "op": "POP",
      "path": "19"
    },
    "9299": {
      "fn": "NodeRunner.updateNodeRunnerTokenURI",
      "jump": "o",
      "offset": [
        8181,
        8330
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9300": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9301": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "9303": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9304": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9311": {
      "op": "SHL"
    },
    "9312": {
      "op": "SUB"
    },
    "9313": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 103
    },
    "9314": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9315": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9322": {
      "op": "SHL"
    },
    "9323": {
      "op": "SUB"
    },
    "9324": {
      "op": "NOT"
    },
    "9325": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9326": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9327": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9328": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "9329": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9330": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9331": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9332": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 104,
      "value": "0x40"
    },
    "9334": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9335": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9336": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "9337": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9338": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9339": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9340": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9341": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9374": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9375": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9377": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9378": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9379": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "9380": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "9381": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9382": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9383": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11624,
        11632
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 105
    },
    "9384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9390": {
      "op": "SHL"
    },
    "9391": {
      "op": "SUB"
    },
    "9392": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "5"
    },
    "9393": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11620
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9400": {
      "op": "SHL"
    },
    "9401": {
      "op": "SUB"
    },
    "9402": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "5"
    },
    "9403": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "EQ",
      "path": "5"
    },
    "9404": {
      "branch": 146,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9405": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2508"
    },
    "9408": {
      "branch": 146,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9409": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9411": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9418": {
      "op": "SHL"
    },
    "9419": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9420": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9423": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9425": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9426": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "ADD",
      "path": "5"
    },
    "9427": {
      "op": "MSTORE"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "9430": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9432": {
      "op": "DUP3"
    },
    "9433": {
      "op": "ADD"
    },
    "9434": {
      "op": "MSTORE"
    },
    "9435": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9470": {
      "op": "DUP3"
    },
    "9471": {
      "op": "ADD"
    },
    "9472": {
      "op": "MSTORE"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9475": {
      "op": "ADD"
    },
    "9476": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "9479": {
      "op": "JUMP"
    },
    "9480": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9487": {
      "op": "SHL"
    },
    "9488": {
      "op": "SUB"
    },
    "9489": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 106
    },
    "9490": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9491": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "AND",
      "path": "5"
    },
    "9492": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9494": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9495": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9496": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9497": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "9499": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9501": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9502": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9503": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9504": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9506": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9507": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9508": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9509": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "9510": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP8",
      "path": "5"
    },
    "9511": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "AND",
      "path": "5"
    },
    "9512": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9513": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9514": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9515": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "9516": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9517": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9518": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9519": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9520": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9521": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9522": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9523": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9524": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9526": {
      "op": "NOT"
    },
    "9527": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "AND",
      "path": "5"
    },
    "9528": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP7",
      "path": "5"
    },
    "9529": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9530": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9531": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9532": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9533": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "OR",
      "path": "5"
    },
    "9534": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9535": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9536": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9537": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 107
    },
    "9538": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9539": {
      "op": "SWAP2"
    },
    "9540": {
      "op": "DUP3"
    },
    "9541": {
      "op": "MSTORE"
    },
    "9542": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "9575": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9576": {
      "op": "ADD"
    },
    "9577": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9579": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9580": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9581": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9582": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SUB",
      "path": "5"
    },
    "9583": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9584": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "LOG3",
      "path": "5"
    },
    "9585": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "5"
    },
    "9586": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "5"
    },
    "9587": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "5"
    },
    "9588": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9589": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6549,
        6856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9590": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 108,
      "value": "0x2580"
    },
    "9593": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6710,
        6714
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9594": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6716,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9595": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6720,
        6727
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9596": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6709
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2185"
    },
    "9599": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9600": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9601": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 109,
      "value": "0x258C"
    },
    "9604": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6769,
        6773
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9605": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6775,
        6777
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9606": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6786
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9607": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6788,
        6793
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9608": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6768
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2680"
    },
    "9611": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9612": {
      "branch": 147,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9613": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x170B"
    },
    "9616": {
      "branch": 147,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9617": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9619": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9620": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9624": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9626": {
      "op": "SHL"
    },
    "9627": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9628": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9629": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9631": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "ADD",
      "path": "5"
    },
    "9632": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "9635": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9636": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F7A"
    },
    "9639": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9640": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9641": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2891,
        2904
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "9643": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2940
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 110,
      "value": "0x25B3"
    },
    "9646": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2932,
        2939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9647": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2931
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F89"
    },
    "9650": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2924,
        2940
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9651": {
      "branch": 148,
      "fn": "ERC721.tokenURI",
      "offset": [
        2924,
        2940
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9652": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2617"
    },
    "9655": {
      "branch": 148,
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9656": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9658": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9659": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9663": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9665": {
      "op": "SHL"
    },
    "9666": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9667": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9670": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9672": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9673": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "ADD",
      "path": "5"
    },
    "9674": {
      "op": "MSTORE"
    },
    "9675": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "9677": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9679": {
      "op": "DUP3"
    },
    "9680": {
      "op": "ADD"
    },
    "9681": {
      "op": "MSTORE"
    },
    "9682": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "9715": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9717": {
      "op": "DUP3"
    },
    "9718": {
      "op": "ADD"
    },
    "9719": {
      "op": "MSTORE"
    },
    "9720": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "9736": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "9738": {
      "op": "SHL"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9741": {
      "op": "DUP3"
    },
    "9742": {
      "op": "ADD"
    },
    "9743": {
      "op": "MSTORE"
    },
    "9744": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9746": {
      "op": "ADD"
    },
    "9747": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "9750": {
      "op": "JUMP"
    },
    "9751": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9752": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3024
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9754": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x262E"
    },
    "9757": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9759": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9760": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9761": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9763": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9764": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "9765": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9766": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9767": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9770": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9771": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9772": {
      "fn": "ERC721._baseURI",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9773": {
      "fn": "ERC721._baseURI",
      "offset": [
        3388,
        3480
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9774": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9775": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9776": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "POP",
      "path": "5"
    },
    "9777": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3078,
        3079
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 111,
      "value": "0x0"
    },
    "9779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3060,
        3067
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9780": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3075
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9781": {
      "branch": 149,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3079
      ],
      "op": "GT",
      "path": "5"
    },
    "9782": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x264E"
    },
    "9785": {
      "branch": 149,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9786": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9788": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9789": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9790": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9792": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "ADD",
      "path": "5"
    },
    "9793": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9795": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9796": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9797": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9800": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9801": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "POP",
      "path": "5"
    },
    "9802": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2679"
    },
    "9805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9806": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9807": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3106,
        3113
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9808": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2658"
    },
    "9811": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3122
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9812": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x278D"
    },
    "9815": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9816": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9817": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9819": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9820": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9822": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "ADD",
      "path": "5"
    },
    "9823": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2669"
    },
    "9826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9827": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9828": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9829": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F34"
    },
    "9832": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9833": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9834": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9836": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9837": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9839": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9841": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "5"
    },
    "9842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "5"
    },
    "9843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9844": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9845": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9846": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9848": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9849": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9850": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3140
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "9851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9852": {
      "op": "POP"
    },
    "9853": {
      "op": "POP"
    },
    "9854": {
      "op": "POP"
    },
    "9855": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9857": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12484,
        12488
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9865": {
      "op": "SHL"
    },
    "9866": {
      "op": "SUB"
    },
    "9867": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "AND",
      "path": "5"
    },
    "9869": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "10",
      "statement": 112
    },
    "9870": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1488
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "9871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2782"
    },
    "9874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9875": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9878": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "9883": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9885": {
      "op": "SHL"
    },
    "9886": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9887": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9894": {
      "op": "SHL"
    },
    "9895": {
      "op": "SUB"
    },
    "9896": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "DUP6",
      "path": "5"
    },
    "9897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "AND",
      "path": "5"
    },
    "9898": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x150B7A02"
    },
    "9904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26C4"
    },
    "9908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9909": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "9910": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "DUP10",
      "path": "5"
    },
    "9912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "DUP9",
      "path": "5"
    },
    "9914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9915": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "DUP9",
      "path": "5"
    },
    "9916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9917": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9919": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "9920": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FCC"
    },
    "9923": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9925": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9932": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SUB",
      "path": "5"
    },
    "9933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP8",
      "path": "5"
    },
    "9937": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "9939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9942": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26DE"
    },
    "9945": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9949": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "REVERT",
      "path": "5"
    },
    "9950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "9952": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "GAS",
      "path": "5"
    },
    "9953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "CALL",
      "path": "5"
    },
    "9954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "9956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "9957": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "5"
    },
    "9958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9960": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x270E"
    },
    "9963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9964": {
      "op": "POP"
    },
    "9965": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9969": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "9971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "9972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "9975": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9977": {
      "op": "NOT"
    },
    "9978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "AND",
      "path": "5"
    },
    "9979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9980": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "9981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x270B"
    },
    "9987": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9989": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "5"
    },
    "9990": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9991": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3009"
    },
    "9994": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9996": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "9998": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9999": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2768"
    },
    "10002": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "10004": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x273C"
    },
    "10010": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10013": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10014": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10015": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "5"
    },
    "10016": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "10018": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "NOT",
      "path": "5"
    },
    "10019": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "10021": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "10022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "5"
    },
    "10023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "AND",
      "path": "5"
    },
    "10024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "5"
    },
    "10026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "10030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "10033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10037": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "5"
    },
    "10039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "10040": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2741"
    },
    "10043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10044": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10045": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "10047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10048": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "5"
    },
    "10049": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10050": {
      "op": "POP"
    },
    "10051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10052": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10053": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2760"
    },
    "10056": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10057": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 113,
      "value": "0x40"
    },
    "10059": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10066": {
      "op": "SHL"
    },
    "10067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10068": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10069": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "ADD",
      "path": "5"
    },
    "10072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "10075": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F7A"
    },
    "10079": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12820,
        12880
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12992,
        12998
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12986,
        12999
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12977,
        12983
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10084": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12973,
        12975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12969,
        12984
      ],
      "op": "ADD",
      "path": "5"
    },
    "10087": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12962,
        13000
      ],
      "op": "REVERT",
      "path": "5"
    },
    "10088": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10093": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10095": {
      "op": "SHL"
    },
    "10096": {
      "op": "SUB"
    },
    "10097": {
      "op": "NOT"
    },
    "10098": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "AND",
      "path": "5",
      "statement": 114
    },
    "10099": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10104": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10106": {
      "op": "SHL"
    },
    "10107": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "EQ",
      "path": "5"
    },
    "10108": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10109": {
      "op": "POP"
    },
    "10110": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1880"
    },
    "10113": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10114": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10115": {
      "op": "POP"
    },
    "10116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13091,
        13095
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 115,
      "value": "0x1"
    },
    "10118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "10119": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "10120": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "5"
    },
    "10121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "5"
    },
    "10122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "5"
    },
    "10123": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "5"
    },
    "10124": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10125": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10126": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "10128": {
      "branch": 155,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10129": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x27B1"
    },
    "10132": {
      "branch": 155,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10133": {
      "op": "POP"
    },
    "10134": {
      "op": "POP"
    },
    "10135": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 116,
      "value": "0x40"
    },
    "10137": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10138": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10139": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10140": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10141": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "13"
    },
    "10142": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10143": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10144": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10145": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10147": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10148": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10149": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "10153": {
      "op": "SHL"
    },
    "10154": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10156": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10157": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "13"
    },
    "10158": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10159": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10160": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10161": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10162": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10163": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10165": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10166": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10167": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10168": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x27DB"
    },
    "10171": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10172": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 117
    },
    "10173": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x27C5"
    },
    "10176": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10177": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2EA6"
    },
    "10180": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10181": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10182": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10183": {
      "op": "POP"
    },
    "10184": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 118,
      "value": "0x27D4"
    },
    "10187": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10188": {
      "op": "POP"
    },
    "10189": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "10191": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10192": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E7A"
    },
    "10195": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10196": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10197": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10198": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "13"
    },
    "10199": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x27B5"
    },
    "10202": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10203": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10204": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10206": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10207": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "13",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10216": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10217": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "13"
    },
    "10218": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10219": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x27F6"
    },
    "10222": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10223": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x27F6"
    },
    "10226": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A1C"
    },
    "10229": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10230": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10231": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10233": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10234": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10235": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10236": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10237": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10238": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10239": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "10241": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "13"
    },
    "10242": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "10244": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "13"
    },
    "10245": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "13"
    },
    "10246": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10248": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "13"
    },
    "10249": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10250": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "13"
    },
    "10251": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10253": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10254": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10255": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10256": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2820"
    },
    "10259": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10260": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10262": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10263": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "13"
    },
    "10264": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10265": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10266": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "10267": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10268": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "13"
    },
    "10269": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "13"
    },
    "10270": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10271": {
      "op": "POP"
    },
    "10272": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10273": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "13"
    },
    "10274": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10275": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "13"
    },
    "10276": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10277": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10278": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10279": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1880"
    },
    "10282": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10283": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 119,
      "value": "0x2835"
    },
    "10286": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10288": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10289": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2F63"
    },
    "10292": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10293": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10294": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10295": {
      "op": "POP"
    },
    "10296": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 120,
      "value": "0x2842"
    },
    "10299": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "10301": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "13"
    },
    "10302": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3026"
    },
    "10305": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10306": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10307": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x284D"
    },
    "10310": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10311": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x30"
    },
    "10313": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E8E"
    },
    "10316": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10317": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10318": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xF8"
    },
    "10320": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "13"
    },
    "10321": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10322": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10323": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10324": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10325": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10326": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "13"
    },
    "10327": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2862"
    },
    "10330": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10331": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2862"
    },
    "10334": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2EC1"
    },
    "10337": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10338": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10339": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10341": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "13"
    },
    "10342": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "13"
    },
    "10343": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10348": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10350": {
      "op": "SHL"
    },
    "10351": {
      "op": "SUB"
    },
    "10352": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "13"
    },
    "10353": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "13"
    },
    "10354": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10355": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10356": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10358": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "13"
    },
    "10359": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10360": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "13"
    },
    "10361": {
      "op": "POP"
    },
    "10362": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 121,
      "value": "0x2884"
    },
    "10365": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "10367": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "13"
    },
    "10368": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E7A"
    },
    "10371": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10372": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10373": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "10374": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "13"
    },
    "10375": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2824"
    },
    "10378": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10379": {
      "op": "JUMPDEST"
    },
    "10380": {
      "op": "DUP3"
    },
    "10381": {
      "op": "DUP1"
    },
    "10382": {
      "op": "SLOAD"
    },
    "10383": {
      "op": "PUSH2",
      "value": "0x2897"
    },
    "10386": {
      "op": "SWAP1"
    },
    "10387": {
      "op": "PUSH2",
      "value": "0x2D57"
    },
    "10390": {
      "jump": "i",
      "op": "JUMP"
    },
    "10391": {
      "op": "JUMPDEST"
    },
    "10392": {
      "op": "SWAP1"
    },
    "10393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10395": {
      "op": "MSTORE"
    },
    "10396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10400": {
      "op": "KECCAK256"
    },
    "10401": {
      "op": "SWAP1"
    },
    "10402": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10404": {
      "op": "ADD"
    },
    "10405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10407": {
      "op": "SWAP1"
    },
    "10408": {
      "op": "DIV"
    },
    "10409": {
      "op": "DUP2"
    },
    "10410": {
      "op": "ADD"
    },
    "10411": {
      "op": "SWAP3"
    },
    "10412": {
      "op": "DUP3"
    },
    "10413": {
      "op": "PUSH2",
      "value": "0x28B9"
    },
    "10416": {
      "op": "JUMPI"
    },
    "10417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10419": {
      "op": "DUP6"
    },
    "10420": {
      "op": "SSTORE"
    },
    "10421": {
      "op": "PUSH2",
      "value": "0x28FF"
    },
    "10424": {
      "op": "JUMP"
    },
    "10425": {
      "op": "JUMPDEST"
    },
    "10426": {
      "op": "DUP3"
    },
    "10427": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10429": {
      "op": "LT"
    },
    "10430": {
      "op": "PUSH2",
      "value": "0x28D2"
    },
    "10433": {
      "op": "JUMPI"
    },
    "10434": {
      "op": "DUP1"
    },
    "10435": {
      "op": "MLOAD"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10438": {
      "op": "NOT"
    },
    "10439": {
      "op": "AND"
    },
    "10440": {
      "op": "DUP4"
    },
    "10441": {
      "op": "DUP1"
    },
    "10442": {
      "op": "ADD"
    },
    "10443": {
      "op": "OR"
    },
    "10444": {
      "op": "DUP6"
    },
    "10445": {
      "op": "SSTORE"
    },
    "10446": {
      "op": "PUSH2",
      "value": "0x28FF"
    },
    "10449": {
      "op": "JUMP"
    },
    "10450": {
      "op": "JUMPDEST"
    },
    "10451": {
      "op": "DUP3"
    },
    "10452": {
      "op": "DUP1"
    },
    "10453": {
      "op": "ADD"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10456": {
      "op": "ADD"
    },
    "10457": {
      "op": "DUP6"
    },
    "10458": {
      "op": "SSTORE"
    },
    "10459": {
      "op": "DUP3"
    },
    "10460": {
      "op": "ISZERO"
    },
    "10461": {
      "op": "PUSH2",
      "value": "0x28FF"
    },
    "10464": {
      "op": "JUMPI"
    },
    "10465": {
      "op": "SWAP2"
    },
    "10466": {
      "op": "DUP3"
    },
    "10467": {
      "op": "ADD"
    },
    "10468": {
      "op": "JUMPDEST"
    },
    "10469": {
      "op": "DUP3"
    },
    "10470": {
      "op": "DUP2"
    },
    "10471": {
      "op": "GT"
    },
    "10472": {
      "op": "ISZERO"
    },
    "10473": {
      "op": "PUSH2",
      "value": "0x28FF"
    },
    "10476": {
      "op": "JUMPI"
    },
    "10477": {
      "op": "DUP3"
    },
    "10478": {
      "op": "MLOAD"
    },
    "10479": {
      "op": "DUP3"
    },
    "10480": {
      "op": "SSTORE"
    },
    "10481": {
      "op": "SWAP2"
    },
    "10482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10484": {
      "op": "ADD"
    },
    "10485": {
      "op": "SWAP2"
    },
    "10486": {
      "op": "SWAP1"
    },
    "10487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10489": {
      "op": "ADD"
    },
    "10490": {
      "op": "SWAP1"
    },
    "10491": {
      "op": "PUSH2",
      "value": "0x28E4"
    },
    "10494": {
      "op": "JUMP"
    },
    "10495": {
      "op": "JUMPDEST"
    },
    "10496": {
      "op": "POP"
    },
    "10497": {
      "op": "PUSH2",
      "value": "0x290B"
    },
    "10500": {
      "op": "SWAP3"
    },
    "10501": {
      "op": "SWAP2"
    },
    "10502": {
      "op": "POP"
    },
    "10503": {
      "op": "PUSH2",
      "value": "0x290F"
    },
    "10506": {
      "jump": "i",
      "op": "JUMP"
    },
    "10507": {
      "op": "JUMPDEST"
    },
    "10508": {
      "op": "POP"
    },
    "10509": {
      "op": "SWAP1"
    },
    "10510": {
      "jump": "o",
      "op": "JUMP"
    },
    "10511": {
      "op": "JUMPDEST"
    },
    "10512": {
      "op": "JUMPDEST"
    },
    "10513": {
      "op": "DUP1"
    },
    "10514": {
      "op": "DUP3"
    },
    "10515": {
      "op": "GT"
    },
    "10516": {
      "op": "ISZERO"
    },
    "10517": {
      "op": "PUSH2",
      "value": "0x290B"
    },
    "10520": {
      "op": "JUMPI"
    },
    "10521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10523": {
      "op": "DUP2"
    },
    "10524": {
      "op": "SSTORE"
    },
    "10525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10527": {
      "op": "ADD"
    },
    "10528": {
      "op": "PUSH2",
      "value": "0x2910"
    },
    "10531": {
      "op": "JUMP"
    },
    "10532": {
      "op": "JUMPDEST"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10537": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10539": {
      "op": "SHL"
    },
    "10540": {
      "op": "SUB"
    },
    "10541": {
      "op": "NOT"
    },
    "10542": {
      "op": "DUP2"
    },
    "10543": {
      "op": "AND"
    },
    "10544": {
      "op": "DUP2"
    },
    "10545": {
      "op": "EQ"
    },
    "10546": {
      "op": "PUSH2",
      "value": "0xF5D"
    },
    "10549": {
      "op": "JUMPI"
    },
    "10550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10552": {
      "op": "DUP1"
    },
    "10553": {
      "op": "REVERT"
    },
    "10554": {
      "op": "JUMPDEST"
    },
    "10555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10559": {
      "op": "DUP3"
    },
    "10560": {
      "op": "DUP5"
    },
    "10561": {
      "op": "SUB"
    },
    "10562": {
      "op": "SLT"
    },
    "10563": {
      "op": "ISZERO"
    },
    "10564": {
      "op": "PUSH2",
      "value": "0x294C"
    },
    "10567": {
      "op": "JUMPI"
    },
    "10568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10570": {
      "op": "DUP1"
    },
    "10571": {
      "op": "REVERT"
    },
    "10572": {
      "op": "JUMPDEST"
    },
    "10573": {
      "op": "DUP2"
    },
    "10574": {
      "op": "CALLDATALOAD"
    },
    "10575": {
      "op": "PUSH2",
      "value": "0x2679"
    },
    "10578": {
      "op": "DUP2"
    },
    "10579": {
      "op": "PUSH2",
      "value": "0x2924"
    },
    "10582": {
      "jump": "i",
      "op": "JUMP"
    },
    "10583": {
      "op": "JUMPDEST"
    },
    "10584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10586": {
      "op": "JUMPDEST"
    },
    "10587": {
      "op": "DUP4"
    },
    "10588": {
      "op": "DUP2"
    },
    "10589": {
      "op": "LT"
    },
    "10590": {
      "op": "ISZERO"
    },
    "10591": {
      "op": "PUSH2",
      "value": "0x2972"
    },
    "10594": {
      "op": "JUMPI"
    },
    "10595": {
      "op": "DUP2"
    },
    "10596": {
      "op": "DUP2"
    },
    "10597": {
      "op": "ADD"
    },
    "10598": {
      "op": "MLOAD"
    },
    "10599": {
      "op": "DUP4"
    },
    "10600": {
      "op": "DUP3"
    },
    "10601": {
      "op": "ADD"
    },
    "10602": {
      "op": "MSTORE"
    },
    "10603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10605": {
      "op": "ADD"
    },
    "10606": {
      "op": "PUSH2",
      "value": "0x295A"
    },
    "10609": {
      "op": "JUMP"
    },
    "10610": {
      "op": "JUMPDEST"
    },
    "10611": {
      "op": "DUP4"
    },
    "10612": {
      "op": "DUP2"
    },
    "10613": {
      "op": "GT"
    },
    "10614": {
      "op": "ISZERO"
    },
    "10615": {
      "op": "PUSH2",
      "value": "0x170B"
    },
    "10618": {
      "op": "JUMPI"
    },
    "10619": {
      "op": "POP"
    },
    "10620": {
      "op": "POP"
    },
    "10621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10623": {
      "op": "SWAP2"
    },
    "10624": {
      "op": "ADD"
    },
    "10625": {
      "op": "MSTORE"
    },
    "10626": {
      "jump": "o",
      "op": "JUMP"
    },
    "10627": {
      "op": "JUMPDEST"
    },
    "10628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10630": {
      "op": "DUP2"
    },
    "10631": {
      "op": "MLOAD"
    },
    "10632": {
      "op": "DUP1"
    },
    "10633": {
      "op": "DUP5"
    },
    "10634": {
      "op": "MSTORE"
    },
    "10635": {
      "op": "PUSH2",
      "value": "0x299B"
    },
    "10638": {
      "op": "DUP2"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10641": {
      "op": "DUP7"
    },
    "10642": {
      "op": "ADD"
    },
    "10643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10645": {
      "op": "DUP7"
    },
    "10646": {
      "op": "ADD"
    },
    "10647": {
      "op": "PUSH2",
      "value": "0x2957"
    },
    "10650": {
      "jump": "i",
      "op": "JUMP"
    },
    "10651": {
      "op": "JUMPDEST"
    },
    "10652": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10654": {
      "op": "ADD"
    },
    "10655": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10657": {
      "op": "NOT"
    },
    "10658": {
      "op": "AND"
    },
    "10659": {
      "op": "SWAP3"
    },
    "10660": {
      "op": "SWAP1"
    },
    "10661": {
      "op": "SWAP3"
    },
    "10662": {
      "op": "ADD"
    },
    "10663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10665": {
      "op": "ADD"
    },
    "10666": {
      "op": "SWAP3"
    },
    "10667": {
      "op": "SWAP2"
    },
    "10668": {
      "op": "POP"
    },
    "10669": {
      "op": "POP"
    },
    "10670": {
      "jump": "o",
      "op": "JUMP"
    },
    "10671": {
      "op": "JUMPDEST"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10674": {
      "op": "DUP2"
    },
    "10675": {
      "op": "MSTORE"
    },
    "10676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10678": {
      "op": "PUSH2",
      "value": "0x2679"
    },
    "10681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10683": {
      "op": "DUP4"
    },
    "10684": {
      "op": "ADD"
    },
    "10685": {
      "op": "DUP5"
    },
    "10686": {
      "op": "PUSH2",
      "value": "0x2983"
    },
    "10689": {
      "jump": "i",
      "op": "JUMP"
    },
    "10690": {
      "op": "JUMPDEST"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10695": {
      "op": "DUP3"
    },
    "10696": {
      "op": "DUP5"
    },
    "10697": {
      "op": "SUB"
    },
    "10698": {
      "op": "SLT"
    },
    "10699": {
      "op": "ISZERO"
    },
    "10700": {
      "op": "PUSH2",
      "value": "0x29D4"
    },
    "10703": {
      "op": "JUMPI"
    },
    "10704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10706": {
      "op": "DUP1"
    },
    "10707": {
      "op": "REVERT"
    },
    "10708": {
      "op": "JUMPDEST"
    },
    "10709": {
      "op": "POP"
    },
    "10710": {
      "op": "CALLDATALOAD"
    },
    "10711": {
      "op": "SWAP2"
    },
    "10712": {
      "op": "SWAP1"
    },
    "10713": {
      "op": "POP"
    },
    "10714": {
      "jump": "o",
      "op": "JUMP"
    },
    "10715": {
      "op": "JUMPDEST"
    },
    "10716": {
      "op": "DUP1"
    },
    "10717": {
      "op": "CALLDATALOAD"
    },
    "10718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10724": {
      "op": "SHL"
    },
    "10725": {
      "op": "SUB"
    },
    "10726": {
      "op": "DUP2"
    },
    "10727": {
      "op": "AND"
    },
    "10728": {
      "op": "DUP2"
    },
    "10729": {
      "op": "EQ"
    },
    "10730": {
      "op": "PUSH2",
      "value": "0xD9B"
    },
    "10733": {
      "op": "JUMPI"
    },
    "10734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10736": {
      "op": "DUP1"
    },
    "10737": {
      "op": "REVERT"
    },
    "10738": {
      "op": "JUMPDEST"
    },
    "10739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10741": {
      "op": "DUP1"
    },
    "10742": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10744": {
      "op": "DUP4"
    },
    "10745": {
      "op": "DUP6"
    },
    "10746": {
      "op": "SUB"
    },
    "10747": {
      "op": "SLT"
    },
    "10748": {
      "op": "ISZERO"
    },
    "10749": {
      "op": "PUSH2",
      "value": "0x2A05"
    },
    "10752": {
      "op": "JUMPI"
    },
    "10753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10755": {
      "op": "DUP1"
    },
    "10756": {
      "op": "REVERT"
    },
    "10757": {
      "op": "JUMPDEST"
    },
    "10758": {
      "op": "PUSH2",
      "value": "0x2A0E"
    },
    "10761": {
      "op": "DUP4"
    },
    "10762": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "10765": {
      "jump": "i",
      "op": "JUMP"
    },
    "10766": {
      "op": "JUMPDEST"
    },
    "10767": {
      "op": "SWAP5"
    },
    "10768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10770": {
      "op": "SWAP4"
    },
    "10771": {
      "op": "SWAP1"
    },
    "10772": {
      "op": "SWAP4"
    },
    "10773": {
      "op": "ADD"
    },
    "10774": {
      "op": "CALLDATALOAD"
    },
    "10775": {
      "op": "SWAP4"
    },
    "10776": {
      "op": "POP"
    },
    "10777": {
      "op": "POP"
    },
    "10778": {
      "op": "POP"
    },
    "10779": {
      "jump": "o",
      "op": "JUMP"
    },
    "10780": {
      "op": "JUMPDEST"
    },
    "10781": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10786": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10788": {
      "op": "SHL"
    },
    "10789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10791": {
      "op": "MSTORE"
    },
    "10792": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10796": {
      "op": "MSTORE"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10801": {
      "op": "REVERT"
    },
    "10802": {
      "op": "JUMPDEST"
    },
    "10803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10805": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10814": {
      "op": "DUP1"
    },
    "10815": {
      "op": "DUP5"
    },
    "10816": {
      "op": "GT"
    },
    "10817": {
      "op": "ISZERO"
    },
    "10818": {
      "op": "PUSH2",
      "value": "0x2A4D"
    },
    "10821": {
      "op": "JUMPI"
    },
    "10822": {
      "op": "PUSH2",
      "value": "0x2A4D"
    },
    "10825": {
      "op": "PUSH2",
      "value": "0x2A1C"
    },
    "10828": {
      "jump": "i",
      "op": "JUMP"
    },
    "10829": {
      "op": "JUMPDEST"
    },
    "10830": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10832": {
      "op": "MLOAD"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10835": {
      "op": "DUP6"
    },
    "10836": {
      "op": "ADD"
    },
    "10837": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10839": {
      "op": "NOT"
    },
    "10840": {
      "op": "SWAP1"
    },
    "10841": {
      "op": "DUP2"
    },
    "10842": {
      "op": "AND"
    },
    "10843": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10845": {
      "op": "ADD"
    },
    "10846": {
      "op": "AND"
    },
    "10847": {
      "op": "DUP2"
    },
    "10848": {
      "op": "ADD"
    },
    "10849": {
      "op": "SWAP1"
    },
    "10850": {
      "op": "DUP3"
    },
    "10851": {
      "op": "DUP3"
    },
    "10852": {
      "op": "GT"
    },
    "10853": {
      "op": "DUP2"
    },
    "10854": {
      "op": "DUP4"
    },
    "10855": {
      "op": "LT"
    },
    "10856": {
      "op": "OR"
    },
    "10857": {
      "op": "ISZERO"
    },
    "10858": {
      "op": "PUSH2",
      "value": "0x2A75"
    },
    "10861": {
      "op": "JUMPI"
    },
    "10862": {
      "op": "PUSH2",
      "value": "0x2A75"
    },
    "10865": {
      "op": "PUSH2",
      "value": "0x2A1C"
    },
    "10868": {
      "jump": "i",
      "op": "JUMP"
    },
    "10869": {
      "op": "JUMPDEST"
    },
    "10870": {
      "op": "DUP2"
    },
    "10871": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10873": {
      "op": "MSTORE"
    },
    "10874": {
      "op": "DUP1"
    },
    "10875": {
      "op": "SWAP4"
    },
    "10876": {
      "op": "POP"
    },
    "10877": {
      "op": "DUP6"
    },
    "10878": {
      "op": "DUP2"
    },
    "10879": {
      "op": "MSTORE"
    },
    "10880": {
      "op": "DUP7"
    },
    "10881": {
      "op": "DUP7"
    },
    "10882": {
      "op": "DUP7"
    },
    "10883": {
      "op": "ADD"
    },
    "10884": {
      "op": "GT"
    },
    "10885": {
      "op": "ISZERO"
    },
    "10886": {
      "op": "PUSH2",
      "value": "0x2A8E"
    },
    "10889": {
      "op": "JUMPI"
    },
    "10890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10892": {
      "op": "DUP1"
    },
    "10893": {
      "op": "REVERT"
    },
    "10894": {
      "op": "JUMPDEST"
    },
    "10895": {
      "op": "DUP6"
    },
    "10896": {
      "op": "DUP6"
    },
    "10897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10899": {
      "op": "DUP4"
    },
    "10900": {
      "op": "ADD"
    },
    "10901": {
      "op": "CALLDATACOPY"
    },
    "10902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10906": {
      "op": "DUP8"
    },
    "10907": {
      "op": "DUP4"
    },
    "10908": {
      "op": "ADD"
    },
    "10909": {
      "op": "ADD"
    },
    "10910": {
      "op": "MSTORE"
    },
    "10911": {
      "op": "POP"
    },
    "10912": {
      "op": "POP"
    },
    "10913": {
      "op": "POP"
    },
    "10914": {
      "op": "SWAP4"
    },
    "10915": {
      "op": "SWAP3"
    },
    "10916": {
      "op": "POP"
    },
    "10917": {
      "op": "POP"
    },
    "10918": {
      "op": "POP"
    },
    "10919": {
      "jump": "o",
      "op": "JUMP"
    },
    "10920": {
      "op": "JUMPDEST"
    },
    "10921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10923": {
      "op": "DUP3"
    },
    "10924": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10926": {
      "op": "DUP4"
    },
    "10927": {
      "op": "ADD"
    },
    "10928": {
      "op": "SLT"
    },
    "10929": {
      "op": "PUSH2",
      "value": "0x2AB9"
    },
    "10932": {
      "op": "JUMPI"
    },
    "10933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10935": {
      "op": "DUP1"
    },
    "10936": {
      "op": "REVERT"
    },
    "10937": {
      "op": "JUMPDEST"
    },
    "10938": {
      "op": "PUSH2",
      "value": "0x2679"
    },
    "10941": {
      "op": "DUP4"
    },
    "10942": {
      "op": "DUP4"
    },
    "10943": {
      "op": "CALLDATALOAD"
    },
    "10944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10946": {
      "op": "DUP6"
    },
    "10947": {
      "op": "ADD"
    },
    "10948": {
      "op": "PUSH2",
      "value": "0x2A32"
    },
    "10951": {
      "jump": "i",
      "op": "JUMP"
    },
    "10952": {
      "op": "JUMPDEST"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10955": {
      "op": "DUP1"
    },
    "10956": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10958": {
      "op": "DUP4"
    },
    "10959": {
      "op": "DUP6"
    },
    "10960": {
      "op": "SUB"
    },
    "10961": {
      "op": "SLT"
    },
    "10962": {
      "op": "ISZERO"
    },
    "10963": {
      "op": "PUSH2",
      "value": "0x2ADB"
    },
    "10966": {
      "op": "JUMPI"
    },
    "10967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10969": {
      "op": "DUP1"
    },
    "10970": {
      "op": "REVERT"
    },
    "10971": {
      "op": "JUMPDEST"
    },
    "10972": {
      "op": "DUP3"
    },
    "10973": {
      "op": "CALLDATALOAD"
    },
    "10974": {
      "op": "SWAP2"
    },
    "10975": {
      "op": "POP"
    },
    "10976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10978": {
      "op": "DUP4"
    },
    "10979": {
      "op": "ADD"
    },
    "10980": {
      "op": "CALLDATALOAD"
    },
    "10981": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10990": {
      "op": "DUP2"
    },
    "10991": {
      "op": "GT"
    },
    "10992": {
      "op": "ISZERO"
    },
    "10993": {
      "op": "PUSH2",
      "value": "0x2AF9"
    },
    "10996": {
      "op": "JUMPI"
    },
    "10997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10999": {
      "op": "DUP1"
    },
    "11000": {
      "op": "REVERT"
    },
    "11001": {
      "op": "JUMPDEST"
    },
    "11002": {
      "op": "PUSH2",
      "value": "0x2B05"
    },
    "11005": {
      "op": "DUP6"
    },
    "11006": {
      "op": "DUP3"
    },
    "11007": {
      "op": "DUP7"
    },
    "11008": {
      "op": "ADD"
    },
    "11009": {
      "op": "PUSH2",
      "value": "0x2AA8"
    },
    "11012": {
      "jump": "i",
      "op": "JUMP"
    },
    "11013": {
      "op": "JUMPDEST"
    },
    "11014": {
      "op": "SWAP2"
    },
    "11015": {
      "op": "POP"
    },
    "11016": {
      "op": "POP"
    },
    "11017": {
      "op": "SWAP3"
    },
    "11018": {
      "op": "POP"
    },
    "11019": {
      "op": "SWAP3"
    },
    "11020": {
      "op": "SWAP1"
    },
    "11021": {
      "op": "POP"
    },
    "11022": {
      "jump": "o",
      "op": "JUMP"
    },
    "11023": {
      "op": "JUMPDEST"
    },
    "11024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11026": {
      "op": "DUP1"
    },
    "11027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11029": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11031": {
      "op": "DUP5"
    },
    "11032": {
      "op": "DUP7"
    },
    "11033": {
      "op": "SUB"
    },
    "11034": {
      "op": "SLT"
    },
    "11035": {
      "op": "ISZERO"
    },
    "11036": {
      "op": "PUSH2",
      "value": "0x2B24"
    },
    "11039": {
      "op": "JUMPI"
    },
    "11040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11042": {
      "op": "DUP1"
    },
    "11043": {
      "op": "REVERT"
    },
    "11044": {
      "op": "JUMPDEST"
    },
    "11045": {
      "op": "PUSH2",
      "value": "0x2B2D"
    },
    "11048": {
      "op": "DUP5"
    },
    "11049": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "11052": {
      "jump": "i",
      "op": "JUMP"
    },
    "11053": {
      "op": "JUMPDEST"
    },
    "11054": {
      "op": "SWAP3"
    },
    "11055": {
      "op": "POP"
    },
    "11056": {
      "op": "PUSH2",
      "value": "0x2B3B"
    },
    "11059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11061": {
      "op": "DUP6"
    },
    "11062": {
      "op": "ADD"
    },
    "11063": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "11066": {
      "jump": "i",
      "op": "JUMP"
    },
    "11067": {
      "op": "JUMPDEST"
    },
    "11068": {
      "op": "SWAP2"
    },
    "11069": {
      "op": "POP"
    },
    "11070": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11072": {
      "op": "DUP5"
    },
    "11073": {
      "op": "ADD"
    },
    "11074": {
      "op": "CALLDATALOAD"
    },
    "11075": {
      "op": "SWAP1"
    },
    "11076": {
      "op": "POP"
    },
    "11077": {
      "op": "SWAP3"
    },
    "11078": {
      "op": "POP"
    },
    "11079": {
      "op": "SWAP3"
    },
    "11080": {
      "op": "POP"
    },
    "11081": {
      "op": "SWAP3"
    },
    "11082": {
      "jump": "o",
      "op": "JUMP"
    },
    "11083": {
      "op": "JUMPDEST"
    },
    "11084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11088": {
      "op": "DUP3"
    },
    "11089": {
      "op": "DUP5"
    },
    "11090": {
      "op": "SUB"
    },
    "11091": {
      "op": "SLT"
    },
    "11092": {
      "op": "ISZERO"
    },
    "11093": {
      "op": "PUSH2",
      "value": "0x2B5D"
    },
    "11096": {
      "op": "JUMPI"
    },
    "11097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11099": {
      "op": "DUP1"
    },
    "11100": {
      "op": "REVERT"
    },
    "11101": {
      "op": "JUMPDEST"
    },
    "11102": {
      "op": "PUSH2",
      "value": "0x2679"
    },
    "11105": {
      "op": "DUP3"
    },
    "11106": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "11109": {
      "jump": "i",
      "op": "JUMP"
    },
    "11110": {
      "op": "JUMPDEST"
    },
    "11111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11115": {
      "op": "DUP3"
    },
    "11116": {
      "op": "DUP5"
    },
    "11117": {
      "op": "SUB"
    },
    "11118": {
      "op": "SLT"
    },
    "11119": {
      "op": "ISZERO"
    },
    "11120": {
      "op": "PUSH2",
      "value": "0x2B78"
    },
    "11123": {
      "op": "JUMPI"
    },
    "11124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11126": {
      "op": "DUP1"
    },
    "11127": {
      "op": "REVERT"
    },
    "11128": {
      "op": "JUMPDEST"
    },
    "11129": {
      "op": "DUP2"
    },
    "11130": {
      "op": "CALLDATALOAD"
    },
    "11131": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11140": {
      "op": "DUP2"
    },
    "11141": {
      "op": "GT"
    },
    "11142": {
      "op": "ISZERO"
    },
    "11143": {
      "op": "PUSH2",
      "value": "0x2B8F"
    },
    "11146": {
      "op": "JUMPI"
    },
    "11147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11149": {
      "op": "DUP1"
    },
    "11150": {
      "op": "REVERT"
    },
    "11151": {
      "op": "JUMPDEST"
    },
    "11152": {
      "op": "PUSH2",
      "value": "0x1880"
    },
    "11155": {
      "op": "DUP5"
    },
    "11156": {
      "op": "DUP3"
    },
    "11157": {
      "op": "DUP6"
    },
    "11158": {
      "op": "ADD"
    },
    "11159": {
      "op": "PUSH2",
      "value": "0x2AA8"
    },
    "11162": {
      "jump": "i",
      "op": "JUMP"
    },
    "11163": {
      "op": "JUMPDEST"
    },
    "11164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11166": {
      "op": "DUP1"
    },
    "11167": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11169": {
      "op": "DUP4"
    },
    "11170": {
      "op": "DUP6"
    },
    "11171": {
      "op": "SUB"
    },
    "11172": {
      "op": "SLT"
    },
    "11173": {
      "op": "ISZERO"
    },
    "11174": {
      "op": "PUSH2",
      "value": "0x2BAE"
    },
    "11177": {
      "op": "JUMPI"
    },
    "11178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11180": {
      "op": "DUP1"
    },
    "11181": {
      "op": "REVERT"
    },
    "11182": {
      "op": "JUMPDEST"
    },
    "11183": {
      "op": "POP"
    },
    "11184": {
      "op": "POP"
    },
    "11185": {
      "op": "DUP1"
    },
    "11186": {
      "op": "CALLDATALOAD"
    },
    "11187": {
      "op": "SWAP3"
    },
    "11188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11190": {
      "op": "SWAP1"
    },
    "11191": {
      "op": "SWAP2"
    },
    "11192": {
      "op": "ADD"
    },
    "11193": {
      "op": "CALLDATALOAD"
    },
    "11194": {
      "op": "SWAP2"
    },
    "11195": {
      "op": "POP"
    },
    "11196": {
      "jump": "o",
      "op": "JUMP"
    },
    "11197": {
      "op": "JUMPDEST"
    },
    "11198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11202": {
      "op": "DUP1"
    },
    "11203": {
      "op": "DUP4"
    },
    "11204": {
      "op": "ADD"
    },
    "11205": {
      "op": "DUP2"
    },
    "11206": {
      "op": "DUP5"
    },
    "11207": {
      "op": "MSTORE"
    },
    "11208": {
      "op": "DUP1"
    },
    "11209": {
      "op": "DUP6"
    },
    "11210": {
      "op": "MLOAD"
    },
    "11211": {
      "op": "DUP1"
    },
    "11212": {
      "op": "DUP4"
    },
    "11213": {
      "op": "MSTORE"
    },
    "11214": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11216": {
      "op": "DUP7"
    },
    "11217": {
      "op": "ADD"
    },
    "11218": {
      "op": "SWAP2"
    },
    "11219": {
      "op": "POP"
    },
    "11220": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11222": {
      "op": "DUP2"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11225": {
      "op": "SHL"
    },
    "11226": {
      "op": "DUP8"
    },
    "11227": {
      "op": "ADD"
    },
    "11228": {
      "op": "ADD"
    },
    "11229": {
      "op": "SWAP3"
    },
    "11230": {
      "op": "POP"
    },
    "11231": {
      "op": "DUP4"
    },
    "11232": {
      "op": "DUP8"
    },
    "11233": {
      "op": "ADD"
    },
    "11234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11236": {
      "op": "JUMPDEST"
    },
    "11237": {
      "op": "DUP3"
    },
    "11238": {
      "op": "DUP2"
    },
    "11239": {
      "op": "LT"
    },
    "11240": {
      "op": "ISZERO"
    },
    "11241": {
      "op": "PUSH2",
      "value": "0x2C12"
    },
    "11244": {
      "op": "JUMPI"
    },
    "11245": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "11247": {
      "op": "NOT"
    },
    "11248": {
      "op": "DUP9"
    },
    "11249": {
      "op": "DUP7"
    },
    "11250": {
      "op": "SUB"
    },
    "11251": {
      "op": "ADD"
    },
    "11252": {
      "op": "DUP5"
    },
    "11253": {
      "op": "MSTORE"
    },
    "11254": {
      "op": "PUSH2",
      "value": "0x2C00"
    },
    "11257": {
      "op": "DUP6"
    },
    "11258": {
      "op": "DUP4"
    },
    "11259": {
      "op": "MLOAD"
    },
    "11260": {
      "op": "PUSH2",
      "value": "0x2983"
    },
    "11263": {
      "jump": "i",
      "op": "JUMP"
    },
    "11264": {
      "op": "JUMPDEST"
    },
    "11265": {
      "op": "SWAP5"
    },
    "11266": {
      "op": "POP"
    },
    "11267": {
      "op": "SWAP3"
    },
    "11268": {
      "op": "DUP6"
    },
    "11269": {
      "op": "ADD"
    },
    "11270": {
      "op": "SWAP3"
    },
    "11271": {
      "op": "SWAP1"
    },
    "11272": {
      "op": "DUP6"
    },
    "11273": {
      "op": "ADD"
    },
    "11274": {
      "op": "SWAP1"
    },
    "11275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11277": {
      "op": "ADD"
    },
    "11278": {
      "op": "PUSH2",
      "value": "0x2BE4"
    },
    "11281": {
      "op": "JUMP"
    },
    "11282": {
      "op": "JUMPDEST"
    },
    "11283": {
      "op": "POP"
    },
    "11284": {
      "op": "SWAP3"
    },
    "11285": {
      "op": "SWAP8"
    },
    "11286": {
      "op": "SWAP7"
    },
    "11287": {
      "op": "POP"
    },
    "11288": {
      "op": "POP"
    },
    "11289": {
      "op": "POP"
    },
    "11290": {
      "op": "POP"
    },
    "11291": {
      "op": "POP"
    },
    "11292": {
      "op": "POP"
    },
    "11293": {
      "op": "POP"
    },
    "11294": {
      "jump": "o",
      "op": "JUMP"
    },
    "11295": {
      "op": "JUMPDEST"
    },
    "11296": {
      "op": "DUP1"
    },
    "11297": {
      "op": "ISZERO"
    },
    "11298": {
      "op": "ISZERO"
    },
    "11299": {
      "op": "DUP2"
    },
    "11300": {
      "op": "EQ"
    },
    "11301": {
      "op": "PUSH2",
      "value": "0xF5D"
    },
    "11304": {
      "op": "JUMPI"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11307": {
      "op": "DUP1"
    },
    "11308": {
      "op": "REVERT"
    },
    "11309": {
      "op": "JUMPDEST"
    },
    "11310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11312": {
      "op": "DUP1"
    },
    "11313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11315": {
      "op": "DUP4"
    },
    "11316": {
      "op": "DUP6"
    },
    "11317": {
      "op": "SUB"
    },
    "11318": {
      "op": "SLT"
    },
    "11319": {
      "op": "ISZERO"
    },
    "11320": {
      "op": "PUSH2",
      "value": "0x2C40"
    },
    "11323": {
      "op": "JUMPI"
    },
    "11324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11326": {
      "op": "DUP1"
    },
    "11327": {
      "op": "REVERT"
    },
    "11328": {
      "op": "JUMPDEST"
    },
    "11329": {
      "op": "PUSH2",
      "value": "0x2C49"
    },
    "11332": {
      "op": "DUP4"
    },
    "11333": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "11336": {
      "jump": "i",
      "op": "JUMP"
    },
    "11337": {
      "op": "JUMPDEST"
    },
    "11338": {
      "op": "SWAP2"
    },
    "11339": {
      "op": "POP"
    },
    "11340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11342": {
      "op": "DUP4"
    },
    "11343": {
      "op": "ADD"
    },
    "11344": {
      "op": "CALLDATALOAD"
    },
    "11345": {
      "op": "PUSH2",
      "value": "0x2C59"
    },
    "11348": {
      "op": "DUP2"
    },
    "11349": {
      "op": "PUSH2",
      "value": "0x2C1F"
    },
    "11352": {
      "jump": "i",
      "op": "JUMP"
    },
    "11353": {
      "op": "JUMPDEST"
    },
    "11354": {
      "op": "DUP1"
    },
    "11355": {
      "op": "SWAP2"
    },
    "11356": {
      "op": "POP"
    },
    "11357": {
      "op": "POP"
    },
    "11358": {
      "op": "SWAP3"
    },
    "11359": {
      "op": "POP"
    },
    "11360": {
      "op": "SWAP3"
    },
    "11361": {
      "op": "SWAP1"
    },
    "11362": {
      "op": "POP"
    },
    "11363": {
      "jump": "o",
      "op": "JUMP"
    },
    "11364": {
      "op": "JUMPDEST"
    },
    "11365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11367": {
      "op": "DUP1"
    },
    "11368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11370": {
      "op": "DUP1"
    },
    "11371": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11373": {
      "op": "DUP6"
    },
    "11374": {
      "op": "DUP8"
    },
    "11375": {
      "op": "SUB"
    },
    "11376": {
      "op": "SLT"
    },
    "11377": {
      "op": "ISZERO"
    },
    "11378": {
      "op": "PUSH2",
      "value": "0x2C7A"
    },
    "11381": {
      "op": "JUMPI"
    },
    "11382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11384": {
      "op": "DUP1"
    },
    "11385": {
      "op": "REVERT"
    },
    "11386": {
      "op": "JUMPDEST"
    },
    "11387": {
      "op": "PUSH2",
      "value": "0x2C83"
    },
    "11390": {
      "op": "DUP6"
    },
    "11391": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "11394": {
      "jump": "i",
      "op": "JUMP"
    },
    "11395": {
      "op": "JUMPDEST"
    },
    "11396": {
      "op": "SWAP4"
    },
    "11397": {
      "op": "POP"
    },
    "11398": {
      "op": "PUSH2",
      "value": "0x2C91"
    },
    "11401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11403": {
      "op": "DUP7"
    },
    "11404": {
      "op": "ADD"
    },
    "11405": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "11408": {
      "jump": "i",
      "op": "JUMP"
    },
    "11409": {
      "op": "JUMPDEST"
    },
    "11410": {
      "op": "SWAP3"
    },
    "11411": {
      "op": "POP"
    },
    "11412": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11414": {
      "op": "DUP6"
    },
    "11415": {
      "op": "ADD"
    },
    "11416": {
      "op": "CALLDATALOAD"
    },
    "11417": {
      "op": "SWAP2"
    },
    "11418": {
      "op": "POP"
    },
    "11419": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11421": {
      "op": "DUP6"
    },
    "11422": {
      "op": "ADD"
    },
    "11423": {
      "op": "CALLDATALOAD"
    },
    "11424": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11433": {
      "op": "DUP2"
    },
    "11434": {
      "op": "GT"
    },
    "11435": {
      "op": "ISZERO"
    },
    "11436": {
      "op": "PUSH2",
      "value": "0x2CB4"
    },
    "11439": {
      "op": "JUMPI"
    },
    "11440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11442": {
      "op": "DUP1"
    },
    "11443": {
      "op": "REVERT"
    },
    "11444": {
      "op": "JUMPDEST"
    },
    "11445": {
      "op": "DUP6"
    },
    "11446": {
      "op": "ADD"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11449": {
      "op": "DUP2"
    },
    "11450": {
      "op": "ADD"
    },
    "11451": {
      "op": "DUP8"
    },
    "11452": {
      "op": "SGT"
    },
    "11453": {
      "op": "PUSH2",
      "value": "0x2CC5"
    },
    "11456": {
      "op": "JUMPI"
    },
    "11457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11459": {
      "op": "DUP1"
    },
    "11460": {
      "op": "REVERT"
    },
    "11461": {
      "op": "JUMPDEST"
    },
    "11462": {
      "op": "PUSH2",
      "value": "0x2CD4"
    },
    "11465": {
      "op": "DUP8"
    },
    "11466": {
      "op": "DUP3"
    },
    "11467": {
      "op": "CALLDATALOAD"
    },
    "11468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11470": {
      "op": "DUP5"
    },
    "11471": {
      "op": "ADD"
    },
    "11472": {
      "op": "PUSH2",
      "value": "0x2A32"
    },
    "11475": {
      "jump": "i",
      "op": "JUMP"
    },
    "11476": {
      "op": "JUMPDEST"
    },
    "11477": {
      "op": "SWAP2"
    },
    "11478": {
      "op": "POP"
    },
    "11479": {
      "op": "POP"
    },
    "11480": {
      "op": "SWAP3"
    },
    "11481": {
      "op": "SWAP6"
    },
    "11482": {
      "op": "SWAP2"
    },
    "11483": {
      "op": "SWAP5"
    },
    "11484": {
      "op": "POP"
    },
    "11485": {
      "op": "SWAP3"
    },
    "11486": {
      "op": "POP"
    },
    "11487": {
      "jump": "o",
      "op": "JUMP"
    },
    "11488": {
      "op": "JUMPDEST"
    },
    "11489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11491": {
      "op": "DUP1"
    },
    "11492": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11494": {
      "op": "DUP4"
    },
    "11495": {
      "op": "DUP6"
    },
    "11496": {
      "op": "SUB"
    },
    "11497": {
      "op": "SLT"
    },
    "11498": {
      "op": "ISZERO"
    },
    "11499": {
      "op": "PUSH2",
      "value": "0x2CF3"
    },
    "11502": {
      "op": "JUMPI"
    },
    "11503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11505": {
      "op": "DUP1"
    },
    "11506": {
      "op": "REVERT"
    },
    "11507": {
      "op": "JUMPDEST"
    },
    "11508": {
      "op": "PUSH2",
      "value": "0x2CFC"
    },
    "11511": {
      "op": "DUP4"
    },
    "11512": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "11515": {
      "jump": "i",
      "op": "JUMP"
    },
    "11516": {
      "op": "JUMPDEST"
    },
    "11517": {
      "op": "SWAP2"
    },
    "11518": {
      "op": "POP"
    },
    "11519": {
      "op": "PUSH2",
      "value": "0x2D0A"
    },
    "11522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11524": {
      "op": "DUP5"
    },
    "11525": {
      "op": "ADD"
    },
    "11526": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "11529": {
      "jump": "i",
      "op": "JUMP"
    },
    "11530": {
      "op": "JUMPDEST"
    },
    "11531": {
      "op": "SWAP1"
    },
    "11532": {
      "op": "POP"
    },
    "11533": {
      "op": "SWAP3"
    },
    "11534": {
      "op": "POP"
    },
    "11535": {
      "op": "SWAP3"
    },
    "11536": {
      "op": "SWAP1"
    },
    "11537": {
      "op": "POP"
    },
    "11538": {
      "jump": "o",
      "op": "JUMP"
    },
    "11539": {
      "op": "JUMPDEST"
    },
    "11540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11542": {
      "op": "DUP1"
    },
    "11543": {
      "op": "DUP3"
    },
    "11544": {
      "op": "MSTORE"
    },
    "11545": {
      "op": "DUP3"
    },
    "11546": {
      "op": "MLOAD"
    },
    "11547": {
      "op": "DUP3"
    },
    "11548": {
      "op": "DUP3"
    },
    "11549": {
      "op": "ADD"
    },
    "11550": {
      "op": "DUP2"
    },
    "11551": {
      "op": "SWAP1"
    },
    "11552": {
      "op": "MSTORE"
    },
    "11553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11555": {
      "op": "SWAP2"
    },
    "11556": {
      "op": "SWAP1"
    },
    "11557": {
      "op": "DUP5"
    },
    "11558": {
      "op": "DUP3"
    },
    "11559": {
      "op": "ADD"
    },
    "11560": {
      "op": "SWAP1"
    },
    "11561": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11563": {
      "op": "DUP6"
    },
    "11564": {
      "op": "ADD"
    },
    "11565": {
      "op": "SWAP1"
    },
    "11566": {
      "op": "DUP5"
    },
    "11567": {
      "op": "JUMPDEST"
    },
    "11568": {
      "op": "DUP2"
    },
    "11569": {
      "op": "DUP2"
    },
    "11570": {
      "op": "LT"
    },
    "11571": {
      "op": "ISZERO"
    },
    "11572": {
      "op": "PUSH2",
      "value": "0x2D4B"
    },
    "11575": {
      "op": "JUMPI"
    },
    "11576": {
      "op": "DUP4"
    },
    "11577": {
      "op": "MLOAD"
    },
    "11578": {
      "op": "DUP4"
    },
    "11579": {
      "op": "MSTORE"
    },
    "11580": {
      "op": "SWAP3"
    },
    "11581": {
      "op": "DUP5"
    },
    "11582": {
      "op": "ADD"
    },
    "11583": {
      "op": "SWAP3"
    },
    "11584": {
      "op": "SWAP2"
    },
    "11585": {
      "op": "DUP5"
    },
    "11586": {
      "op": "ADD"
    },
    "11587": {
      "op": "SWAP2"
    },
    "11588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11590": {
      "op": "ADD"
    },
    "11591": {
      "op": "PUSH2",
      "value": "0x2D2F"
    },
    "11594": {
      "op": "JUMP"
    },
    "11595": {
      "op": "JUMPDEST"
    },
    "11596": {
      "op": "POP"
    },
    "11597": {
      "op": "SWAP1"
    },
    "11598": {
      "op": "SWAP7"
    },
    "11599": {
      "op": "SWAP6"
    },
    "11600": {
      "op": "POP"
    },
    "11601": {
      "op": "POP"
    },
    "11602": {
      "op": "POP"
    },
    "11603": {
      "op": "POP"
    },
    "11604": {
      "op": "POP"
    },
    "11605": {
      "op": "POP"
    },
    "11606": {
      "jump": "o",
      "op": "JUMP"
    },
    "11607": {
      "op": "JUMPDEST"
    },
    "11608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11610": {
      "op": "DUP2"
    },
    "11611": {
      "op": "DUP2"
    },
    "11612": {
      "op": "SHR"
    },
    "11613": {
      "op": "SWAP1"
    },
    "11614": {
      "op": "DUP3"
    },
    "11615": {
      "op": "AND"
    },
    "11616": {
      "op": "DUP1"
    },
    "11617": {
      "op": "PUSH2",
      "value": "0x2D6B"
    },
    "11620": {
      "op": "JUMPI"
    },
    "11621": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11623": {
      "op": "DUP3"
    },
    "11624": {
      "op": "AND"
    },
    "11625": {
      "op": "SWAP2"
    },
    "11626": {
      "op": "POP"
    },
    "11627": {
      "op": "JUMPDEST"
    },
    "11628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11630": {
      "op": "DUP3"
    },
    "11631": {
      "op": "LT"
    },
    "11632": {
      "op": "DUP2"
    },
    "11633": {
      "op": "EQ"
    },
    "11634": {
      "op": "ISZERO"
    },
    "11635": {
      "op": "PUSH2",
      "value": "0x2D8C"
    },
    "11638": {
      "op": "JUMPI"
    },
    "11639": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11644": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11646": {
      "op": "SHL"
    },
    "11647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11649": {
      "op": "MSTORE"
    },
    "11650": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11652": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11654": {
      "op": "MSTORE"
    },
    "11655": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11659": {
      "op": "REVERT"
    },
    "11660": {
      "op": "JUMPDEST"
    },
    "11661": {
      "op": "POP"
    },
    "11662": {
      "op": "SWAP2"
    },
    "11663": {
      "op": "SWAP1"
    },
    "11664": {
      "op": "POP"
    },
    "11665": {
      "jump": "o",
      "op": "JUMP"
    },
    "11666": {
      "op": "JUMPDEST"
    },
    "11667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11669": {
      "op": "DUP1"
    },
    "11670": {
      "op": "DUP3"
    },
    "11671": {
      "op": "MSTORE"
    },
    "11672": {
      "op": "DUP2"
    },
    "11673": {
      "op": "DUP2"
    },
    "11674": {
      "op": "ADD"
    },
    "11675": {
      "op": "MSTORE"
    },
    "11676": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "11709": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11711": {
      "op": "DUP3"
    },
    "11712": {
      "op": "ADD"
    },
    "11713": {
      "op": "MSTORE"
    },
    "11714": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11716": {
      "op": "ADD"
    },
    "11717": {
      "op": "SWAP1"
    },
    "11718": {
      "jump": "o",
      "op": "JUMP"
    },
    "11719": {
      "op": "JUMPDEST"
    },
    "11720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11722": {
      "op": "DUP1"
    },
    "11723": {
      "op": "DUP3"
    },
    "11724": {
      "op": "MSTORE"
    },
    "11725": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11727": {
      "op": "SWAP1"
    },
    "11728": {
      "op": "DUP3"
    },
    "11729": {
      "op": "ADD"
    },
    "11730": {
      "op": "MSTORE"
    },
    "11731": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "11764": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11766": {
      "op": "DUP3"
    },
    "11767": {
      "op": "ADD"
    },
    "11768": {
      "op": "MSTORE"
    },
    "11769": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "11787": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "11789": {
      "op": "SHL"
    },
    "11790": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11792": {
      "op": "DUP3"
    },
    "11793": {
      "op": "ADD"
    },
    "11794": {
      "op": "MSTORE"
    },
    "11795": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11797": {
      "op": "ADD"
    },
    "11798": {
      "op": "SWAP1"
    },
    "11799": {
      "jump": "o",
      "op": "JUMP"
    },
    "11800": {
      "op": "JUMPDEST"
    },
    "11801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11805": {
      "op": "DUP3"
    },
    "11806": {
      "op": "DUP5"
    },
    "11807": {
      "op": "SUB"
    },
    "11808": {
      "op": "SLT"
    },
    "11809": {
      "op": "ISZERO"
    },
    "11810": {
      "op": "PUSH2",
      "value": "0x2E2A"
    },
    "11813": {
      "op": "JUMPI"
    },
    "11814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11816": {
      "op": "DUP1"
    },
    "11817": {
      "op": "REVERT"
    },
    "11818": {
      "op": "JUMPDEST"
    },
    "11819": {
      "op": "DUP2"
    },
    "11820": {
      "op": "MLOAD"
    },
    "11821": {
      "op": "PUSH2",
      "value": "0x2679"
    },
    "11824": {
      "op": "DUP2"
    },
    "11825": {
      "op": "PUSH2",
      "value": "0x2C1F"
    },
    "11828": {
      "jump": "i",
      "op": "JUMP"
    },
    "11829": {
      "op": "JUMPDEST"
    },
    "11830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11834": {
      "op": "DUP3"
    },
    "11835": {
      "op": "DUP5"
    },
    "11836": {
      "op": "SUB"
    },
    "11837": {
      "op": "SLT"
    },
    "11838": {
      "op": "ISZERO"
    },
    "11839": {
      "op": "PUSH2",
      "value": "0x2E47"
    },
    "11842": {
      "op": "JUMPI"
    },
    "11843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11845": {
      "op": "DUP1"
    },
    "11846": {
      "op": "REVERT"
    },
    "11847": {
      "op": "JUMPDEST"
    },
    "11848": {
      "op": "POP"
    },
    "11849": {
      "op": "MLOAD"
    },
    "11850": {
      "op": "SWAP2"
    },
    "11851": {
      "op": "SWAP1"
    },
    "11852": {
      "op": "POP"
    },
    "11853": {
      "jump": "o",
      "op": "JUMP"
    },
    "11854": {
      "op": "JUMPDEST"
    },
    "11855": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11860": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11862": {
      "op": "SHL"
    },
    "11863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11865": {
      "op": "MSTORE"
    },
    "11866": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11868": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11870": {
      "op": "MSTORE"
    },
    "11871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11875": {
      "op": "REVERT"
    },
    "11876": {
      "op": "JUMPDEST"
    },
    "11877": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11882": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11884": {
      "op": "SHL"
    },
    "11885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11887": {
      "op": "MSTORE"
    },
    "11888": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11890": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11892": {
      "op": "MSTORE"
    },
    "11893": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11897": {
      "op": "REVERT"
    },
    "11898": {
      "op": "JUMPDEST"
    },
    "11899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11901": {
      "op": "DUP3"
    },
    "11902": {
      "op": "PUSH2",
      "value": "0x2E89"
    },
    "11905": {
      "op": "JUMPI"
    },
    "11906": {
      "op": "PUSH2",
      "value": "0x2E89"
    },
    "11909": {
      "op": "PUSH2",
      "value": "0x2E4E"
    },
    "11912": {
      "jump": "i",
      "op": "JUMP"
    },
    "11913": {
      "op": "JUMPDEST"
    },
    "11914": {
      "op": "POP"
    },
    "11915": {
      "op": "DIV"
    },
    "11916": {
      "op": "SWAP1"
    },
    "11917": {
      "jump": "o",
      "op": "JUMP"
    },
    "11918": {
      "op": "JUMPDEST"
    },
    "11919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11921": {
      "op": "DUP3"
    },
    "11922": {
      "op": "NOT"
    },
    "11923": {
      "op": "DUP3"
    },
    "11924": {
      "op": "GT"
    },
    "11925": {
      "op": "ISZERO"
    },
    "11926": {
      "op": "PUSH2",
      "value": "0x2EA1"
    },
    "11929": {
      "op": "JUMPI"
    },
    "11930": {
      "op": "PUSH2",
      "value": "0x2EA1"
    },
    "11933": {
      "op": "PUSH2",
      "value": "0x2E64"
    },
    "11936": {
      "jump": "i",
      "op": "JUMP"
    },
    "11937": {
      "op": "JUMPDEST"
    },
    "11938": {
      "op": "POP"
    },
    "11939": {
      "op": "ADD"
    },
    "11940": {
      "op": "SWAP1"
    },
    "11941": {
      "jump": "o",
      "op": "JUMP"
    },
    "11942": {
      "op": "JUMPDEST"
    },
    "11943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11947": {
      "op": "NOT"
    },
    "11948": {
      "op": "DUP3"
    },
    "11949": {
      "op": "EQ"
    },
    "11950": {
      "op": "ISZERO"
    },
    "11951": {
      "op": "PUSH2",
      "value": "0x2EBA"
    },
    "11954": {
      "op": "JUMPI"
    },
    "11955": {
      "op": "PUSH2",
      "value": "0x2EBA"
    },
    "11958": {
      "op": "PUSH2",
      "value": "0x2E64"
    },
    "11961": {
      "jump": "i",
      "op": "JUMP"
    },
    "11962": {
      "op": "JUMPDEST"
    },
    "11963": {
      "op": "POP"
    },
    "11964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11966": {
      "op": "ADD"
    },
    "11967": {
      "op": "SWAP1"
    },
    "11968": {
      "jump": "o",
      "op": "JUMP"
    },
    "11969": {
      "op": "JUMPDEST"
    },
    "11970": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11975": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11977": {
      "op": "SHL"
    },
    "11978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11980": {
      "op": "MSTORE"
    },
    "11981": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11983": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11985": {
      "op": "MSTORE"
    },
    "11986": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11990": {
      "op": "REVERT"
    },
    "11991": {
      "op": "JUMPDEST"
    },
    "11992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11994": {
      "op": "DUP1"
    },
    "11995": {
      "op": "DUP3"
    },
    "11996": {
      "op": "MSTORE"
    },
    "11997": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "11999": {
      "op": "SWAP1"
    },
    "12000": {
      "op": "DUP3"
    },
    "12001": {
      "op": "ADD"
    },
    "12002": {
      "op": "MSTORE"
    },
    "12003": {
      "op": "PUSH32",
      "value": "0x4F6E6C792043617264696E616C2043726577204D656D626572732063616E2070"
    },
    "12036": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12038": {
      "op": "DUP3"
    },
    "12039": {
      "op": "ADD"
    },
    "12040": {
      "op": "MSTORE"
    },
    "12041": {
      "op": "PUSH32",
      "value": "0x6172746963697061746520696E204E6F64652052756E6E65722E000000000000"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12076": {
      "op": "DUP3"
    },
    "12077": {
      "op": "ADD"
    },
    "12078": {
      "op": "MSTORE"
    },
    "12079": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12081": {
      "op": "ADD"
    },
    "12082": {
      "op": "SWAP1"
    },
    "12083": {
      "jump": "o",
      "op": "JUMP"
    },
    "12084": {
      "op": "JUMPDEST"
    },
    "12085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12087": {
      "op": "DUP4"
    },
    "12088": {
      "op": "MLOAD"
    },
    "12089": {
      "op": "PUSH2",
      "value": "0x2F46"
    },
    "12092": {
      "op": "DUP2"
    },
    "12093": {
      "op": "DUP5"
    },
    "12094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12096": {
      "op": "DUP9"
    },
    "12097": {
      "op": "ADD"
    },
    "12098": {
      "op": "PUSH2",
      "value": "0x2957"
    },
    "12101": {
      "jump": "i",
      "op": "JUMP"
    },
    "12102": {
      "op": "JUMPDEST"
    },
    "12103": {
      "op": "DUP4"
    },
    "12104": {
      "op": "MLOAD"
    },
    "12105": {
      "op": "SWAP1"
    },
    "12106": {
      "op": "DUP4"
    },
    "12107": {
      "op": "ADD"
    },
    "12108": {
      "op": "SWAP1"
    },
    "12109": {
      "op": "PUSH2",
      "value": "0x2F5A"
    },
    "12112": {
      "op": "DUP2"
    },
    "12113": {
      "op": "DUP4"
    },
    "12114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12116": {
      "op": "DUP9"
    },
    "12117": {
      "op": "ADD"
    },
    "12118": {
      "op": "PUSH2",
      "value": "0x2957"
    },
    "12121": {
      "jump": "i",
      "op": "JUMP"
    },
    "12122": {
      "op": "JUMPDEST"
    },
    "12123": {
      "op": "ADD"
    },
    "12124": {
      "op": "SWAP5"
    },
    "12125": {
      "op": "SWAP4"
    },
    "12126": {
      "op": "POP"
    },
    "12127": {
      "op": "POP"
    },
    "12128": {
      "op": "POP"
    },
    "12129": {
      "op": "POP"
    },
    "12130": {
      "jump": "o",
      "op": "JUMP"
    },
    "12131": {
      "op": "JUMPDEST"
    },
    "12132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12134": {
      "op": "DUP3"
    },
    "12135": {
      "op": "DUP3"
    },
    "12136": {
      "op": "LT"
    },
    "12137": {
      "op": "ISZERO"
    },
    "12138": {
      "op": "PUSH2",
      "value": "0x2F75"
    },
    "12141": {
      "op": "JUMPI"
    },
    "12142": {
      "op": "PUSH2",
      "value": "0x2F75"
    },
    "12145": {
      "op": "PUSH2",
      "value": "0x2E64"
    },
    "12148": {
      "jump": "i",
      "op": "JUMP"
    },
    "12149": {
      "op": "JUMPDEST"
    },
    "12150": {
      "op": "POP"
    },
    "12151": {
      "op": "SUB"
    },
    "12152": {
      "op": "SWAP1"
    },
    "12153": {
      "jump": "o",
      "op": "JUMP"
    },
    "12154": {
      "op": "JUMPDEST"
    },
    "12155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12157": {
      "op": "DUP1"
    },
    "12158": {
      "op": "DUP3"
    },
    "12159": {
      "op": "MSTORE"
    },
    "12160": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "12162": {
      "op": "SWAP1"
    },
    "12163": {
      "op": "DUP3"
    },
    "12164": {
      "op": "ADD"
    },
    "12165": {
      "op": "MSTORE"
    },
    "12166": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "12199": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12201": {
      "op": "DUP3"
    },
    "12202": {
      "op": "ADD"
    },
    "12203": {
      "op": "MSTORE"
    },
    "12204": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "12223": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "12225": {
      "op": "SHL"
    },
    "12226": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12228": {
      "op": "DUP3"
    },
    "12229": {
      "op": "ADD"
    },
    "12230": {
      "op": "MSTORE"
    },
    "12231": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12233": {
      "op": "ADD"
    },
    "12234": {
      "op": "SWAP1"
    },
    "12235": {
      "jump": "o",
      "op": "JUMP"
    },
    "12236": {
      "op": "JUMPDEST"
    },
    "12237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12243": {
      "op": "SHL"
    },
    "12244": {
      "op": "SUB"
    },
    "12245": {
      "op": "DUP6"
    },
    "12246": {
      "op": "DUP2"
    },
    "12247": {
      "op": "AND"
    },
    "12248": {
      "op": "DUP3"
    },
    "12249": {
      "op": "MSTORE"
    },
    "12250": {
      "op": "DUP5"
    },
    "12251": {
      "op": "AND"
    },
    "12252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12254": {
      "op": "DUP3"
    },
    "12255": {
      "op": "ADD"
    },
    "12256": {
      "op": "MSTORE"
    },
    "12257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12259": {
      "op": "DUP2"
    },
    "12260": {
      "op": "ADD"
    },
    "12261": {
      "op": "DUP4"
    },
    "12262": {
      "op": "SWAP1"
    },
    "12263": {
      "op": "MSTORE"
    },
    "12264": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12266": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12268": {
      "op": "DUP3"
    },
    "12269": {
      "op": "ADD"
    },
    "12270": {
      "op": "DUP2"
    },
    "12271": {
      "op": "SWAP1"
    },
    "12272": {
      "op": "MSTORE"
    },
    "12273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12275": {
      "op": "SWAP1"
    },
    "12276": {
      "op": "PUSH2",
      "value": "0x2FFF"
    },
    "12279": {
      "op": "SWAP1"
    },
    "12280": {
      "op": "DUP4"
    },
    "12281": {
      "op": "ADD"
    },
    "12282": {
      "op": "DUP5"
    },
    "12283": {
      "op": "PUSH2",
      "value": "0x2983"
    },
    "12286": {
      "jump": "i",
      "op": "JUMP"
    },
    "12287": {
      "op": "JUMPDEST"
    },
    "12288": {
      "op": "SWAP7"
    },
    "12289": {
      "op": "SWAP6"
    },
    "12290": {
      "op": "POP"
    },
    "12291": {
      "op": "POP"
    },
    "12292": {
      "op": "POP"
    },
    "12293": {
      "op": "POP"
    },
    "12294": {
      "op": "POP"
    },
    "12295": {
      "op": "POP"
    },
    "12296": {
      "jump": "o",
      "op": "JUMP"
    },
    "12297": {
      "op": "JUMPDEST"
    },
    "12298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12302": {
      "op": "DUP3"
    },
    "12303": {
      "op": "DUP5"
    },
    "12304": {
      "op": "SUB"
    },
    "12305": {
      "op": "SLT"
    },
    "12306": {
      "op": "ISZERO"
    },
    "12307": {
      "op": "PUSH2",
      "value": "0x301B"
    },
    "12310": {
      "op": "JUMPI"
    },
    "12311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12313": {
      "op": "DUP1"
    },
    "12314": {
      "op": "REVERT"
    },
    "12315": {
      "op": "JUMPDEST"
    },
    "12316": {
      "op": "DUP2"
    },
    "12317": {
      "op": "MLOAD"
    },
    "12318": {
      "op": "PUSH2",
      "value": "0x2679"
    },
    "12321": {
      "op": "DUP2"
    },
    "12322": {
      "op": "PUSH2",
      "value": "0x2924"
    },
    "12325": {
      "jump": "i",
      "op": "JUMP"
    },
    "12326": {
      "op": "JUMPDEST"
    },
    "12327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12329": {
      "op": "DUP3"
    },
    "12330": {
      "op": "PUSH2",
      "value": "0x3035"
    },
    "12333": {
      "op": "JUMPI"
    },
    "12334": {
      "op": "PUSH2",
      "value": "0x3035"
    },
    "12337": {
      "op": "PUSH2",
      "value": "0x2E4E"
    },
    "12340": {
      "jump": "i",
      "op": "JUMP"
    },
    "12341": {
      "op": "JUMPDEST"
    },
    "12342": {
      "op": "POP"
    },
    "12343": {
      "op": "MOD"
    },
    "12344": {
      "op": "SWAP1"
    },
    "12345": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f11830d0e1aa16f46e8598e25d33c05a6210dd73",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.8;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport './CardinalNFT.sol';\n\n/**\n * @title Node Runner Contract\n * @dev NFT contract that will be used with the marketplace contract\n */\ncontract NodeRunner is ERC721URIStorage, Ownable {\n    using Counters for Counters.Counter;\n\n    // Counter to give each NFT a unique ID.\n    Counters.Counter public _tokenIds;\n\n    // Address of the Cardinal House marketplace.\n    address public marketplaceAddress;\n\n    // References the deployed Cardinal NFT contract.\n    CardinalNFT public cardinalNFT;\n\n    // Contract for USDC - for NFT payments\n    IERC20 public USDC;\n\n    // Default listing fee for NFTs\n    uint256 public defaultListingFee;\n\n    // Number of NFTs that can be minted for this node.\n    uint256 public maxNFTs;\n\n    // NFT price in USDC\n    uint256 public NFTPriceInUSDC;\n\n    // The token URI for all of the NFTs in this contract\n    string public nodeRunnerTokenURI;\n\n    // Each NFT will have a unique listing fee that is kept track of in this mapping.\n    mapping(uint256 => uint256) public tokenIdToListingFee;\n    \n    // Mapping of token ID to address for whitelist spots.\n    mapping(uint256 => address) public tokenIdToWhitelistAddress;\n\n    // Mapping to determine how much Matic each address can withdraw from node rewards.\n    mapping(address => uint256) public addressToMaticCanClaim;\n\n    // Mapping to determine how much Matic each address has claimed.\n    mapping(address => uint256) public addressToMaticClaimed;\n\n    event nodeRunnerNFTMinted(address indexed owner, uint256 indexed tokenId);\n    event nodeRewardsDeposited(uint256 indexed amount);\n    event nodeRewardsClaimed(address indexed claimer, uint256 amount);\n    event tokenURIUpdated(uint256 indexed tokenId, string newTokenURI);\n\n    constructor(address _marketplaceAddress, address payable CardinalNFTAddress, address _USDC, uint256 _defaultListingFee, uint256 _maxNFTs, uint256 _NFTPriceInUSDC) ERC721(\"NodeRunnerNFT\", \"NRNFT\") {\n        marketplaceAddress = _marketplaceAddress;\n        cardinalNFT = CardinalNFT(CardinalNFTAddress);\n        USDC = IERC20(_USDC);\n        defaultListingFee = _defaultListingFee;\n        maxNFTs = _maxNFTs;\n        NFTPriceInUSDC = _NFTPriceInUSDC;\n    }\n\n    /**\n    * @dev Allows someone to mint a Node Runner NFT by paying USDC\n    * @param nftCount the number of NFTs to mint\n    * @return newItemId the ID of the newly minted Node Runner NFT\n     */\n    function mintNodeRunnerNFT(uint256 nftCount) external returns (uint[] memory) {\n        require(nftCount > 0, \"You have to mint at least one Node Runner NFt.\");\n        require(nftCount + _tokenIds.current() <= maxNFTs, \"There aren't enough Node Runner NFTs for this node for you to mint you amount you chose. Another node will be available soon!\");\n        require(cardinalNFT.addressIsMember(msg.sender), \"Only Cardinal Crew Members can participate in Node Runner.\");\n        require(USDC.balanceOf(msg.sender) >= NFTPriceInUSDC, \"You don't have enough USDC to pay for the Node Runner NFT.\");\n        require(USDC.allowance(msg.sender, address(this)) >= NFTPriceInUSDC, \"You haven't approved this contract to spend enough of your USDC to pay for the Node Runner NFT.\");\n        \n        uint256[] memory mintedNFTIds = new uint256[](nftCount);\n        uint256 i = 0;\n\n        for (i = 0; i < nftCount; i += 1) {\n            USDC.transferFrom(msg.sender, address(this), NFTPriceInUSDC);\n\n            _tokenIds.increment();\n            uint256 newItemId = _tokenIds.current();\n\n            tokenIdToListingFee[newItemId] = defaultListingFee;\n            _mint(msg.sender, newItemId);\n            _setTokenURI(newItemId, nodeRunnerTokenURI);\n            approve(address(this), newItemId);\n            setApprovalForAll(marketplaceAddress, true);\n\n            mintedNFTIds[i] = newItemId;\n\n            emit nodeRunnerNFTMinted(msg.sender, newItemId);\n        }\n\n        return mintedNFTIds;\n    }\n\n    /**\n    * @dev Only owner function to mint a new NFT.\n    * @param newTokenURI the token URI on IPFS for the NFT metadata\n    * @return newItemId the ID of the newly minted NFT\n     */\n    function createToken(string memory newTokenURI) external onlyOwner returns (uint) {\n        _tokenIds.increment();\n        uint256 newItemId = _tokenIds.current();\n\n        tokenIdToListingFee[newItemId] = defaultListingFee;\n        _mint(msg.sender, newItemId);\n        _setTokenURI(newItemId, nodeRunnerTokenURI);\n        approve(address(this), newItemId);\n        setApprovalForAll(marketplaceAddress, true);\n\n        emit nodeRunnerNFTMinted(msg.sender, newItemId);\n\n        return newItemId;\n    }\n\n    /**\n    * @dev Function to deposit rewards in Matic from the node into the contract for NFT holders to claim.\n    */\n    function depositNodeRewards() external payable {\n        require(msg.value >= maxNFTs, \"You must deposit enough Matic so it can be divided by the maximum number of NFT holders for the node.\");\n        require(_tokenIds.current() > 0, \"No NFTs have been minted for this node yet.\");\n\n        for (uint i = 1; i <= _tokenIds.current(); i++) {\n            address NFTOwner = ownerOf(i);\n            addressToMaticCanClaim[NFTOwner] = addressToMaticCanClaim[NFTOwner] + (msg.value / maxNFTs);\n        }\n\n        emit nodeRewardsDeposited(msg.value);\n    }\n\n    /**\n    @dev Function for NFT holders to claim their node rewards.\n    */\n    function claimNodeRewards() external {\n        require(cardinalNFT.addressIsMember(msg.sender), \"Only Cardinal Crew Members can participate in Node Runner.\");\n        require(addressToMaticCanClaim[msg.sender] > 0, \"You don't have any node rewards to claim! If you have an NFT for this node, please wait until the next reward deposit.\");\n        \n        uint256 claimAmount = addressToMaticCanClaim[msg.sender];\n        addressToMaticCanClaim[msg.sender] = 0;\n        (bool success, ) = msg.sender.call{value: claimAmount}(\"\");\n        require(success, \"Failed to send Matic\");\n\n        emit nodeRewardsClaimed(msg.sender, claimAmount);\n\n        addressToMaticClaimed[msg.sender] = addressToMaticClaimed[msg.sender] + claimAmount;\n    }\n\n    /**\n    * @dev Only owner function to withdraw the USDC that is paid to this contract for the Node Runner NFTs.\n     */\n    function withdrawNodeFunds() external onlyOwner {\n        USDC.transfer(owner(), USDC.balanceOf(address(this)));\n    }\n\n    /**\n    * @dev Setter function for the token URI of an NFT.\n    * @param tokenId the ID of the NFT to update the token URI of\n    * @param newTokenURI the token URI to update the NFT with\n     */\n    function setTokenURI(uint256 tokenId, string memory newTokenURI) external onlyOwner {\n        _setTokenURI(tokenId, newTokenURI);\n        emit tokenURIUpdated(tokenId, newTokenURI);\n    }\n\n    /**\n    * @dev Function to get all token URIs for tokens that a given user owns.\n    * @param userAddress the user's address to get token URIs of\n    * @return list of token URIs for a user's NFTs\n     */\n    function getUserTokenURIs(address userAddress) external view returns (string[] memory) {\n        uint NFTCount = _tokenIds.current();\n        uint userNFTCount = 0;\n        uint currentIndex = 0;\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress) {\n                userNFTCount += 1;\n            }\n        }\n\n        string[] memory userNFTTokenURIs = new string[](userNFTCount);\n\n        for (uint id = 1; id <= NFTCount; id++) {\n            if (ownerOf(id) == userAddress) {\n                string memory currentNFT = tokenURI(id);\n                userNFTTokenURIs[currentIndex] = currentNFT;\n                currentIndex += 1;\n            }\n        }\n        \n        return userNFTTokenURIs;\n    }\n\n    /**\n    * @dev updates the Node Runner NFT token URI\n    * @param newNodeRunnerTokenURI the new type ID of the Node Runner NFTs\n     */\n    function updateNodeRunnerTokenURI(string memory newNodeRunnerTokenURI) external onlyOwner {\n        nodeRunnerTokenURI = newNodeRunnerTokenURI;\n    }\n\n    /**\n    * @dev Function to assign an NFT to a whitelist spot so only one address can purchase the NFT.\n    * @param whiteListAddress the address of the user who will be able to purchase the NFT\n    * @param tokenId the ID of the NFT that the whitelist spot is for\n     */\n    function addWhiteListToToken(address whiteListAddress, uint256 tokenId) external onlyOwner {\n        tokenIdToWhitelistAddress[tokenId] = whiteListAddress;\n    }\n\n    /**\n    * @dev updates the listing fee of an NFT.\n    * @param tokenId the ID of the NFT to update the listing fee of\n    * @param newListingFee the listing fee value for the NFT\n     */\n    function updateTokenListingFee(uint256 tokenId, uint256 newListingFee) external onlyOwner {\n        tokenIdToListingFee[tokenId] = newListingFee;\n    }\n\n    /**\n    * @dev updates the marketplace address.\n    * @param newMarketplaceAddress the new marketplace address\n     */\n    function updateMarketplaceAddress(address newMarketplaceAddress) external onlyOwner {\n        marketplaceAddress = newMarketplaceAddress;\n    }\n\n    /**\n    * @dev updates the USDC contract.\n    * @param newUSDCAddress the new USDC address\n     */\n    function updateUSDCAddress(address newUSDCAddress) external onlyOwner {\n        USDC = IERC20(newUSDCAddress);\n    }\n\n    /**\n    * @dev updates the default listing fee for the NFTs.\n    * @param newDefaultListingFee the new default listing fee\n     */\n    function updateDefaultListingFee(uint256 newDefaultListingFee) external onlyOwner {\n        defaultListingFee = newDefaultListingFee;\n    }\n\n    /**\n    * @dev updates the maximum number of NFTs that can be minted for the node this contract represents.\n    * @param newMaxNFTs the new maximum number of NFTs that can be minted in this contract\n     */\n    function updateMaxNFTs(uint256 newMaxNFTs) external onlyOwner {\n        maxNFTs = newMaxNFTs;\n    }\n\n    /**\n    * @dev updates the price of each NFT.\n    * @param newNFTPriceInUSDC the price of each NFT in USDC\n     */\n    function updateNFTPriceInUSDC(uint256 newNFTPriceInUSDC) external onlyOwner {\n        NFTPriceInUSDC = newNFTPriceInUSDC;\n    }\n\n    /**\n    * @dev function for the marketplace to determine if an address is a Cardinal Crew member.\n    * @param user the address to check the Cardinal Crew membership of\n    */\n    function addressIsMember(address user) external returns (bool) {\n        return cardinalNFT.addressIsMember(user);\n    }\n}",
  "sourceMap": "493:10281:19:-:0;;;2083:456;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:5;;;;;;;;;;;-1:-1:-1;;;1390:113:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:5;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:5;:::i;:::-;-1:-1:-1;1479:17:5;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;2289:18:19::1;:40:::0;;-1:-1:-1;;;;;;2289:40:19;;::::1;-1:-1:-1::0;;;;;2289:40:19;;::::1;;::::0;;;2339:11:::1;:45:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2394:4:::1;:20:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;2424:17:::1;:38:::0;;;;2472:7:::1;:18:::0;2500:14:::1;:32:::0;493:10281;;640:96:11;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;493:10281:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;493:10281:19;;;-1:-1:-1;493:10281:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:21;-1:-1:-1;;;;;89:31:21;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:713::-;273:6;281;289;297;305;313;366:3;354:9;345:7;341:23;337:33;334:53;;;383:1;380;373:12;334:53;415:9;409:16;434:31;459:5;434:31;:::i;:::-;534:2;519:18;;513:25;484:5;;-1:-1:-1;547:33:21;513:25;547:33;:::i;:::-;651:2;636:18;;630:25;599:7;;-1:-1:-1;664:33:21;630:25;664:33;:::i;:::-;716:7;706:17;;;763:2;752:9;748:18;742:25;732:35;;807:3;796:9;792:19;786:26;776:36;;852:3;841:9;837:19;831:26;821:36;;150:713;;;;;;;;:::o;868:380::-;947:1;943:12;;;;990;;;1011:61;;1065:4;1057:6;1053:17;1043:27;;1011:61;1118:2;1110:6;1107:14;1087:18;1084:38;1081:161;;;1164:10;1159:3;1155:20;1152:1;1145:31;1199:4;1196:1;1189:15;1227:4;1224:1;1217:15;1081:161;;868:380;;;:::o;:::-;493:10281:19;;;;;;",
  "sourcePath": "contracts/NodeRunner.sol",
  "type": "contract"
}