{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_preSaleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burnWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidityWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_memberGiveawayWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_marketingWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_developerWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouterAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "developerTransactionFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "marketingTransactionFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "memberGiveawayTransactionFeeUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractTokenDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developerFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developerWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disperseFeesManually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "excludeUserFromFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "excludedFromFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "includeUsersInFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "memberGiveawayFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "memberGiveawayWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "preSaleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDivisor",
          "type": "uint256"
        }
      ],
      "name": "setContractTokenDivisor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "useAmount",
          "type": "bool"
        }
      ],
      "name": "swapCardinalTokensForMaticManually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "blacklisted",
          "type": "bool"
        }
      ],
      "name": "updateBlackList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDeveloperTransactionFee",
          "type": "uint256"
        }
      ],
      "name": "updateDeveloperTransactionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMarketingTransactionFee",
          "type": "uint256"
        }
      ],
      "name": "updateMarketingTransactionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMemberGiveawayTransactionFee",
          "type": "uint256"
        }
      ],
      "name": "updateMemberGiveawayTransactionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isMinter",
          "type": "bool"
        }
      ],
      "name": "updateMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "11": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "2": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "20": "contracts/CardinalToken.sol",
    "3": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "39": "interfaces/Uniswap.sol",
    "4": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/CardinalToken.sol",
    "exportedSymbols": {
      "CardinalToken": [
        3870
      ],
      "Context": [
        11014
      ],
      "ERC20": [
        10384
      ],
      "IERC20": [
        11572
      ],
      "IERC20Metadata": [
        11597
      ],
      "IUniswapV2Factory": [
        10396
      ],
      "IUniswapV2Pair": [
        10400
      ],
      "IUniswapV2Router01": [
        10457
      ],
      "IUniswapV2Router02": [
        10517
      ],
      "Ownable": [
        8485
      ]
    },
    "id": 3871,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2870,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:31:20"
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2871,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3871,
        "sourceUnit": 10385,
        "src": "68:55:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2872,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3871,
        "sourceUnit": 8486,
        "src": "124:52:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/Uniswap.sol",
        "file": "../interfaces/Uniswap.sol",
        "id": 2873,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3871,
        "sourceUnit": 10518,
        "src": "177:35:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2875,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10384,
              "src": "344:5:20"
            },
            "id": 2876,
            "nodeType": "InheritanceSpecifier",
            "src": "344:5:20"
          },
          {
            "baseName": {
              "id": 2877,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8485,
              "src": "351:7:20"
            },
            "id": 2878,
            "nodeType": "InheritanceSpecifier",
            "src": "351:7:20"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2874,
          "nodeType": "StructuredDocumentation",
          "src": "214:103:20",
          "text": " @title Cardinal House Token\n @dev Token contract for the Cardinal House ecosystem currency"
        },
        "fullyImplemented": true,
        "id": 3870,
        "linearizedBaseContracts": [
          3870,
          8485,
          10384,
          11597,
          11572,
          11014
        ],
        "name": "CardinalToken",
        "nameLocation": "327:13:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "dbe66ca0",
            "id": 2882,
            "mutability": "mutable",
            "name": "excludedFromFees",
            "nameLocation": "535:16:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "502:49:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2881,
              "keyType": {
                "id": 2879,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "511:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "502:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2880,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "522:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9f92be4",
            "id": 2886,
            "mutability": "mutable",
            "name": "blacklist",
            "nameLocation": "702:9:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "669:42:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2885,
              "keyType": {
                "id": 2883,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "678:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "669:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2884,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "689:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f46eccc4",
            "id": 2890,
            "mutability": "mutable",
            "name": "minters",
            "nameLocation": "834:7:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "801:40:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2889,
              "keyType": {
                "id": 2887,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "810:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "801:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2888,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "821:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5b3c1da1",
            "id": 2892,
            "mutability": "mutable",
            "name": "burnWalletAddress",
            "nameLocation": "923:17:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "908:32:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2891,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "908:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8eb83f25",
            "id": 2894,
            "mutability": "mutable",
            "name": "liquidityWalletAddress",
            "nameLocation": "1143:22:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "1128:37:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2893,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1128:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eb08aa3b",
            "id": 2896,
            "mutability": "mutable",
            "name": "preSaleAddress",
            "nameLocation": "1242:14:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "1227:29:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2895,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1227:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd092bc5",
            "id": 2898,
            "mutability": "mutable",
            "name": "memberGiveawayWalletAddress",
            "nameLocation": "1354:27:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "1331:50:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2897,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1331:15:20",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d158272d",
            "id": 2900,
            "mutability": "mutable",
            "name": "marketingWalletAddress",
            "nameLocation": "1471:22:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "1448:45:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2899,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1448:15:20",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61eb048a",
            "id": 2902,
            "mutability": "mutable",
            "name": "developerWalletAddress",
            "nameLocation": "1582:22:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "1559:45:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2901,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1559:15:20",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20ca3c7f",
            "id": 2904,
            "mutability": "mutable",
            "name": "uniswapRouterAddress",
            "nameLocation": "1696:20:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "1681:35:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2903,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1681:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f481683",
            "id": 2907,
            "mutability": "mutable",
            "name": "memberGiveawayFeePercent",
            "nameLocation": "1795:24:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "1780:43:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2905,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1780:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 2906,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1822:1:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da6fa55c",
            "id": 2910,
            "mutability": "mutable",
            "name": "marketingFeePercent",
            "nameLocation": "1896:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "1881:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2908,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1881:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 2909,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1918:1:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4fcd1285",
            "id": 2913,
            "mutability": "mutable",
            "name": "developerFeePercent",
            "nameLocation": "1997:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "1982:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2911,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1982:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 2912,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2019:1:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2916,
            "mutability": "mutable",
            "name": "uniswapRouter",
            "nameLocation": "2083:13:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "2056:40:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
              "typeString": "contract IUniswapV2Router02"
            },
            "typeName": {
              "id": 2915,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2914,
                "name": "IUniswapV2Router02",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10517,
                "src": "2056:18:20"
              },
              "referencedDeclaration": 10517,
              "src": "2056:18:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c816841b",
            "id": 2918,
            "mutability": "mutable",
            "name": "uniswapPair",
            "nameLocation": "2181:11:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "2166:26:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2917,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2166:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "404e8a82",
            "id": 2921,
            "mutability": "mutable",
            "name": "contractTokenDivisor",
            "nameLocation": "2323:20:20",
            "nodeType": "VariableDeclaration",
            "scope": 3870,
            "src": "2308:42:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2919,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2308:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 2920,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2346:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2925,
            "name": "memberGiveawayTransactionFeeUpdated",
            "nameLocation": "2423:35:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2923,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "transactionFeeAmount",
                  "nameLocation": "2475:20:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2925,
                  "src": "2459:36:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2459:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2458:38:20"
            },
            "src": "2417:80:20"
          },
          {
            "anonymous": false,
            "id": 2929,
            "name": "marketingTransactionFeeUpdated",
            "nameLocation": "2508:30:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2927,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "transactionFeeAmount",
                  "nameLocation": "2555:20:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2929,
                  "src": "2539:36:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2539:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2538:38:20"
            },
            "src": "2502:75:20"
          },
          {
            "anonymous": false,
            "id": 2933,
            "name": "developerTransactionFeeUpdated",
            "nameLocation": "2588:30:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2931,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "transactionFeeAmount",
                  "nameLocation": "2635:20:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2933,
                  "src": "2619:36:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2619:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2618:38:20"
            },
            "src": "2582:75:20"
          },
          {
            "body": {
              "id": 3105,
              "nodeType": "Block",
              "src": "3225:1411:20",
              "statements": [
                {
                  "expression": {
                    "id": 2958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2956,
                      "name": "preSaleAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2896,
                      "src": "3239:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2957,
                      "name": "_preSaleAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2937,
                      "src": "3256:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3239:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2959,
                  "nodeType": "ExpressionStatement",
                  "src": "3239:32:20"
                },
                {
                  "expression": {
                    "id": 2962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2960,
                      "name": "memberGiveawayWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2898,
                      "src": "3285:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2961,
                      "name": "_memberGiveawayWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2943,
                      "src": "3315:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3285:58:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2963,
                  "nodeType": "ExpressionStatement",
                  "src": "3285:58:20"
                },
                {
                  "expression": {
                    "id": 2966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2964,
                      "name": "burnWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2892,
                      "src": "3357:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2965,
                      "name": "_burnWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2939,
                      "src": "3377:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3357:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2967,
                  "nodeType": "ExpressionStatement",
                  "src": "3357:38:20"
                },
                {
                  "expression": {
                    "id": 2970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2968,
                      "name": "liquidityWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2894,
                      "src": "3409:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2969,
                      "name": "_liquidityWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2941,
                      "src": "3434:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3409:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2971,
                  "nodeType": "ExpressionStatement",
                  "src": "3409:48:20"
                },
                {
                  "expression": {
                    "id": 2974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2972,
                      "name": "marketingWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "3471:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2973,
                      "name": "_marketingWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2945,
                      "src": "3496:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3471:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2975,
                  "nodeType": "ExpressionStatement",
                  "src": "3471:48:20"
                },
                {
                  "expression": {
                    "id": 2978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2976,
                      "name": "developerWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2902,
                      "src": "3533:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2977,
                      "name": "_developerWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2947,
                      "src": "3558:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3533:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2979,
                  "nodeType": "ExpressionStatement",
                  "src": "3533:48:20"
                },
                {
                  "expression": {
                    "id": 2982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2980,
                      "name": "uniswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2904,
                      "src": "3595:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2981,
                      "name": "_uniswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2949,
                      "src": "3618:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3595:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2983,
                  "nodeType": "ExpressionStatement",
                  "src": "3595:44:20"
                },
                {
                  "expression": {
                    "id": 2988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2984,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "3654:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2986,
                      "indexExpression": {
                        "id": 2985,
                        "name": "memberGiveawayWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2898,
                        "src": "3671:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3654:45:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3702:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3654:52:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2989,
                  "nodeType": "ExpressionStatement",
                  "src": "3654:52:20"
                },
                {
                  "expression": {
                    "id": 2994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2990,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "3720:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2992,
                      "indexExpression": {
                        "id": 2991,
                        "name": "developerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2902,
                        "src": "3737:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3720:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3763:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3720:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2995,
                  "nodeType": "ExpressionStatement",
                  "src": "3720:47:20"
                },
                {
                  "expression": {
                    "id": 3000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2996,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "3781:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2998,
                      "indexExpression": {
                        "id": 2997,
                        "name": "marketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2900,
                        "src": "3798:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3781:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3824:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3781:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3001,
                  "nodeType": "ExpressionStatement",
                  "src": "3781:47:20"
                },
                {
                  "expression": {
                    "id": 3006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3002,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "3842:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3004,
                      "indexExpression": {
                        "id": 3003,
                        "name": "liquidityWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "3859:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3842:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3885:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3842:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3007,
                  "nodeType": "ExpressionStatement",
                  "src": "3842:47:20"
                },
                {
                  "expression": {
                    "id": 3012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3008,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "3903:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3010,
                      "indexExpression": {
                        "id": 3009,
                        "name": "preSaleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2896,
                        "src": "3920:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3903:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3938:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3903:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3013,
                  "nodeType": "ExpressionStatement",
                  "src": "3903:39:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3015,
                        "name": "preSaleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2896,
                        "src": "3963:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "id": 3016,
                                    "name": "initialSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2935,
                                    "src": "3981:13:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3017,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3980:15:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3335",
                                "id": 3018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3998:2:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_35_by_1",
                                  "typeString": "int_const 35"
                                },
                                "value": "35"
                              },
                              "src": "3980:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 3020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4003:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "3980:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3022,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3979:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3014,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10201,
                      "src": "3957:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3957:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3024,
                  "nodeType": "ExpressionStatement",
                  "src": "3957:51:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3026,
                        "name": "liquidityWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "4028:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "id": 3027,
                                    "name": "initialSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2935,
                                    "src": "4054:13:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3028,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4053:15:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3335",
                                "id": 3029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4071:2:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_35_by_1",
                                  "typeString": "int_const 35"
                                },
                                "value": "35"
                              },
                              "src": "4053:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 3031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4076:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "4053:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3033,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4052:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3025,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10201,
                      "src": "4022:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4022:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3035,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:59:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3037,
                        "name": "marketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2900,
                        "src": "4101:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3038,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2935,
                          "src": "4125:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 3039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4141:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "4125:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3036,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10201,
                      "src": "4095:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4095:49:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3042,
                  "nodeType": "ExpressionStatement",
                  "src": "4095:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3044,
                        "name": "developerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2902,
                        "src": "4164:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3045,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2935,
                          "src": "4188:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 3046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4204:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "4188:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3043,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10201,
                      "src": "4158:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4158:48:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3049,
                  "nodeType": "ExpressionStatement",
                  "src": "4158:48:20"
                },
                {
                  "assignments": [
                    3052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3052,
                      "mutability": "mutable",
                      "name": "_uniswapV2Router",
                      "nameLocation": "4240:16:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3105,
                      "src": "4221:35:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                        "typeString": "contract IUniswapV2Router02"
                      },
                      "typeName": {
                        "id": 3051,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3050,
                          "name": "IUniswapV2Router02",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10517,
                          "src": "4221:18:20"
                        },
                        "referencedDeclaration": 10517,
                        "src": "4221:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3056,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3054,
                        "name": "uniswapRouterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2904,
                        "src": "4278:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3053,
                      "name": "IUniswapV2Router02",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10517,
                      "src": "4259:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$10517_$",
                        "typeString": "type(contract IUniswapV2Router02)"
                      }
                    },
                    "id": 3055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4259:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4221:78:20"
                },
                {
                  "expression": {
                    "id": 3059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3057,
                      "name": "uniswapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2916,
                      "src": "4313:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3058,
                      "name": "_uniswapV2Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3052,
                      "src": "4329:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "src": "4313:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "id": 3060,
                  "nodeType": "ExpressionStatement",
                  "src": "4313:32:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3064,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4376:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 3063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4368:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3062,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4368:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4368:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3068,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2916,
                            "src": "4391:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 3067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4383:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3066,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4383:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4383:22:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3070,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2935,
                        "src": "4407:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3061,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10318,
                      "src": "4359:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4359:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3072,
                  "nodeType": "ExpressionStatement",
                  "src": "4359:62:20"
                },
                {
                  "expression": {
                    "id": 3088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3073,
                      "name": "uniswapPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2918,
                      "src": "4435:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3082,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4514:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                "typeString": "contract CardinalToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                "typeString": "contract CardinalToken"
                              }
                            ],
                            "id": 3081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4506:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3080,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4506:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4506:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3084,
                              "name": "_uniswapV2Router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3052,
                              "src": "4521:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 3085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "WETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10410,
                            "src": "4521:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                              "typeString": "function () pure external returns (address)"
                            }
                          },
                          "id": 3086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4521:23:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 3075,
                                  "name": "_uniswapV2Router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3052,
                                  "src": "4467:16:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                },
                                "id": 3076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "factory",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10405,
                                "src": "4467:24:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                  "typeString": "function () pure external returns (address)"
                                }
                              },
                              "id": 3077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4467:26:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3074,
                            "name": "IUniswapV2Factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10396,
                            "src": "4449:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$10396_$",
                              "typeString": "type(contract IUniswapV2Factory)"
                            }
                          },
                          "id": 3078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4449:45:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Factory_$10396",
                            "typeString": "contract IUniswapV2Factory"
                          }
                        },
                        "id": 3079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createPair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10395,
                        "src": "4449:56:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                          "typeString": "function (address,address) external returns (address)"
                        }
                      },
                      "id": 3087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4449:96:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4435:110:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3089,
                  "nodeType": "ExpressionStatement",
                  "src": "4435:110:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3096,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2916,
                            "src": "4595:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 3095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4587:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3094,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4587:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4587:22:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4616:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3099,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4616:7:20",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 3098,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4611:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4611:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 3102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4611:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3091,
                            "name": "uniswapPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2918,
                            "src": "4566:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3090,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11572,
                          "src": "4559:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$11572_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4559:19:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11572",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11541,
                      "src": "4559:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4559:70:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3104,
                  "nodeType": "ExpressionStatement",
                  "src": "4559:70:20"
                }
              ]
            },
            "id": 3106,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "43617264696e616c546f6b656e",
                    "id": 2952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3200:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8b03f4f4c16dd037ba2c407eb6d886722dbec6e3911190273577b8917f56ba3f",
                      "typeString": "literal_string \"CardinalToken\""
                    },
                    "value": "CardinalToken"
                  },
                  {
                    "hexValue": "43524e4c",
                    "id": 2953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3217:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_beea0adffe6dc677ad15c6f15df001e1abd4243d7bec8bc4a12b5140df9ea0b0",
                      "typeString": "literal_string \"CRNL\""
                    },
                    "value": "CRNL"
                  }
                ],
                "id": 2954,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2951,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10384,
                  "src": "3194:5:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "3194:30:20"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2935,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "2877:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "2869:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2869:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2937,
                  "mutability": "mutable",
                  "name": "_preSaleAddress",
                  "nameLocation": "2908:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "2900:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2900:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2939,
                  "mutability": "mutable",
                  "name": "_burnWalletAddress",
                  "nameLocation": "2942:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "2934:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2934:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2941,
                  "mutability": "mutable",
                  "name": "_liquidityWalletAddress",
                  "nameLocation": "2978:23:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "2970:31:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2970:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2943,
                  "mutability": "mutable",
                  "name": "_memberGiveawayWalletAddress",
                  "nameLocation": "3027:28:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "3011:44:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3011:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2945,
                  "mutability": "mutable",
                  "name": "_marketingWalletAddress",
                  "nameLocation": "3081:23:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "3065:39:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3065:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2947,
                  "mutability": "mutable",
                  "name": "_developerWalletAddress",
                  "nameLocation": "3130:23:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "3114:39:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3114:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2949,
                  "mutability": "mutable",
                  "name": "_uniswapRouterAddress",
                  "nameLocation": "3171:21:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "3163:29:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3163:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2859:334:20"
            },
            "returnParameters": {
              "id": 2955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3225:0:20"
            },
            "scope": 3870,
            "src": "2848:1788:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3117,
              "nodeType": "Block",
              "src": "4790:37:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3114,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "4815:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CardinalToken_$3870",
                          "typeString": "contract CardinalToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CardinalToken_$3870",
                          "typeString": "contract CardinalToken"
                        }
                      ],
                      "id": 3113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4807:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3112,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4807:7:20",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4807:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3111,
                  "id": 3116,
                  "nodeType": "Return",
                  "src": "4800:20:20"
                }
              ]
            },
            "documentation": {
              "id": 3107,
              "nodeType": "StructuredDocumentation",
              "src": "4642:84:20",
              "text": " @dev Returns the contract address\n @return contract address"
            },
            "functionSelector": "32a2c5d0",
            "id": 3118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nameLocation": "4740:18:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4758:2:20"
            },
            "returnParameters": {
              "id": 3111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3110,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3118,
                  "src": "4782:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4782:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4781:9:20"
            },
            "scope": 3870,
            "src": "4731:96:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3132,
              "nodeType": "Block",
              "src": "5022:46:20",
              "statements": [
                {
                  "expression": {
                    "id": 3130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3126,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "5032:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3128,
                      "indexExpression": {
                        "id": 3127,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3121,
                        "src": "5049:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5032:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5057:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5032:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3131,
                  "nodeType": "ExpressionStatement",
                  "src": "5032:29:20"
                }
              ]
            },
            "documentation": {
              "id": 3119,
              "nodeType": "StructuredDocumentation",
              "src": "4833:124:20",
              "text": " @dev Adds a user to be excluded from fees.\n @param user address of the user to be excluded from fees."
            },
            "functionSelector": "78c1d245",
            "id": 3133,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3124,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3123,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "5012:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "5012:9:20"
              }
            ],
            "name": "excludeUserFromFees",
            "nameLocation": "4971:19:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3121,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4999:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3133,
                  "src": "4991:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4991:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4990:14:20"
            },
            "returnParameters": {
              "id": 3125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5022:0:20"
            },
            "scope": 3870,
            "src": "4962:106:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3142,
              "nodeType": "Block",
              "src": "5275:39:20",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3139,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "5292:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 3140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "5292:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3138,
                  "id": 3141,
                  "nodeType": "Return",
                  "src": "5285:22:20"
                }
              ]
            },
            "documentation": {
              "id": 3134,
              "nodeType": "StructuredDocumentation",
              "src": "5074:135:20",
              "text": " @dev Gets the current timestamp, used for testing + verification\n @return the the timestamp of the current block"
            },
            "functionSelector": "6c9230db",
            "id": 3143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTimestamp",
            "nameLocation": "5223:19:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5242:2:20"
            },
            "returnParameters": {
              "id": 3138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3143,
                  "src": "5266:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5266:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5265:9:20"
            },
            "scope": 3870,
            "src": "5214:100:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3157,
              "nodeType": "Block",
              "src": "5527:47:20",
              "statements": [
                {
                  "expression": {
                    "id": 3155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3151,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "5537:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3153,
                      "indexExpression": {
                        "id": 3152,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3146,
                        "src": "5554:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5537:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5562:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5537:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3156,
                  "nodeType": "ExpressionStatement",
                  "src": "5537:30:20"
                }
              ]
            },
            "documentation": {
              "id": 3144,
              "nodeType": "StructuredDocumentation",
              "src": "5320:143:20",
              "text": " @dev Removes a user from the fee exclusion.\n @param user address of the user than will now have to pay transaction fees."
            },
            "functionSelector": "bbeaa1f8",
            "id": 3158,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3149,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3148,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "5517:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "5517:9:20"
              }
            ],
            "name": "includeUsersInFees",
            "nameLocation": "5477:18:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3146,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5504:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3158,
                  "src": "5496:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5496:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5495:14:20"
            },
            "returnParameters": {
              "id": 3150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5527:0:20"
            },
            "scope": 3870,
            "src": "5468:106:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9920
            ],
            "body": {
              "id": 3354,
              "nodeType": "Block",
              "src": "5926:2612:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5992:24:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3170,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2886,
                            "src": "5993:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3173,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3171,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11004,
                              "src": "6003:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6003:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5993:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206265656e20626c61636b6c69737465642066726f6d2074726164696e67207468652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e74616374207468652043617264696e616c20486f757365207465616d2e",
                        "id": 3175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6018:131:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6410efe56cb606d9fff98ba1f1ad7463072ee575be6e8ee88235d0988510a3f",
                          "typeString": "literal_string \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        },
                        "value": "You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6410efe56cb606d9fff98ba1f1ad7463072ee575be6e8ee88235d0988510a3f",
                          "typeString": "literal_string \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        }
                      ],
                      "id": 3169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5984:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5984:166:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3177,
                  "nodeType": "ExpressionStatement",
                  "src": "5984:166:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6219:21:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3179,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2886,
                            "src": "6220:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3181,
                          "indexExpression": {
                            "id": 3180,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3161,
                            "src": "6230:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6220:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206164647265737320796f752061726520747279696e6720746f2073656e642043617264696e616c20546f6b656e7320746f20686173206265656e20626c61636b6c69737465642066726f6d2074726164696e67207468652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e74616374207468652043617264696e616c20486f757365207465616d2e",
                        "id": 3183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6242:180:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b243ef0e2acf994586646820eb9083d74218066d7bbf0b3dce04357f56c9a03f",
                          "typeString": "literal_string \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        },
                        "value": "The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b243ef0e2acf994586646820eb9083d74218066d7bbf0b3dce04357f56c9a03f",
                          "typeString": "literal_string \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        }
                      ],
                      "id": 3178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6211:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6211:212:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3185,
                  "nodeType": "ExpressionStatement",
                  "src": "6211:212:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3186,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11004,
                            "src": "6556:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6556:12:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3188,
                          "name": "uniswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2918,
                          "src": "6572:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6556:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "id": 3194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6587:31:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3190,
                            "name": "excludedFromFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2882,
                            "src": "6588:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3193,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3191,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11004,
                              "src": "6605:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6605:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6588:30:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "6556:62:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 3199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "6622:28:20",
                      "subExpression": {
                        "baseExpression": {
                          "id": 3196,
                          "name": "excludedFromFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2882,
                          "src": "6623:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3198,
                        "indexExpression": {
                          "id": 3197,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3161,
                          "src": "6640:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6623:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6556:94:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3218,
                  "nodeType": "IfStatement",
                  "src": "6552:273:20",
                  "trueBody": {
                    "id": 3217,
                    "nodeType": "Block",
                    "src": "6652:173:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3206,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 3203,
                                          "name": "recipient",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3161,
                                          "src": "6685:9:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 3202,
                                        "name": "balanceOf",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9895,
                                        "src": "6675:9:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view returns (uint256)"
                                        }
                                      },
                                      "id": 3204,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6675:20:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 3205,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3163,
                                      "src": "6698:6:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6675:29:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3207,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6674:31:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3211,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 3208,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9881,
                                        "src": "6709:11:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 3209,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6709:13:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "313636",
                                      "id": 3210,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6725:3:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_166_by_1",
                                        "typeString": "int_const 166"
                                      },
                                      "value": "166"
                                    },
                                    "src": "6709:19:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3212,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6708:21:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6674:55:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f752063616e27742068617665206d6f7265207468616e203225206f662074686520746f74616c2043617264696e616c20546f6b656e20737570706c7920616674657220612044455820737761702e",
                              "id": 3214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6731:82:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_663ef9c859f2c7fe69e6154320a8667a9b99a004c7f65d356576959a2fa61e8c",
                                "typeString": "literal_string \"You can't have more than 2% of the total Cardinal Token supply after a DEX swap.\""
                              },
                              "value": "You can't have more than 2% of the total Cardinal Token supply after a DEX swap."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_663ef9c859f2c7fe69e6154320a8667a9b99a004c7f65d356576959a2fa61e8c",
                                "typeString": "literal_string \"You can't have more than 2% of the total Cardinal Token supply after a DEX swap.\""
                              }
                            ],
                            "id": 3201,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6666:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6666:148:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3216,
                        "nodeType": "ExpressionStatement",
                        "src": "6666:148:20"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3219,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "6930:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3222,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3220,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11004,
                          "src": "6947:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6947:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6930:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 3223,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "6964:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3225,
                      "indexExpression": {
                        "id": 3224,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3161,
                        "src": "6981:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6964:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6930:61:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3237,
                  "nodeType": "IfStatement",
                  "src": "6926:159:20",
                  "trueBody": {
                    "id": 3236,
                    "nodeType": "Block",
                    "src": "6993:92:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3228,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11004,
                                "src": "7017:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7017:12:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3230,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3161,
                              "src": "7031:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3231,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3163,
                              "src": "7042:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3227,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10145,
                            "src": "7007:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7007:42:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3233,
                        "nodeType": "ExpressionStatement",
                        "src": "7007:42:20"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7070:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3168,
                        "id": 3235,
                        "nodeType": "Return",
                        "src": "7063:11:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3239,
                      "mutability": "mutable",
                      "name": "memberGiveawayFee",
                      "nameLocation": "7147:17:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3354,
                      "src": "7139:25:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3238,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7139:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3246,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3240,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3163,
                            "src": "7168:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3241,
                            "name": "memberGiveawayFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2907,
                            "src": "7177:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7168:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3243,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7167:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7205:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "7167:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7139:69:20"
                },
                {
                  "assignments": [
                    3248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3248,
                      "mutability": "mutable",
                      "name": "marketingFee",
                      "nameLocation": "7269:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3354,
                      "src": "7261:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3247,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7261:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3255,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3249,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3163,
                            "src": "7285:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3250,
                            "name": "marketingFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2910,
                            "src": "7294:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7285:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3252,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7284:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7317:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "7284:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7261:59:20"
                },
                {
                  "assignments": [
                    3257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3257,
                      "mutability": "mutable",
                      "name": "developerFee",
                      "nameLocation": "7381:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3354,
                      "src": "7373:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3256,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7373:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3264,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3258,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3163,
                            "src": "7397:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3259,
                            "name": "developerFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2913,
                            "src": "7406:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7397:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3261,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7396:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7429:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "7396:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7373:59:20"
                },
                {
                  "assignments": [
                    3266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3266,
                      "mutability": "mutable",
                      "name": "contractFee",
                      "nameLocation": "7535:11:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3354,
                      "src": "7527:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7527:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3270,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3267,
                      "name": "marketingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3248,
                      "src": "7549:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 3268,
                      "name": "developerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3257,
                      "src": "7564:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7549:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7527:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3272,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11004,
                          "src": "7680:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7680:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3274,
                        "name": "memberGiveawayWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2898,
                        "src": "7694:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3275,
                        "name": "memberGiveawayFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3239,
                        "src": "7723:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3271,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10145,
                      "src": "7670:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7670:71:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3277,
                  "nodeType": "ExpressionStatement",
                  "src": "7670:71:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3279,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11004,
                          "src": "7761:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7761:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3283,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7783:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 3282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7775:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7775:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7775:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3285,
                        "name": "contractFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3266,
                        "src": "7790:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3278,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10145,
                      "src": "7751:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7751:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3287,
                  "nodeType": "ExpressionStatement",
                  "src": "7751:51:20"
                },
                {
                  "assignments": [
                    3289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3289,
                      "mutability": "mutable",
                      "name": "contractCardinalTokenBalance",
                      "nameLocation": "7821:28:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3354,
                      "src": "7813:36:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3288,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7813:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3296,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3293,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7870:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 3292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7862:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3291,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7862:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7862:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3290,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9895,
                      "src": "7852:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 3295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7852:24:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7813:63:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3297,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11004,
                        "src": "7891:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7891:12:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 3299,
                      "name": "uniswapPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2918,
                      "src": "7907:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7891:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3336,
                  "nodeType": "IfStatement",
                  "src": "7887:427:20",
                  "trueBody": {
                    "id": 3335,
                    "nodeType": "Block",
                    "src": "7920:394:20",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3301,
                            "name": "contractCardinalTokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3289,
                            "src": "7938:28:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 3303,
                                  "name": "uniswapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2918,
                                  "src": "7979:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3302,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9895,
                                "src": "7969:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 3304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7969:22:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 3305,
                              "name": "contractTokenDivisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "7994:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7969:45:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7938:76:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3313,
                        "nodeType": "IfStatement",
                        "src": "7934:171:20",
                        "trueBody": {
                          "id": 3312,
                          "nodeType": "Block",
                          "src": "8016:89:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3309,
                                    "name": "contractCardinalTokenBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3289,
                                    "src": "8061:28:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3308,
                                  "name": "swapCardinalTokensForMatic",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3604,
                                  "src": "8034:26:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 3310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8034:56:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3311,
                              "nodeType": "ExpressionStatement",
                              "src": "8034:56:20"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3315
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3315,
                            "mutability": "mutable",
                            "name": "contractMaticBalance",
                            "nameLocation": "8143:20:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 3335,
                            "src": "8135:28:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3314,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8135:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3321,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3318,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8174:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                  "typeString": "contract CardinalToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                  "typeString": "contract CardinalToken"
                                }
                              ],
                              "id": 3317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8166:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3316,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8166:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8166:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "8166:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8135:52:20"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3322,
                            "name": "contractMaticBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3315,
                            "src": "8205:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8228:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8205:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3334,
                        "nodeType": "IfStatement",
                        "src": "8201:103:20",
                        "trueBody": {
                          "id": 3333,
                          "nodeType": "Block",
                          "src": "8231:73:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3328,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "8275:4:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                            "typeString": "contract CardinalToken"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                            "typeString": "contract CardinalToken"
                                          }
                                        ],
                                        "id": 3327,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8267:7:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3326,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8267:7:20",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3329,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8267:13:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "8267:21:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3325,
                                  "name": "sendFeesToWallets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3639,
                                  "src": "8249:17:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 3331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8249:40:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3332,
                              "nodeType": "ExpressionStatement",
                              "src": "8249:40:20"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3338,
                      "mutability": "mutable",
                      "name": "valueAfterFees",
                      "nameLocation": "8393:14:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3354,
                      "src": "8385:22:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3337,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8385:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3344,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3339,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3163,
                        "src": "8410:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 3340,
                        "name": "contractFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3266,
                        "src": "8419:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8410:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 3342,
                      "name": "memberGiveawayFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3239,
                      "src": "8433:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8410:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8385:65:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3346,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11004,
                          "src": "8470:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8470:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3348,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3161,
                        "src": "8484:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3349,
                        "name": "valueAfterFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3338,
                        "src": "8495:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3345,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10145,
                      "src": "8460:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8460:50:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3351,
                  "nodeType": "ExpressionStatement",
                  "src": "8460:50:20"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8527:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3168,
                  "id": 3353,
                  "nodeType": "Return",
                  "src": "8520:11:20"
                }
              ]
            },
            "documentation": {
              "id": 3159,
              "nodeType": "StructuredDocumentation",
              "src": "5580:257:20",
              "text": " @dev Overrides the BEP20 transfer function to include transaction fees.\n @param recipient the recipient of the transfer\n @param amount the amount to be transfered\n @return bool representing if the transfer was successful"
            },
            "functionSelector": "a9059cbb",
            "id": 3355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "5851:8:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5902:8:20"
            },
            "parameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3161,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5868:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "5860:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5860:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3163,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5887:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "5879:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5879:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5859:35:20"
            },
            "returnParameters": {
              "id": 3168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "5920:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5920:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5919:6:20"
            },
            "scope": 3870,
            "src": "5842:2696:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9996
            ],
            "body": {
              "id": 3542,
              "nodeType": "Block",
              "src": "8967:2603:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9033:24:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3369,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2886,
                            "src": "9034:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3372,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3370,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11004,
                              "src": "9044:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9044:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9034:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206265656e20626c61636b6c69737465642066726f6d2074726164696e67207468652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e74616374207468652043617264696e616c20486f757365207465616d2e",
                        "id": 3374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9059:131:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6410efe56cb606d9fff98ba1f1ad7463072ee575be6e8ee88235d0988510a3f",
                          "typeString": "literal_string \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        },
                        "value": "You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6410efe56cb606d9fff98ba1f1ad7463072ee575be6e8ee88235d0988510a3f",
                          "typeString": "literal_string \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        }
                      ],
                      "id": 3368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9025:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9025:166:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3376,
                  "nodeType": "ExpressionStatement",
                  "src": "9025:166:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9291:16:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3378,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2886,
                            "src": "9292:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3380,
                          "indexExpression": {
                            "id": 3379,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3358,
                            "src": "9302:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9292:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206164647265737320796f7527726520747279696e6720746f207370656e64207468652043617264696e616c20546f6b656e732066726f6d20686173206265656e20626c61636b6c69737465642066726f6d2074726164696e67207468652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e74616374207468652043617264696e616c20486f757365207465616d2e",
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9309:186:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd7162bf8ad8c716db9dde5383bbc2b29cc163c10d3c3c8e25f9a721273a1e43",
                          "typeString": "literal_string \"The address you're trying to spend the Cardinal Tokens from has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        },
                        "value": "The address you're trying to spend the Cardinal Tokens from has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd7162bf8ad8c716db9dde5383bbc2b29cc163c10d3c3c8e25f9a721273a1e43",
                          "typeString": "literal_string \"The address you're trying to spend the Cardinal Tokens from has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        }
                      ],
                      "id": 3377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9283:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9283:213:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3384,
                  "nodeType": "ExpressionStatement",
                  "src": "9283:213:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9565:14:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3386,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2886,
                            "src": "9566:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3388,
                          "indexExpression": {
                            "id": 3387,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3360,
                            "src": "9576:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9566:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206164647265737320796f752061726520747279696e6720746f2073656e642043617264696e616c20546f6b656e7320746f20686173206265656e20626c61636b6c69737465642066726f6d2074726164696e67207468652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e74616374207468652043617264696e616c20486f757365207465616d2e",
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9581:180:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b243ef0e2acf994586646820eb9083d74218066d7bbf0b3dce04357f56c9a03f",
                          "typeString": "literal_string \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        },
                        "value": "The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b243ef0e2acf994586646820eb9083d74218066d7bbf0b3dce04357f56c9a03f",
                          "typeString": "literal_string \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        }
                      ],
                      "id": 3385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9557:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9557:205:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3392,
                  "nodeType": "ExpressionStatement",
                  "src": "9557:205:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 3393,
                          "name": "excludedFromFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2882,
                          "src": "9879:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3395,
                        "indexExpression": {
                          "id": 3394,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3358,
                          "src": "9896:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9879:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 3396,
                          "name": "excludedFromFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2882,
                          "src": "9905:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3398,
                        "indexExpression": {
                          "id": 3397,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3360,
                          "src": "9922:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9905:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9879:46:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 3400,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "9929:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3403,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3401,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11004,
                          "src": "9946:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9946:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9929:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9879:80:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3421,
                  "nodeType": "IfStatement",
                  "src": "9875:220:20",
                  "trueBody": {
                    "id": 3420,
                    "nodeType": "Block",
                    "src": "9961:134:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3406,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3358,
                              "src": "9991:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3407,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11004,
                                "src": "9997:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9997:12:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3409,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3362,
                              "src": "10011:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3405,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10361,
                            "src": "9975:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9975:43:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3411,
                        "nodeType": "ExpressionStatement",
                        "src": "9975:43:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3413,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3358,
                              "src": "10042:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3414,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3360,
                              "src": "10048:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3415,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3362,
                              "src": "10052:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3412,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10145,
                            "src": "10032:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10032:27:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3417,
                        "nodeType": "ExpressionStatement",
                        "src": "10032:27:20"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10080:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3367,
                        "id": 3419,
                        "nodeType": "Return",
                        "src": "10073:11:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3423,
                      "mutability": "mutable",
                      "name": "memberGiveawayFee",
                      "nameLocation": "10157:17:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3542,
                      "src": "10149:25:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3422,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10149:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3430,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3424,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3362,
                            "src": "10178:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3425,
                            "name": "memberGiveawayFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2907,
                            "src": "10187:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10178:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3427,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10177:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10215:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10177:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10149:69:20"
                },
                {
                  "assignments": [
                    3432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3432,
                      "mutability": "mutable",
                      "name": "marketingFee",
                      "nameLocation": "10279:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3542,
                      "src": "10271:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3431,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10271:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3439,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3433,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3362,
                            "src": "10295:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3434,
                            "name": "marketingFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2910,
                            "src": "10304:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10295:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3436,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10294:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10327:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10294:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10271:59:20"
                },
                {
                  "assignments": [
                    3441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3441,
                      "mutability": "mutable",
                      "name": "developerFee",
                      "nameLocation": "10391:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3542,
                      "src": "10383:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3440,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10383:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3448,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3442,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3362,
                            "src": "10407:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3443,
                            "name": "developerFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2913,
                            "src": "10416:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10407:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3445,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10406:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10439:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10406:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10383:59:20"
                },
                {
                  "assignments": [
                    3450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3450,
                      "mutability": "mutable",
                      "name": "contractFee",
                      "nameLocation": "10545:11:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3542,
                      "src": "10537:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3449,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10537:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3454,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3451,
                      "name": "marketingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3432,
                      "src": "10559:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 3452,
                      "name": "developerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3441,
                      "src": "10574:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10559:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10537:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3456,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3358,
                        "src": "10696:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3457,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11004,
                          "src": "10702:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10702:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3459,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3362,
                        "src": "10716:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3455,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10361,
                      "src": "10680:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10680:43:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3461,
                  "nodeType": "ExpressionStatement",
                  "src": "10680:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3463,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3358,
                        "src": "10743:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3464,
                        "name": "memberGiveawayWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2898,
                        "src": "10749:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3465,
                        "name": "memberGiveawayFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3423,
                        "src": "10778:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3462,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10145,
                      "src": "10733:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10733:63:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3467,
                  "nodeType": "ExpressionStatement",
                  "src": "10733:63:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3469,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3358,
                        "src": "10816:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3472,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10830:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 3471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10822:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3470,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10822:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10822:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3474,
                        "name": "contractFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3450,
                        "src": "10837:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3468,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10145,
                      "src": "10806:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10806:43:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3476,
                  "nodeType": "ExpressionStatement",
                  "src": "10806:43:20"
                },
                {
                  "assignments": [
                    3478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3478,
                      "mutability": "mutable",
                      "name": "contractCardinalTokenBalance",
                      "nameLocation": "10868:28:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3542,
                      "src": "10860:36:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10860:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3485,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3482,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10917:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 3481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10909:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3480,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10909:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10909:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3479,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9895,
                      "src": "10899:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 3484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10899:24:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10860:63:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3486,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11004,
                        "src": "10938:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10938:12:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 3488,
                      "name": "uniswapPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2918,
                      "src": "10954:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10938:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3525,
                  "nodeType": "IfStatement",
                  "src": "10934:427:20",
                  "trueBody": {
                    "id": 3524,
                    "nodeType": "Block",
                    "src": "10967:394:20",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3490,
                            "name": "contractCardinalTokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3478,
                            "src": "10985:28:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 3492,
                                  "name": "uniswapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2918,
                                  "src": "11026:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3491,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9895,
                                "src": "11016:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 3493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11016:22:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 3494,
                              "name": "contractTokenDivisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "11041:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11016:45:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10985:76:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3502,
                        "nodeType": "IfStatement",
                        "src": "10981:171:20",
                        "trueBody": {
                          "id": 3501,
                          "nodeType": "Block",
                          "src": "11063:89:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3498,
                                    "name": "contractCardinalTokenBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3478,
                                    "src": "11108:28:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3497,
                                  "name": "swapCardinalTokensForMatic",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3604,
                                  "src": "11081:26:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 3499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11081:56:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3500,
                              "nodeType": "ExpressionStatement",
                              "src": "11081:56:20"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3504
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3504,
                            "mutability": "mutable",
                            "name": "contractMaticBalance",
                            "nameLocation": "11190:20:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 3524,
                            "src": "11182:28:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3503,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11182:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3510,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3507,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11221:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                  "typeString": "contract CardinalToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                  "typeString": "contract CardinalToken"
                                }
                              ],
                              "id": 3506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11213:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3505,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11213:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11213:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "11213:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11182:52:20"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3511,
                            "name": "contractMaticBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3504,
                            "src": "11252:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11275:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11252:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3523,
                        "nodeType": "IfStatement",
                        "src": "11248:103:20",
                        "trueBody": {
                          "id": 3522,
                          "nodeType": "Block",
                          "src": "11278:73:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3517,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "11322:4:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                            "typeString": "contract CardinalToken"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                            "typeString": "contract CardinalToken"
                                          }
                                        ],
                                        "id": 3516,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11314:7:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3515,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11314:7:20",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3518,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11314:13:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3519,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "11314:21:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3514,
                                  "name": "sendFeesToWallets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3639,
                                  "src": "11296:17:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 3520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11296:40:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3521,
                              "nodeType": "ExpressionStatement",
                              "src": "11296:40:20"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3527,
                      "mutability": "mutable",
                      "name": "valueAfterFees",
                      "nameLocation": "11440:14:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3542,
                      "src": "11432:22:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11432:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3533,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3528,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3362,
                        "src": "11457:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 3529,
                        "name": "contractFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3450,
                        "src": "11466:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11457:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 3531,
                      "name": "memberGiveawayFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3423,
                      "src": "11480:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11457:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11432:65:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3535,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3358,
                        "src": "11517:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3536,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3360,
                        "src": "11523:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3537,
                        "name": "valueAfterFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3527,
                        "src": "11527:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3534,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10145,
                      "src": "11507:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11507:35:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3539,
                  "nodeType": "ExpressionStatement",
                  "src": "11507:35:20"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11559:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3367,
                  "id": 3541,
                  "nodeType": "Return",
                  "src": "11552:11:20"
                }
              ]
            },
            "documentation": {
              "id": 3356,
              "nodeType": "StructuredDocumentation",
              "src": "8544:323:20",
              "text": " @dev Overrides the BEP20 transferFrom function to include transaction fees.\n @param from the address from where the tokens are coming from\n @param to the recipient of the transfer\n @param amount the amount to be transfered\n @return bool representing if the transfer was successful"
            },
            "functionSelector": "23b872dd",
            "id": 3543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "8881:12:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3364,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8943:8:20"
            },
            "parameters": {
              "id": 3363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3358,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8902:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3543,
                  "src": "8894:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8894:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3360,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8916:2:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3543,
                  "src": "8908:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8908:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3362,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8928:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3543,
                  "src": "8920:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8920:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8893:42:20"
            },
            "returnParameters": {
              "id": 3367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3543,
                  "src": "8961:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3365,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8961:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8960:6:20"
            },
            "scope": 3870,
            "src": "8872:2698:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3603,
              "nodeType": "Block",
              "src": "11777:388:20",
              "statements": [
                {
                  "assignments": [
                    3553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3553,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "11804:4:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3603,
                      "src": "11787:21:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3551,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11787:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3552,
                        "nodeType": "ArrayTypeName",
                        "src": "11787:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3559,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 3557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11825:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 3556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11811:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3554,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11815:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3555,
                        "nodeType": "ArrayTypeName",
                        "src": "11815:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 3558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11811:16:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11787:40:20"
                },
                {
                  "expression": {
                    "id": 3567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3560,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3553,
                        "src": "11837:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 3562,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 3561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11842:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11837:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3565,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "11855:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CardinalToken_$3870",
                            "typeString": "contract CardinalToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CardinalToken_$3870",
                            "typeString": "contract CardinalToken"
                          }
                        ],
                        "id": 3564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11847:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3563,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11847:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11847:13:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11837:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3568,
                  "nodeType": "ExpressionStatement",
                  "src": "11837:23:20"
                },
                {
                  "expression": {
                    "id": 3575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3569,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3553,
                        "src": "11870:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 3571,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 3570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11875:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11870:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3572,
                          "name": "uniswapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2916,
                          "src": "11880:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 3573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "WETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10410,
                        "src": "11880:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                          "typeString": "function () pure external returns (address)"
                        }
                      },
                      "id": 3574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11880:20:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11870:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3576,
                  "nodeType": "ExpressionStatement",
                  "src": "11870:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3580,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11927:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 3579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11919:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11919:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11919:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3584,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2916,
                            "src": "11942:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 3583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11934:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3582,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11934:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11934:22:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3586,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3546,
                        "src": "11958:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3577,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10318,
                      "src": "11910:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11910:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3588,
                  "nodeType": "ExpressionStatement",
                  "src": "11910:55:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3592,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3546,
                        "src": "12053:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12073:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 3594,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3553,
                        "src": "12088:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3597,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12114:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$3870",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 3596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12106:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3595,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12106:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12106:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3599,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12133:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12133:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3589,
                        "name": "uniswapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2916,
                        "src": "11975:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$10517",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 3591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10490,
                      "src": "11975:64:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                      }
                    },
                    "id": 3601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11975:183:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3602,
                  "nodeType": "ExpressionStatement",
                  "src": "11975:183:20"
                }
              ]
            },
            "documentation": {
              "id": 3544,
              "nodeType": "StructuredDocumentation",
              "src": "11576:136:20",
              "text": " @dev Swaps Cardinal Tokens from transaction fees to Matic.\n @param amount the amount of Cardinal Tokens to swap"
            },
            "id": 3604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapCardinalTokensForMatic",
            "nameLocation": "11726:26:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3546,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11761:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3604,
                  "src": "11753:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11753:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11752:16:20"
            },
            "returnParameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11777:0:20"
            },
            "scope": 3870,
            "src": "11717:448:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3638,
              "nodeType": "Block",
              "src": "12366:245:20",
              "statements": [
                {
                  "assignments": [
                    3611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3611,
                      "mutability": "mutable",
                      "name": "totalFee",
                      "nameLocation": "12384:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3638,
                      "src": "12376:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3610,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12376:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3615,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3612,
                      "name": "marketingFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2910,
                      "src": "12395:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 3613,
                      "name": "developerFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2913,
                      "src": "12417:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12395:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12376:60:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3619,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3607,
                                "src": "12479:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 3620,
                                "name": "marketingFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2910,
                                "src": "12488:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12479:28:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3622,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12478:30:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 3623,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3611,
                          "src": "12511:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12478:41:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3616,
                        "name": "marketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2900,
                        "src": "12446:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "12446:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12446:74:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3626,
                  "nodeType": "ExpressionStatement",
                  "src": "12446:74:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3630,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3607,
                                "src": "12563:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 3631,
                                "name": "developerFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2913,
                                "src": "12572:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12563:28:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3633,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12562:30:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 3634,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3611,
                          "src": "12595:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12562:41:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3627,
                        "name": "developerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2902,
                        "src": "12530:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "12530:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12530:74:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3637,
                  "nodeType": "ExpressionStatement",
                  "src": "12530:74:20"
                }
              ]
            },
            "documentation": {
              "id": 3605,
              "nodeType": "StructuredDocumentation",
              "src": "12171:139:20",
              "text": " @dev Sends Matic to transaction fee wallets after Cardinal Token swaps.\n @param amount the amount to be transfered"
            },
            "id": 3639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendFeesToWallets",
            "nameLocation": "12324:17:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3607,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12350:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "12342:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12342:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12341:16:20"
            },
            "returnParameters": {
              "id": 3609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12366:0:20"
            },
            "scope": 3870,
            "src": "12315:296:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3657,
              "nodeType": "Block",
              "src": "12812:118:20",
              "statements": [
                {
                  "assignments": [
                    3646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3646,
                      "mutability": "mutable",
                      "name": "contractMaticBalance",
                      "nameLocation": "12830:20:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3657,
                      "src": "12822:28:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3645,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12822:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3652,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3649,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "12861:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CardinalToken_$3870",
                            "typeString": "contract CardinalToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CardinalToken_$3870",
                            "typeString": "contract CardinalToken"
                          }
                        ],
                        "id": 3648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12853:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3647,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12853:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12853:13:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "12853:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12822:52:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3654,
                        "name": "contractMaticBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3646,
                        "src": "12902:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3653,
                      "name": "sendFeesToWallets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3639,
                      "src": "12884:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12884:39:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3656,
                  "nodeType": "ExpressionStatement",
                  "src": "12884:39:20"
                }
              ]
            },
            "documentation": {
              "id": 3640,
              "nodeType": "StructuredDocumentation",
              "src": "12617:141:20",
              "text": " @dev Sends Matic to transaction fee wallets manually as opposed to happening automatically after a certain level of volume"
            },
            "functionSelector": "7c13efd4",
            "id": 3658,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3643,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3642,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "12802:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "12802:9:20"
              }
            ],
            "name": "disperseFeesManually",
            "nameLocation": "12772:20:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12792:2:20"
            },
            "returnParameters": {
              "id": 3644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12812:0:20"
            },
            "scope": 3870,
            "src": "12763:167:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3701,
              "nodeType": "Block",
              "src": "13391:374:20",
              "statements": [
                {
                  "condition": {
                    "id": 3668,
                    "name": "useAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3663,
                    "src": "13405:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3687,
                    "nodeType": "Block",
                    "src": "13489:158:20",
                    "statements": [
                      {
                        "assignments": [
                          3675
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3675,
                            "mutability": "mutable",
                            "name": "contractCardinalTokenBalance",
                            "nameLocation": "13511:28:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 3687,
                            "src": "13503:36:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3674,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13503:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3682,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3679,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "13560:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                    "typeString": "contract CardinalToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CardinalToken_$3870",
                                    "typeString": "contract CardinalToken"
                                  }
                                ],
                                "id": 3678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13552:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3677,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13552:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13552:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3676,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9895,
                            "src": "13542:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 3681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13542:24:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13503:63:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3684,
                              "name": "contractCardinalTokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3675,
                              "src": "13607:28:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3683,
                            "name": "swapCardinalTokensForMatic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3604,
                            "src": "13580:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13580:56:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3686,
                        "nodeType": "ExpressionStatement",
                        "src": "13580:56:20"
                      }
                    ]
                  },
                  "id": 3688,
                  "nodeType": "IfStatement",
                  "src": "13401:246:20",
                  "trueBody": {
                    "id": 3673,
                    "nodeType": "Block",
                    "src": "13416:59:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3670,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3661,
                              "src": "13457:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3669,
                            "name": "swapCardinalTokensForMatic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3604,
                            "src": "13430:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13430:34:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3672,
                        "nodeType": "ExpressionStatement",
                        "src": "13430:34:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3690,
                      "mutability": "mutable",
                      "name": "contractMaticBalance",
                      "nameLocation": "13665:20:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3701,
                      "src": "13657:28:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13657:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3696,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3693,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "13696:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CardinalToken_$3870",
                            "typeString": "contract CardinalToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CardinalToken_$3870",
                            "typeString": "contract CardinalToken"
                          }
                        ],
                        "id": 3692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13688:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3691,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13688:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13688:13:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "13688:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13657:52:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3698,
                        "name": "contractMaticBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3690,
                        "src": "13737:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3697,
                      "name": "sendFeesToWallets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3639,
                      "src": "13719:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13719:39:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3700,
                  "nodeType": "ExpressionStatement",
                  "src": "13719:39:20"
                }
              ]
            },
            "documentation": {
              "id": 3659,
              "nodeType": "StructuredDocumentation",
              "src": "12936:357:20",
              "text": " @dev Swaps all Cardinal Tokens in the contract for Matic and then disperses those funds to the transaction fee wallets.\n @param amount the amount of Cardinal Tokens in the contract to swap for Matic\n @param useAmount boolean to determine if the amount sent in is swapped for Matic or if the entire contract balance is swapped."
            },
            "functionSelector": "c3d0cb20",
            "id": 3702,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3666,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3665,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "13381:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "13381:9:20"
              }
            ],
            "name": "swapCardinalTokensForMaticManually",
            "nameLocation": "13307:34:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3661,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13350:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3702,
                  "src": "13342:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13342:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3663,
                  "mutability": "mutable",
                  "name": "useAmount",
                  "nameLocation": "13363:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3702,
                  "src": "13358:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3662,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13358:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13341:32:20"
            },
            "returnParameters": {
              "id": 3667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13391:0:20"
            },
            "scope": 3870,
            "src": "13298:467:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3705,
              "nodeType": "Block",
              "src": "13798:2:20",
              "statements": []
            },
            "id": 3706,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13778:2:20"
            },
            "returnParameters": {
              "id": 3704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13798:0:20"
            },
            "scope": 3870,
            "src": "13771:29:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3718,
              "nodeType": "Block",
              "src": "14097:50:20",
              "statements": [
                {
                  "expression": {
                    "id": 3716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3714,
                      "name": "contractTokenDivisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2921,
                      "src": "14107:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3715,
                      "name": "newDivisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3709,
                      "src": "14130:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14107:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3717,
                  "nodeType": "ExpressionStatement",
                  "src": "14107:33:20"
                }
              ]
            },
            "documentation": {
              "id": 3707,
              "nodeType": "StructuredDocumentation",
              "src": "13806:216:20",
              "text": " @dev Sets the value that determines how many Cardinal Tokens need to be in the contract before it's swapped for Matic.\n @param newDivisor the new divisor value to determine the swap threshold"
            },
            "functionSelector": "560493b3",
            "id": 3719,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3712,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3711,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "14087:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "14087:9:20"
              }
            ],
            "name": "setContractTokenDivisor",
            "nameLocation": "14036:23:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3709,
                  "mutability": "mutable",
                  "name": "newDivisor",
                  "nameLocation": "14068:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3719,
                  "src": "14060:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14060:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14059:20:20"
            },
            "returnParameters": {
              "id": 3713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14097:0:20"
            },
            "scope": 3870,
            "src": "14027:120:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3735,
              "nodeType": "Block",
              "src": "14500:46:20",
              "statements": [
                {
                  "expression": {
                    "id": 3733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3729,
                        "name": "blacklist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "14510:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3731,
                      "indexExpression": {
                        "id": 3730,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3722,
                        "src": "14520:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14510:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3732,
                      "name": "blacklisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3724,
                      "src": "14528:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14510:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3734,
                  "nodeType": "ExpressionStatement",
                  "src": "14510:29:20"
                }
              ]
            },
            "documentation": {
              "id": 3720,
              "nodeType": "StructuredDocumentation",
              "src": "14153:268:20",
              "text": " @dev Updates the blacklist mapping for a given address\n @param user the address that is being added or removed from the blacklist\n @param blacklisted a boolean that determines if the given address is being added or removed from the blacklist"
            },
            "functionSelector": "fc2eb889",
            "id": 3736,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3727,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3726,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "14490:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "14490:9:20"
              }
            ],
            "name": "updateBlackList",
            "nameLocation": "14435:15:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3722,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "14459:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3736,
                  "src": "14451:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14451:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3724,
                  "mutability": "mutable",
                  "name": "blacklisted",
                  "nameLocation": "14470:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3736,
                  "src": "14465:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3723,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14465:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14450:32:20"
            },
            "returnParameters": {
              "id": 3728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14500:0:20"
            },
            "scope": 3870,
            "src": "14426:120:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3759,
              "nodeType": "Block",
              "src": "14851:275:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3745,
                          "name": "newMemberGiveawayTransactionFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3739,
                          "src": "14869:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 3746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14904:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "14869:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206d656d626572206769766561776179207472616e73616374696f6e206665652063616e2774206265206d6f7265207468616e2035252e",
                        "id": 3748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14907:60:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb2c7a3ff7ef9c39840511404abc7590623ceb341df315bdc4d47a4c6202800c",
                          "typeString": "literal_string \"The member giveaway transaction fee can't be more than 5%.\""
                        },
                        "value": "The member giveaway transaction fee can't be more than 5%."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb2c7a3ff7ef9c39840511404abc7590623ceb341df315bdc4d47a4c6202800c",
                          "typeString": "literal_string \"The member giveaway transaction fee can't be more than 5%.\""
                        }
                      ],
                      "id": 3744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14861:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14861:107:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3750,
                  "nodeType": "ExpressionStatement",
                  "src": "14861:107:20"
                },
                {
                  "expression": {
                    "id": 3753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3751,
                      "name": "memberGiveawayFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2907,
                      "src": "14978:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3752,
                      "name": "newMemberGiveawayTransactionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3739,
                      "src": "15005:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14978:58:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3754,
                  "nodeType": "ExpressionStatement",
                  "src": "14978:58:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3756,
                        "name": "newMemberGiveawayTransactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3739,
                        "src": "15087:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3755,
                      "name": "memberGiveawayTransactionFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2925,
                      "src": "15051:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15051:68:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3758,
                  "nodeType": "EmitStatement",
                  "src": "15046:73:20"
                }
              ]
            },
            "documentation": {
              "id": 3737,
              "nodeType": "StructuredDocumentation",
              "src": "14552:192:20",
              "text": " @dev Function to update the member giveaway transaction fee - can't be more than 5 percent\n @param newMemberGiveawayTransactionFee the new member giveaway transaction fee"
            },
            "functionSelector": "de77bfd9",
            "id": 3760,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3742,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3741,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "14841:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "14841:9:20"
              }
            ],
            "name": "updateMemberGiveawayTransactionFee",
            "nameLocation": "14758:34:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3739,
                  "mutability": "mutable",
                  "name": "newMemberGiveawayTransactionFee",
                  "nameLocation": "14801:31:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "14793:39:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14793:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14792:41:20"
            },
            "returnParameters": {
              "id": 3743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14851:0:20"
            },
            "scope": 3870,
            "src": "14749:377:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3783,
              "nodeType": "Block",
              "src": "15404:244:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3769,
                          "name": "newMarketingTransactionFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3763,
                          "src": "15422:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 3770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15452:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "15422:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206d61726b6574696e67207472616e73616374696f6e206665652063616e2774206265206d6f7265207468616e2035252e",
                        "id": 3772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15455:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4482bba5fae1605d0ce6abebad666372287aded8b9b27bb6721e75ec1284c5e6",
                          "typeString": "literal_string \"The marketing transaction fee can't be more than 5%.\""
                        },
                        "value": "The marketing transaction fee can't be more than 5%."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4482bba5fae1605d0ce6abebad666372287aded8b9b27bb6721e75ec1284c5e6",
                          "typeString": "literal_string \"The marketing transaction fee can't be more than 5%.\""
                        }
                      ],
                      "id": 3768,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15414:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15414:96:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3774,
                  "nodeType": "ExpressionStatement",
                  "src": "15414:96:20"
                },
                {
                  "expression": {
                    "id": 3777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3775,
                      "name": "marketingFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2910,
                      "src": "15520:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3776,
                      "name": "newMarketingTransactionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3763,
                      "src": "15542:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15520:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3778,
                  "nodeType": "ExpressionStatement",
                  "src": "15520:48:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3780,
                        "name": "newMarketingTransactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3763,
                        "src": "15614:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3779,
                      "name": "marketingTransactionFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2929,
                      "src": "15583:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15583:58:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3782,
                  "nodeType": "EmitStatement",
                  "src": "15578:63:20"
                }
              ]
            },
            "documentation": {
              "id": 3761,
              "nodeType": "StructuredDocumentation",
              "src": "15132:175:20",
              "text": " @dev Function to update the marketing transaction fee - can't be more than 5 percent\n @param newMarketingTransactionFee the new marketing transaction fee"
            },
            "functionSelector": "5b81c1a4",
            "id": 3784,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3766,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3765,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "15394:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "15394:9:20"
              }
            ],
            "name": "updateMarketingTransactionFee",
            "nameLocation": "15321:29:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3763,
                  "mutability": "mutable",
                  "name": "newMarketingTransactionFee",
                  "nameLocation": "15359:26:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3784,
                  "src": "15351:34:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15351:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15350:36:20"
            },
            "returnParameters": {
              "id": 3767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15404:0:20"
            },
            "scope": 3870,
            "src": "15312:336:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3807,
              "nodeType": "Block",
              "src": "15926:244:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3793,
                          "name": "newDeveloperTransactionFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3787,
                          "src": "15944:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 3794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15974:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "15944:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520646576656c6f706572207472616e73616374696f6e206665652063616e2774206265206d6f7265207468616e2035252e",
                        "id": 3796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15977:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3203f85bd58d1f5b35aa72cbaa6e1972da45cef74f6c798c22fc35ae27773249",
                          "typeString": "literal_string \"The developer transaction fee can't be more than 5%.\""
                        },
                        "value": "The developer transaction fee can't be more than 5%."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3203f85bd58d1f5b35aa72cbaa6e1972da45cef74f6c798c22fc35ae27773249",
                          "typeString": "literal_string \"The developer transaction fee can't be more than 5%.\""
                        }
                      ],
                      "id": 3792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15936:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15936:96:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3798,
                  "nodeType": "ExpressionStatement",
                  "src": "15936:96:20"
                },
                {
                  "expression": {
                    "id": 3801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3799,
                      "name": "developerFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2913,
                      "src": "16042:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3800,
                      "name": "newDeveloperTransactionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3787,
                      "src": "16064:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16042:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3802,
                  "nodeType": "ExpressionStatement",
                  "src": "16042:48:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3804,
                        "name": "newDeveloperTransactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3787,
                        "src": "16136:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3803,
                      "name": "developerTransactionFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2933,
                      "src": "16105:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16105:58:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3806,
                  "nodeType": "EmitStatement",
                  "src": "16100:63:20"
                }
              ]
            },
            "documentation": {
              "id": 3785,
              "nodeType": "StructuredDocumentation",
              "src": "15654:175:20",
              "text": " @dev Function to update the developer transaction fee - can't be more than 5 percent\n @param newDeveloperTransactionFee the new developer transaction fee"
            },
            "functionSelector": "ecc63390",
            "id": 3808,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3790,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3789,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "15916:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "15916:9:20"
              }
            ],
            "name": "updateDeveloperTransactionFee",
            "nameLocation": "15843:29:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3787,
                  "mutability": "mutable",
                  "name": "newDeveloperTransactionFee",
                  "nameLocation": "15881:26:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3808,
                  "src": "15873:34:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15873:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15872:36:20"
            },
            "returnParameters": {
              "id": 3791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15926:0:20"
            },
            "scope": 3870,
            "src": "15834:336:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3824,
              "nodeType": "Block",
              "src": "16496:41:20",
              "statements": [
                {
                  "expression": {
                    "id": 3822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3818,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2890,
                        "src": "16506:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3820,
                      "indexExpression": {
                        "id": 3819,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3811,
                        "src": "16514:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16506:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3821,
                      "name": "isMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3813,
                      "src": "16522:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "16506:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3823,
                  "nodeType": "ExpressionStatement",
                  "src": "16506:24:20"
                }
              ]
            },
            "documentation": {
              "id": 3809,
              "nodeType": "StructuredDocumentation",
              "src": "16176:247:20",
              "text": " @dev Function to add or remove a Cardinal Token minter\n @param user the address that will be added or removed as a minter\n @param isMinter boolean representing if the address provided will be added or removed as a minter"
            },
            "functionSelector": "43620e71",
            "id": 3825,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3816,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3815,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8427,
                  "src": "16486:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "16486:9:20"
              }
            ],
            "name": "updateMinter",
            "nameLocation": "16437:12:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3811,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "16458:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3825,
                  "src": "16450:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16450:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3813,
                  "mutability": "mutable",
                  "name": "isMinter",
                  "nameLocation": "16469:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3825,
                  "src": "16464:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16464:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16449:29:20"
            },
            "returnParameters": {
              "id": 3817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16496:0:20"
            },
            "scope": 3870,
            "src": "16428:109:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3846,
              "nodeType": "Block",
              "src": "16812:127:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3834,
                          "name": "minters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2890,
                          "src": "16830:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3837,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3835,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11004,
                            "src": "16838:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16838:12:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16830:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420617574686f72697a656420746f206d696e742043617264696e616c20546f6b656e732e",
                        "id": 3838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16853:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0768071ec9c473c54a6345d41f775c73ad74a24ce1df7b74e06510a35f1a120f",
                          "typeString": "literal_string \"You are not authorized to mint Cardinal Tokens.\""
                        },
                        "value": "You are not authorized to mint Cardinal Tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0768071ec9c473c54a6345d41f775c73ad74a24ce1df7b74e06510a35f1a120f",
                          "typeString": "literal_string \"You are not authorized to mint Cardinal Tokens.\""
                        }
                      ],
                      "id": 3833,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16822:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16822:81:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3840,
                  "nodeType": "ExpressionStatement",
                  "src": "16822:81:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3842,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3828,
                        "src": "16919:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3843,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3830,
                        "src": "16925:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3841,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10201,
                      "src": "16913:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16913:19:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3845,
                  "nodeType": "ExpressionStatement",
                  "src": "16913:19:20"
                }
              ]
            },
            "documentation": {
              "id": 3826,
              "nodeType": "StructuredDocumentation",
              "src": "16543:213:20",
              "text": " @dev Minter only function to mint new Cardinal Tokens for bridging\n @param user the address that the tokens will be minted to\n @param amount the amount of tokens to be minted to the user"
            },
            "functionSelector": "40c10f19",
            "id": 3847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "16770:4:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3828,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "16783:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "16775:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16775:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3830,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16797:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "16789:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16789:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16774:30:20"
            },
            "returnParameters": {
              "id": 3832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16812:0:20"
            },
            "scope": 3870,
            "src": "16761:178:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3868,
              "nodeType": "Block",
              "src": "17249:127:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3856,
                          "name": "minters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2890,
                          "src": "17267:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3859,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3857,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11004,
                            "src": "17275:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17275:12:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17267:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420617574686f72697a656420746f206275726e2043617264696e616c20546f6b656e732e",
                        "id": 3860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17290:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78847af00f5e2925d31046cc0a1b7ce5bd5329c90691a6fcc934945969e8d1a0",
                          "typeString": "literal_string \"You are not authorized to burn Cardinal Tokens.\""
                        },
                        "value": "You are not authorized to burn Cardinal Tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78847af00f5e2925d31046cc0a1b7ce5bd5329c90691a6fcc934945969e8d1a0",
                          "typeString": "literal_string \"You are not authorized to burn Cardinal Tokens.\""
                        }
                      ],
                      "id": 3855,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17259:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17259:81:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3862,
                  "nodeType": "ExpressionStatement",
                  "src": "17259:81:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3864,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3850,
                        "src": "17356:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3865,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3852,
                        "src": "17362:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3863,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10273,
                      "src": "17350:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17350:19:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3867,
                  "nodeType": "ExpressionStatement",
                  "src": "17350:19:20"
                }
              ]
            },
            "documentation": {
              "id": 3848,
              "nodeType": "StructuredDocumentation",
              "src": "16945:248:20",
              "text": " @dev Minter only function to burn Cardinal Tokens for bridging and deflation upon service purchases with the Cardinal Token\n @param user the address to burn the tokens from\n @param amount the amount of tokens to be burned"
            },
            "functionSelector": "9dc29fac",
            "id": 3869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "17207:4:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3850,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "17220:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3869,
                  "src": "17212:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17212:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3852,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17234:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3869,
                  "src": "17226:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17226:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17211:30:20"
            },
            "returnParameters": {
              "id": 3854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17249:0:20"
            },
            "scope": 3870,
            "src": "17198:178:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3871,
        "src": "318:17060:20",
        "usedErrors": []
      }
    ],
    "src": "34:17344:20"
  },
  "bytecode": "60806040526002601055600260115560016012556103e86015553480156200002657600080fd5b5060405162002cd938038062002cd98339810160408190526200004991620007a2565b604080518082018252600d81526c21b0b93234b730b62a37b5b2b760991b60208083019182528351808501909452600484526310d4939360e21b9084015281519192916200009a91600391620006e3565b508051620000b0906004906020840190620006e3565b505050620000cd620000c76200047c60201b60201c565b62000480565b600b80546001600160a01b03199081166001600160a01b038a8116919091178355600c805483168883169081179091556009805484168b8416179055600a805484168a8416178155600d80548516898516178155600e80548616898616178155600f805490961688861617909555600092835260066020526040808420805460ff19908116600190811790925596548616855281852080548816821790559154851684528084208054871683179055915484168352818320805486168217905585548416835291208054909316179091559054620001c791166064620001b58b60236200086d565b620001c191906200088f565b620004d2565b600a54620001e7906001600160a01b03166064620001b58b60236200086d565b600d5462000205906001600160a01b0316620001c1600a8b6200088f565b600e5462000223906001600160a01b0316620001c160058b6200088f565b600f54601380546001600160a01b0319166001600160a01b0390921691821790556200025130828b620005bb565b806001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156200028b57600080fd5b505afa158015620002a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c69190620008b2565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200030f57600080fd5b505afa15801562000324573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200034a9190620008b2565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b1580156200039357600080fd5b505af1158015620003a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ce9190620008b2565b601480546001600160a01b0319166001600160a01b0392831690811790915560135460405163095ea7b360e01b81529216600483015260001960248301529063095ea7b390604401602060405180830381600087803b1580156200043157600080fd5b505af115801562000446573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200046c9190620008d9565b5050505050505050505062000955565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200052e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b8060026000828254620005429190620008fd565b90915550506001600160a01b0382166000908152602081905260408120805483929062000571908490620008fd565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166200061f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840162000525565b6001600160a01b038216620006825760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840162000525565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b828054620006f19062000918565b90600052602060002090601f01602090048101928262000715576000855562000760565b82601f106200073057805160ff191683800117855562000760565b8280016001018555821562000760579182015b828111156200076057825182559160200191906001019062000743565b506200076e92915062000772565b5090565b5b808211156200076e576000815560010162000773565b6001600160a01b03811681146200079f57600080fd5b50565b600080600080600080600080610100898b031215620007c057600080fd5b885197506020890151620007d48162000789565b60408a0151909750620007e78162000789565b60608a0151909650620007fa8162000789565b60808a01519095506200080d8162000789565b60a08a0151909450620008208162000789565b60c08a0151909350620008338162000789565b60e08a0151909250620008468162000789565b809150509295985092959890939650565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156200088a576200088a62000857565b500290565b600082620008ad57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215620008c557600080fd5b8151620008d28162000789565b9392505050565b600060208284031215620008ec57600080fd5b81518015158114620008d257600080fd5b6000821982111562000913576200091362000857565b500190565b600181811c908216806200092d57607f821691505b602082108114156200094f57634e487b7160e01b600052602260045260246000fd5b50919050565b61237480620009656000396000f3fe6080604052600436106102605760003560e01c80637c13efd411610144578063da6fa55c116100b6578063ecc633901161007a578063ecc633901461070d578063f2fde38b1461072d578063f46eccc41461074d578063f9f92be41461077d578063fc2eb889146107ad578063fd092bc5146107cd57600080fd5b8063da6fa55c14610641578063dbe66ca014610657578063dd62ed3e14610687578063de77bfd9146106cd578063eb08aa3b146106ed57600080fd5b8063a457c2d711610108578063a457c2d714610581578063a9059cbb146105a1578063bbeaa1f8146105c1578063c3d0cb20146105e1578063c816841b14610601578063d158272d1461062157600080fd5b80637c13efd4146104f95780638da5cb5b1461050e5780638eb83f251461052c57806395d89b411461054c5780639dc29fac1461056157600080fd5b806343620e71116101dd5780635b81c1a4116101a15780635b81c1a41461045157806361eb048a146104715780636c9230db1461049157806370a08231146104a4578063715018a6146104c457806378c1d245146104d957600080fd5b806343620e71146103c55780634f481683146103e55780634fcd1285146103fb578063560493b3146104115780635b3c1da11461043157600080fd5b8063313ce56711610224578063313ce5671461033e57806332a2c5d01461035a578063395093511461036d578063404e8a821461038d57806340c10f19146103a357600080fd5b806306fdde031461026c578063095ea7b31461029757806318160ddd146102c757806320ca3c7f146102e657806323b872dd1461031e57600080fd5b3661026757005b600080fd5b34801561027857600080fd5b506102816107ed565b60405161028e9190611e53565b60405180910390f35b3480156102a357600080fd5b506102b76102b2366004611ebd565b61087f565b604051901515815260200161028e565b3480156102d357600080fd5b506002545b60405190815260200161028e565b3480156102f257600080fd5b50600f54610306906001600160a01b031681565b6040516001600160a01b03909116815260200161028e565b34801561032a57600080fd5b506102b7610339366004611ee9565b610899565b34801561034a57600080fd5b506040516012815260200161028e565b34801561036657600080fd5b5030610306565b34801561037957600080fd5b506102b7610388366004611ebd565b610be8565b34801561039957600080fd5b506102d860155481565b3480156103af57600080fd5b506103c36103be366004611ebd565b610c27565b005b3480156103d157600080fd5b506103c36103e0366004611f3f565b610cac565b3480156103f157600080fd5b506102d860105481565b34801561040757600080fd5b506102d860125481565b34801561041d57600080fd5b506103c361042c366004611f74565b610d01565b34801561043d57600080fd5b50600954610306906001600160a01b031681565b34801561045d57600080fd5b506103c361046c366004611f74565b610d30565b34801561047d57600080fd5b50600e54610306906001600160a01b031681565b34801561049d57600080fd5b50426102d8565b3480156104b057600080fd5b506102d86104bf366004611f8d565b610dfa565b3480156104d057600080fd5b506103c3610e15565b3480156104e557600080fd5b506103c36104f4366004611f8d565b610e4b565b34801561050557600080fd5b506103c3610e99565b34801561051a57600080fd5b506005546001600160a01b0316610306565b34801561053857600080fd5b50600a54610306906001600160a01b031681565b34801561055857600080fd5b50610281610ed0565b34801561056d57600080fd5b506103c361057c366004611ebd565b610edf565b34801561058d57600080fd5b506102b761059c366004611ebd565b610f60565b3480156105ad57600080fd5b506102b76105bc366004611ebd565b610ffd565b3480156105cd57600080fd5b506103c36105dc366004611f8d565b6112ef565b3480156105ed57600080fd5b506103c36105fc366004611faa565b61133a565b34801561060d57600080fd5b50601454610306906001600160a01b031681565b34801561062d57600080fd5b50600d54610306906001600160a01b031681565b34801561064d57600080fd5b506102d860115481565b34801561066357600080fd5b506102b7610672366004611f8d565b60066020526000908152604090205460ff1681565b34801561069357600080fd5b506102d86106a2366004611fcd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156106d957600080fd5b506103c36106e8366004611f74565b61139f565b3480156106f957600080fd5b50600b54610306906001600160a01b031681565b34801561071957600080fd5b506103c3610728366004611f74565b611473565b34801561073957600080fd5b506103c3610748366004611f8d565b61153e565b34801561075957600080fd5b506102b7610768366004611f8d565b60086020526000908152604090205460ff1681565b34801561078957600080fd5b506102b7610798366004611f8d565b60076020526000908152604090205460ff1681565b3480156107b957600080fd5b506103c36107c8366004611f3f565b6115d6565b3480156107d957600080fd5b50600c54610306906001600160a01b031681565b6060600380546107fc90612006565b80601f016020809104026020016040519081016040528092919081815260200182805461082890612006565b80156108755780601f1061084a57610100808354040283529160200191610875565b820191906000526020600020905b81548152906001019060200180831161085857829003601f168201915b5050505050905090565b60003361088d81858561162b565b60019150505b92915050565b3360009081526007602052604081205460ff16156108d25760405162461bcd60e51b81526004016108c990612041565b60405180910390fd5b6001600160a01b03841660009081526007602052604090205460ff16156109fa5760405162461bcd60e51b81526020600482015260b860248201527f546865206164647265737320796f7527726520747279696e6720746f2073706560448201527f6e64207468652043617264696e616c20546f6b656e732066726f6d206861732060648201527f6265656e20626c61636b6c69737465642066726f6d2074726164696e6720746860848201527f652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207460a48201527f68697320697320616e206572726f722c20706c6561736520636f6e746163742060c48201527f7468652043617264696e616c20486f757365207465616d2e000000000000000060e4820152610104016108c9565b6001600160a01b03831660009081526007602052604090205460ff1615610a335760405162461bcd60e51b81526004016108c9906120f4565b6001600160a01b03841660009081526006602052604090205460ff1680610a7257506001600160a01b03831660009081526006602052604090205460ff165b80610a8c57503360009081526006602052604090205460ff165b15610aaf57610a9c84338461174f565b610aa78484846117e1565b506001610be1565b6000606460105484610ac191906121f5565b610acb9190612214565b90506000606460115485610adf91906121f5565b610ae99190612214565b90506000606460125486610afd91906121f5565b610b079190612214565b90506000610b158284612236565b9050610b2288338861174f565b600c54610b3a9089906001600160a01b0316866117e1565b610b458830836117e1565b6000610b5030610dfa565b6014549091506001600160a01b0316336001600160a01b031614610bb257601554601454610b86906001600160a01b0316610dfa565b610b909190612214565b811115610ba057610ba0816119af565b478015610bb057610bb047611b18565b505b600085610bbf848a61224e565b610bc9919061224e565b9050610bd68a8a836117e1565b600196505050505050505b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061088d9082908690610c22908790612236565b61162b565b3360009081526008602052604090205460ff16610c9e5760405162461bcd60e51b815260206004820152602f60248201527f596f7520617265206e6f7420617574686f72697a656420746f206d696e74204360448201526e30b93234b730b6102a37b5b2b7399760891b60648201526084016108c9565b610ca88282611bd4565b5050565b6005546001600160a01b03163314610cd65760405162461bcd60e51b81526004016108c990612265565b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6005546001600160a01b03163314610d2b5760405162461bcd60e51b81526004016108c990612265565b601555565b6005546001600160a01b03163314610d5a5760405162461bcd60e51b81526004016108c990612265565b6005811115610dc85760405162461bcd60e51b815260206004820152603460248201527f546865206d61726b6574696e67207472616e73616374696f6e206665652063616044820152733713ba1031329036b7b932903a3430b7101a929760611b60648201526084016108c9565b601181905560405181907eec95f51190fc49500bf726b0c72cb5c1b132f7bfe7685a33bda07defe3a8a890600090a250565b6001600160a01b031660009081526020819052604090205490565b6005546001600160a01b03163314610e3f5760405162461bcd60e51b81526004016108c990612265565b610e496000611cb3565b565b6005546001600160a01b03163314610e755760405162461bcd60e51b81526004016108c990612265565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6005546001600160a01b03163314610ec35760405162461bcd60e51b81526004016108c990612265565b47610ecd81611b18565b50565b6060600480546107fc90612006565b3360009081526008602052604090205460ff16610f565760405162461bcd60e51b815260206004820152602f60248201527f596f7520617265206e6f7420617574686f72697a656420746f206275726e204360448201526e30b93234b730b6102a37b5b2b7399760891b60648201526084016108c9565b610ca88282611d05565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610fe55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108c9565b610ff2828686840361162b565b506001949350505050565b3360009081526007602052604081205460ff161561102d5760405162461bcd60e51b81526004016108c990612041565b6001600160a01b03831660009081526007602052604090205460ff16156110665760405162461bcd60e51b81526004016108c9906120f4565b6014546001600160a01b0316336001600160a01b031614801561109957503360009081526006602052604090205460ff16155b80156110be57506001600160a01b03831660009081526006602052604090205460ff16155b156111785760a66110ce60025490565b6110d89190612214565b826110e285610dfa565b6110ec9190612236565b106111785760405162461bcd60e51b815260206004820152605060248201527f596f752063616e27742068617665206d6f7265207468616e203225206f66207460448201527f686520746f74616c2043617264696e616c20546f6b656e20737570706c79206160648201526f333a32b91030902222ac1039bbb0b81760811b608482015260a4016108c9565b3360009081526006602052604090205460ff16806111ae57506001600160a01b03831660009081526006602052604090205460ff165b156111c6576111be3384846117e1565b506001610893565b60006064601054846111d891906121f5565b6111e29190612214565b905060006064601154856111f691906121f5565b6112009190612214565b9050600060646012548661121491906121f5565b61121e9190612214565b9050600061122c8284612236565b905061124433600c546001600160a01b0316866117e1565b61124f3330836117e1565b600061125a30610dfa565b6014549091506001600160a01b0316336001600160a01b0316146112bc57601554601454611290906001600160a01b0316610dfa565b61129a9190612214565b8111156112aa576112aa816119af565b4780156112ba576112ba47611b18565b505b6000856112c9848a61224e565b6112d3919061224e565b90506112e0338a836117e1565b50600198975050505050505050565b6005546001600160a01b031633146113195760405162461bcd60e51b81526004016108c990612265565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6005546001600160a01b031633146113645760405162461bcd60e51b81526004016108c990612265565b801561137857611373826119af565b611390565b600061138330610dfa565b905061138e816119af565b505b4761139a81611b18565b505050565b6005546001600160a01b031633146113c95760405162461bcd60e51b81526004016108c990612265565b60058111156114405760405162461bcd60e51b815260206004820152603a60248201527f546865206d656d626572206769766561776179207472616e73616374696f6e2060448201527f6665652063616e2774206265206d6f7265207468616e2035252e00000000000060648201526084016108c9565b601081905560405181907f39e1f3e4cc8feb7dbc01c16e37aa1546c352489807c660593c62538f536ac05190600090a250565b6005546001600160a01b0316331461149d5760405162461bcd60e51b81526004016108c990612265565b600581111561150b5760405162461bcd60e51b815260206004820152603460248201527f54686520646576656c6f706572207472616e73616374696f6e206665652063616044820152733713ba1031329036b7b932903a3430b7101a929760611b60648201526084016108c9565b601281905560405181907f4bee3c216a701857abd67fed754efdd065a8599be5476e2c4b118fb1896b9ffa90600090a250565b6005546001600160a01b031633146115685760405162461bcd60e51b81526004016108c990612265565b6001600160a01b0381166115cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108c9565b610ecd81611cb3565b6005546001600160a01b031633146116005760405162461bcd60e51b81526004016108c990612265565b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6001600160a01b03831661168d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108c9565b6001600160a01b0382166116ee5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108c9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146117db57818110156117ce5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108c9565b6117db848484840361162b565b50505050565b6001600160a01b0383166118455760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108c9565b6001600160a01b0382166118a75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108c9565b6001600160a01b0383166000908152602081905260409020548181101561191f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108c9565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611956908490612236565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516119a291815260200190565b60405180910390a36117db565b60408051600280825260608201835260009260208301908036833701905050905030816000815181106119e4576119e461229a565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015611a3857600080fd5b505afa158015611a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7091906122b0565b81600181518110611a8357611a8361229a565b6001600160a01b039283166020918202929092010152601354611aa9913091168461162b565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611ae29085906000908690309042906004016122cd565b600060405180830381600087803b158015611afc57600080fd5b505af1158015611b10573d6000803e3d6000fd5b505050505050565b6000601254601154611b2a9190612236565b600d546011549192506001600160a01b0316906108fc908390611b4d90866121f5565b611b579190612214565b6040518115909202916000818181858888f19350505050158015611b7f573d6000803e3d6000fd5b50600e546012546001600160a01b03909116906108fc908390611ba290866121f5565b611bac9190612214565b6040518115909202916000818181858888f1935050505015801561139a573d6000803e3d6000fd5b6001600160a01b038216611c2a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108c9565b8060026000828254611c3c9190612236565b90915550506001600160a01b03821660009081526020819052604081208054839290611c69908490612236565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216611d655760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016108c9565b6001600160a01b03821660009081526020819052604090205481811015611dd95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016108c9565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611e0890849061224e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b81811015611e8057858101830151858201604001528201611e64565b81811115611e92576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610ecd57600080fd5b60008060408385031215611ed057600080fd5b8235611edb81611ea8565b946020939093013593505050565b600080600060608486031215611efe57600080fd5b8335611f0981611ea8565b92506020840135611f1981611ea8565b929592945050506040919091013590565b80358015158114611f3a57600080fd5b919050565b60008060408385031215611f5257600080fd5b8235611f5d81611ea8565b9150611f6b60208401611f2a565b90509250929050565b600060208284031215611f8657600080fd5b5035919050565b600060208284031215611f9f57600080fd5b8135610be181611ea8565b60008060408385031215611fbd57600080fd5b82359150611f6b60208401611f2a565b60008060408385031215611fe057600080fd5b8235611feb81611ea8565b91506020830135611ffb81611ea8565b809150509250929050565b600181811c9082168061201a57607f821691505b6020821081141561203b57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526081908201527f596f752068617665206265656e20626c61636b6c69737465642066726f6d207460408201527f726164696e67207468652043617264696e616c20546f6b656e2e20496620796f60608201527f75207468696e6b207468697320697320616e206572726f722c20706c6561736560808201527f20636f6e74616374207468652043617264696e616c20486f757365207465616d60a0820152601760f91b60c082015260e00190565b602080825260b2908201527f546865206164647265737320796f752061726520747279696e6720746f20736560408201527f6e642043617264696e616c20546f6b656e7320746f20686173206265656e206260608201527f6c61636b6c69737465642066726f6d2074726164696e6720746865204361726460808201527f696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697360a08201527f20616e206572726f722c20706c6561736520636f6e746163742074686520436160c082015271393234b730b6102437bab9b2903a32b0b69760711b60e08201526101000190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561220f5761220f6121df565b500290565b60008261223157634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612249576122496121df565b500190565b600082821015612260576122606121df565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156122c257600080fd5b8151610be181611ea8565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561231d5784516001600160a01b0316835293830193918301916001016122f8565b50506001600160a01b0396909616606085015250505060800152939250505056fea2646970667358221220c7a10c8997915f87649072c1352c610c45cc921a9a62e70a56526ef0a03f07d564736f6c63430008080033",
  "bytecodeSha1": "f69c74c9e94d13eea76b5b68effabedb211241ab",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.8+commit.dddeac2f"
  },
  "contractName": "CardinalToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "132": [
            2006,
            2028,
            true
          ]
        }
      },
      "11": {},
      "2": {
        "ERC20._approve": {
          "122": [
            10254,
            10273,
            true
          ],
          "123": [
            10332,
            10353,
            true
          ]
        },
        "ERC20._burn": {
          "130": [
            9207,
            9228,
            true
          ],
          "131": [
            9398,
            9422,
            true
          ]
        },
        "ERC20._mint": {
          "129": [
            8498,
            8519,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "124": [
            10966,
            11003,
            false
          ],
          "125": [
            11027,
            11053,
            true
          ]
        },
        "ERC20._transfer": {
          "126": [
            7614,
            7632,
            true
          ],
          "127": [
            7692,
            7708,
            true
          ],
          "128": [
            7863,
            7884,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "121": [
            6815,
            6850,
            true
          ]
        }
      },
      "20": {
        "CardinalToken.burn": {
          "106": [
            17267,
            17288,
            true
          ]
        },
        "CardinalToken.mint": {
          "104": [
            16830,
            16851,
            true
          ]
        },
        "CardinalToken.swapCardinalTokensForMaticManually": {
          "118": [
            13405,
            13414,
            false
          ]
        },
        "CardinalToken.transfer": {
          "107": [
            5992,
            6016,
            true
          ],
          "108": [
            6219,
            6240,
            true
          ],
          "109": [
            6556,
            6583,
            false
          ],
          "110": [
            6588,
            6618,
            false
          ],
          "111": [
            6623,
            6650,
            false
          ],
          "112": [
            6674,
            6729,
            true
          ],
          "113": [
            6930,
            6960,
            true
          ],
          "114": [
            6964,
            6991,
            false
          ],
          "115": [
            7891,
            7918,
            false
          ],
          "116": [
            7938,
            8014,
            false
          ],
          "117": [
            8205,
            8229,
            false
          ]
        },
        "CardinalToken.transferFrom": {
          "95": [
            9033,
            9057,
            true
          ],
          "96": [
            9291,
            9307,
            true
          ],
          "97": [
            9565,
            9579,
            true
          ],
          "98": [
            9879,
            9901,
            true
          ],
          "99": [
            9905,
            9925,
            true
          ],
          "100": [
            9929,
            9959,
            false
          ],
          "101": [
            10938,
            10965,
            false
          ],
          "102": [
            10985,
            11061,
            false
          ],
          "103": [
            11252,
            11276,
            false
          ]
        },
        "CardinalToken.updateDeveloperTransactionFee": {
          "120": [
            15944,
            15975,
            true
          ]
        },
        "CardinalToken.updateMarketingTransactionFee": {
          "105": [
            15422,
            15453,
            true
          ]
        },
        "CardinalToken.updateMemberGiveawayTransactionFee": {
          "119": [
            14869,
            14905,
            true
          ]
        }
      },
      "3": {},
      "39": {},
      "4": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "88": [
            2378,
            2395
          ],
          "89": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "4": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "32": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "62": [
            1998,
            2071
          ],
          "63": [
            2081,
            2109
          ]
        }
      },
      "11": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "65": [
            10246,
            10314
          ],
          "66": [
            10324,
            10392
          ],
          "67": [
            10403,
            10439
          ],
          "68": [
            10449,
            10486
          ]
        },
        "ERC20._burn": {
          "90": [
            9199,
            9266
          ],
          "91": [
            9390,
            9461
          ],
          "92": [
            9495,
            9539
          ],
          "93": [
            9559,
            9581
          ],
          "94": [
            9592,
            9634
          ]
        },
        "ERC20._mint": {
          "84": [
            8490,
            8555
          ],
          "85": [
            8626,
            8648
          ],
          "86": [
            8658,
            8686
          ],
          "87": [
            8696,
            8738
          ]
        },
        "ERC20._spendAllowance": {
          "69": [
            11019,
            11087
          ],
          "70": [
            11129,
            11180
          ]
        },
        "ERC20._transfer": {
          "71": [
            7606,
            7674
          ],
          "72": [
            7684,
            7748
          ],
          "73": [
            7855,
            7927
          ],
          "74": [
            7961,
            7999
          ],
          "75": [
            8019,
            8042
          ],
          "76": [
            8053,
            8084
          ],
          "77": [
            8095,
            8132
          ]
        },
        "ERC20.allowance": {
          "5": [
            4084,
            4118
          ]
        },
        "ERC20.approve": {
          "8": [
            4570,
            4602
          ],
          "9": [
            4612,
            4623
          ]
        },
        "ERC20.balanceOf": {
          "31": [
            3501,
            3526
          ]
        },
        "ERC20.decimals": {
          "1": [
            3168,
            3177
          ]
        },
        "ERC20.decreaseAllowance": {
          "38": [
            6807,
            6892
          ],
          "39": [
            6926,
            6986
          ],
          "40": [
            7007,
            7018
          ]
        },
        "ERC20.increaseAllowance": {
          "23": [
            6015,
            6081
          ]
        },
        "ERC20.name": {
          "6": [
            2235,
            2247
          ]
        },
        "ERC20.symbol": {
          "35": [
            2448,
            2462
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3324,
            3343
          ]
        }
      },
      "20": {
        "CardinalToken.burn": {
          "36": [
            17259,
            17340
          ],
          "37": [
            17350,
            17369
          ]
        },
        "CardinalToken.disperseFeesManually": {
          "34": [
            12884,
            12923
          ]
        },
        "CardinalToken.excludeUserFromFees": {
          "33": [
            5032,
            5061
          ]
        },
        "CardinalToken.getContractAddress": {
          "2": [
            4800,
            4820
          ]
        },
        "CardinalToken.getCurrentTimestamp": {
          "3": [
            5285,
            5307
          ]
        },
        "CardinalToken.includeUsersInFees": {
          "52": [
            5537,
            5567
          ]
        },
        "CardinalToken.mint": {
          "24": [
            16822,
            16903
          ],
          "25": [
            16913,
            16932
          ]
        },
        "CardinalToken.sendFeesToWallets": {
          "82": [
            12446,
            12520
          ],
          "83": [
            12530,
            12604
          ]
        },
        "CardinalToken.setContractTokenDivisor": {
          "27": [
            14107,
            14140
          ]
        },
        "CardinalToken.swapCardinalTokensForMatic": {
          "78": [
            11837,
            11860
          ],
          "79": [
            11870,
            11900
          ],
          "80": [
            11910,
            11965
          ],
          "81": [
            11975,
            12158
          ]
        },
        "CardinalToken.swapCardinalTokensForMaticManually": {
          "53": [
            13430,
            13464
          ],
          "54": [
            13580,
            13636
          ],
          "55": [
            13719,
            13758
          ]
        },
        "CardinalToken.transfer": {
          "41": [
            5984,
            6150
          ],
          "42": [
            6211,
            6423
          ],
          "43": [
            6666,
            6814
          ],
          "44": [
            7007,
            7049
          ],
          "45": [
            7063,
            7074
          ],
          "46": [
            7670,
            7741
          ],
          "47": [
            7751,
            7802
          ],
          "48": [
            8034,
            8090
          ],
          "49": [
            8249,
            8289
          ],
          "50": [
            8460,
            8510
          ],
          "51": [
            8520,
            8531
          ]
        },
        "CardinalToken.transferFrom": {
          "10": [
            9025,
            9191
          ],
          "11": [
            9283,
            9496
          ],
          "12": [
            9557,
            9762
          ],
          "13": [
            9975,
            10018
          ],
          "14": [
            10032,
            10059
          ],
          "15": [
            10073,
            10084
          ],
          "16": [
            10680,
            10723
          ],
          "17": [
            10733,
            10796
          ],
          "18": [
            10806,
            10849
          ],
          "19": [
            11081,
            11137
          ],
          "20": [
            11296,
            11336
          ],
          "21": [
            11507,
            11542
          ],
          "22": [
            11552,
            11563
          ]
        },
        "CardinalToken.updateBlackList": {
          "64": [
            14510,
            14539
          ]
        },
        "CardinalToken.updateDeveloperTransactionFee": {
          "59": [
            15936,
            16032
          ],
          "60": [
            16042,
            16090
          ],
          "61": [
            16100,
            16163
          ]
        },
        "CardinalToken.updateMarketingTransactionFee": {
          "28": [
            15414,
            15510
          ],
          "29": [
            15520,
            15568
          ],
          "30": [
            15578,
            15641
          ]
        },
        "CardinalToken.updateMemberGiveawayTransactionFee": {
          "56": [
            14861,
            14968
          ],
          "57": [
            14978,
            15036
          ],
          "58": [
            15046,
            15119
          ]
        },
        "CardinalToken.updateMinter": {
          "26": [
            16506,
            16530
          ]
        }
      },
      "3": {},
      "39": {},
      "4": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "IUniswapV2Factory",
    "IUniswapV2Router02",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "6080604052600436106102605760003560e01c80637c13efd411610144578063da6fa55c116100b6578063ecc633901161007a578063ecc633901461070d578063f2fde38b1461072d578063f46eccc41461074d578063f9f92be41461077d578063fc2eb889146107ad578063fd092bc5146107cd57600080fd5b8063da6fa55c14610641578063dbe66ca014610657578063dd62ed3e14610687578063de77bfd9146106cd578063eb08aa3b146106ed57600080fd5b8063a457c2d711610108578063a457c2d714610581578063a9059cbb146105a1578063bbeaa1f8146105c1578063c3d0cb20146105e1578063c816841b14610601578063d158272d1461062157600080fd5b80637c13efd4146104f95780638da5cb5b1461050e5780638eb83f251461052c57806395d89b411461054c5780639dc29fac1461056157600080fd5b806343620e71116101dd5780635b81c1a4116101a15780635b81c1a41461045157806361eb048a146104715780636c9230db1461049157806370a08231146104a4578063715018a6146104c457806378c1d245146104d957600080fd5b806343620e71146103c55780634f481683146103e55780634fcd1285146103fb578063560493b3146104115780635b3c1da11461043157600080fd5b8063313ce56711610224578063313ce5671461033e57806332a2c5d01461035a578063395093511461036d578063404e8a821461038d57806340c10f19146103a357600080fd5b806306fdde031461026c578063095ea7b31461029757806318160ddd146102c757806320ca3c7f146102e657806323b872dd1461031e57600080fd5b3661026757005b600080fd5b34801561027857600080fd5b506102816107ed565b60405161028e9190611e53565b60405180910390f35b3480156102a357600080fd5b506102b76102b2366004611ebd565b61087f565b604051901515815260200161028e565b3480156102d357600080fd5b506002545b60405190815260200161028e565b3480156102f257600080fd5b50600f54610306906001600160a01b031681565b6040516001600160a01b03909116815260200161028e565b34801561032a57600080fd5b506102b7610339366004611ee9565b610899565b34801561034a57600080fd5b506040516012815260200161028e565b34801561036657600080fd5b5030610306565b34801561037957600080fd5b506102b7610388366004611ebd565b610be8565b34801561039957600080fd5b506102d860155481565b3480156103af57600080fd5b506103c36103be366004611ebd565b610c27565b005b3480156103d157600080fd5b506103c36103e0366004611f3f565b610cac565b3480156103f157600080fd5b506102d860105481565b34801561040757600080fd5b506102d860125481565b34801561041d57600080fd5b506103c361042c366004611f74565b610d01565b34801561043d57600080fd5b50600954610306906001600160a01b031681565b34801561045d57600080fd5b506103c361046c366004611f74565b610d30565b34801561047d57600080fd5b50600e54610306906001600160a01b031681565b34801561049d57600080fd5b50426102d8565b3480156104b057600080fd5b506102d86104bf366004611f8d565b610dfa565b3480156104d057600080fd5b506103c3610e15565b3480156104e557600080fd5b506103c36104f4366004611f8d565b610e4b565b34801561050557600080fd5b506103c3610e99565b34801561051a57600080fd5b506005546001600160a01b0316610306565b34801561053857600080fd5b50600a54610306906001600160a01b031681565b34801561055857600080fd5b50610281610ed0565b34801561056d57600080fd5b506103c361057c366004611ebd565b610edf565b34801561058d57600080fd5b506102b761059c366004611ebd565b610f60565b3480156105ad57600080fd5b506102b76105bc366004611ebd565b610ffd565b3480156105cd57600080fd5b506103c36105dc366004611f8d565b6112ef565b3480156105ed57600080fd5b506103c36105fc366004611faa565b61133a565b34801561060d57600080fd5b50601454610306906001600160a01b031681565b34801561062d57600080fd5b50600d54610306906001600160a01b031681565b34801561064d57600080fd5b506102d860115481565b34801561066357600080fd5b506102b7610672366004611f8d565b60066020526000908152604090205460ff1681565b34801561069357600080fd5b506102d86106a2366004611fcd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156106d957600080fd5b506103c36106e8366004611f74565b61139f565b3480156106f957600080fd5b50600b54610306906001600160a01b031681565b34801561071957600080fd5b506103c3610728366004611f74565b611473565b34801561073957600080fd5b506103c3610748366004611f8d565b61153e565b34801561075957600080fd5b506102b7610768366004611f8d565b60086020526000908152604090205460ff1681565b34801561078957600080fd5b506102b7610798366004611f8d565b60076020526000908152604090205460ff1681565b3480156107b957600080fd5b506103c36107c8366004611f3f565b6115d6565b3480156107d957600080fd5b50600c54610306906001600160a01b031681565b6060600380546107fc90612006565b80601f016020809104026020016040519081016040528092919081815260200182805461082890612006565b80156108755780601f1061084a57610100808354040283529160200191610875565b820191906000526020600020905b81548152906001019060200180831161085857829003601f168201915b5050505050905090565b60003361088d81858561162b565b60019150505b92915050565b3360009081526007602052604081205460ff16156108d25760405162461bcd60e51b81526004016108c990612041565b60405180910390fd5b6001600160a01b03841660009081526007602052604090205460ff16156109fa5760405162461bcd60e51b81526020600482015260b860248201527f546865206164647265737320796f7527726520747279696e6720746f2073706560448201527f6e64207468652043617264696e616c20546f6b656e732066726f6d206861732060648201527f6265656e20626c61636b6c69737465642066726f6d2074726164696e6720746860848201527f652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207460a48201527f68697320697320616e206572726f722c20706c6561736520636f6e746163742060c48201527f7468652043617264696e616c20486f757365207465616d2e000000000000000060e4820152610104016108c9565b6001600160a01b03831660009081526007602052604090205460ff1615610a335760405162461bcd60e51b81526004016108c9906120f4565b6001600160a01b03841660009081526006602052604090205460ff1680610a7257506001600160a01b03831660009081526006602052604090205460ff165b80610a8c57503360009081526006602052604090205460ff165b15610aaf57610a9c84338461174f565b610aa78484846117e1565b506001610be1565b6000606460105484610ac191906121f5565b610acb9190612214565b90506000606460115485610adf91906121f5565b610ae99190612214565b90506000606460125486610afd91906121f5565b610b079190612214565b90506000610b158284612236565b9050610b2288338861174f565b600c54610b3a9089906001600160a01b0316866117e1565b610b458830836117e1565b6000610b5030610dfa565b6014549091506001600160a01b0316336001600160a01b031614610bb257601554601454610b86906001600160a01b0316610dfa565b610b909190612214565b811115610ba057610ba0816119af565b478015610bb057610bb047611b18565b505b600085610bbf848a61224e565b610bc9919061224e565b9050610bd68a8a836117e1565b600196505050505050505b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061088d9082908690610c22908790612236565b61162b565b3360009081526008602052604090205460ff16610c9e5760405162461bcd60e51b815260206004820152602f60248201527f596f7520617265206e6f7420617574686f72697a656420746f206d696e74204360448201526e30b93234b730b6102a37b5b2b7399760891b60648201526084016108c9565b610ca88282611bd4565b5050565b6005546001600160a01b03163314610cd65760405162461bcd60e51b81526004016108c990612265565b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6005546001600160a01b03163314610d2b5760405162461bcd60e51b81526004016108c990612265565b601555565b6005546001600160a01b03163314610d5a5760405162461bcd60e51b81526004016108c990612265565b6005811115610dc85760405162461bcd60e51b815260206004820152603460248201527f546865206d61726b6574696e67207472616e73616374696f6e206665652063616044820152733713ba1031329036b7b932903a3430b7101a929760611b60648201526084016108c9565b601181905560405181907eec95f51190fc49500bf726b0c72cb5c1b132f7bfe7685a33bda07defe3a8a890600090a250565b6001600160a01b031660009081526020819052604090205490565b6005546001600160a01b03163314610e3f5760405162461bcd60e51b81526004016108c990612265565b610e496000611cb3565b565b6005546001600160a01b03163314610e755760405162461bcd60e51b81526004016108c990612265565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6005546001600160a01b03163314610ec35760405162461bcd60e51b81526004016108c990612265565b47610ecd81611b18565b50565b6060600480546107fc90612006565b3360009081526008602052604090205460ff16610f565760405162461bcd60e51b815260206004820152602f60248201527f596f7520617265206e6f7420617574686f72697a656420746f206275726e204360448201526e30b93234b730b6102a37b5b2b7399760891b60648201526084016108c9565b610ca88282611d05565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610fe55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108c9565b610ff2828686840361162b565b506001949350505050565b3360009081526007602052604081205460ff161561102d5760405162461bcd60e51b81526004016108c990612041565b6001600160a01b03831660009081526007602052604090205460ff16156110665760405162461bcd60e51b81526004016108c9906120f4565b6014546001600160a01b0316336001600160a01b031614801561109957503360009081526006602052604090205460ff16155b80156110be57506001600160a01b03831660009081526006602052604090205460ff16155b156111785760a66110ce60025490565b6110d89190612214565b826110e285610dfa565b6110ec9190612236565b106111785760405162461bcd60e51b815260206004820152605060248201527f596f752063616e27742068617665206d6f7265207468616e203225206f66207460448201527f686520746f74616c2043617264696e616c20546f6b656e20737570706c79206160648201526f333a32b91030902222ac1039bbb0b81760811b608482015260a4016108c9565b3360009081526006602052604090205460ff16806111ae57506001600160a01b03831660009081526006602052604090205460ff165b156111c6576111be3384846117e1565b506001610893565b60006064601054846111d891906121f5565b6111e29190612214565b905060006064601154856111f691906121f5565b6112009190612214565b9050600060646012548661121491906121f5565b61121e9190612214565b9050600061122c8284612236565b905061124433600c546001600160a01b0316866117e1565b61124f3330836117e1565b600061125a30610dfa565b6014549091506001600160a01b0316336001600160a01b0316146112bc57601554601454611290906001600160a01b0316610dfa565b61129a9190612214565b8111156112aa576112aa816119af565b4780156112ba576112ba47611b18565b505b6000856112c9848a61224e565b6112d3919061224e565b90506112e0338a836117e1565b50600198975050505050505050565b6005546001600160a01b031633146113195760405162461bcd60e51b81526004016108c990612265565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6005546001600160a01b031633146113645760405162461bcd60e51b81526004016108c990612265565b801561137857611373826119af565b611390565b600061138330610dfa565b905061138e816119af565b505b4761139a81611b18565b505050565b6005546001600160a01b031633146113c95760405162461bcd60e51b81526004016108c990612265565b60058111156114405760405162461bcd60e51b815260206004820152603a60248201527f546865206d656d626572206769766561776179207472616e73616374696f6e2060448201527f6665652063616e2774206265206d6f7265207468616e2035252e00000000000060648201526084016108c9565b601081905560405181907f39e1f3e4cc8feb7dbc01c16e37aa1546c352489807c660593c62538f536ac05190600090a250565b6005546001600160a01b0316331461149d5760405162461bcd60e51b81526004016108c990612265565b600581111561150b5760405162461bcd60e51b815260206004820152603460248201527f54686520646576656c6f706572207472616e73616374696f6e206665652063616044820152733713ba1031329036b7b932903a3430b7101a929760611b60648201526084016108c9565b601281905560405181907f4bee3c216a701857abd67fed754efdd065a8599be5476e2c4b118fb1896b9ffa90600090a250565b6005546001600160a01b031633146115685760405162461bcd60e51b81526004016108c990612265565b6001600160a01b0381166115cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108c9565b610ecd81611cb3565b6005546001600160a01b031633146116005760405162461bcd60e51b81526004016108c990612265565b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6001600160a01b03831661168d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108c9565b6001600160a01b0382166116ee5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108c9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146117db57818110156117ce5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108c9565b6117db848484840361162b565b50505050565b6001600160a01b0383166118455760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108c9565b6001600160a01b0382166118a75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108c9565b6001600160a01b0383166000908152602081905260409020548181101561191f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108c9565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611956908490612236565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516119a291815260200190565b60405180910390a36117db565b60408051600280825260608201835260009260208301908036833701905050905030816000815181106119e4576119e461229a565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015611a3857600080fd5b505afa158015611a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7091906122b0565b81600181518110611a8357611a8361229a565b6001600160a01b039283166020918202929092010152601354611aa9913091168461162b565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611ae29085906000908690309042906004016122cd565b600060405180830381600087803b158015611afc57600080fd5b505af1158015611b10573d6000803e3d6000fd5b505050505050565b6000601254601154611b2a9190612236565b600d546011549192506001600160a01b0316906108fc908390611b4d90866121f5565b611b579190612214565b6040518115909202916000818181858888f19350505050158015611b7f573d6000803e3d6000fd5b50600e546012546001600160a01b03909116906108fc908390611ba290866121f5565b611bac9190612214565b6040518115909202916000818181858888f1935050505015801561139a573d6000803e3d6000fd5b6001600160a01b038216611c2a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108c9565b8060026000828254611c3c9190612236565b90915550506001600160a01b03821660009081526020819052604081208054839290611c69908490612236565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216611d655760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016108c9565b6001600160a01b03821660009081526020819052604090205481811015611dd95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016108c9565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611e0890849061224e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b81811015611e8057858101830151858201604001528201611e64565b81811115611e92576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610ecd57600080fd5b60008060408385031215611ed057600080fd5b8235611edb81611ea8565b946020939093013593505050565b600080600060608486031215611efe57600080fd5b8335611f0981611ea8565b92506020840135611f1981611ea8565b929592945050506040919091013590565b80358015158114611f3a57600080fd5b919050565b60008060408385031215611f5257600080fd5b8235611f5d81611ea8565b9150611f6b60208401611f2a565b90509250929050565b600060208284031215611f8657600080fd5b5035919050565b600060208284031215611f9f57600080fd5b8135610be181611ea8565b60008060408385031215611fbd57600080fd5b82359150611f6b60208401611f2a565b60008060408385031215611fe057600080fd5b8235611feb81611ea8565b91506020830135611ffb81611ea8565b809150509250929050565b600181811c9082168061201a57607f821691505b6020821081141561203b57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526081908201527f596f752068617665206265656e20626c61636b6c69737465642066726f6d207460408201527f726164696e67207468652043617264696e616c20546f6b656e2e20496620796f60608201527f75207468696e6b207468697320697320616e206572726f722c20706c6561736560808201527f20636f6e74616374207468652043617264696e616c20486f757365207465616d60a0820152601760f91b60c082015260e00190565b602080825260b2908201527f546865206164647265737320796f752061726520747279696e6720746f20736560408201527f6e642043617264696e616c20546f6b656e7320746f20686173206265656e206260608201527f6c61636b6c69737465642066726f6d2074726164696e6720746865204361726460808201527f696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697360a08201527f20616e206572726f722c20706c6561736520636f6e746163742074686520436160c082015271393234b730b6102437bab9b2903a32b0b69760711b60e08201526101000190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561220f5761220f6121df565b500290565b60008261223157634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612249576122496121df565b500190565b600082821015612260576122606121df565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156122c257600080fd5b8151610be181611ea8565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561231d5784516001600160a01b0316835293830193918301916001016122f8565b50506001600160a01b0396909616606085015250505060800152939250505056fea2646970667358221220c7a10c8997915f87649072c1352c610c45cc921a9a62e70a56526ef0a03f07d564736f6c63430008080033",
  "deployedSourceMap": "318:17060:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;-1:-1:-1;4433:197:2;;;;;:::i;:::-;;:::i;:::-;;;1237:14:40;;1230:22;1212:41;;1200:2;1185:18;4433:197:2;1072:187:40;3244:106:2;;;;;;;;;;-1:-1:-1;3331:12:2;;3244:106;;;1410:25:40;;;1398:2;1383:18;3244:106:2;1264:177:40;1681:35:20;;;;;;;;;;-1:-1:-1;1681:35:20;;;;-1:-1:-1;;;;;1681:35:20;;;;;;-1:-1:-1;;;;;1610:32:40;;;1592:51;;1580:2;1565:18;1681:35:20;1446:203:40;8872:2698:20;;;;;;;;;;-1:-1:-1;8872:2698:20;;;;;:::i;:::-;;:::i;3093:91:2:-;;;;;;;;;;-1:-1:-1;3093:91:2;;3175:2;2257:36:40;;2245:2;2230:18;3093:91:2;2115:184:40;4731:96:20;;;;;;;;;;-1:-1:-1;4815:4:20;4731:96;;5873:236:2;;;;;;;;;;-1:-1:-1;5873:236:2;;;;;:::i;:::-;;:::i;2308:42:20:-;;;;;;;;;;;;;;;;16761:178;;;;;;;;;;-1:-1:-1;16761:178:20;;;;;:::i;:::-;;:::i;:::-;;16428:109;;;;;;;;;;-1:-1:-1;16428:109:20;;;;;:::i;:::-;;:::i;1780:43::-;;;;;;;;;;;;;;;;1982:38;;;;;;;;;;;;;;;;14027:120;;;;;;;;;;-1:-1:-1;14027:120:20;;;;;:::i;:::-;;:::i;908:32::-;;;;;;;;;;-1:-1:-1;908:32:20;;;;-1:-1:-1;;;;;908:32:20;;;15312:336;;;;;;;;;;-1:-1:-1;15312:336:20;;;;;:::i;:::-;;:::i;1559:45::-;;;;;;;;;;-1:-1:-1;1559:45:20;;;;-1:-1:-1;;;;;1559:45:20;;;5214:100;;;;;;;;;;-1:-1:-1;5292:15:20;5214:100;;3408:125:2;;;;;;;;;;-1:-1:-1;3408:125:2;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;4962:106:20:-;;;;;;;;;;-1:-1:-1;4962:106:20;;;;;:::i;:::-;;:::i;12763:167::-;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;1128:37:20;;;;;;;;;;-1:-1:-1;1128:37:20;;;;-1:-1:-1;;;;;1128:37:20;;;2367:102:2;;;;;;;;;;;;;:::i;17198:178:20:-;;;;;;;;;;-1:-1:-1;17198:178:20;;;;;:::i;:::-;;:::i;6596:429:2:-;;;;;;;;;;-1:-1:-1;6596:429:2;;;;;:::i;:::-;;:::i;5842:2696:20:-;;;;;;;;;;-1:-1:-1;5842:2696:20;;;;;:::i;:::-;;:::i;5468:106::-;;;;;;;;;;-1:-1:-1;5468:106:20;;;;;:::i;:::-;;:::i;13298:467::-;;;;;;;;;;-1:-1:-1;13298:467:20;;;;;:::i;:::-;;:::i;2166:26::-;;;;;;;;;;-1:-1:-1;2166:26:20;;;;-1:-1:-1;;;;;2166:26:20;;;1448:45;;;;;;;;;;-1:-1:-1;1448:45:20;;;;-1:-1:-1;;;;;1448:45:20;;;1881:38;;;;;;;;;;;;;;;;502:49;;;;;;;;;;-1:-1:-1;502:49:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;3976:149:2;;;;;;;;;;-1:-1:-1;3976:149:2;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:2;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;14749:377:20;;;;;;;;;;-1:-1:-1;14749:377:20;;;;;:::i;:::-;;:::i;1227:29::-;;;;;;;;;;-1:-1:-1;1227:29:20;;;;-1:-1:-1;;;;;1227:29:20;;;15834:336;;;;;;;;;;-1:-1:-1;15834:336:20;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;801:40:20:-;;;;;;;;;;-1:-1:-1;801:40:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;669:42;;;;;;;;;;-1:-1:-1;669:42:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;14426:120;;;;;;;;;;-1:-1:-1;14426:120:20;;;;;:::i;:::-;;:::i;1331:50::-;;;;;;;;;;-1:-1:-1;1331:50:20;;;;-1:-1:-1;;;;;1331:50:20;;;2156:98:2;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:11;4570:32:2;719:10:11;4586:7:2;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;8872:2698:20:-;719:10:11;8961:4:20;9034:23;;;:9;:23;;;;;;;;9033:24;9025:166;;;;-1:-1:-1;;;9025:166:20;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;9292:15:20;;;;;;:9;:15;;;;;;;;9291:16;9283:213;;;;-1:-1:-1;;;9283:213:20;;5302:2:40;9283:213:20;;;5284:21:40;5341:3;5321:18;;;5314:31;5381:34;5361:18;;;5354:62;5452:34;5432:18;;;5425:62;5524:34;5503:19;;;5496:63;5596:34;5575:19;;;5568:63;5668:34;5647:19;;;5640:63;5740:26;5719:19;;;5712:55;5784:19;;9283:213:20;5100:709:40;9283:213:20;-1:-1:-1;;;;;9566:13:20;;;;;;:9;:13;;;;;;;;9565:14;9557:205;;;;-1:-1:-1;;;9557:205:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;9879:22:20;;;;;;:16;:22;;;;;;;;;:46;;-1:-1:-1;;;;;;9905:20:20;;;;;;:16;:20;;;;;;;;9879:46;:80;;;-1:-1:-1;719:10:11;9929:30:20;;;;:16;:30;;;;;;;;9879:80;9875:220;;;9975:43;9991:4;719:10:11;10011:6:20;9975:15;:43::i;:::-;10032:27;10042:4;10048:2;10052:6;10032:9;:27::i;:::-;-1:-1:-1;10080:4:20;10073:11;;9875:220;10149:25;10215:3;10187:24;;10178:6;:33;;;;:::i;:::-;10177:41;;;;:::i;:::-;10149:69;;10271:20;10327:3;10304:19;;10295:6;:28;;;;:::i;:::-;10294:36;;;;:::i;:::-;10271:59;;10383:20;10439:3;10416:19;;10407:6;:28;;;;:::i;:::-;10406:36;;;;:::i;:::-;10383:59;-1:-1:-1;10537:19:20;10559:27;10383:59;10559:12;:27;:::i;:::-;10537:49;-1:-1:-1;10680:43:20;10696:4;719:10:11;10716:6:20;10680:15;:43::i;:::-;10749:27;;10733:63;;10743:4;;-1:-1:-1;;;;;10749:27:20;10778:17;10733:9;:63::i;:::-;10806:43;10816:4;10830;10837:11;10806:9;:43::i;:::-;10860:36;10899:24;10917:4;10899:9;:24::i;:::-;10954:11;;10860:63;;-1:-1:-1;;;;;;10954:11:20;719:10:11;-1:-1:-1;;;;;10938:27:20;;10934:427;;11041:20;;11026:11;;11016:22;;-1:-1:-1;;;;;11026:11:20;11016:9;:22::i;:::-;:45;;;;:::i;:::-;10985:28;:76;10981:171;;;11081:56;11108:28;11081:26;:56::i;:::-;11213:21;11252:24;;11248:103;;11296:40;11314:21;11296:17;:40::i;:::-;10967:394;10934:427;11432:22;11480:17;11457:20;11466:11;11457:6;:20;:::i;:::-;:40;;;;:::i;:::-;11432:65;;11507:35;11517:4;11523:2;11527:14;11507:9;:35::i;:::-;11559:4;11552:11;;;;;;;;8872:2698;;;;;;:::o;5873:236:2:-;719:10:11;5961:4:2;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:2;;;;;;;;;;5961:4;;719:10:11;6015:66:2;;719:10:11;;6040:27:2;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;16761:178:20:-;719:10:11;16830:21:20;;;;:7;:21;;;;;;;;16822:81;;;;-1:-1:-1;;;16822:81:20;;7514:2:40;16822:81:20;;;7496:21:40;7553:2;7533:18;;;7526:30;7592:34;7572:18;;;7565:62;-1:-1:-1;;;7643:18:40;;;7636:45;7698:19;;16822:81:20;7312:411:40;16822:81:20;16913:19;16919:4;16925:6;16913:5;:19::i;:::-;16761:178;;:::o;16428:109::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;16506:13:20;;;::::1;;::::0;;;:7:::1;:13;::::0;;;;:24;;-1:-1:-1;;16506:24:20::1;::::0;::::1;;::::0;;;::::1;::::0;;16428:109::o;14027:120::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14107:20:20::1;:33:::0;14027:120::o;15312:336::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;15452:1:20::1;15422:26;:31;;15414:96;;;::::0;-1:-1:-1;;;15414:96:20;;8291:2:40;15414:96:20::1;::::0;::::1;8273:21:40::0;8330:2;8310:18;;;8303:30;8369:34;8349:18;;;8342:62;-1:-1:-1;;;8420:18:40;;;8413:50;8480:19;;15414:96:20::1;8089:416:40::0;15414:96:20::1;15520:19;:48:::0;;;15583:58:::1;::::0;15542:26;;15583:58:::1;::::0;;;::::1;15312:336:::0;:::o;3408:125:2:-;-1:-1:-1;;;;;3508:18:2;3482:7;3508:18;;;;;;;;;;;;3408:125::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;4962:106:20:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5032:22:20::1;;::::0;;;:16:::1;:22;::::0;;;;:29;;-1:-1:-1;;5032:29:20::1;5057:4;5032:29;::::0;;4962:106::o;12763:167::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;12853:21:20::1;12884:39;12853:21:::0;12884:17:::1;:39::i;:::-;12812:118;12763:167::o:0;2367:102:2:-;2423:13;2455:7;2448:14;;;;;:::i;17198:178:20:-;719:10:11;17267:21:20;;;;:7;:21;;;;;;;;17259:81;;;;-1:-1:-1;;;17259:81:20;;8712:2:40;17259:81:20;;;8694:21:40;8751:2;8731:18;;;8724:30;8790:34;8770:18;;;8763:62;-1:-1:-1;;;8841:18:40;;;8834:45;8896:19;;17259:81:20;8510:411:40;17259:81:20;17350:19;17356:4;17362:6;17350:5;:19::i;6596:429:2:-;719:10:11;6689:4:2;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:2;;;;;;;;;;6689:4;;719:10:11;6815:35:2;;;;6807:85;;;;-1:-1:-1;;;6807:85:2;;9128:2:40;6807:85:2;;;9110:21:40;9167:2;9147:18;;;9140:30;9206:34;9186:18;;;9179:62;-1:-1:-1;;;9257:18:40;;;9250:35;9302:19;;6807:85:2;8926:401:40;6807:85:2;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;:::-;-1:-1:-1;7014:4:2;;6596:429;-1:-1:-1;;;;6596:429:2:o;5842:2696:20:-;719:10:11;5920:4:20;5993:23;;;:9;:23;;;;;;;;5992:24;5984:166;;;;-1:-1:-1;;;5984:166:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;6220:20:20;;;;;;:9;:20;;;;;;;;6219:21;6211:212;;;;-1:-1:-1;;;6211:212:20;;;;;;;:::i;:::-;6572:11;;-1:-1:-1;;;;;6572:11:20;719:10:11;-1:-1:-1;;;;;6556:27:20;;:62;;;;-1:-1:-1;719:10:11;6588:30:20;;;;:16;:30;;;;;;;;6587:31;6556:62;:94;;;;-1:-1:-1;;;;;;6623:27:20;;;;;;:16;:27;;;;;;;;6622:28;6556:94;6552:273;;;6725:3;6709:13;3331:12:2;;;3244:106;6709:13:20;:19;;;;:::i;:::-;6698:6;6675:20;6685:9;6675;:20::i;:::-;:29;;;;:::i;:::-;6674:55;6666:148;;;;-1:-1:-1;;;6666:148:20;;9534:2:40;6666:148:20;;;9516:21:40;9573:2;9553:18;;;9546:30;9612:34;9592:18;;;9585:62;9683:34;9663:18;;;9656:62;-1:-1:-1;;;9734:19:40;;;9727:47;9791:19;;6666:148:20;9332:484:40;6666:148:20;719:10:11;6930:30:20;;;;:16;:30;;;;;;;;;:61;;-1:-1:-1;;;;;;6964:27:20;;;;;;:16;:27;;;;;;;;6930:61;6926:159;;;7007:42;719:10:11;7031:9:20;7042:6;7007:9;:42::i;:::-;-1:-1:-1;7070:4:20;7063:11;;6926:159;7139:25;7205:3;7177:24;;7168:6;:33;;;;:::i;:::-;7167:41;;;;:::i;:::-;7139:69;;7261:20;7317:3;7294:19;;7285:6;:28;;;;:::i;:::-;7284:36;;;;:::i;:::-;7261:59;;7373:20;7429:3;7406:19;;7397:6;:28;;;;:::i;:::-;7396:36;;;;:::i;:::-;7373:59;-1:-1:-1;7527:19:20;7549:27;7373:59;7549:12;:27;:::i;:::-;7527:49;-1:-1:-1;7670:71:20;719:10:11;7694:27:20;;-1:-1:-1;;;;;7694:27:20;7723:17;7670:9;:71::i;:::-;7751:51;719:10:11;7783:4:20;7790:11;7751:9;:51::i;:::-;7813:36;7852:24;7870:4;7852:9;:24::i;:::-;7907:11;;7813:63;;-1:-1:-1;;;;;;7907:11:20;719:10:11;-1:-1:-1;;;;;7891:27:20;;7887:427;;7994:20;;7979:11;;7969:22;;-1:-1:-1;;;;;7979:11:20;7969:9;:22::i;:::-;:45;;;;:::i;:::-;7938:28;:76;7934:171;;;8034:56;8061:28;8034:26;:56::i;:::-;8166:21;8205:24;;8201:103;;8249:40;8267:21;8249:17;:40::i;:::-;7920:394;7887:427;8385:22;8433:17;8410:20;8419:11;8410:6;:20;:::i;:::-;:40;;;;:::i;:::-;8385:65;-1:-1:-1;8460:50:20;719:10:11;8484:9:20;8495:14;8460:9;:50::i;:::-;-1:-1:-1;8527:4:20;;5842:2696;-1:-1:-1;;;;;;;;5842:2696:20:o;5468:106::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5537:22:20::1;5562:5;5537:22:::0;;;:16:::1;:22;::::0;;;;:30;;-1:-1:-1;;5537:30:20::1;::::0;;5468:106::o;13298:467::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;13405:9:20::1;13401:246;;;13430:34;13457:6;13430:26;:34::i;:::-;13401:246;;;13503:36;13542:24;13560:4;13542:9;:24::i;:::-;13503:63;;13580:56;13607:28;13580:26;:56::i;:::-;13489:158;13401:246;13688:21;13719:39;13688:21:::0;13719:17:::1;:39::i;:::-;13391:374;13298:467:::0;;:::o;14749:377::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14904:1:20::1;14869:31;:36;;14861:107;;;::::0;-1:-1:-1;;;14861:107:20;;10023:2:40;14861:107:20::1;::::0;::::1;10005:21:40::0;10062:2;10042:18;;;10035:30;10101:34;10081:18;;;10074:62;10172:28;10152:18;;;10145:56;10218:19;;14861:107:20::1;9821:422:40::0;14861:107:20::1;14978:24;:58:::0;;;15051:68:::1;::::0;15005:31;;15051:68:::1;::::0;;;::::1;14749:377:::0;:::o;15834:336::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;15974:1:20::1;15944:26;:31;;15936:96;;;::::0;-1:-1:-1;;;15936:96:20;;10450:2:40;15936:96:20::1;::::0;::::1;10432:21:40::0;10489:2;10469:18;;;10462:30;10528:34;10508:18;;;10501:62;-1:-1:-1;;;10579:18:40;;;10572:50;10639:19;;15936:96:20::1;10248:416:40::0;15936:96:20::1;16042:19;:48:::0;;;16105:58:::1;::::0;16064:26;;16105:58:::1;::::0;;;::::1;15834:336:::0;:::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;10871:2:40;1998:73:0::1;::::0;::::1;10853:21:40::0;10910:2;10890:18;;;10883:30;10949:34;10929:18;;;10922:62;-1:-1:-1;;;11000:18:40;;;10993:36;11046:19;;1998:73:0::1;10669:402:40::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;14426:120:20:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;14510:15:20;;;::::1;;::::0;;;:9:::1;:15;::::0;;;;:29;;-1:-1:-1;;14510:29:20::1;::::0;::::1;;::::0;;;::::1;::::0;;14426:120::o;10123:370:2:-;-1:-1:-1;;;;;10254:19:2;;10246:68;;;;-1:-1:-1;;;10246:68:2;;11278:2:40;10246:68:2;;;11260:21:40;11317:2;11297:18;;;11290:30;11356:34;11336:18;;;11329:62;-1:-1:-1;;;11407:18:40;;;11400:34;11451:19;;10246:68:2;11076:400:40;10246:68:2;-1:-1:-1;;;;;10332:21:2;;10324:68;;;;-1:-1:-1;;;10324:68:2;;11683:2:40;10324:68:2;;;11665:21:40;11722:2;11702:18;;;11695:30;11761:34;11741:18;;;11734:62;-1:-1:-1;;;11812:18:40;;;11805:32;11854:19;;10324:68:2;11481:398:40;10324:68:2;-1:-1:-1;;;;;10403:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1410:25:40;;;10454:32:2;;1383:18:40;10454:32:2;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:2;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:2;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:2;;12086:2:40;11019:68:2;;;12068:21:40;12125:2;12105:18;;;12098:30;12164:31;12144:18;;;12137:59;12213:18;;11019:68:2;11884:353:40;11019:68:2;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:2;;7606:68;;;;-1:-1:-1;;;7606:68:2;;12444:2:40;7606:68:2;;;12426:21:40;12483:2;12463:18;;;12456:30;12522:34;12502:18;;;12495:62;-1:-1:-1;;;12573:18:40;;;12566:35;12618:19;;7606:68:2;12242:401:40;7606:68:2;-1:-1:-1;;;;;7692:16:2;;7684:64;;;;-1:-1:-1;;;7684:64:2;;12850:2:40;7684:64:2;;;12832:21:40;12889:2;12869:18;;;12862:30;12928:34;12908:18;;;12901:62;-1:-1:-1;;;12979:18:40;;;12972:33;13022:19;;7684:64:2;12648:399:40;7684:64:2;-1:-1:-1;;;;;7830:15:2;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:2;;13254:2:40;7855:72:2;;;13236:21:40;13293:2;13273:18;;;13266:30;13332:34;13312:18;;;13305:62;-1:-1:-1;;;13383:18:40;;;13376:36;13429:19;;7855:72:2;13052:402:40;7855:72:2;-1:-1:-1;;;;;7961:15:2;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:2;8067:4;-1:-1:-1;;;;;8058:26:2;;8077:6;8058:26;;;;1410:25:40;;1398:2;1383:18;;1264:177;8058:26:2;;;;;;;;8095:37;13298:467:20;11717:448;11811:16;;;11825:1;11811:16;;;;;;;;11787:21;;11811:16;;;;;;;;;;-1:-1:-1;11811:16:20;11787:40;;11855:4;11837;11842:1;11837:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11837:23:20;;;:7;;;;;;;;;;:23;;;;11880:13;;:20;;;-1:-1:-1;;;11880:20:20;;;;:13;;;;;:18;;:20;;;;;11837:7;;11880:20;;;;;:13;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11870:4;11875:1;11870:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11870:30:20;;;:7;;;;;;;;;:30;11942:13;;11910:55;;11927:4;;11942:13;11958:6;11910:8;:55::i;:::-;11975:13;;:183;;-1:-1:-1;;;11975:183:20;;-1:-1:-1;;;;;11975:13:20;;;;:64;;:183;;12053:6;;11975:13;;12088:4;;12114;;12133:15;;11975:183;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11777:388;11717:448;:::o;12315:296::-;12376:16;12417:19;;12395;;:41;;;;:::i;:::-;12446:22;;12488:19;;12376:60;;-1:-1:-1;;;;;;12446:22:20;;:74;;12376:60;;12479:28;;:6;:28;:::i;:::-;12478:41;;;;:::i;:::-;12446:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12530:22:20;;12572:19;;-1:-1:-1;;;;;12530:22:20;;;;:74;;12595:8;;12563:28;;:6;:28;:::i;:::-;12562:41;;;;:::i;:::-;12530:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8415:389:2;-1:-1:-1;;;;;8498:21:2;;8490:65;;;;-1:-1:-1;;;8490:65:2;;15166:2:40;8490:65:2;;;15148:21:40;15205:2;15185:18;;;15178:30;15244:33;15224:18;;;15217:61;15295:18;;8490:65:2;14964:355:40;8490:65:2;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:2;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:2;;1410:25:40;;;-1:-1:-1;;;;;8701:37:2;;;8718:1;;8701:37;;1398:2:40;1383:18;8701:37:2;;;;;;;16761:178:20;;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;9124:576:2:-;-1:-1:-1;;;;;9207:21:2;;9199:67;;;;-1:-1:-1;;;9199:67:2;;15526:2:40;9199:67:2;;;15508:21:40;15565:2;15545:18;;;15538:30;15604:34;15584:18;;;15577:62;-1:-1:-1;;;15655:18:40;;;15648:31;15696:19;;9199:67:2;15324:397:40;9199:67:2;-1:-1:-1;;;;;9362:18:2;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;9390:71:2;;15928:2:40;9390:71:2;;;15910:21:40;15967:2;15947:18;;;15940:30;16006:34;15986:18;;;15979:62;-1:-1:-1;;;16057:18:40;;;16050:32;16099:19;;9390:71:2;15726:398:40;9390:71:2;-1:-1:-1;;;;;9495:18:2;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:2;;1410:25:40;;;9623:1:2;;-1:-1:-1;;;;;9597:37:2;;;;;1398:2:40;1383:18;9597:37:2;;;;;;;13391:374:20::1;13298:467:::0;;:::o;14:597:40:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:40;574:15;-1:-1:-1;;570:29:40;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:40:o;616:131::-;-1:-1:-1;;;;;691:31:40;;681:42;;671:70;;737:1;734;727:12;752:315;820:6;828;881:2;869:9;860:7;856:23;852:32;849:52;;;897:1;894;887:12;849:52;936:9;923:23;955:31;980:5;955:31;:::i;:::-;1005:5;1057:2;1042:18;;;;1029:32;;-1:-1:-1;;;752:315:40:o;1654:456::-;1731:6;1739;1747;1800:2;1788:9;1779:7;1775:23;1771:32;1768:52;;;1816:1;1813;1806:12;1768:52;1855:9;1842:23;1874:31;1899:5;1874:31;:::i;:::-;1924:5;-1:-1:-1;1981:2:40;1966:18;;1953:32;1994:33;1953:32;1994:33;:::i;:::-;1654:456;;2046:7;;-1:-1:-1;;;2100:2:40;2085:18;;;;2072:32;;1654:456::o;2304:160::-;2369:20;;2425:13;;2418:21;2408:32;;2398:60;;2454:1;2451;2444:12;2398:60;2304:160;;;:::o;2469:315::-;2534:6;2542;2595:2;2583:9;2574:7;2570:23;2566:32;2563:52;;;2611:1;2608;2601:12;2563:52;2650:9;2637:23;2669:31;2694:5;2669:31;:::i;:::-;2719:5;-1:-1:-1;2743:35:40;2774:2;2759:18;;2743:35;:::i;:::-;2733:45;;2469:315;;;;;:::o;2789:180::-;2848:6;2901:2;2889:9;2880:7;2876:23;2872:32;2869:52;;;2917:1;2914;2907:12;2869:52;-1:-1:-1;2940:23:40;;2789:180;-1:-1:-1;2789:180:40:o;3198:247::-;3257:6;3310:2;3298:9;3289:7;3285:23;3281:32;3278:52;;;3326:1;3323;3316:12;3278:52;3365:9;3352:23;3384:31;3409:5;3384:31;:::i;3450:248::-;3515:6;3523;3576:2;3564:9;3555:7;3551:23;3547:32;3544:52;;;3592:1;3589;3582:12;3544:52;3628:9;3615:23;3605:33;;3657:35;3688:2;3677:9;3673:18;3657:35;:::i;3703:388::-;3771:6;3779;3832:2;3820:9;3811:7;3807:23;3803:32;3800:52;;;3848:1;3845;3838:12;3800:52;3887:9;3874:23;3906:31;3931:5;3906:31;:::i;:::-;3956:5;-1:-1:-1;4013:2:40;3998:18;;3985:32;4026:33;3985:32;4026:33;:::i;:::-;4078:7;4068:17;;;3703:388;;;;;:::o;4096:380::-;4175:1;4171:12;;;;4218;;;4239:61;;4293:4;4285:6;4281:17;4271:27;;4239:61;4346:2;4338:6;4335:14;4315:18;4312:38;4309:161;;;4392:10;4387:3;4383:20;4380:1;4373:31;4427:4;4424:1;4417:15;4455:4;4452:1;4445:15;4309:161;;4096:380;;;:::o;4481:614::-;4683:2;4665:21;;;4722:3;4702:18;;;4695:31;4762:34;4757:2;4742:18;;4735:62;4833:34;4828:2;4813:18;;4806:62;4905:34;4899:3;4884:19;;4877:63;4977:34;4971:3;4956:19;;4949:63;-1:-1:-1;;;5043:3:40;5028:19;;5021:32;5085:3;5070:19;;4481:614::o;5814:703::-;6016:2;5998:21;;;6055:3;6035:18;;;6028:31;6095:34;6090:2;6075:18;;6068:62;6166:34;6161:2;6146:18;;6139:62;6238:34;6232:3;6217:19;;6210:63;6310:34;6304:3;6289:19;;6282:63;6382:34;6376:3;6361:19;;6354:63;-1:-1:-1;;;6448:3:40;6433:19;;6426:49;6507:3;6492:19;;5814:703::o;6522:127::-;6583:10;6578:3;6574:20;6571:1;6564:31;6614:4;6611:1;6604:15;6638:4;6635:1;6628:15;6654:168;6694:7;6760:1;6756;6752:6;6748:14;6745:1;6742:21;6737:1;6730:9;6723:17;6719:45;6716:71;;;6767:18;;:::i;:::-;-1:-1:-1;6807:9:40;;6654:168::o;6827:217::-;6867:1;6893;6883:132;;6937:10;6932:3;6928:20;6925:1;6918:31;6972:4;6969:1;6962:15;7000:4;6997:1;6990:15;6883:132;-1:-1:-1;7029:9:40;;6827:217::o;7049:128::-;7089:3;7120:1;7116:6;7113:1;7110:13;7107:39;;;7126:18;;:::i;:::-;-1:-1:-1;7162:9:40;;7049:128::o;7182:125::-;7222:4;7250:1;7247;7244:8;7241:34;;;7255:18;;:::i;:::-;-1:-1:-1;7292:9:40;;7182:125::o;7728:356::-;7930:2;7912:21;;;7949:18;;;7942:30;8008:34;8003:2;7988:18;;7981:62;8075:2;8060:18;;7728:356::o;13591:127::-;13652:10;13647:3;13643:20;13640:1;13633:31;13683:4;13680:1;13673:15;13707:4;13704:1;13697:15;13723:251;13793:6;13846:2;13834:9;13825:7;13821:23;13817:32;13814:52;;;13862:1;13859;13852:12;13814:52;13894:9;13888:16;13913:31;13938:5;13913:31;:::i;13979:980::-;14241:4;14289:3;14278:9;14274:19;14320:6;14309:9;14302:25;14346:2;14384:6;14379:2;14368:9;14364:18;14357:34;14427:3;14422:2;14411:9;14407:18;14400:31;14451:6;14486;14480:13;14517:6;14509;14502:22;14555:3;14544:9;14540:19;14533:26;;14594:2;14586:6;14582:15;14568:29;;14615:1;14625:195;14639:6;14636:1;14633:13;14625:195;;;14704:13;;-1:-1:-1;;;;;14700:39:40;14688:52;;14795:15;;;;14760:12;;;;14736:1;14654:9;14625:195;;;-1:-1:-1;;;;;;;14876:32:40;;;;14871:2;14856:18;;14849:60;-1:-1:-1;;;14940:3:40;14925:19;14918:35;14837:3;13979:980;-1:-1:-1;;;13979:980:40:o",
  "language": "Solidity",
  "natspec": {
    "details": "Token contract for the Cardinal House ecosystem currency",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "details": "Minter only function to burn Cardinal Tokens for bridging and deflation upon service purchases with the Cardinal Token",
        "params": {
          "amount": "the amount of tokens to be burned",
          "user": "the address to burn the tokens from"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "disperseFeesManually()": {
        "details": "Sends Matic to transaction fee wallets manually as opposed to happening automatically after a certain level of volume"
      },
      "excludeUserFromFees(address)": {
        "details": "Adds a user to be excluded from fees.",
        "params": {
          "user": "address of the user to be excluded from fees."
        }
      },
      "getContractAddress()": {
        "details": "Returns the contract address",
        "returns": {
          "_0": "contract address"
        }
      },
      "getCurrentTimestamp()": {
        "details": "Gets the current timestamp, used for testing + verification",
        "returns": {
          "_0": "the the timestamp of the current block"
        }
      },
      "includeUsersInFees(address)": {
        "details": "Removes a user from the fee exclusion.",
        "params": {
          "user": "address of the user than will now have to pay transaction fees."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Minter only function to mint new Cardinal Tokens for bridging",
        "params": {
          "amount": "the amount of tokens to be minted to the user",
          "user": "the address that the tokens will be minted to"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setContractTokenDivisor(uint256)": {
        "details": "Sets the value that determines how many Cardinal Tokens need to be in the contract before it's swapped for Matic.",
        "params": {
          "newDivisor": "the new divisor value to determine the swap threshold"
        }
      },
      "swapCardinalTokensForMaticManually(uint256,bool)": {
        "details": "Swaps all Cardinal Tokens in the contract for Matic and then disperses those funds to the transaction fee wallets.",
        "params": {
          "amount": "the amount of Cardinal Tokens in the contract to swap for Matic",
          "useAmount": "boolean to determine if the amount sent in is swapped for Matic or if the entire contract balance is swapped."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "Overrides the BEP20 transfer function to include transaction fees.",
        "params": {
          "amount": "the amount to be transfered",
          "recipient": "the recipient of the transfer"
        },
        "returns": {
          "_0": "bool representing if the transfer was successful"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Overrides the BEP20 transferFrom function to include transaction fees.",
        "params": {
          "amount": "the amount to be transfered",
          "from": "the address from where the tokens are coming from",
          "to": "the recipient of the transfer"
        },
        "returns": {
          "_0": "bool representing if the transfer was successful"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateBlackList(address,bool)": {
        "details": "Updates the blacklist mapping for a given address",
        "params": {
          "blacklisted": "a boolean that determines if the given address is being added or removed from the blacklist",
          "user": "the address that is being added or removed from the blacklist"
        }
      },
      "updateDeveloperTransactionFee(uint256)": {
        "details": "Function to update the developer transaction fee - can't be more than 5 percent",
        "params": {
          "newDeveloperTransactionFee": "the new developer transaction fee"
        }
      },
      "updateMarketingTransactionFee(uint256)": {
        "details": "Function to update the marketing transaction fee - can't be more than 5 percent",
        "params": {
          "newMarketingTransactionFee": "the new marketing transaction fee"
        }
      },
      "updateMemberGiveawayTransactionFee(uint256)": {
        "details": "Function to update the member giveaway transaction fee - can't be more than 5 percent",
        "params": {
          "newMemberGiveawayTransactionFee": "the new member giveaway transaction fee"
        }
      },
      "updateMinter(address,bool)": {
        "details": "Function to add or remove a Cardinal Token minter",
        "params": {
          "isMinter": "boolean representing if the address provided will be added or removed as a minter",
          "user": "the address that will be added or removed as a minter"
        }
      }
    },
    "title": "Cardinal House Token",
    "version": 1
  },
  "offset": [
    318,
    17378
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x260 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C13EFD4 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xDA6FA55C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xECC63390 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xECC63390 EQ PUSH2 0x70D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0xF46ECCC4 EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x77D JUMPI DUP1 PUSH4 0xFC2EB889 EQ PUSH2 0x7AD JUMPI DUP1 PUSH4 0xFD092BC5 EQ PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDA6FA55C EQ PUSH2 0x641 JUMPI DUP1 PUSH4 0xDBE66CA0 EQ PUSH2 0x657 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0xDE77BFD9 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xEB08AA3B EQ PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xBBEAA1F8 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xC3D0CB20 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xD158272D EQ PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C13EFD4 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x8EB83F25 EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x43620E71 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x5B81C1A4 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x5B81C1A4 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x61EB048A EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x6C9230DB EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x78C1D245 EQ PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x43620E71 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x4F481683 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x4FCD1285 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x560493B3 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x5B3C1DA1 EQ PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x32A2C5D0 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x404E8A82 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x20CA3C7F EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x267 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBD JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x306 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS PUSH2 0x306 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBD JUMP JUMPDEST PUSH2 0xBE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBD JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0xD01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x306 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x46C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0xD30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x306 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP TIMESTAMP PUSH2 0x2D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0xDFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0xE15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0xE4B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0xE99 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x306 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x306 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0xED0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBD JUMP JUMPDEST PUSH2 0xEDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBD JUMP JUMPDEST PUSH2 0xF60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBD JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x5DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x12EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x133A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x306 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x306 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0x6A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x6E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0x139F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x306 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x728 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0x1473 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x748 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x153E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x768 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x798 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x7C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x15D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x306 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x7FC SWAP1 PUSH2 0x2006 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x828 SWAP1 PUSH2 0x2006 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x875 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x84A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x875 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x858 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x88D DUP2 DUP6 DUP6 PUSH2 0x162B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206164647265737320796F7527726520747279696E6720746F20737065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E64207468652043617264696E616C20546F6B656E732066726F6D2068617320 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6265656E20626C61636B6C69737465642066726F6D2074726164696E67207468 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x652043617264696E616C20546F6B656E2E20496620796F75207468696E6B2074 PUSH1 0xA4 DUP3 ADD MSTORE PUSH32 0x68697320697320616E206572726F722C20706C6561736520636F6E7461637420 PUSH1 0xC4 DUP3 ADD MSTORE PUSH32 0x7468652043617264696E616C20486F757365207465616D2E0000000000000000 PUSH1 0xE4 DUP3 ADD MSTORE PUSH2 0x104 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xA72 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xA8C JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xAAF JUMPI PUSH2 0xA9C DUP5 CALLER DUP5 PUSH2 0x174F JUMP JUMPDEST PUSH2 0xAA7 DUP5 DUP5 DUP5 PUSH2 0x17E1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x10 SLOAD DUP5 PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x11 SLOAD DUP6 PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST PUSH2 0xAE9 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x12 SLOAD DUP7 PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB15 DUP3 DUP5 PUSH2 0x2236 JUMP JUMPDEST SWAP1 POP PUSH2 0xB22 DUP9 CALLER DUP9 PUSH2 0x174F JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0xB3A SWAP1 DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0x17E1 JUMP JUMPDEST PUSH2 0xB45 DUP9 ADDRESS DUP4 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB50 ADDRESS PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBB2 JUMPI PUSH1 0x15 SLOAD PUSH1 0x14 SLOAD PUSH2 0xB86 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDFA JUMP JUMPDEST PUSH2 0xB90 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xBA0 DUP2 PUSH2 0x19AF JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0xBB0 JUMPI PUSH2 0xBB0 SELFBALANCE PUSH2 0x1B18 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP6 PUSH2 0xBBF DUP5 DUP11 PUSH2 0x224E JUMP JUMPDEST PUSH2 0xBC9 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST SWAP1 POP PUSH2 0xBD6 DUP11 DUP11 DUP4 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x1 SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x88D SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xC22 SWAP1 DUP8 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0x162B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420617574686F72697A656420746F206D696E742043 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x30B93234B730B6102A37B5B2B73997 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xCA8 DUP3 DUP3 PUSH2 0x1BD4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206D61726B6574696E67207472616E73616374696F6E20666565206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x3713BA1031329036B7B932903A3430B7101A9297 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH31 0xEC95F51190FC49500BF726B0C72CB5C1B132F7BFE7685A33BDA07DEFE3A8A8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0xE49 PUSH1 0x0 PUSH2 0x1CB3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST SELFBALANCE PUSH2 0xECD DUP2 PUSH2 0x1B18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x7FC SWAP1 PUSH2 0x2006 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420617574686F72697A656420746F206275726E2043 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x30B93234B730B6102A37B5B2B73997 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xCA8 DUP3 DUP3 PUSH2 0x1D05 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xFF2 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x162B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x102D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1066 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1099 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x10BE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1178 JUMPI PUSH1 0xA6 PUSH2 0x10CE PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10D8 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST DUP3 PUSH2 0x10E2 DUP6 PUSH2 0xDFA JUMP JUMPDEST PUSH2 0x10EC SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST LT PUSH2 0x1178 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x50 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E27742068617665206D6F7265207468616E203225206F662074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x686520746F74616C2043617264696E616C20546F6B656E20737570706C792061 PUSH1 0x64 DUP3 ADD MSTORE PUSH16 0x333A32B91030902222AC1039BBB0B817 PUSH1 0x81 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x8C9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x11AE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x11C6 JUMPI PUSH2 0x11BE CALLER DUP5 DUP5 PUSH2 0x17E1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x893 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x10 SLOAD DUP5 PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST PUSH2 0x11E2 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x11 SLOAD DUP6 PUSH2 0x11F6 SWAP2 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST PUSH2 0x1200 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x12 SLOAD DUP7 PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST PUSH2 0x121E SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x122C DUP3 DUP5 PUSH2 0x2236 JUMP JUMPDEST SWAP1 POP PUSH2 0x1244 CALLER PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0x17E1 JUMP JUMPDEST PUSH2 0x124F CALLER ADDRESS DUP4 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125A ADDRESS PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12BC JUMPI PUSH1 0x15 SLOAD PUSH1 0x14 SLOAD PUSH2 0x1290 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDFA JUMP JUMPDEST PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x12AA JUMPI PUSH2 0x12AA DUP2 PUSH2 0x19AF JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x12BA JUMPI PUSH2 0x12BA SELFBALANCE PUSH2 0x1B18 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x12C9 DUP5 DUP11 PUSH2 0x224E JUMP JUMPDEST PUSH2 0x12D3 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST SWAP1 POP PUSH2 0x12E0 CALLER DUP11 DUP4 PUSH2 0x17E1 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1319 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1364 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1378 JUMPI PUSH2 0x1373 DUP3 PUSH2 0x19AF JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1383 ADDRESS PUSH2 0xDFA JUMP JUMPDEST SWAP1 POP PUSH2 0x138E DUP2 PUSH2 0x19AF JUMP JUMPDEST POP JUMPDEST SELFBALANCE PUSH2 0x139A DUP2 PUSH2 0x1B18 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206D656D626572206769766561776179207472616E73616374696F6E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6665652063616E2774206265206D6F7265207468616E2035252E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x39E1F3E4CC8FEB7DBC01C16E37AA1546C352489807C660593C62538F536AC051 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x149D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x150B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520646576656C6F706572207472616E73616374696F6E20666565206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x3713BA1031329036B7B932903A3430B7101A9297 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x4BEE3C216A701857ABD67FED754EFDD065A8599BE5476E2C4B118FB1896B9FFA SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1568 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xECD DUP2 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x168D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x17DB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x17CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x17DB DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x162B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x191F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1956 SWAP1 DUP5 SWAP1 PUSH2 0x2236 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x19A2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x19E4 JUMPI PUSH2 0x19E4 PUSH2 0x229A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A70 SWAP2 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A83 JUMPI PUSH2 0x1A83 PUSH2 0x229A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x1AA9 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x162B JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x1AE2 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SLOAD PUSH1 0x11 SLOAD PUSH2 0x1B2A SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x11 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x8FC SWAP1 DUP4 SWAP1 PUSH2 0x1B4D SWAP1 DUP7 PUSH2 0x21F5 JUMP JUMPDEST PUSH2 0x1B57 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x8FC SWAP1 DUP4 SWAP1 PUSH2 0x1BA2 SWAP1 DUP7 PUSH2 0x21F5 JUMP JUMPDEST PUSH2 0x1BAC SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x139A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8C9 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C3C SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1C69 SWAP1 DUP5 SWAP1 PUSH2 0x2236 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1DD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1E08 SWAP1 DUP5 SWAP1 PUSH2 0x224E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E80 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1E64 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1E92 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1EDB DUP2 PUSH2 0x1EA8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F09 DUP2 PUSH2 0x1EA8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1F19 DUP2 PUSH2 0x1EA8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F5D DUP2 PUSH2 0x1EA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F6B PUSH1 0x20 DUP5 ADD PUSH2 0x1F2A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBE1 DUP2 PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1F6B PUSH1 0x20 DUP5 ADD PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1FEB DUP2 PUSH2 0x1EA8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1FFB DUP2 PUSH2 0x1EA8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x201A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x203B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x81 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206265656E20626C61636B6C69737465642066726F6D2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x726164696E67207468652043617264696E616C20546F6B656E2E20496620796F PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x75207468696E6B207468697320697320616E206572726F722C20706C65617365 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x20636F6E74616374207468652043617264696E616C20486F757365207465616D PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB2 SWAP1 DUP3 ADD MSTORE PUSH32 0x546865206164647265737320796F752061726520747279696E6720746F207365 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E642043617264696E616C20546F6B656E7320746F20686173206265656E2062 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x6C61636B6C69737465642066726F6D2074726164696E67207468652043617264 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x696E616C20546F6B656E2E20496620796F75207468696E6B2074686973206973 PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0x20616E206572726F722C20706C6561736520636F6E7461637420746865204361 PUSH1 0xC0 DUP3 ADD MSTORE PUSH18 0x393234B730B6102437BAB9B2903A32B0B697 PUSH1 0x71 SHL PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x220F JUMPI PUSH2 0x220F PUSH2 0x21DF JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2231 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2249 JUMPI PUSH2 0x2249 PUSH2 0x21DF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x2260 PUSH2 0x21DF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBE1 DUP2 PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x231D JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x22F8 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 LOG1 0xC DUP10 SWAP8 SWAP2 0x5F DUP8 PUSH5 0x9072C1352C PUSH2 0xC45 0xCC SWAP3 BYTE SWAP11 PUSH3 0xE70A56 MSTORE PUSH15 0xF0A03F07D564736F6C634300080800 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "8": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "LT",
      "path": "20"
    },
    "9": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x260"
    },
    "12": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "16": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "SHR",
      "path": "20"
    },
    "19": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "20": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7C13EFD4"
    },
    "25": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "GT",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x144"
    },
    "29": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "30": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "31": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDA6FA55C"
    },
    "36": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "GT",
      "path": "20"
    },
    "37": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB6"
    },
    "40": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "41": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "42": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xECC63390"
    },
    "47": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "GT",
      "path": "20"
    },
    "48": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "52": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "53": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xECC63390"
    },
    "58": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "59": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x70D"
    },
    "62": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "63": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "64": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "70": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x72D"
    },
    "73": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "74": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "75": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF46ECCC4"
    },
    "80": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "81": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x74D"
    },
    "84": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "85": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "86": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF9F92BE4"
    },
    "91": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "92": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x77D"
    },
    "95": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "96": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "97": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFC2EB889"
    },
    "102": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "103": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7AD"
    },
    "106": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "107": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "108": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFD092BC5"
    },
    "113": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "114": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7CD"
    },
    "117": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "118": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "121": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "REVERT",
      "path": "20"
    },
    "122": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "123": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "124": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDA6FA55C"
    },
    "129": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "130": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x641"
    },
    "133": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "134": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "135": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDBE66CA0"
    },
    "140": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "141": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x657"
    },
    "144": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "145": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "146": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDD62ED3E"
    },
    "151": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "152": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x687"
    },
    "155": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "156": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "157": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDE77BFD9"
    },
    "162": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "163": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6CD"
    },
    "166": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "167": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "168": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xEB08AA3B"
    },
    "173": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "174": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6ED"
    },
    "177": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "178": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "181": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "REVERT",
      "path": "20"
    },
    "182": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "183": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "184": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA457C2D7"
    },
    "189": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "GT",
      "path": "20"
    },
    "190": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "194": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "195": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA457C2D7"
    },
    "200": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "201": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x581"
    },
    "204": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "205": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "206": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA9059CBB"
    },
    "211": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "212": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A1"
    },
    "215": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "216": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "217": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xBBEAA1F8"
    },
    "222": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "223": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5C1"
    },
    "226": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "227": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "228": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC3D0CB20"
    },
    "233": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "234": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5E1"
    },
    "237": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "238": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "239": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC816841B"
    },
    "244": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "245": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x601"
    },
    "248": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "249": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "250": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD158272D"
    },
    "255": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "256": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x621"
    },
    "259": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "260": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "263": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "REVERT",
      "path": "20"
    },
    "264": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "265": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "266": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7C13EFD4"
    },
    "271": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "272": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4F9"
    },
    "275": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "276": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "277": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "282": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "283": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x50E"
    },
    "286": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "287": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "288": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8EB83F25"
    },
    "293": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "294": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x52C"
    },
    "297": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "298": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "299": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95D89B41"
    },
    "304": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "305": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x54C"
    },
    "308": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "309": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "310": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9DC29FAC"
    },
    "315": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "316": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x561"
    },
    "319": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "320": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "322": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "323": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "REVERT",
      "path": "20"
    },
    "324": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "325": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "326": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x43620E71"
    },
    "331": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "GT",
      "path": "20"
    },
    "332": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DD"
    },
    "335": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "336": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "337": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5B81C1A4"
    },
    "342": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "GT",
      "path": "20"
    },
    "343": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A1"
    },
    "346": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "347": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "348": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5B81C1A4"
    },
    "353": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "354": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x451"
    },
    "357": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "358": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "359": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x61EB048A"
    },
    "364": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "365": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x471"
    },
    "368": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "369": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "370": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6C9230DB"
    },
    "375": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "376": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x491"
    },
    "379": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "380": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "381": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "386": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "387": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4A4"
    },
    "390": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "391": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "392": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x715018A6"
    },
    "397": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "398": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4C4"
    },
    "401": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "402": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "403": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x78C1D245"
    },
    "408": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "409": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4D9"
    },
    "412": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "413": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "415": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "416": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "REVERT",
      "path": "20"
    },
    "417": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "418": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "419": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x43620E71"
    },
    "424": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "425": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C5"
    },
    "428": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "429": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "430": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4F481683"
    },
    "435": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "436": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E5"
    },
    "439": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "440": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "441": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4FCD1285"
    },
    "446": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "447": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FB"
    },
    "450": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "451": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "452": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x560493B3"
    },
    "457": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "458": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x411"
    },
    "461": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "462": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "463": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5B3C1DA1"
    },
    "468": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "469": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x431"
    },
    "472": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "473": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "475": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "476": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "REVERT",
      "path": "20"
    },
    "477": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "478": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "479": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x313CE567"
    },
    "484": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "GT",
      "path": "20"
    },
    "485": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x224"
    },
    "488": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "489": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "490": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x313CE567"
    },
    "495": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "496": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x33E"
    },
    "499": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "500": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "501": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x32A2C5D0"
    },
    "506": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "507": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35A"
    },
    "510": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "511": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "512": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x39509351"
    },
    "517": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "518": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x36D"
    },
    "521": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "522": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "523": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x404E8A82"
    },
    "528": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "529": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38D"
    },
    "532": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "533": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "534": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x40C10F19"
    },
    "539": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "540": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A3"
    },
    "543": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "544": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "546": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "547": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "REVERT",
      "path": "20"
    },
    "548": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "549": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "550": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6FDDE03"
    },
    "555": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "556": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26C"
    },
    "559": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "560": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "561": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "566": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "567": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x297"
    },
    "570": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "571": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "572": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18160DDD"
    },
    "577": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "578": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C7"
    },
    "581": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "582": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "583": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x20CA3C7F"
    },
    "588": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "589": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E6"
    },
    "592": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "593": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "594": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "599": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "EQ",
      "path": "20"
    },
    "600": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31E"
    },
    "603": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "604": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "606": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "607": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "REVERT",
      "path": "20"
    },
    "608": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "609": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "610": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x267"
    },
    "613": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "614": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "STOP",
      "path": "20"
    },
    "615": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "616": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "618": {
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "DUP1",
      "path": "20"
    },
    "619": {
      "first_revert": true,
      "fn": null,
      "offset": [
        318,
        17378
      ],
      "op": "REVERT",
      "path": "20"
    },
    "620": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "621": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "622": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "623": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "624": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "627": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "628": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "630": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "631": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "REVERT",
      "path": "2"
    },
    "632": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "633": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "POP",
      "path": "2"
    },
    "634": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281"
    },
    "637": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7ED"
    },
    "640": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "641": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "642": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "644": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "645": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E"
    },
    "648": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "649": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "650": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E53"
    },
    "653": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "654": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "655": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "657": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "658": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "659": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "660": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SUB",
      "path": "2"
    },
    "661": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "662": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "RETURN",
      "path": "2"
    },
    "663": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "664": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "665": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "666": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "667": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A3"
    },
    "670": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "671": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "673": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "674": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "REVERT",
      "path": "2"
    },
    "675": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "676": {
      "op": "POP"
    },
    "677": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B7"
    },
    "680": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B2"
    },
    "683": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "684": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "686": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EBD"
    },
    "689": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "690": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "691": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87F"
    },
    "694": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "695": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "696": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "698": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "699": {
      "op": "SWAP1"
    },
    "700": {
      "op": "ISZERO"
    },
    "701": {
      "op": "ISZERO"
    },
    "702": {
      "op": "DUP2"
    },
    "703": {
      "op": "MSTORE"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "706": {
      "op": "ADD"
    },
    "707": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E"
    },
    "710": {
      "op": "JUMP"
    },
    "711": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "712": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "713": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "714": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "715": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D3"
    },
    "718": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "719": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "721": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "722": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "REVERT",
      "path": "2"
    },
    "723": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x2"
    },
    "727": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "728": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "729": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "731": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "732": {
      "op": "SWAP1"
    },
    "733": {
      "op": "DUP2"
    },
    "734": {
      "op": "MSTORE"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "737": {
      "op": "ADD"
    },
    "738": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E"
    },
    "741": {
      "op": "JUMP"
    },
    "742": {
      "offset": [
        1681,
        1716
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "743": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "744": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "745": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "746": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F2"
    },
    "749": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "750": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "752": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "753": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "REVERT",
      "path": "20"
    },
    "754": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "755": {
      "op": "POP"
    },
    "756": {
      "offset": [
        1681,
        1716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "758": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "759": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x306"
    },
    "762": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "op": "SUB"
    },
    "771": {
      "offset": [
        1681,
        1716
      ],
      "op": "AND",
      "path": "20"
    },
    "772": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "773": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "JUMP",
      "path": "20"
    },
    "774": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "775": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "777": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1681,
        1716
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "op": "SUB"
    },
    "786": {
      "op": "SWAP1"
    },
    "787": {
      "op": "SWAP2"
    },
    "788": {
      "op": "AND"
    },
    "789": {
      "op": "DUP2"
    },
    "790": {
      "op": "MSTORE"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "793": {
      "op": "ADD"
    },
    "794": {
      "offset": [
        1681,
        1716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28E"
    },
    "797": {
      "op": "JUMP"
    },
    "798": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "799": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "800": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "DUP1",
      "path": "20"
    },
    "801": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "802": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x32A"
    },
    "805": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "806": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "808": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "DUP1",
      "path": "20"
    },
    "809": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "REVERT",
      "path": "20"
    },
    "810": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "811": {
      "op": "POP"
    },
    "812": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "815": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x339"
    },
    "818": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "819": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "821": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EE9"
    },
    "824": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        8872,
        11570
      ],
      "op": "JUMP",
      "path": "20"
    },
    "825": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "826": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x899"
    },
    "829": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        8872,
        11570
      ],
      "op": "JUMP",
      "path": "20"
    },
    "830": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "831": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "832": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "833": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "834": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34A"
    },
    "837": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "838": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "840": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "841": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "REVERT",
      "path": "2"
    },
    "842": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "846": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "847": {
      "fn": "ERC20.decimals",
      "offset": [
        3175,
        3177
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "849": {
      "op": "DUP2"
    },
    "850": {
      "op": "MSTORE"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "853": {
      "op": "ADD"
    },
    "854": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E"
    },
    "857": {
      "op": "JUMP"
    },
    "858": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "859": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "860": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "DUP1",
      "path": "20"
    },
    "861": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "862": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x366"
    },
    "865": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "866": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "868": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "DUP1",
      "path": "20"
    },
    "869": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "REVERT",
      "path": "20"
    },
    "870": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "871": {
      "op": "POP"
    },
    "872": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4815,
        4819
      ],
      "op": "ADDRESS",
      "path": "20",
      "statement": 2
    },
    "873": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x306"
    },
    "876": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        4731,
        4827
      ],
      "op": "JUMP",
      "path": "20"
    },
    "877": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "878": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "879": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "880": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "881": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379"
    },
    "884": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "885": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "887": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "888": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "REVERT",
      "path": "2"
    },
    "889": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "890": {
      "op": "POP"
    },
    "891": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B7"
    },
    "894": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x388"
    },
    "897": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "898": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "900": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EBD"
    },
    "903": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "2"
    },
    "904": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "905": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE8"
    },
    "908": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "2"
    },
    "909": {
      "offset": [
        2308,
        2350
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "910": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "911": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "DUP1",
      "path": "20"
    },
    "912": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "913": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x399"
    },
    "916": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "917": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "919": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "DUP1",
      "path": "20"
    },
    "920": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "REVERT",
      "path": "20"
    },
    "921": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "922": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "POP",
      "path": "20"
    },
    "923": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D8"
    },
    "926": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "928": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "929": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "DUP2",
      "path": "20"
    },
    "930": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2308,
        2350
      ],
      "op": "JUMP",
      "path": "20"
    },
    "931": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "932": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "933": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "DUP1",
      "path": "20"
    },
    "934": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "935": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AF"
    },
    "938": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "939": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "941": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "DUP1",
      "path": "20"
    },
    "942": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "REVERT",
      "path": "20"
    },
    "943": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "948": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3BE"
    },
    "951": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "952": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "954": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EBD"
    },
    "957": {
      "fn": "CardinalToken.mint",
      "jump": "i",
      "offset": [
        16761,
        16939
      ],
      "op": "JUMP",
      "path": "20"
    },
    "958": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "959": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC27"
    },
    "962": {
      "fn": "CardinalToken.mint",
      "jump": "i",
      "offset": [
        16761,
        16939
      ],
      "op": "JUMP",
      "path": "20"
    },
    "963": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "964": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "STOP",
      "path": "20"
    },
    "965": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "966": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "967": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "DUP1",
      "path": "20"
    },
    "968": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "969": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D1"
    },
    "972": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "973": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "975": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "DUP1",
      "path": "20"
    },
    "976": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "REVERT",
      "path": "20"
    },
    "977": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "982": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E0"
    },
    "985": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "986": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "988": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F3F"
    },
    "991": {
      "fn": "CardinalToken.updateMinter",
      "jump": "i",
      "offset": [
        16428,
        16537
      ],
      "op": "JUMP",
      "path": "20"
    },
    "992": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "993": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCAC"
    },
    "996": {
      "fn": "CardinalToken.updateMinter",
      "jump": "i",
      "offset": [
        16428,
        16537
      ],
      "op": "JUMP",
      "path": "20"
    },
    "997": {
      "offset": [
        1780,
        1823
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "998": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "999": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1000": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1001": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F1"
    },
    "1004": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1005": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1007": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1008": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1009": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1010": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "POP",
      "path": "20"
    },
    "1011": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D8"
    },
    "1014": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "1016": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1017": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1018": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1780,
        1823
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1019": {
      "offset": [
        1982,
        2020
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1020": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1021": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1022": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1023": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x407"
    },
    "1026": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1027": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1029": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1030": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1031": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1032": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "POP",
      "path": "20"
    },
    "1033": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D8"
    },
    "1036": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "1038": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1039": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1040": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1982,
        2020
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1041": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1042": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1043": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1044": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1045": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41D"
    },
    "1048": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1049": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1051": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1052": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1053": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1054": {
      "op": "POP"
    },
    "1055": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "1058": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42C"
    },
    "1061": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1062": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1064": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F74"
    },
    "1067": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "jump": "i",
      "offset": [
        14027,
        14147
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1068": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1069": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD01"
    },
    "1072": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "jump": "i",
      "offset": [
        14027,
        14147
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1073": {
      "offset": [
        908,
        940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1074": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1075": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1076": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1077": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x43D"
    },
    "1080": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1081": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1083": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1084": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1085": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1086": {
      "op": "POP"
    },
    "1087": {
      "offset": [
        908,
        940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "1089": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1090": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x306"
    },
    "1093": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1100": {
      "op": "SHL"
    },
    "1101": {
      "op": "SUB"
    },
    "1102": {
      "offset": [
        908,
        940
      ],
      "op": "AND",
      "path": "20"
    },
    "1103": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1104": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        908,
        940
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1105": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1106": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1107": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1108": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1109": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x45D"
    },
    "1112": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1113": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1115": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1116": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1117": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1118": {
      "op": "POP"
    },
    "1119": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "1122": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x46C"
    },
    "1125": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1126": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1128": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F74"
    },
    "1131": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "jump": "i",
      "offset": [
        15312,
        15648
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1132": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1133": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD30"
    },
    "1136": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "jump": "i",
      "offset": [
        15312,
        15648
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1137": {
      "offset": [
        1559,
        1604
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1138": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1139": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1140": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1141": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x47D"
    },
    "1144": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1145": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1147": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1148": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1149": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1150": {
      "op": "POP"
    },
    "1151": {
      "offset": [
        1559,
        1604
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE"
    },
    "1153": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1154": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x306"
    },
    "1157": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1164": {
      "op": "SHL"
    },
    "1165": {
      "op": "SUB"
    },
    "1166": {
      "offset": [
        1559,
        1604
      ],
      "op": "AND",
      "path": "20"
    },
    "1167": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1168": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1559,
        1604
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1169": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1170": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1171": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1172": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1173": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x49D"
    },
    "1176": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1177": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1179": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1180": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1181": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5292,
        5307
      ],
      "op": "TIMESTAMP",
      "path": "20",
      "statement": 3
    },
    "1184": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D8"
    },
    "1187": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5214,
        5314
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1188": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1189": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1190": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1191": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1192": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B0"
    },
    "1195": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1196": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1198": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1199": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1200": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1201": {
      "op": "POP"
    },
    "1202": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D8"
    },
    "1205": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BF"
    },
    "1208": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1209": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1211": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F8D"
    },
    "1214": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1215": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1216": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDFA"
    },
    "1219": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1220": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1221": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1222": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1223": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1224": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D0"
    },
    "1227": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1228": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1230": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1231": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1232": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1233": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1234": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C3"
    },
    "1237": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE15"
    },
    "1240": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1241": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1242": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1243": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1244": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1245": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4E5"
    },
    "1248": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1249": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1251": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1252": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1253": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1254": {
      "op": "POP"
    },
    "1255": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "1258": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4F4"
    },
    "1261": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1262": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1264": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F8D"
    },
    "1267": {
      "fn": "CardinalToken.excludeUserFromFees",
      "jump": "i",
      "offset": [
        4962,
        5068
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1268": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1269": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE4B"
    },
    "1272": {
      "fn": "CardinalToken.excludeUserFromFees",
      "jump": "i",
      "offset": [
        4962,
        5068
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1273": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1274": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1275": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1276": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1277": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x505"
    },
    "1280": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1281": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1283": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1284": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1285": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1286": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "POP",
      "path": "20"
    },
    "1287": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "1290": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE99"
    },
    "1293": {
      "fn": "CardinalToken.disperseFeesManually",
      "jump": "i",
      "offset": [
        12763,
        12930
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1294": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1295": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1296": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1297": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1298": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51A"
    },
    "1301": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1302": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1304": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1305": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1306": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1307": {
      "op": "POP"
    },
    "1308": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x5"
    },
    "1310": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1320": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306"
    },
    "1323": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1324": {
      "offset": [
        1128,
        1165
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1325": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1326": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1327": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1328": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x538"
    },
    "1331": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1332": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1334": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1335": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1336": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1337": {
      "op": "POP"
    },
    "1338": {
      "offset": [
        1128,
        1165
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1340": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1341": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x306"
    },
    "1344": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1351": {
      "op": "SHL"
    },
    "1352": {
      "op": "SUB"
    },
    "1353": {
      "offset": [
        1128,
        1165
      ],
      "op": "AND",
      "path": "20"
    },
    "1354": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1355": {
      "fn": "Ownable.owner",
      "offset": [
        1128,
        1165
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1356": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1357": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1358": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1359": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1360": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "1363": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1364": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1366": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1367": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1368": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1369": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "POP",
      "path": "2"
    },
    "1370": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281"
    },
    "1373": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xED0"
    },
    "1376": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1377": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1378": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1379": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1380": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1381": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x56D"
    },
    "1384": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1385": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1387": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1388": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1389": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1390": {
      "op": "POP"
    },
    "1391": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "1394": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x57C"
    },
    "1397": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1398": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1400": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EBD"
    },
    "1403": {
      "fn": "CardinalToken.burn",
      "jump": "i",
      "offset": [
        17198,
        17376
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1404": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1405": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xEDF"
    },
    "1408": {
      "fn": "CardinalToken.burn",
      "jump": "i",
      "offset": [
        17198,
        17376
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1409": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1410": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1411": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1412": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1413": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58D"
    },
    "1416": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1417": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1419": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1420": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1421": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1422": {
      "op": "POP"
    },
    "1423": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B7"
    },
    "1426": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59C"
    },
    "1429": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1430": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1432": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EBD"
    },
    "1435": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1436": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1437": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF60"
    },
    "1440": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1441": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1442": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1443": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1444": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1445": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5AD"
    },
    "1448": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1449": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1451": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1452": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1453": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "1458": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5BC"
    },
    "1461": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1462": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1464": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EBD"
    },
    "1467": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        5842,
        8538
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1468": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1469": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFFD"
    },
    "1472": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        5842,
        8538
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1473": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1474": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1475": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1476": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1477": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5CD"
    },
    "1480": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1481": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1483": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1484": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1485": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1486": {
      "op": "POP"
    },
    "1487": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "1490": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5DC"
    },
    "1493": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1494": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1496": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F8D"
    },
    "1499": {
      "fn": "CardinalToken.includeUsersInFees",
      "jump": "i",
      "offset": [
        5468,
        5574
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1500": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1501": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12EF"
    },
    "1504": {
      "fn": "CardinalToken.includeUsersInFees",
      "jump": "i",
      "offset": [
        5468,
        5574
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1505": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1506": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1507": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1508": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1509": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5ED"
    },
    "1512": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1513": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1515": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1516": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1517": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1518": {
      "op": "POP"
    },
    "1519": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "1522": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5FC"
    },
    "1525": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1526": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1528": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1FAA"
    },
    "1531": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        13298,
        13765
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1532": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1533": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x133A"
    },
    "1536": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        13298,
        13765
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1537": {
      "offset": [
        2166,
        2192
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1538": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1539": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1540": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1541": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x60D"
    },
    "1544": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1545": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1547": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1548": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1549": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1550": {
      "op": "POP"
    },
    "1551": {
      "offset": [
        2166,
        2192
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "1553": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1554": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x306"
    },
    "1557": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1564": {
      "op": "SHL"
    },
    "1565": {
      "op": "SUB"
    },
    "1566": {
      "offset": [
        2166,
        2192
      ],
      "op": "AND",
      "path": "20"
    },
    "1567": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1568": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        2166,
        2192
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1569": {
      "offset": [
        1448,
        1493
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1570": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1571": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1572": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1573": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x62D"
    },
    "1576": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1577": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1579": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1580": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1581": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1582": {
      "op": "POP"
    },
    "1583": {
      "offset": [
        1448,
        1493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "1585": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1586": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x306"
    },
    "1589": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "op": "SUB"
    },
    "1598": {
      "offset": [
        1448,
        1493
      ],
      "op": "AND",
      "path": "20"
    },
    "1599": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1600": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1448,
        1493
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1601": {
      "offset": [
        1881,
        1919
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1602": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1603": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1604": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1605": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x64D"
    },
    "1608": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1609": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1611": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1612": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1613": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1614": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "POP",
      "path": "20"
    },
    "1615": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D8"
    },
    "1618": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "1620": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1621": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1622": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        1881,
        1919
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1623": {
      "offset": [
        502,
        551
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1624": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1625": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1626": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1627": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x663"
    },
    "1630": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1631": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1633": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1634": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1635": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1636": {
      "op": "POP"
    },
    "1637": {
      "offset": [
        502,
        551
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "1640": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x672"
    },
    "1643": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1644": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1646": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F8D"
    },
    "1649": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        502,
        551
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1650": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1651": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "1653": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1655": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1656": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1658": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1659": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1660": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1661": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1663": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1664": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1665": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1666": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1668": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "AND",
      "path": "20"
    },
    "1669": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1670": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        502,
        551
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1671": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1672": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1673": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1674": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1675": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x693"
    },
    "1678": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1679": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1681": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1682": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1683": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1684": {
      "op": "POP"
    },
    "1685": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D8"
    },
    "1688": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A2"
    },
    "1691": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1692": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1694": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FCD"
    },
    "1697": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1698": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1705": {
      "op": "SHL"
    },
    "1706": {
      "op": "SUB"
    },
    "1707": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 5
    },
    "1708": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1709": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "2"
    },
    "1710": {
      "fn": "ERC20.allowance",
      "offset": [
        4065,
        4072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1712": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1713": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1714": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1715": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1717": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1719": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1720": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1721": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1722": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1724": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1725": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1726": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1727": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1728": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1729": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1730": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "2"
    },
    "1731": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1732": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1733": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1734": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1735": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1736": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1737": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1738": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1739": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1740": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1741": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1742": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1743": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1744": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1745": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6D9"
    },
    "1748": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1749": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1751": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1752": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1753": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1754": {
      "op": "POP"
    },
    "1755": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "1758": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6E8"
    },
    "1761": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1762": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1764": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F74"
    },
    "1767": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "jump": "i",
      "offset": [
        14749,
        15126
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1768": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1769": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x139F"
    },
    "1772": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "jump": "i",
      "offset": [
        14749,
        15126
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1773": {
      "offset": [
        1227,
        1256
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1774": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1775": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1776": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1777": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6F9"
    },
    "1780": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1781": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1783": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1784": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1785": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "offset": [
        1227,
        1256
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1789": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1790": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x306"
    },
    "1793": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1800": {
      "op": "SHL"
    },
    "1801": {
      "op": "SUB"
    },
    "1802": {
      "offset": [
        1227,
        1256
      ],
      "op": "AND",
      "path": "20"
    },
    "1803": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1804": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1227,
        1256
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1805": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1806": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1807": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1808": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1809": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "1812": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1813": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1815": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1816": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1817": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "1822": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x728"
    },
    "1825": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1826": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1828": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F74"
    },
    "1831": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "jump": "i",
      "offset": [
        15834,
        16170
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1832": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1833": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1473"
    },
    "1836": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "jump": "i",
      "offset": [
        15834,
        16170
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1838": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x739"
    },
    "1844": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1847": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1848": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1849": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1850": {
      "op": "POP"
    },
    "1851": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C3"
    },
    "1854": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x748"
    },
    "1857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F8D"
    },
    "1863": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1865": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153E"
    },
    "1868": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1869": {
      "offset": [
        801,
        841
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1871": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x759"
    },
    "1876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1879": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1880": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1881": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1882": {
      "op": "POP"
    },
    "1883": {
      "offset": [
        801,
        841
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "1886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x768"
    },
    "1889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F8D"
    },
    "1895": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        801,
        841
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1897": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1899": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1904": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1906": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "AND",
      "path": "20"
    },
    "1915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        801,
        841
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1917": {
      "offset": [
        669,
        711
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1920": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x789"
    },
    "1924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1930": {
      "op": "POP"
    },
    "1931": {
      "offset": [
        669,
        711
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "1934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x798"
    },
    "1937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1938": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1940": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F8D"
    },
    "1943": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        669,
        711
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1945": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "1947": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1949": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1952": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1953": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1954": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1955": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1957": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1958": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1959": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1960": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1962": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "AND",
      "path": "20"
    },
    "1963": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1964": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        669,
        711
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1965": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1966": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1967": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1968": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1969": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7B9"
    },
    "1972": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1973": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1975": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1976": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1977": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C3"
    },
    "1982": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7C8"
    },
    "1985": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1986": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1988": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F3F"
    },
    "1991": {
      "fn": "CardinalToken.updateBlackList",
      "jump": "i",
      "offset": [
        14426,
        14546
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1992": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1993": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15D6"
    },
    "1996": {
      "fn": "CardinalToken.updateBlackList",
      "jump": "i",
      "offset": [
        14426,
        14546
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1997": {
      "offset": [
        1331,
        1381
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1998": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1999": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2000": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2001": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7D9"
    },
    "2004": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2005": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2007": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2008": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2009": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2010": {
      "op": "POP"
    },
    "2011": {
      "offset": [
        1331,
        1381
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "2013": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2014": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x306"
    },
    "2017": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2024": {
      "op": "SHL"
    },
    "2025": {
      "op": "SUB"
    },
    "2026": {
      "offset": [
        1331,
        1381
      ],
      "op": "AND",
      "path": "20"
    },
    "2027": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2028": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1331,
        1381
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2029": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2030": {
      "fn": "ERC20.name",
      "offset": [
        2210,
        2223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2032": {
      "fn": "ERC20.name",
      "offset": [
        2242,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x3"
    },
    "2034": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2035": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2036": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7FC"
    },
    "2039": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2040": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2006"
    },
    "2043": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2044": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2045": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2046": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2048": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2049": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2051": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2052": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2053": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "2"
    },
    "2054": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "2"
    },
    "2055": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2057": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2058": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2060": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2061": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2062": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2063": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2064": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2066": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2067": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2068": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2069": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2070": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2071": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2072": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2073": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2074": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2076": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2077": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2078": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2079": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2080": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x828"
    },
    "2083": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2084": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2006"
    },
    "2087": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2088": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2089": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2090": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2091": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x875"
    },
    "2094": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2095": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2096": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2098": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "LT",
      "path": "2"
    },
    "2099": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84A"
    },
    "2102": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2103": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2106": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2107": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2108": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2109": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "2"
    },
    "2110": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "2"
    },
    "2111": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2112": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2113": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2114": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2116": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2117": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2118": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x875"
    },
    "2121": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2122": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2123": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2124": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2125": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2126": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2127": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2129": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2130": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2132": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2134": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2135": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2136": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2137": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2138": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2139": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2140": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2141": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2142": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2144": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2145": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2146": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2148": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2149": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2150": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2151": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "GT",
      "path": "2"
    },
    "2152": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x858"
    },
    "2155": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2156": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2157": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2158": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SUB",
      "path": "2"
    },
    "2159": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2161": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "AND",
      "path": "2"
    },
    "2162": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2163": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2164": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2165": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2166": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2167": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2168": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2169": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2170": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2171": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2172": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2173": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2174": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2175": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2176": {
      "fn": "ERC20.approve",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2178": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 7
    },
    "2179": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x88D"
    },
    "2182": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2183": {
      "fn": "ERC20.approve",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2184": {
      "fn": "ERC20.approve",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2185": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x162B"
    },
    "2188": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2189": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2190": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "2192": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2193": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "2"
    },
    "2194": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "2"
    },
    "2195": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2196": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2197": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2198": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "2"
    },
    "2199": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "2"
    },
    "2200": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2201": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2202": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2203": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8961,
        8965
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2205": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9057
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 10
    },
    "2206": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9057
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2207": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9057
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2208": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9043
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2210": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9057
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2212": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9057
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2213": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9057
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2215": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9057
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2216": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9057
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2217": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9057
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2218": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9057
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2220": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9034,
        9057
      ],
      "op": "AND",
      "path": "20"
    },
    "2221": {
      "branch": 95,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9033,
        9057
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2222": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8D2"
    },
    "2225": {
      "branch": 95,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2226": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2228": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2235": {
      "op": "SHL"
    },
    "2236": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2237": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2238": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2240": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "ADD",
      "path": "20"
    },
    "2241": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C9"
    },
    "2244": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2245": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2041"
    },
    "2248": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        9025,
        9191
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2249": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2250": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2252": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2253": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2254": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2255": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "SUB",
      "path": "20"
    },
    "2256": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2257": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "20"
    },
    "2258": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9025,
        9191
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2265": {
      "op": "SHL"
    },
    "2266": {
      "op": "SUB"
    },
    "2267": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "DUP5",
      "path": "20",
      "statement": 11
    },
    "2268": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "AND",
      "path": "20"
    },
    "2269": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2271": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2272": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2273": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2274": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2276": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2278": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2279": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2281": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2282": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2283": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2284": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2286": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9292,
        9307
      ],
      "op": "AND",
      "path": "20"
    },
    "2287": {
      "branch": 96,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9291,
        9307
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2288": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9283,
        9496
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9FA"
    },
    "2291": {
      "branch": 96,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9283,
        9496
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2292": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9283,
        9496
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2294": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9283,
        9496
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2301": {
      "op": "SHL"
    },
    "2302": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9283,
        9496
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2303": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9283,
        9496
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2306": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9283,
        9496
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2308": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9283,
        9496
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2309": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9283,
        9496
      ],
      "op": "ADD",
      "path": "20"
    },
    "2310": {
      "op": "MSTORE"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2315": {
      "op": "DUP3"
    },
    "2316": {
      "op": "ADD"
    },
    "2317": {
      "op": "MSTORE"
    },
    "2318": {
      "op": "PUSH32",
      "value": "0x546865206164647265737320796F7527726520747279696E6720746F20737065"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2353": {
      "op": "DUP3"
    },
    "2354": {
      "op": "ADD"
    },
    "2355": {
      "op": "MSTORE"
    },
    "2356": {
      "op": "PUSH32",
      "value": "0x6E64207468652043617264696E616C20546F6B656E732066726F6D2068617320"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2391": {
      "op": "DUP3"
    },
    "2392": {
      "op": "ADD"
    },
    "2393": {
      "op": "MSTORE"
    },
    "2394": {
      "op": "PUSH32",
      "value": "0x6265656E20626C61636B6C69737465642066726F6D2074726164696E67207468"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2429": {
      "op": "DUP3"
    },
    "2430": {
      "op": "ADD"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "op": "PUSH32",
      "value": "0x652043617264696E616C20546F6B656E2E20496620796F75207468696E6B2074"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2467": {
      "op": "DUP3"
    },
    "2468": {
      "op": "ADD"
    },
    "2469": {
      "op": "MSTORE"
    },
    "2470": {
      "op": "PUSH32",
      "value": "0x68697320697320616E206572726F722C20706C6561736520636F6E7461637420"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "2505": {
      "op": "DUP3"
    },
    "2506": {
      "op": "ADD"
    },
    "2507": {
      "op": "MSTORE"
    },
    "2508": {
      "op": "PUSH32",
      "value": "0x7468652043617264696E616C20486F757365207465616D2E0000000000000000"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2543": {
      "op": "DUP3"
    },
    "2544": {
      "op": "ADD"
    },
    "2545": {
      "op": "MSTORE"
    },
    "2546": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9283,
        9496
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C9"
    },
    "2553": {
      "op": "JUMP"
    },
    "2554": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9283,
        9496
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2561": {
      "op": "SHL"
    },
    "2562": {
      "op": "SUB"
    },
    "2563": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 12
    },
    "2564": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "AND",
      "path": "20"
    },
    "2565": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2567": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2568": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2569": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2570": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9575
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2572": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2574": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2575": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2577": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2578": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2579": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2580": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2582": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9566,
        9579
      ],
      "op": "AND",
      "path": "20"
    },
    "2583": {
      "branch": 97,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9565,
        9579
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2584": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA33"
    },
    "2587": {
      "branch": 97,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2588": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2590": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2591": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2597": {
      "op": "SHL"
    },
    "2598": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2599": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2600": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2602": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "ADD",
      "path": "20"
    },
    "2603": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C9"
    },
    "2606": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2607": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20F4"
    },
    "2610": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        9557,
        9762
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2611": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9557,
        9762
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2618": {
      "op": "SHL"
    },
    "2619": {
      "op": "SUB"
    },
    "2620": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2621": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "AND",
      "path": "20"
    },
    "2622": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2624": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2625": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2626": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2627": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9895
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2629": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2631": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2632": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2634": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2635": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2636": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2637": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2639": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "AND",
      "path": "20"
    },
    "2640": {
      "branch": 98,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9901
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2641": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9925
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA72"
    },
    "2644": {
      "branch": 98,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9925
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2645": {
      "op": "POP"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2652": {
      "op": "SHL"
    },
    "2653": {
      "op": "SUB"
    },
    "2654": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2655": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "AND",
      "path": "20"
    },
    "2656": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2658": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2659": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2660": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2661": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2663": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2665": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2666": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2668": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2669": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2670": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2671": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2673": {
      "branch": 99,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9905,
        9925
      ],
      "op": "AND",
      "path": "20"
    },
    "2674": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9925
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2675": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9959
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2676": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9959
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA8C"
    },
    "2679": {
      "branch": 99,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9959
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2682": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2684": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2685": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2686": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2687": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9945
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2689": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2691": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2692": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2694": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2695": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2696": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2697": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2699": {
      "branch": 100,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9929,
        9959
      ],
      "op": "AND",
      "path": "20"
    },
    "2700": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9879,
        9959
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2701": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9875,
        10095
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2702": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9875,
        10095
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAAF"
    },
    "2705": {
      "branch": 100,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9875,
        10095
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2706": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9975,
        10018
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 13,
      "value": "0xA9C"
    },
    "2709": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        9995
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2710": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2711": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10011,
        10017
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2712": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9975,
        9990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x174F"
    },
    "2715": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        9975,
        10018
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2716": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9975,
        10018
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2717": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10032,
        10059
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 14,
      "value": "0xAA7"
    },
    "2720": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10042,
        10046
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2721": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10048,
        10050
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2722": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10052,
        10058
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2723": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10032,
        10041
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17E1"
    },
    "2726": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10032,
        10059
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2727": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10032,
        10059
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2728": {
      "op": "POP"
    },
    "2729": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10080,
        10084
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 15,
      "value": "0x1"
    },
    "2731": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10073,
        10084
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBE1"
    },
    "2734": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10073,
        10084
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2735": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9875,
        10095
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2736": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10149,
        10174
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2738": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10215,
        10218
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2740": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10187,
        10211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "2742": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10187,
        10211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2743": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10178,
        10184
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2744": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10178,
        10211
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAC1"
    },
    "2747": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10178,
        10211
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2748": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10178,
        10211
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2749": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10178,
        10211
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21F5"
    },
    "2752": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10178,
        10211
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2753": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10178,
        10211
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2754": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10177,
        10218
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xACB"
    },
    "2757": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10177,
        10218
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2758": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10177,
        10218
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2759": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10177,
        10218
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2214"
    },
    "2762": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10177,
        10218
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2763": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10177,
        10218
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2764": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10149,
        10218
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2765": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10149,
        10218
      ],
      "op": "POP",
      "path": "20"
    },
    "2766": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10271,
        10291
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2768": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10327,
        10330
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2770": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10323
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "2772": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10323
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2773": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10295,
        10301
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2774": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10295,
        10323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xADF"
    },
    "2777": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10295,
        10323
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2778": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10295,
        10323
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2779": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10295,
        10323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21F5"
    },
    "2782": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10295,
        10323
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2783": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10295,
        10323
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2784": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10294,
        10330
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAE9"
    },
    "2787": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10294,
        10330
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2788": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10294,
        10330
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2789": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10294,
        10330
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2214"
    },
    "2792": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10294,
        10330
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2793": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10294,
        10330
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2794": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10271,
        10330
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2795": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10271,
        10330
      ],
      "op": "POP",
      "path": "20"
    },
    "2796": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10383,
        10403
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2798": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10439,
        10442
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2800": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10416,
        10435
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "2802": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10416,
        10435
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2803": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10407,
        10413
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2804": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10407,
        10435
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAFD"
    },
    "2807": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10407,
        10435
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2808": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10407,
        10435
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2809": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10407,
        10435
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21F5"
    },
    "2812": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10407,
        10435
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2813": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10407,
        10435
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2814": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10406,
        10442
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB07"
    },
    "2817": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10406,
        10442
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2818": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10406,
        10442
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2819": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10406,
        10442
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2214"
    },
    "2822": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10406,
        10442
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2823": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10406,
        10442
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2824": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10383,
        10442
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2825": {
      "op": "POP"
    },
    "2826": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10537,
        10556
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2828": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10559,
        10586
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB15"
    },
    "2831": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10383,
        10442
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2832": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10559,
        10571
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2833": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10559,
        10586
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2236"
    },
    "2836": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10559,
        10586
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2837": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10559,
        10586
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2838": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10537,
        10586
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2839": {
      "op": "POP"
    },
    "2840": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10680,
        10723
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 16,
      "value": "0xB22"
    },
    "2843": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10696,
        10700
      ],
      "op": "DUP9",
      "path": "20"
    },
    "2844": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2845": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10716,
        10722
      ],
      "op": "DUP9",
      "path": "20"
    },
    "2846": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10680,
        10695
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x174F"
    },
    "2849": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10680,
        10723
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2850": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10680,
        10723
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2851": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10749,
        10776
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 17,
      "value": "0xC"
    },
    "2853": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10749,
        10776
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2854": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10733,
        10796
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB3A"
    },
    "2857": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10733,
        10796
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2858": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10743,
        10747
      ],
      "op": "DUP10",
      "path": "20"
    },
    "2859": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10743,
        10747
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2866": {
      "op": "SHL"
    },
    "2867": {
      "op": "SUB"
    },
    "2868": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10749,
        10776
      ],
      "op": "AND",
      "path": "20"
    },
    "2869": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10778,
        10795
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2870": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10733,
        10742
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17E1"
    },
    "2873": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10733,
        10796
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2874": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10733,
        10796
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2875": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10806,
        10849
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 18,
      "value": "0xB45"
    },
    "2878": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10816,
        10820
      ],
      "op": "DUP9",
      "path": "20"
    },
    "2879": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10830,
        10834
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "2880": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10837,
        10848
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2881": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10806,
        10815
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17E1"
    },
    "2884": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10806,
        10849
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2885": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10806,
        10849
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2886": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10860,
        10896
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2888": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10899,
        10923
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB50"
    },
    "2891": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10917,
        10921
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "2892": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10899,
        10908
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDFA"
    },
    "2895": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10899,
        10923
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2896": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10899,
        10923
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2897": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10954,
        10965
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "2899": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10954,
        10965
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2900": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10860,
        10923
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2901": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10860,
        10923
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2902": {
      "op": "POP"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2909": {
      "op": "SHL"
    },
    "2910": {
      "op": "SUB"
    },
    "2911": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10954,
        10965
      ],
      "op": "AND",
      "path": "20"
    },
    "2912": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2919": {
      "op": "SHL"
    },
    "2920": {
      "op": "SUB"
    },
    "2921": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10938,
        10965
      ],
      "op": "AND",
      "path": "20"
    },
    "2922": {
      "branch": 101,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10938,
        10965
      ],
      "op": "EQ",
      "path": "20"
    },
    "2923": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10934,
        11361
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBB2"
    },
    "2926": {
      "branch": 101,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10934,
        11361
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2927": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11041,
        11061
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "2929": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11041,
        11061
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2930": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11026,
        11037
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "2932": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11026,
        11037
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2933": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11016,
        11038
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB86"
    },
    "2936": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11016,
        11038
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "op": "SUB"
    },
    "2945": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11026,
        11037
      ],
      "op": "AND",
      "path": "20"
    },
    "2946": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11016,
        11025
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDFA"
    },
    "2949": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11016,
        11038
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2950": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11016,
        11038
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2951": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11016,
        11061
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB90"
    },
    "2954": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11016,
        11061
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2955": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11016,
        11061
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2956": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11016,
        11061
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2214"
    },
    "2959": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11016,
        11061
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2960": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11016,
        11061
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2961": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10985,
        11013
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2962": {
      "branch": 102,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10985,
        11061
      ],
      "op": "GT",
      "path": "20"
    },
    "2963": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10981,
        11152
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2964": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10981,
        11152
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBA0"
    },
    "2967": {
      "branch": 102,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10981,
        11152
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2968": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11081,
        11137
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 19,
      "value": "0xBA0"
    },
    "2971": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11108,
        11136
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2972": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11081,
        11107
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19AF"
    },
    "2975": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11081,
        11137
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2976": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11081,
        11137
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2977": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11213,
        11234
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "2978": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11252,
        11276
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2979": {
      "branch": 103,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11252,
        11276
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2980": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11248,
        11351
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBB0"
    },
    "2983": {
      "branch": 103,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11248,
        11351
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2984": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11296,
        11336
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 20,
      "value": "0xBB0"
    },
    "2987": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11314,
        11335
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "2988": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11296,
        11313
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B18"
    },
    "2991": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11296,
        11336
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2992": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11296,
        11336
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2993": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10967,
        11361
      ],
      "op": "POP",
      "path": "20"
    },
    "2994": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10934,
        11361
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2995": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11432,
        11454
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2997": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11480,
        11497
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2998": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11457,
        11477
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBBF"
    },
    "3001": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11466,
        11477
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3002": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11457,
        11463
      ],
      "op": "DUP11",
      "path": "20"
    },
    "3003": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11457,
        11477
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x224E"
    },
    "3006": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11457,
        11477
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3007": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11457,
        11477
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3008": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11457,
        11497
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBC9"
    },
    "3011": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11457,
        11497
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3012": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11457,
        11497
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3013": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11457,
        11497
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x224E"
    },
    "3016": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11457,
        11497
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3017": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11457,
        11497
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3018": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11432,
        11497
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3019": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11432,
        11497
      ],
      "op": "POP",
      "path": "20"
    },
    "3020": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11507,
        11542
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 21,
      "value": "0xBD6"
    },
    "3023": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11517,
        11521
      ],
      "op": "DUP11",
      "path": "20"
    },
    "3024": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11523,
        11525
      ],
      "op": "DUP11",
      "path": "20"
    },
    "3025": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11527,
        11541
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3026": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11507,
        11516
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17E1"
    },
    "3029": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11507,
        11542
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3030": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11507,
        11542
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3031": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11559,
        11563
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 22,
      "value": "0x1"
    },
    "3033": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11552,
        11563
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "3034": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11552,
        11563
      ],
      "op": "POP",
      "path": "20"
    },
    "3035": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11552,
        11563
      ],
      "op": "POP",
      "path": "20"
    },
    "3036": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11552,
        11563
      ],
      "op": "POP",
      "path": "20"
    },
    "3037": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11552,
        11563
      ],
      "op": "POP",
      "path": "20"
    },
    "3038": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11552,
        11563
      ],
      "op": "POP",
      "path": "20"
    },
    "3039": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11552,
        11563
      ],
      "op": "POP",
      "path": "20"
    },
    "3040": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11552,
        11563
      ],
      "op": "POP",
      "path": "20"
    },
    "3041": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3042": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3043": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3044": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "POP",
      "path": "20"
    },
    "3045": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "POP",
      "path": "20"
    },
    "3046": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        8872,
        11570
      ],
      "op": "POP",
      "path": "20"
    },
    "3047": {
      "fn": "CardinalToken.transferFrom",
      "jump": "o",
      "offset": [
        8872,
        11570
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3048": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3049": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3050": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3052": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 23
    },
    "3053": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3054": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3055": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3057": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3059": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3060": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3061": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3062": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3064": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3065": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3066": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3073": {
      "op": "SHL"
    },
    "3074": {
      "op": "SUB"
    },
    "3075": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3076": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "AND",
      "path": "2"
    },
    "3077": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3078": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3079": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3080": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3081": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3082": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3083": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3084": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3085": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3086": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3087": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3088": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88D"
    },
    "3091": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3092": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3093": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3094": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3095": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3096": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC22"
    },
    "3099": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3100": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3101": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3102": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2236"
    },
    "3105": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3106": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3107": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x162B"
    },
    "3110": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6015,
        6081
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3111": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3112": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3113": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 24,
      "value": "0x0"
    },
    "3115": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3116": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3117": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3118": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16837
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "3120": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3122": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3123": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3125": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3126": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3127": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3128": {
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "3130": {
      "branch": 104,
      "fn": "CardinalToken.mint",
      "offset": [
        16830,
        16851
      ],
      "op": "AND",
      "path": "20"
    },
    "3131": {
      "fn": "CardinalToken.mint",
      "offset": [
        16822,
        16903
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC9E"
    },
    "3134": {
      "branch": 104,
      "fn": "CardinalToken.mint",
      "offset": [
        16822,
        16903
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3135": {
      "fn": "CardinalToken.mint",
      "offset": [
        16822,
        16903
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3137": {
      "fn": "CardinalToken.mint",
      "offset": [
        16822,
        16903
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3144": {
      "op": "SHL"
    },
    "3145": {
      "fn": "CardinalToken.mint",
      "offset": [
        16822,
        16903
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3146": {
      "fn": "CardinalToken.mint",
      "offset": [
        16822,
        16903
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3149": {
      "fn": "CardinalToken.mint",
      "offset": [
        16822,
        16903
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3151": {
      "fn": "CardinalToken.mint",
      "offset": [
        16822,
        16903
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3152": {
      "fn": "CardinalToken.mint",
      "offset": [
        16822,
        16903
      ],
      "op": "ADD",
      "path": "20"
    },
    "3153": {
      "op": "MSTORE"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3158": {
      "op": "DUP3"
    },
    "3159": {
      "op": "ADD"
    },
    "3160": {
      "op": "MSTORE"
    },
    "3161": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F7420617574686F72697A656420746F206D696E742043"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3196": {
      "op": "DUP3"
    },
    "3197": {
      "op": "ADD"
    },
    "3198": {
      "op": "MSTORE"
    },
    "3199": {
      "op": "PUSH15",
      "value": "0x30B93234B730B6102A37B5B2B73997"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "3217": {
      "op": "SHL"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3220": {
      "op": "DUP3"
    },
    "3221": {
      "op": "ADD"
    },
    "3222": {
      "op": "MSTORE"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3225": {
      "op": "ADD"
    },
    "3226": {
      "fn": "CardinalToken.mint",
      "offset": [
        16822,
        16903
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C9"
    },
    "3229": {
      "op": "JUMP"
    },
    "3230": {
      "fn": "CardinalToken.mint",
      "offset": [
        16822,
        16903
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3231": {
      "fn": "CardinalToken.mint",
      "offset": [
        16913,
        16932
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 25,
      "value": "0xCA8"
    },
    "3234": {
      "fn": "CardinalToken.mint",
      "offset": [
        16919,
        16923
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3235": {
      "fn": "CardinalToken.mint",
      "offset": [
        16925,
        16931
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3236": {
      "fn": "CardinalToken.mint",
      "offset": [
        16913,
        16918
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BD4"
    },
    "3239": {
      "fn": "CardinalToken.mint",
      "jump": "i",
      "offset": [
        16913,
        16932
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3240": {
      "fn": "CardinalToken.mint",
      "offset": [
        16913,
        16932
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3241": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "POP",
      "path": "20"
    },
    "3242": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "POP",
      "path": "20"
    },
    "3243": {
      "fn": "CardinalToken.mint",
      "jump": "o",
      "offset": [
        16761,
        16939
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3244": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16428,
        16537
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3245": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3247": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3254": {
      "op": "SHL"
    },
    "3255": {
      "op": "SUB"
    },
    "3256": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3257": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3258": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3259": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD6"
    },
    "3262": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3263": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3265": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3266": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3274": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3275": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3277": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3278": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "3281": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3282": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "3285": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3286": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3293": {
      "op": "SHL"
    },
    "3294": {
      "op": "SUB"
    },
    "3295": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 26
    },
    "3296": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3297": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3298": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "AND",
      "path": "20"
    },
    "3299": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3301": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3302": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3303": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3304": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16513
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "3306": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3308": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3309": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3311": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3312": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16519
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3313": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3314": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3317": {
      "op": "NOT"
    },
    "3318": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "AND",
      "path": "20"
    },
    "3319": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3320": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3321": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3322": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3323": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3324": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3325": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "OR",
      "path": "20"
    },
    "3326": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3327": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        16506,
        16530
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3328": {
      "fn": "CardinalToken.updateMinter",
      "jump": "o",
      "offset": [
        16428,
        16537
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3329": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14027,
        14147
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3330": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3332": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3339": {
      "op": "SHL"
    },
    "3340": {
      "op": "SUB"
    },
    "3341": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3342": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3343": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3344": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2B"
    },
    "3347": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3348": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3350": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3351": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3357": {
      "op": "SHL"
    },
    "3358": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3359": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3360": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3362": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3363": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "3366": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "3370": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3371": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3372": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14107,
        14127
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 27,
      "value": "0x15"
    },
    "3374": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        14107,
        14140
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3375": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "jump": "o",
      "offset": [
        14027,
        14147
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3376": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3377": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3379": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3386": {
      "op": "SHL"
    },
    "3387": {
      "op": "SUB"
    },
    "3388": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3389": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3390": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3391": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5A"
    },
    "3394": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3395": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3397": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3404": {
      "op": "SHL"
    },
    "3405": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3406": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3407": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3409": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3410": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "3413": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3414": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "3417": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3418": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3419": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15452,
        15453
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 28,
      "value": "0x5"
    },
    "3421": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15422,
        15448
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3422": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15422,
        15453
      ],
      "op": "GT",
      "path": "20"
    },
    "3423": {
      "branch": 105,
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15422,
        15453
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3424": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15414,
        15510
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDC8"
    },
    "3427": {
      "branch": 105,
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15414,
        15510
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3428": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15414,
        15510
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3430": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15414,
        15510
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3431": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3437": {
      "op": "SHL"
    },
    "3438": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15414,
        15510
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3439": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15414,
        15510
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3442": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15414,
        15510
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3444": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15414,
        15510
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3445": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15414,
        15510
      ],
      "op": "ADD",
      "path": "20"
    },
    "3446": {
      "op": "MSTORE"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3451": {
      "op": "DUP3"
    },
    "3452": {
      "op": "ADD"
    },
    "3453": {
      "op": "MSTORE"
    },
    "3454": {
      "op": "PUSH32",
      "value": "0x546865206D61726B6574696E67207472616E73616374696F6E20666565206361"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3489": {
      "op": "DUP3"
    },
    "3490": {
      "op": "ADD"
    },
    "3491": {
      "op": "MSTORE"
    },
    "3492": {
      "op": "PUSH20",
      "value": "0x3713BA1031329036B7B932903A3430B7101A9297"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3515": {
      "op": "SHL"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3518": {
      "op": "DUP3"
    },
    "3519": {
      "op": "ADD"
    },
    "3520": {
      "op": "MSTORE"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3523": {
      "op": "ADD"
    },
    "3524": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15414,
        15510
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C9"
    },
    "3527": {
      "op": "JUMP"
    },
    "3528": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15414,
        15510
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3529": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15520,
        15539
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 29,
      "value": "0x11"
    },
    "3531": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15520,
        15568
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3532": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15520,
        15568
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3533": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15520,
        15568
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3534": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15583,
        15641
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 30,
      "value": "0x40"
    },
    "3536": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15583,
        15641
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3537": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15542,
        15568
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3538": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15542,
        15568
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3539": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15583,
        15641
      ],
      "op": "PUSH31",
      "path": "20",
      "value": "0xEC95F51190FC49500BF726B0C72CB5C1B132F7BFE7685A33BDA07DEFE3A8A8"
    },
    "3571": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15583,
        15641
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3572": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15583,
        15641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3574": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15583,
        15641
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3575": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15583,
        15641
      ],
      "op": "LOG2",
      "path": "20"
    },
    "3576": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        15312,
        15648
      ],
      "op": "POP",
      "path": "20"
    },
    "3577": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "jump": "o",
      "offset": [
        15312,
        15648
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3578": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3585": {
      "op": "SHL"
    },
    "3586": {
      "op": "SUB"
    },
    "3587": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "2",
      "statement": 31
    },
    "3588": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3590": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3591": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3592": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3593": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3595": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3596": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3597": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3598": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3600": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3601": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3602": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3603": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3604": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3605": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3606": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3608": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3615": {
      "op": "SHL"
    },
    "3616": {
      "op": "SUB"
    },
    "3617": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3618": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3619": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3620": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3F"
    },
    "3623": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3624": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3626": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3627": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3633": {
      "op": "SHL"
    },
    "3634": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3635": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3636": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3638": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3639": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "3642": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "3646": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3648": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0xE49"
    },
    "3651": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3653": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CB3"
    },
    "3656": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3657": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3658": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3659": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        4962,
        5068
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3660": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3662": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3669": {
      "op": "SHL"
    },
    "3670": {
      "op": "SUB"
    },
    "3671": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3672": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3673": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3674": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE75"
    },
    "3677": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3678": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3680": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3681": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3687": {
      "op": "SHL"
    },
    "3688": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3689": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3690": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3692": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3693": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "3696": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3697": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "3700": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3701": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3708": {
      "op": "SHL"
    },
    "3709": {
      "op": "SUB"
    },
    "3710": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5054
      ],
      "op": "AND",
      "path": "20",
      "statement": 33
    },
    "3711": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5054
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3713": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5054
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3714": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5054
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3715": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5054
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3716": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5048
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "3718": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5054
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3720": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5054
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3721": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5054
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3723": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5054
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3724": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5054
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3725": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5061
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3726": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5061
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3729": {
      "op": "NOT"
    },
    "3730": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5061
      ],
      "op": "AND",
      "path": "20"
    },
    "3731": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5057,
        5061
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3733": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5061
      ],
      "op": "OR",
      "path": "20"
    },
    "3734": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5061
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3735": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5032,
        5061
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3736": {
      "fn": "CardinalToken.excludeUserFromFees",
      "jump": "o",
      "offset": [
        4962,
        5068
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3737": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12763,
        12930
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3738": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3740": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3747": {
      "op": "SHL"
    },
    "3748": {
      "op": "SUB"
    },
    "3749": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3750": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3751": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3752": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC3"
    },
    "3755": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3756": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3758": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3759": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3767": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3768": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3770": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3771": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "3774": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3775": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "3778": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3779": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3780": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12853,
        12874
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "3781": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12884,
        12923
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 34,
      "value": "0xECD"
    },
    "3784": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12853,
        12874
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3785": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12884,
        12901
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B18"
    },
    "3788": {
      "fn": "CardinalToken.disperseFeesManually",
      "jump": "i",
      "offset": [
        12884,
        12923
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3789": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12884,
        12923
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3790": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        12812,
        12930
      ],
      "op": "POP",
      "path": "20"
    },
    "3791": {
      "fn": "CardinalToken.disperseFeesManually",
      "jump": "o",
      "offset": [
        12763,
        12930
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3792": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3793": {
      "fn": "ERC20.symbol",
      "offset": [
        2423,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3795": {
      "fn": "ERC20.symbol",
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x4"
    },
    "3797": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3798": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3799": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7FC"
    },
    "3802": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3803": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2006"
    },
    "3806": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2448,
        2462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3807": {
      "fn": "CardinalToken.burn",
      "offset": [
        17198,
        17376
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3808": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3809": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 36,
      "value": "0x0"
    },
    "3811": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3812": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3813": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3814": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17274
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "3816": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3818": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3819": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3821": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3822": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3823": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3824": {
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "3826": {
      "branch": 106,
      "fn": "CardinalToken.burn",
      "offset": [
        17267,
        17288
      ],
      "op": "AND",
      "path": "20"
    },
    "3827": {
      "fn": "CardinalToken.burn",
      "offset": [
        17259,
        17340
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF56"
    },
    "3830": {
      "branch": 106,
      "fn": "CardinalToken.burn",
      "offset": [
        17259,
        17340
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3831": {
      "fn": "CardinalToken.burn",
      "offset": [
        17259,
        17340
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3833": {
      "fn": "CardinalToken.burn",
      "offset": [
        17259,
        17340
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3840": {
      "op": "SHL"
    },
    "3841": {
      "fn": "CardinalToken.burn",
      "offset": [
        17259,
        17340
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3842": {
      "fn": "CardinalToken.burn",
      "offset": [
        17259,
        17340
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3845": {
      "fn": "CardinalToken.burn",
      "offset": [
        17259,
        17340
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3847": {
      "fn": "CardinalToken.burn",
      "offset": [
        17259,
        17340
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3848": {
      "fn": "CardinalToken.burn",
      "offset": [
        17259,
        17340
      ],
      "op": "ADD",
      "path": "20"
    },
    "3849": {
      "op": "MSTORE"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3854": {
      "op": "DUP3"
    },
    "3855": {
      "op": "ADD"
    },
    "3856": {
      "op": "MSTORE"
    },
    "3857": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F7420617574686F72697A656420746F206275726E2043"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3892": {
      "op": "DUP3"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "MSTORE"
    },
    "3895": {
      "op": "PUSH15",
      "value": "0x30B93234B730B6102A37B5B2B73997"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "3913": {
      "op": "SHL"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3916": {
      "op": "DUP3"
    },
    "3917": {
      "op": "ADD"
    },
    "3918": {
      "op": "MSTORE"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3921": {
      "op": "ADD"
    },
    "3922": {
      "fn": "CardinalToken.burn",
      "offset": [
        17259,
        17340
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C9"
    },
    "3925": {
      "op": "JUMP"
    },
    "3926": {
      "fn": "CardinalToken.burn",
      "offset": [
        17259,
        17340
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3927": {
      "fn": "CardinalToken.burn",
      "offset": [
        17350,
        17369
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 37,
      "value": "0xCA8"
    },
    "3930": {
      "fn": "CardinalToken.burn",
      "offset": [
        17356,
        17360
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3931": {
      "fn": "CardinalToken.burn",
      "offset": [
        17362,
        17368
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3932": {
      "fn": "CardinalToken.burn",
      "offset": [
        17350,
        17355
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D05"
    },
    "3935": {
      "fn": "CardinalToken.burn",
      "jump": "i",
      "offset": [
        17350,
        17369
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3936": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3937": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3938": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3940": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3941": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3942": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3943": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3945": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3947": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3948": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3949": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3950": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3952": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3953": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3954": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3961": {
      "op": "SHL"
    },
    "3962": {
      "op": "SUB"
    },
    "3963": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3964": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "AND",
      "path": "2"
    },
    "3965": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3966": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3967": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3968": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3969": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3970": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3971": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3972": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3973": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3974": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3975": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3976": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 38
    },
    "3977": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3978": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "LT",
      "path": "2"
    },
    "3979": {
      "branch": 121,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3980": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFE5"
    },
    "3983": {
      "branch": 121,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3984": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3986": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3987": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3993": {
      "op": "SHL"
    },
    "3994": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3995": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3998": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4000": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4001": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "ADD",
      "path": "2"
    },
    "4002": {
      "op": "MSTORE"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4007": {
      "op": "DUP3"
    },
    "4008": {
      "op": "ADD"
    },
    "4009": {
      "op": "MSTORE"
    },
    "4010": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4045": {
      "op": "DUP3"
    },
    "4046": {
      "op": "ADD"
    },
    "4047": {
      "op": "MSTORE"
    },
    "4048": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4056": {
      "op": "SHL"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4059": {
      "op": "DUP3"
    },
    "4060": {
      "op": "ADD"
    },
    "4061": {
      "op": "MSTORE"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4064": {
      "op": "ADD"
    },
    "4065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C9"
    },
    "4068": {
      "op": "JUMP"
    },
    "4069": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4070": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 39,
      "value": "0xFF2"
    },
    "4073": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6935,
        6940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4074": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6942,
        6949
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4075": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6970,
        6985
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4076": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6967
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4077": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6985
      ],
      "op": "SUB",
      "path": "2"
    },
    "4078": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x162B"
    },
    "4081": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4082": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4083": {
      "op": "POP"
    },
    "4084": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7014,
        7018
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 40,
      "value": "0x1"
    },
    "4086": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7014,
        7018
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4087": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4088": {
      "op": "POP"
    },
    "4089": {
      "op": "POP"
    },
    "4090": {
      "op": "POP"
    },
    "4091": {
      "op": "POP"
    },
    "4092": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4093": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4094": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4095": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5920,
        5924
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4097": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6016
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 41
    },
    "4098": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6016
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4099": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6016
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4100": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6002
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "4102": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6016
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4104": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6016
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4105": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6016
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4107": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6016
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4108": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6016
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4109": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6016
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4110": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6016
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4112": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5993,
        6016
      ],
      "op": "AND",
      "path": "20"
    },
    "4113": {
      "branch": 107,
      "fn": "CardinalToken.transfer",
      "offset": [
        5992,
        6016
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4114": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x102D"
    },
    "4117": {
      "branch": 107,
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4118": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4120": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4121": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4127": {
      "op": "SHL"
    },
    "4128": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4129": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4130": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4132": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "ADD",
      "path": "20"
    },
    "4133": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C9"
    },
    "4136": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4137": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2041"
    },
    "4140": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        5984,
        6150
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4141": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5984,
        6150
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4148": {
      "op": "SHL"
    },
    "4149": {
      "op": "SUB"
    },
    "4150": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 42
    },
    "4151": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "AND",
      "path": "20"
    },
    "4152": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4154": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4155": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4156": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4157": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6229
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "4159": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4161": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4162": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4164": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4165": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4166": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4167": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4169": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6220,
        6240
      ],
      "op": "AND",
      "path": "20"
    },
    "4170": {
      "branch": 108,
      "fn": "CardinalToken.transfer",
      "offset": [
        6219,
        6240
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4171": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1066"
    },
    "4174": {
      "branch": 108,
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4175": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4177": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4178": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4184": {
      "op": "SHL"
    },
    "4185": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4186": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4187": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4189": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "ADD",
      "path": "20"
    },
    "4190": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C9"
    },
    "4193": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4194": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20F4"
    },
    "4197": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        6211,
        6423
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4198": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6211,
        6423
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4199": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6572,
        6583
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "4201": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6572,
        6583
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4208": {
      "op": "SHL"
    },
    "4209": {
      "op": "SUB"
    },
    "4210": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6572,
        6583
      ],
      "op": "AND",
      "path": "20"
    },
    "4211": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4218": {
      "op": "SHL"
    },
    "4219": {
      "op": "SUB"
    },
    "4220": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6583
      ],
      "op": "AND",
      "path": "20"
    },
    "4221": {
      "branch": 109,
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6583
      ],
      "op": "EQ",
      "path": "20"
    },
    "4222": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6618
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4223": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6618
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4224": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6618
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1099"
    },
    "4227": {
      "branch": 109,
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6618
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4228": {
      "op": "POP"
    },
    "4229": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4230": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4232": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4233": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4234": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4235": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6604
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4237": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4239": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4240": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4242": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4243": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4244": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4245": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4247": {
      "branch": 110,
      "fn": "CardinalToken.transfer",
      "offset": [
        6588,
        6618
      ],
      "op": "AND",
      "path": "20"
    },
    "4248": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6587,
        6618
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4249": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6618
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4250": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6650
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4251": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6650
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4252": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6650
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10BE"
    },
    "4255": {
      "branch": 110,
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6650
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4256": {
      "op": "POP"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4263": {
      "op": "SHL"
    },
    "4264": {
      "op": "SUB"
    },
    "4265": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4266": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "AND",
      "path": "20"
    },
    "4267": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4269": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4270": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4271": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4272": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4274": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4276": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4277": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4279": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4280": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4281": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4282": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4284": {
      "branch": 111,
      "fn": "CardinalToken.transfer",
      "offset": [
        6623,
        6650
      ],
      "op": "AND",
      "path": "20"
    },
    "4285": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6622,
        6650
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4286": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6556,
        6650
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4287": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6552,
        6825
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4288": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6552,
        6825
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1178"
    },
    "4291": {
      "branch": 111,
      "fn": "CardinalToken.transfer",
      "offset": [
        6552,
        6825
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4292": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6725,
        6728
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 43,
      "value": "0xA6"
    },
    "4294": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6709,
        6722
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10CE"
    },
    "4297": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4299": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4300": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4301": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4302": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6709,
        6722
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4303": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6709,
        6728
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10D8"
    },
    "4306": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6709,
        6728
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4307": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6709,
        6728
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4308": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6709,
        6728
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2214"
    },
    "4311": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        6709,
        6728
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4312": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6709,
        6728
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4313": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6698,
        6704
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4314": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6675,
        6695
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10E2"
    },
    "4317": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6685,
        6694
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4318": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6675,
        6684
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDFA"
    },
    "4321": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        6675,
        6695
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4322": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6675,
        6695
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4323": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6675,
        6704
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10EC"
    },
    "4326": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6675,
        6704
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4327": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6675,
        6704
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4328": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6675,
        6704
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2236"
    },
    "4331": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        6675,
        6704
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4332": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6675,
        6704
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4333": {
      "branch": 112,
      "fn": "CardinalToken.transfer",
      "offset": [
        6674,
        6729
      ],
      "op": "LT",
      "path": "20"
    },
    "4334": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6666,
        6814
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1178"
    },
    "4337": {
      "branch": 112,
      "fn": "CardinalToken.transfer",
      "offset": [
        6666,
        6814
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4338": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6666,
        6814
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4340": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6666,
        6814
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4341": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4347": {
      "op": "SHL"
    },
    "4348": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6666,
        6814
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4349": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6666,
        6814
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4352": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6666,
        6814
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4354": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6666,
        6814
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4355": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6666,
        6814
      ],
      "op": "ADD",
      "path": "20"
    },
    "4356": {
      "op": "MSTORE"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4361": {
      "op": "DUP3"
    },
    "4362": {
      "op": "ADD"
    },
    "4363": {
      "op": "MSTORE"
    },
    "4364": {
      "op": "PUSH32",
      "value": "0x596F752063616E27742068617665206D6F7265207468616E203225206F662074"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4399": {
      "op": "DUP3"
    },
    "4400": {
      "op": "ADD"
    },
    "4401": {
      "op": "MSTORE"
    },
    "4402": {
      "op": "PUSH32",
      "value": "0x686520746F74616C2043617264696E616C20546F6B656E20737570706C792061"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4437": {
      "op": "DUP3"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "op": "MSTORE"
    },
    "4440": {
      "op": "PUSH16",
      "value": "0x333A32B91030902222AC1039BBB0B817"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "4459": {
      "op": "SHL"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4462": {
      "op": "DUP3"
    },
    "4463": {
      "op": "ADD"
    },
    "4464": {
      "op": "MSTORE"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4467": {
      "op": "ADD"
    },
    "4468": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6666,
        6814
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C9"
    },
    "4471": {
      "op": "JUMP"
    },
    "4472": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6666,
        6814
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4473": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4474": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4476": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4477": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4478": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4479": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6946
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4481": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4483": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4484": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4486": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4487": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4488": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4489": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4491": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "AND",
      "path": "20"
    },
    "4492": {
      "branch": 113,
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6960
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4493": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6991
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11AE"
    },
    "4496": {
      "branch": 113,
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6991
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4497": {
      "op": "POP"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4504": {
      "op": "SHL"
    },
    "4505": {
      "op": "SUB"
    },
    "4506": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4507": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "AND",
      "path": "20"
    },
    "4508": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4510": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4511": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4512": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4513": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6980
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4515": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4517": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4518": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4520": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4521": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4522": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4523": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4525": {
      "branch": 114,
      "fn": "CardinalToken.transfer",
      "offset": [
        6964,
        6991
      ],
      "op": "AND",
      "path": "20"
    },
    "4526": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6930,
        6991
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4527": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6926,
        7085
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4528": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6926,
        7085
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11C6"
    },
    "4531": {
      "branch": 114,
      "fn": "CardinalToken.transfer",
      "offset": [
        6926,
        7085
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4532": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7007,
        7049
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 44,
      "value": "0x11BE"
    },
    "4535": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4536": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7031,
        7040
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4537": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7042,
        7048
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4538": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7007,
        7016
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17E1"
    },
    "4541": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7007,
        7049
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4542": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7007,
        7049
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4543": {
      "op": "POP"
    },
    "4544": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7070,
        7074
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 45,
      "value": "0x1"
    },
    "4546": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7063,
        7074
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x893"
    },
    "4549": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7063,
        7074
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4550": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6926,
        7085
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4551": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7139,
        7164
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4553": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7205,
        7208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "4555": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7177,
        7201
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "4557": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7177,
        7201
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4558": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7168,
        7174
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4559": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7168,
        7201
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11D8"
    },
    "4562": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7168,
        7201
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4563": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7168,
        7201
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4564": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7168,
        7201
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21F5"
    },
    "4567": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7168,
        7201
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4568": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7168,
        7201
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4569": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7167,
        7208
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11E2"
    },
    "4572": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7167,
        7208
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4573": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7167,
        7208
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4574": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7167,
        7208
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2214"
    },
    "4577": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7167,
        7208
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4578": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7167,
        7208
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4579": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7139,
        7208
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4580": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7139,
        7208
      ],
      "op": "POP",
      "path": "20"
    },
    "4581": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7261,
        7281
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4583": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7317,
        7320
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "4585": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7294,
        7313
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "4587": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7294,
        7313
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4588": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7285,
        7291
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4589": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7285,
        7313
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11F6"
    },
    "4592": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7285,
        7313
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4593": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7285,
        7313
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4594": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7285,
        7313
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21F5"
    },
    "4597": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7285,
        7313
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4598": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7285,
        7313
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4599": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7284,
        7320
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1200"
    },
    "4602": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7284,
        7320
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4603": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7284,
        7320
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4604": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7284,
        7320
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2214"
    },
    "4607": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7284,
        7320
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4608": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7284,
        7320
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4609": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7261,
        7320
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4610": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7261,
        7320
      ],
      "op": "POP",
      "path": "20"
    },
    "4611": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7373,
        7393
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4613": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7429,
        7432
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "4615": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7406,
        7425
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "4617": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7406,
        7425
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4618": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7397,
        7403
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4619": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7397,
        7425
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1214"
    },
    "4622": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7397,
        7425
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4623": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7397,
        7425
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4624": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7397,
        7425
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21F5"
    },
    "4627": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7397,
        7425
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4628": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7397,
        7425
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4629": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7396,
        7432
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x121E"
    },
    "4632": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7396,
        7432
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4633": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7396,
        7432
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4634": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7396,
        7432
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2214"
    },
    "4637": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7396,
        7432
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4638": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7396,
        7432
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4639": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7373,
        7432
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4640": {
      "op": "POP"
    },
    "4641": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7527,
        7546
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4643": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7549,
        7576
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x122C"
    },
    "4646": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7373,
        7432
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4647": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7549,
        7561
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4648": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7549,
        7576
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2236"
    },
    "4651": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7549,
        7576
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4652": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7549,
        7576
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4653": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7527,
        7576
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4654": {
      "op": "POP"
    },
    "4655": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7670,
        7741
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 46,
      "value": "0x1244"
    },
    "4658": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4659": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7694,
        7721
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "4661": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7694,
        7721
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4668": {
      "op": "SHL"
    },
    "4669": {
      "op": "SUB"
    },
    "4670": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7694,
        7721
      ],
      "op": "AND",
      "path": "20"
    },
    "4671": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7723,
        7740
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4672": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7670,
        7679
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17E1"
    },
    "4675": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7670,
        7741
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4676": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7670,
        7741
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4677": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7751,
        7802
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 47,
      "value": "0x124F"
    },
    "4680": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4681": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7783,
        7787
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4682": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7790,
        7801
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4683": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7751,
        7760
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17E1"
    },
    "4686": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7751,
        7802
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4687": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7751,
        7802
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4688": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7813,
        7849
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4690": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7852,
        7876
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x125A"
    },
    "4693": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7870,
        7874
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4694": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7852,
        7861
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDFA"
    },
    "4697": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7852,
        7876
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4698": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7852,
        7876
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4699": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7907,
        7918
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "4701": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7907,
        7918
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4702": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7813,
        7876
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4703": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7813,
        7876
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4711": {
      "op": "SHL"
    },
    "4712": {
      "op": "SUB"
    },
    "4713": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7907,
        7918
      ],
      "op": "AND",
      "path": "20"
    },
    "4714": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4721": {
      "op": "SHL"
    },
    "4722": {
      "op": "SUB"
    },
    "4723": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7891,
        7918
      ],
      "op": "AND",
      "path": "20"
    },
    "4724": {
      "branch": 115,
      "fn": "CardinalToken.transfer",
      "offset": [
        7891,
        7918
      ],
      "op": "EQ",
      "path": "20"
    },
    "4725": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7887,
        8314
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12BC"
    },
    "4728": {
      "branch": 115,
      "fn": "CardinalToken.transfer",
      "offset": [
        7887,
        8314
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4729": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7994,
        8014
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "4731": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7994,
        8014
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4732": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7979,
        7990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "4734": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7979,
        7990
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4735": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        7991
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1290"
    },
    "4738": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        7991
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4745": {
      "op": "SHL"
    },
    "4746": {
      "op": "SUB"
    },
    "4747": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7979,
        7990
      ],
      "op": "AND",
      "path": "20"
    },
    "4748": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        7978
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDFA"
    },
    "4751": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7969,
        7991
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4752": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        7991
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4753": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        8014
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x129A"
    },
    "4756": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        8014
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4757": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        8014
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4758": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        8014
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2214"
    },
    "4761": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7969,
        8014
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4762": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        8014
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4763": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7938,
        7966
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4764": {
      "branch": 116,
      "fn": "CardinalToken.transfer",
      "offset": [
        7938,
        8014
      ],
      "op": "GT",
      "path": "20"
    },
    "4765": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7934,
        8105
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4766": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7934,
        8105
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12AA"
    },
    "4769": {
      "branch": 116,
      "fn": "CardinalToken.transfer",
      "offset": [
        7934,
        8105
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4770": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8034,
        8090
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 48,
      "value": "0x12AA"
    },
    "4773": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8061,
        8089
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4774": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8034,
        8060
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19AF"
    },
    "4777": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8034,
        8090
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4778": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8034,
        8090
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4779": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8166,
        8187
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "4780": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8205,
        8229
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4781": {
      "branch": 117,
      "fn": "CardinalToken.transfer",
      "offset": [
        8205,
        8229
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4782": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8201,
        8304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12BA"
    },
    "4785": {
      "branch": 117,
      "fn": "CardinalToken.transfer",
      "offset": [
        8201,
        8304
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4786": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8249,
        8289
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 49,
      "value": "0x12BA"
    },
    "4789": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8267,
        8288
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "4790": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8249,
        8266
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B18"
    },
    "4793": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8249,
        8289
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4794": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8249,
        8289
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4795": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7920,
        8314
      ],
      "op": "POP",
      "path": "20"
    },
    "4796": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7887,
        8314
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4797": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8385,
        8407
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4799": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8433,
        8450
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4800": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8410,
        8430
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12C9"
    },
    "4803": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8419,
        8430
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4804": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8410,
        8416
      ],
      "op": "DUP11",
      "path": "20"
    },
    "4805": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8410,
        8430
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x224E"
    },
    "4808": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8410,
        8430
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4809": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8410,
        8430
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4810": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8410,
        8450
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12D3"
    },
    "4813": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8410,
        8450
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4814": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8410,
        8450
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4815": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8410,
        8450
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x224E"
    },
    "4818": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8410,
        8450
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4819": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8410,
        8450
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4820": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8385,
        8450
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4821": {
      "op": "POP"
    },
    "4822": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8460,
        8510
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 50,
      "value": "0x12E0"
    },
    "4825": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4826": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8484,
        8493
      ],
      "op": "DUP11",
      "path": "20"
    },
    "4827": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8495,
        8509
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4828": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8460,
        8469
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17E1"
    },
    "4831": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8460,
        8510
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4832": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8460,
        8510
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4833": {
      "op": "POP"
    },
    "4834": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8527,
        8531
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 51,
      "value": "0x1"
    },
    "4836": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8527,
        8531
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "4837": {
      "fn": "CardinalToken.transfer",
      "offset": [
        5842,
        8538
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "4838": {
      "op": "POP"
    },
    "4839": {
      "op": "POP"
    },
    "4840": {
      "op": "POP"
    },
    "4841": {
      "op": "POP"
    },
    "4842": {
      "op": "POP"
    },
    "4843": {
      "op": "POP"
    },
    "4844": {
      "op": "POP"
    },
    "4845": {
      "op": "POP"
    },
    "4846": {
      "fn": "CardinalToken.transfer",
      "jump": "o",
      "offset": [
        5842,
        8538
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4847": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5468,
        5574
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4848": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4850": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4857": {
      "op": "SHL"
    },
    "4858": {
      "op": "SUB"
    },
    "4859": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4860": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4861": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4862": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1319"
    },
    "4865": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4866": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4868": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4875": {
      "op": "SHL"
    },
    "4876": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4877": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4878": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4881": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "4884": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4885": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "4888": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4896": {
      "op": "SHL"
    },
    "4897": {
      "op": "SUB"
    },
    "4898": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5559
      ],
      "op": "AND",
      "path": "20",
      "statement": 52
    },
    "4899": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5562,
        5567
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4901": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5559
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4902": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5559
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4903": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5559
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4904": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4906": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4908": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5559
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4909": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4911": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5559
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4912": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5559
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4913": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5567
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4914": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5567
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4917": {
      "op": "NOT"
    },
    "4918": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5567
      ],
      "op": "AND",
      "path": "20"
    },
    "4919": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5567
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4920": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5537,
        5567
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4921": {
      "fn": "CardinalToken.includeUsersInFees",
      "jump": "o",
      "offset": [
        5468,
        5574
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4922": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4923": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4925": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4932": {
      "op": "SHL"
    },
    "4933": {
      "op": "SUB"
    },
    "4934": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4935": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4936": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4937": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1364"
    },
    "4940": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4941": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4943": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4950": {
      "op": "SHL"
    },
    "4951": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4952": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4953": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4955": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4956": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "4959": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4960": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "4963": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4964": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4965": {
      "branch": 118,
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13405,
        13414
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4966": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13401,
        13647
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4967": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13401,
        13647
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1378"
    },
    "4970": {
      "branch": 118,
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13401,
        13647
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4971": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13430,
        13464
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 53,
      "value": "0x1373"
    },
    "4974": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13457,
        13463
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4975": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13430,
        13456
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19AF"
    },
    "4978": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        13430,
        13464
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4979": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13430,
        13464
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4980": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13401,
        13647
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1390"
    },
    "4983": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13401,
        13647
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4984": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13401,
        13647
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4985": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13503,
        13539
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4987": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13542,
        13566
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1383"
    },
    "4990": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13560,
        13564
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4991": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13542,
        13551
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDFA"
    },
    "4994": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        13542,
        13566
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4995": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13542,
        13566
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4996": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13503,
        13566
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4997": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13503,
        13566
      ],
      "op": "POP",
      "path": "20"
    },
    "4998": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13580,
        13636
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 54,
      "value": "0x138E"
    },
    "5001": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13607,
        13635
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5002": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13580,
        13606
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19AF"
    },
    "5005": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        13580,
        13636
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5006": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13580,
        13636
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5007": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13489,
        13647
      ],
      "op": "POP",
      "path": "20"
    },
    "5008": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13401,
        13647
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5009": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13688,
        13709
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "5010": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13719,
        13758
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 55,
      "value": "0x139A"
    },
    "5013": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13688,
        13709
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5014": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13719,
        13736
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B18"
    },
    "5017": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        13719,
        13758
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5018": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13719,
        13758
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5019": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13391,
        13765
      ],
      "op": "POP",
      "path": "20"
    },
    "5020": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "POP",
      "path": "20"
    },
    "5021": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "POP",
      "path": "20"
    },
    "5022": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "o",
      "offset": [
        13298,
        13765
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5023": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5024": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5026": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5033": {
      "op": "SHL"
    },
    "5034": {
      "op": "SUB"
    },
    "5035": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5036": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5037": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5038": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C9"
    },
    "5041": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5042": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5044": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5051": {
      "op": "SHL"
    },
    "5052": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5054": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5056": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5057": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "5060": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5061": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "5064": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5065": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5066": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14904,
        14905
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 56,
      "value": "0x5"
    },
    "5068": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14869,
        14900
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5069": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14869,
        14905
      ],
      "op": "GT",
      "path": "20"
    },
    "5070": {
      "branch": 119,
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14869,
        14905
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5071": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14861,
        14968
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1440"
    },
    "5074": {
      "branch": 119,
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14861,
        14968
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5075": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14861,
        14968
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5077": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14861,
        14968
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5084": {
      "op": "SHL"
    },
    "5085": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14861,
        14968
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5086": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14861,
        14968
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5089": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14861,
        14968
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5091": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14861,
        14968
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5092": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14861,
        14968
      ],
      "op": "ADD",
      "path": "20"
    },
    "5093": {
      "op": "MSTORE"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5098": {
      "op": "DUP3"
    },
    "5099": {
      "op": "ADD"
    },
    "5100": {
      "op": "MSTORE"
    },
    "5101": {
      "op": "PUSH32",
      "value": "0x546865206D656D626572206769766561776179207472616E73616374696F6E20"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5136": {
      "op": "DUP3"
    },
    "5137": {
      "op": "ADD"
    },
    "5138": {
      "op": "MSTORE"
    },
    "5139": {
      "op": "PUSH32",
      "value": "0x6665652063616E2774206265206D6F7265207468616E2035252E000000000000"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5174": {
      "op": "DUP3"
    },
    "5175": {
      "op": "ADD"
    },
    "5176": {
      "op": "MSTORE"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5179": {
      "op": "ADD"
    },
    "5180": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14861,
        14968
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C9"
    },
    "5183": {
      "op": "JUMP"
    },
    "5184": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14861,
        14968
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5185": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14978,
        15002
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 57,
      "value": "0x10"
    },
    "5187": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14978,
        15036
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5188": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14978,
        15036
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5189": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14978,
        15036
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5190": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15051,
        15119
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 58,
      "value": "0x40"
    },
    "5192": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15051,
        15119
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5193": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15005,
        15036
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5194": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15005,
        15036
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5195": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15051,
        15119
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x39E1F3E4CC8FEB7DBC01C16E37AA1546C352489807C660593C62538F536AC051"
    },
    "5228": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15051,
        15119
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5229": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15051,
        15119
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5231": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15051,
        15119
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5232": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15051,
        15119
      ],
      "op": "LOG2",
      "path": "20"
    },
    "5233": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        14749,
        15126
      ],
      "op": "POP",
      "path": "20"
    },
    "5234": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "jump": "o",
      "offset": [
        14749,
        15126
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5235": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5236": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5238": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5245": {
      "op": "SHL"
    },
    "5246": {
      "op": "SUB"
    },
    "5247": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5248": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5249": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5250": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x149D"
    },
    "5253": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5254": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5256": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5263": {
      "op": "SHL"
    },
    "5264": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5265": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5266": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5268": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5269": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "5272": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5273": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "5276": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5277": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5278": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15974,
        15975
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 59,
      "value": "0x5"
    },
    "5280": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15944,
        15970
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5281": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15944,
        15975
      ],
      "op": "GT",
      "path": "20"
    },
    "5282": {
      "branch": 120,
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15944,
        15975
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5283": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15936,
        16032
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x150B"
    },
    "5286": {
      "branch": 120,
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15936,
        16032
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5287": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15936,
        16032
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5289": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15936,
        16032
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5296": {
      "op": "SHL"
    },
    "5297": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15936,
        16032
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5298": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15936,
        16032
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5301": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15936,
        16032
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5303": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15936,
        16032
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5304": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15936,
        16032
      ],
      "op": "ADD",
      "path": "20"
    },
    "5305": {
      "op": "MSTORE"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5310": {
      "op": "DUP3"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "op": "MSTORE"
    },
    "5313": {
      "op": "PUSH32",
      "value": "0x54686520646576656C6F706572207472616E73616374696F6E20666565206361"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5348": {
      "op": "DUP3"
    },
    "5349": {
      "op": "ADD"
    },
    "5350": {
      "op": "MSTORE"
    },
    "5351": {
      "op": "PUSH20",
      "value": "0x3713BA1031329036B7B932903A3430B7101A9297"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "5374": {
      "op": "SHL"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5377": {
      "op": "DUP3"
    },
    "5378": {
      "op": "ADD"
    },
    "5379": {
      "op": "MSTORE"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5382": {
      "op": "ADD"
    },
    "5383": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15936,
        16032
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C9"
    },
    "5386": {
      "op": "JUMP"
    },
    "5387": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15936,
        16032
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5388": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16042,
        16061
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 60,
      "value": "0x12"
    },
    "5390": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16042,
        16090
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5391": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16042,
        16090
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5392": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16042,
        16090
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5393": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16105,
        16163
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 61,
      "value": "0x40"
    },
    "5395": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16105,
        16163
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5396": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16064,
        16090
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5397": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16064,
        16090
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5398": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16105,
        16163
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x4BEE3C216A701857ABD67FED754EFDD065A8599BE5476E2C4B118FB1896B9FFA"
    },
    "5431": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16105,
        16163
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5432": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16105,
        16163
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5434": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16105,
        16163
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5435": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        16105,
        16163
      ],
      "op": "LOG2",
      "path": "20"
    },
    "5436": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        15834,
        16170
      ],
      "op": "POP",
      "path": "20"
    },
    "5437": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "jump": "o",
      "offset": [
        15834,
        16170
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5439": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5441": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5448": {
      "op": "SHL"
    },
    "5449": {
      "op": "SUB"
    },
    "5450": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5451": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5452": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5453": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1568"
    },
    "5456": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5457": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5459": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5460": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5466": {
      "op": "SHL"
    },
    "5467": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5468": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5469": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5471": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5472": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "5475": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5476": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "5479": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5480": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5487": {
      "op": "SHL"
    },
    "5488": {
      "op": "SUB"
    },
    "5489": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 62
    },
    "5490": {
      "branch": 132,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "5491": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15CD"
    },
    "5494": {
      "branch": 132,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5495": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5497": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5504": {
      "op": "SHL"
    },
    "5505": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5506": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5509": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5511": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5512": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "5513": {
      "op": "MSTORE"
    },
    "5514": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5516": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5518": {
      "op": "DUP3"
    },
    "5519": {
      "op": "ADD"
    },
    "5520": {
      "op": "MSTORE"
    },
    "5521": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5556": {
      "op": "DUP3"
    },
    "5557": {
      "op": "ADD"
    },
    "5558": {
      "op": "MSTORE"
    },
    "5559": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5568": {
      "op": "SHL"
    },
    "5569": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5571": {
      "op": "DUP3"
    },
    "5572": {
      "op": "ADD"
    },
    "5573": {
      "op": "MSTORE"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5576": {
      "op": "ADD"
    },
    "5577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "5580": {
      "op": "JUMP"
    },
    "5581": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5582": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 63,
      "value": "0xECD"
    },
    "5585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5586": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CB3"
    },
    "5589": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5590": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14426,
        14546
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5591": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5593": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5600": {
      "op": "SHL"
    },
    "5601": {
      "op": "SUB"
    },
    "5602": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5603": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5604": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5605": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1600"
    },
    "5608": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5609": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5611": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5612": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5618": {
      "op": "SHL"
    },
    "5619": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5620": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5621": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5623": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5624": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "5627": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5628": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2265"
    },
    "5631": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5632": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5639": {
      "op": "SHL"
    },
    "5640": {
      "op": "SUB"
    },
    "5641": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 64
    },
    "5642": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5643": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5644": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "AND",
      "path": "20"
    },
    "5645": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5647": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5648": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5649": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5650": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14519
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "5652": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5654": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5655": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5657": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5658": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14525
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5659": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5660": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5663": {
      "op": "NOT"
    },
    "5664": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "AND",
      "path": "20"
    },
    "5665": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5666": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5667": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5668": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5669": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5670": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5671": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "OR",
      "path": "20"
    },
    "5672": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5673": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        14510,
        14539
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5674": {
      "fn": "CardinalToken.updateBlackList",
      "jump": "o",
      "offset": [
        14426,
        14546
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5675": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5682": {
      "op": "SHL"
    },
    "5683": {
      "op": "SUB"
    },
    "5684": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 65
    },
    "5685": {
      "branch": 122,
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "AND",
      "path": "2"
    },
    "5686": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x168D"
    },
    "5689": {
      "branch": 122,
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5690": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5692": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5693": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5697": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5699": {
      "op": "SHL"
    },
    "5700": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5701": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5704": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5706": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5707": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "ADD",
      "path": "2"
    },
    "5708": {
      "op": "MSTORE"
    },
    "5709": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5711": {
      "op": "DUP1"
    },
    "5712": {
      "op": "DUP3"
    },
    "5713": {
      "op": "ADD"
    },
    "5714": {
      "op": "MSTORE"
    },
    "5715": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5750": {
      "op": "DUP3"
    },
    "5751": {
      "op": "ADD"
    },
    "5752": {
      "op": "MSTORE"
    },
    "5753": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5760": {
      "op": "SHL"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5763": {
      "op": "DUP3"
    },
    "5764": {
      "op": "ADD"
    },
    "5765": {
      "op": "MSTORE"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5768": {
      "op": "ADD"
    },
    "5769": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C9"
    },
    "5772": {
      "op": "JUMP"
    },
    "5773": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5780": {
      "op": "SHL"
    },
    "5781": {
      "op": "SUB"
    },
    "5782": {
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 66
    },
    "5783": {
      "branch": 123,
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "AND",
      "path": "2"
    },
    "5784": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16EE"
    },
    "5787": {
      "branch": 123,
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5788": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5790": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5791": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5797": {
      "op": "SHL"
    },
    "5798": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5799": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5802": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5804": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5805": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "ADD",
      "path": "2"
    },
    "5806": {
      "op": "MSTORE"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5811": {
      "op": "DUP3"
    },
    "5812": {
      "op": "ADD"
    },
    "5813": {
      "op": "MSTORE"
    },
    "5814": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5849": {
      "op": "DUP3"
    },
    "5850": {
      "op": "ADD"
    },
    "5851": {
      "op": "MSTORE"
    },
    "5852": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "5855": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5857": {
      "op": "SHL"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5860": {
      "op": "DUP3"
    },
    "5861": {
      "op": "ADD"
    },
    "5862": {
      "op": "MSTORE"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5865": {
      "op": "ADD"
    },
    "5866": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C9"
    },
    "5869": {
      "op": "JUMP"
    },
    "5870": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5877": {
      "op": "SHL"
    },
    "5878": {
      "op": "SUB"
    },
    "5879": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 67
    },
    "5880": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5881": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "AND",
      "path": "2"
    },
    "5882": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5884": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5885": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5886": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5887": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5889": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5891": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5892": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5893": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5894": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5896": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5897": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5898": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5899": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5900": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5901": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "AND",
      "path": "2"
    },
    "5902": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5903": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5904": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5905": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5906": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5907": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5908": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5909": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5910": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5911": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5912": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5913": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5914": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5915": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 68
    },
    "5916": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5917": {
      "op": "DUP5"
    },
    "5918": {
      "op": "DUP2"
    },
    "5919": {
      "op": "MSTORE"
    },
    "5920": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "5953": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5954": {
      "op": "ADD"
    },
    "5955": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5957": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5958": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5959": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5960": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SUB",
      "path": "2"
    },
    "5961": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5962": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "LOG3",
      "path": "2"
    },
    "5963": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "5964": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "5965": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "5966": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5967": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5974": {
      "op": "SHL"
    },
    "5975": {
      "op": "SUB"
    },
    "5976": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5977": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5978": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "2"
    },
    "5979": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5981": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5982": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5983": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5984": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5986": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5988": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5989": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5990": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5991": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5993": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5994": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5995": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5996": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5997": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5998": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "2"
    },
    "5999": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6000": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6001": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6002": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6003": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6004": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6005": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6008": {
      "op": "NOT"
    },
    "6009": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6010": {
      "branch": 124,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "EQ",
      "path": "2"
    },
    "6011": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17DB"
    },
    "6014": {
      "branch": 124,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6015": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11047,
        11053
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 69
    },
    "6016": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11043
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6017": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "LT",
      "path": "2"
    },
    "6018": {
      "branch": 125,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6019": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17CE"
    },
    "6022": {
      "branch": 125,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6023": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6025": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6026": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6032": {
      "op": "SHL"
    },
    "6033": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6034": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6037": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6039": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6040": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "ADD",
      "path": "2"
    },
    "6041": {
      "op": "MSTORE"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6046": {
      "op": "DUP3"
    },
    "6047": {
      "op": "ADD"
    },
    "6048": {
      "op": "MSTORE"
    },
    "6049": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "6082": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6084": {
      "op": "DUP3"
    },
    "6085": {
      "op": "ADD"
    },
    "6086": {
      "op": "MSTORE"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6089": {
      "op": "ADD"
    },
    "6090": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C9"
    },
    "6093": {
      "op": "JUMP"
    },
    "6094": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6095": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 70,
      "value": "0x17DB"
    },
    "6098": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11138,
        11143
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6099": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11145,
        11152
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6100": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11173,
        11179
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6101": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11170
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6102": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11179
      ],
      "op": "SUB",
      "path": "2"
    },
    "6103": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x162B"
    },
    "6106": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6107": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6108": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10890,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "6109": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "6110": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "6111": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "6112": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6113": {
      "fn": "ERC20._transfer",
      "offset": [
        7488,
        8139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6120": {
      "op": "SHL"
    },
    "6121": {
      "op": "SUB"
    },
    "6122": {
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 71
    },
    "6123": {
      "branch": 126,
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "AND",
      "path": "2"
    },
    "6124": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1845"
    },
    "6127": {
      "branch": 126,
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6128": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6130": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6137": {
      "op": "SHL"
    },
    "6138": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6139": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6142": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6144": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6145": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6146": {
      "op": "MSTORE"
    },
    "6147": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6151": {
      "op": "DUP3"
    },
    "6152": {
      "op": "ADD"
    },
    "6153": {
      "op": "MSTORE"
    },
    "6154": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "6187": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6189": {
      "op": "DUP3"
    },
    "6190": {
      "op": "ADD"
    },
    "6191": {
      "op": "MSTORE"
    },
    "6192": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6200": {
      "op": "SHL"
    },
    "6201": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6203": {
      "op": "DUP3"
    },
    "6204": {
      "op": "ADD"
    },
    "6205": {
      "op": "MSTORE"
    },
    "6206": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6208": {
      "op": "ADD"
    },
    "6209": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C9"
    },
    "6212": {
      "op": "JUMP"
    },
    "6213": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6220": {
      "op": "SHL"
    },
    "6221": {
      "op": "SUB"
    },
    "6222": {
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 72
    },
    "6223": {
      "branch": 127,
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "2"
    },
    "6224": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A7"
    },
    "6227": {
      "branch": 127,
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6228": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6230": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6237": {
      "op": "SHL"
    },
    "6238": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6239": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6242": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6244": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6245": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "ADD",
      "path": "2"
    },
    "6246": {
      "op": "MSTORE"
    },
    "6247": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "6249": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6251": {
      "op": "DUP3"
    },
    "6252": {
      "op": "ADD"
    },
    "6253": {
      "op": "MSTORE"
    },
    "6254": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "6287": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6289": {
      "op": "DUP3"
    },
    "6290": {
      "op": "ADD"
    },
    "6291": {
      "op": "MSTORE"
    },
    "6292": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "6296": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "6298": {
      "op": "SHL"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6301": {
      "op": "DUP3"
    },
    "6302": {
      "op": "ADD"
    },
    "6303": {
      "op": "MSTORE"
    },
    "6304": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6306": {
      "op": "ADD"
    },
    "6307": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C9"
    },
    "6310": {
      "op": "JUMP"
    },
    "6311": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6318": {
      "op": "SHL"
    },
    "6319": {
      "op": "SUB"
    },
    "6320": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6321": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "AND",
      "path": "2"
    },
    "6322": {
      "fn": "ERC20._transfer",
      "offset": [
        7808,
        7827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6324": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6325": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6326": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6327": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6329": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6330": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6331": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6332": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6334": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6335": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6336": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6337": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 73
    },
    "6338": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6339": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "LT",
      "path": "2"
    },
    "6340": {
      "branch": 128,
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6341": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x191F"
    },
    "6344": {
      "branch": 128,
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6345": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6347": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6354": {
      "op": "SHL"
    },
    "6355": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6356": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6359": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6361": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6362": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "ADD",
      "path": "2"
    },
    "6363": {
      "op": "MSTORE"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6368": {
      "op": "DUP3"
    },
    "6369": {
      "op": "ADD"
    },
    "6370": {
      "op": "MSTORE"
    },
    "6371": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6406": {
      "op": "DUP3"
    },
    "6407": {
      "op": "ADD"
    },
    "6408": {
      "op": "MSTORE"
    },
    "6409": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6418": {
      "op": "SHL"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6421": {
      "op": "DUP3"
    },
    "6422": {
      "op": "ADD"
    },
    "6423": {
      "op": "MSTORE"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6426": {
      "op": "ADD"
    },
    "6427": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C9"
    },
    "6430": {
      "op": "JUMP"
    },
    "6431": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6438": {
      "op": "SHL"
    },
    "6439": {
      "op": "SUB"
    },
    "6440": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 74
    },
    "6441": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6442": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "AND",
      "path": "2"
    },
    "6443": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6445": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6446": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6447": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6448": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6450": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6451": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6452": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6453": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6455": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6456": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6457": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6458": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6459": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6460": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "SUB",
      "path": "2"
    },
    "6461": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6462": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6463": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 75
    },
    "6464": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6465": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "AND",
      "path": "2"
    },
    "6466": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6467": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6468": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6469": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6470": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6471": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6472": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6473": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6474": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6475": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6476": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1956"
    },
    "6479": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6480": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6481": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6482": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2236"
    },
    "6485": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6486": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6487": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6488": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "6489": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "6490": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6491": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6492": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6493": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "6494": {
      "fn": "ERC20._transfer",
      "offset": [
        8073,
        8075
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 76
    },
    "6495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6501": {
      "op": "SHL"
    },
    "6502": {
      "op": "SUB"
    },
    "6503": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "2"
    },
    "6504": {
      "fn": "ERC20._transfer",
      "offset": [
        8067,
        8071
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6511": {
      "op": "SHL"
    },
    "6512": {
      "op": "SUB"
    },
    "6513": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "2"
    },
    "6514": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6547": {
      "fn": "ERC20._transfer",
      "offset": [
        8077,
        8083
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6548": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6550": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6551": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19A2"
    },
    "6554": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6555": {
      "op": "DUP2"
    },
    "6556": {
      "op": "MSTORE"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6559": {
      "op": "ADD"
    },
    "6560": {
      "op": "SWAP1"
    },
    "6561": {
      "op": "JUMP"
    },
    "6562": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6563": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6565": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6566": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6567": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6568": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SUB",
      "path": "2"
    },
    "6569": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6570": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "LOG3",
      "path": "2"
    },
    "6571": {
      "fn": "ERC20._transfer",
      "offset": [
        8095,
        8132
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 77,
      "value": "0x17DB"
    },
    "6574": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6575": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11717,
        12165
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6576": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6578": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6579": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6580": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11825,
        11826
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "6582": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6583": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6584": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6585": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "6587": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6588": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "ADD",
      "path": "20"
    },
    "6589": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6590": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6591": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11787,
        11808
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6593": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11787,
        11808
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6594": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6596": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6597": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "ADD",
      "path": "20"
    },
    "6598": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6599": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6600": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "6601": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6602": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "CALLDATACOPY",
      "path": "20"
    },
    "6603": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "ADD",
      "path": "20"
    },
    "6604": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6605": {
      "op": "POP"
    },
    "6606": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11811,
        11827
      ],
      "op": "POP",
      "path": "20"
    },
    "6607": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11787,
        11827
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6608": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11787,
        11827
      ],
      "op": "POP",
      "path": "20"
    },
    "6609": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11855,
        11859
      ],
      "op": "ADDRESS",
      "path": "20",
      "statement": 78
    },
    "6610": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11841
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6611": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11842,
        11843
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6613": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6614": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6615": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6616": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "LT",
      "path": "20"
    },
    "6617": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19E4"
    },
    "6620": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6621": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19E4"
    },
    "6624": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x229A"
    },
    "6627": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "i",
      "offset": [
        11837,
        11844
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6628": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6635": {
      "op": "SHL"
    },
    "6636": {
      "op": "SUB"
    },
    "6637": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11860
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6638": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11860
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6639": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11860
      ],
      "op": "AND",
      "path": "20"
    },
    "6640": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6642": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6643": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6644": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "MUL",
      "path": "20"
    },
    "6645": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6646": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6647": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6648": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "ADD",
      "path": "20"
    },
    "6649": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6650": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "ADD",
      "path": "20"
    },
    "6651": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11860
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6652": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11860
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6653": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11860
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6654": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11860
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6655": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11893
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 79,
      "value": "0x13"
    },
    "6657": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11893
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6658": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6660": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6661": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6662": {
      "op": "PUSH4",
      "value": "0x15AB88C9"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6669": {
      "op": "SHL"
    },
    "6670": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6671": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6672": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6673": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6674": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11893
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6675": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11893
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6676": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11893
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6677": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11893
      ],
      "op": "AND",
      "path": "20"
    },
    "6678": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11893
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6679": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11898
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xAD5C4648"
    },
    "6684": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11898
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6685": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6687": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6688": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6689": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "ADD",
      "path": "20"
    },
    "6690": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6691": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6692": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11837,
        11844
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6693": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6694": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6695": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "SUB",
      "path": "20"
    },
    "6696": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "ADD",
      "path": "20"
    },
    "6697": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6698": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11893
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6699": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6700": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "6701": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6702": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6703": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6704": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A38"
    },
    "6707": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6708": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6710": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6711": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6712": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6713": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "POP",
      "path": "20"
    },
    "6714": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "GAS",
      "path": "20"
    },
    "6715": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "6716": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6717": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6718": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6719": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A4C"
    },
    "6722": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6723": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6724": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6726": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6727": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "6728": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6729": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6731": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6732": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6733": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "POP",
      "path": "20"
    },
    "6734": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "POP",
      "path": "20"
    },
    "6735": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "POP",
      "path": "20"
    },
    "6736": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "POP",
      "path": "20"
    },
    "6737": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6739": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6740": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6741": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "6743": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "NOT",
      "path": "20"
    },
    "6744": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "6746": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6747": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "ADD",
      "path": "20"
    },
    "6748": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "AND",
      "path": "20"
    },
    "6749": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6750": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "ADD",
      "path": "20"
    },
    "6751": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6752": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6754": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6755": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "POP",
      "path": "20"
    },
    "6756": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6757": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "ADD",
      "path": "20"
    },
    "6758": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6759": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A70"
    },
    "6762": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6763": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6764": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22B0"
    },
    "6767": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "i",
      "offset": [
        11880,
        11900
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6768": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11880,
        11900
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6769": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11874
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6770": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11875,
        11876
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "6772": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6773": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6774": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6775": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "LT",
      "path": "20"
    },
    "6776": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A83"
    },
    "6779": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6780": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A83"
    },
    "6783": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x229A"
    },
    "6786": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "i",
      "offset": [
        11870,
        11877
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6787": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6794": {
      "op": "SHL"
    },
    "6795": {
      "op": "SUB"
    },
    "6796": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11900
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6797": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11900
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6798": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11900
      ],
      "op": "AND",
      "path": "20"
    },
    "6799": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6801": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6802": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6803": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "MUL",
      "path": "20"
    },
    "6804": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6805": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6806": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6807": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "ADD",
      "path": "20"
    },
    "6808": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11877
      ],
      "op": "ADD",
      "path": "20"
    },
    "6809": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11870,
        11900
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6810": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11942,
        11955
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 80,
      "value": "0x13"
    },
    "6812": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11942,
        11955
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6813": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11910,
        11965
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AA9"
    },
    "6816": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11910,
        11965
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6817": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11927,
        11931
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "6818": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11927,
        11931
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6819": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11942,
        11955
      ],
      "op": "AND",
      "path": "20"
    },
    "6820": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11958,
        11964
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6821": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11910,
        11918
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x162B"
    },
    "6824": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "i",
      "offset": [
        11910,
        11965
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6825": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11910,
        11965
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6826": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        11988
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 81,
      "value": "0x13"
    },
    "6828": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        11988
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6829": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6831": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6832": {
      "op": "PUSH4",
      "value": "0x791AC947"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6839": {
      "op": "SHL"
    },
    "6840": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6841": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6848": {
      "op": "SHL"
    },
    "6849": {
      "op": "SUB"
    },
    "6850": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        11988
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6851": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        11988
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6852": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        11988
      ],
      "op": "AND",
      "path": "20"
    },
    "6853": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        11988
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6854": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12039
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x791AC947"
    },
    "6859": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12039
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6860": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AE2"
    },
    "6863": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6864": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12053,
        12059
      ],
      "op": "DUP6",
      "path": "20"
    },
    "6865": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12053,
        12059
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6866": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        11988
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6868": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        11988
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6869": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12088,
        12092
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6870": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12088,
        12092
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6871": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12114,
        12118
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "6872": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12114,
        12118
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6873": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12133,
        12148
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "6874": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12133,
        12148
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6875": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6877": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "ADD",
      "path": "20"
    },
    "6878": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22CD"
    },
    "6881": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "i",
      "offset": [
        11975,
        12158
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6882": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6883": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6885": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6887": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6888": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6889": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6890": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "SUB",
      "path": "20"
    },
    "6891": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6892": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6894": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "DUP8",
      "path": "20"
    },
    "6895": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6896": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "6897": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6898": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6899": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6900": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AFC"
    },
    "6903": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6904": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6906": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6907": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6908": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6909": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "POP",
      "path": "20"
    },
    "6910": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "GAS",
      "path": "20"
    },
    "6911": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "CALL",
      "path": "20"
    },
    "6912": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6913": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6914": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6915": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B10"
    },
    "6918": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6919": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6920": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6922": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6923": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "6924": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6925": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6927": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6928": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6929": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "POP",
      "path": "20"
    },
    "6930": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "POP",
      "path": "20"
    },
    "6931": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "POP",
      "path": "20"
    },
    "6932": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11975,
        12158
      ],
      "op": "POP",
      "path": "20"
    },
    "6933": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11777,
        12165
      ],
      "op": "POP",
      "path": "20"
    },
    "6934": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        11717,
        12165
      ],
      "op": "POP",
      "path": "20"
    },
    "6935": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "o",
      "offset": [
        11717,
        12165
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6936": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12315,
        12611
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6937": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12376,
        12392
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6939": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12417,
        12436
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "6941": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12417,
        12436
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6942": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12395,
        12414
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "6944": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12395,
        12414
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6945": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12395,
        12436
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B2A"
    },
    "6948": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12395,
        12436
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6949": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12395,
        12436
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6950": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12395,
        12436
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2236"
    },
    "6953": {
      "fn": "CardinalToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        12395,
        12436
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6954": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12395,
        12436
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6955": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12468
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 82,
      "value": "0xD"
    },
    "6957": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12468
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6958": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12488,
        12507
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "6960": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12488,
        12507
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6961": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12376,
        12436
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6962": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12376,
        12436
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6963": {
      "op": "POP"
    },
    "6964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6970": {
      "op": "SHL"
    },
    "6971": {
      "op": "SUB"
    },
    "6972": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12468
      ],
      "op": "AND",
      "path": "20"
    },
    "6973": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12468
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6974": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8FC"
    },
    "6977": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6978": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12376,
        12436
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6979": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12376,
        12436
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6980": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12479,
        12507
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B4D"
    },
    "6983": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12479,
        12507
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6984": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12479,
        12485
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6985": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12479,
        12507
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21F5"
    },
    "6988": {
      "fn": "CardinalToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        12479,
        12507
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6989": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12479,
        12507
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6990": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12478,
        12519
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B57"
    },
    "6993": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12478,
        12519
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6994": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12478,
        12519
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6995": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12478,
        12519
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2214"
    },
    "6998": {
      "fn": "CardinalToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        12478,
        12519
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6999": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12478,
        12519
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7000": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7002": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7003": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7004": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7005": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7006": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7007": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "MUL",
      "path": "20"
    },
    "7008": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7009": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7011": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7012": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7013": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7014": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7015": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "DUP9",
      "path": "20"
    },
    "7016": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "DUP9",
      "path": "20"
    },
    "7017": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "CALL",
      "path": "20"
    },
    "7018": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7019": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "POP",
      "path": "20"
    },
    "7020": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "POP",
      "path": "20"
    },
    "7021": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "POP",
      "path": "20"
    },
    "7022": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "POP",
      "path": "20"
    },
    "7023": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7024": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7025": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7026": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B7F"
    },
    "7029": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7030": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7031": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7033": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7034": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "7035": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7036": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7038": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7039": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12446,
        12520
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7040": {
      "op": "POP"
    },
    "7041": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12552
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 83,
      "value": "0xE"
    },
    "7043": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12552
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7044": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12572,
        12591
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "7046": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12572,
        12591
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7053": {
      "op": "SHL"
    },
    "7054": {
      "op": "SUB"
    },
    "7055": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12552
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7056": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12552
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7057": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12552
      ],
      "op": "AND",
      "path": "20"
    },
    "7058": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12552
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7059": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8FC"
    },
    "7062": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7063": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12595,
        12603
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7064": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12595,
        12603
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7065": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12563,
        12591
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BA2"
    },
    "7068": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12563,
        12591
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7069": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12563,
        12569
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7070": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12563,
        12591
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21F5"
    },
    "7073": {
      "fn": "CardinalToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        12563,
        12591
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7074": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12563,
        12591
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7075": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12562,
        12603
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BAC"
    },
    "7078": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12562,
        12603
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7079": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12562,
        12603
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7080": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12562,
        12603
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2214"
    },
    "7083": {
      "fn": "CardinalToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        12562,
        12603
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7084": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12562,
        12603
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7085": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7087": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7088": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7089": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7090": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7091": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7092": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "MUL",
      "path": "20"
    },
    "7093": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7094": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7096": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7097": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7098": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7099": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7100": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "DUP9",
      "path": "20"
    },
    "7101": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "DUP9",
      "path": "20"
    },
    "7102": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "CALL",
      "path": "20"
    },
    "7103": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7104": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "POP",
      "path": "20"
    },
    "7105": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "POP",
      "path": "20"
    },
    "7106": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "POP",
      "path": "20"
    },
    "7107": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "POP",
      "path": "20"
    },
    "7108": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7109": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7110": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7111": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x139A"
    },
    "7114": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7115": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7116": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7118": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7119": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "7120": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7121": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7123": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12530,
        12604
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7124": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7131": {
      "op": "SHL"
    },
    "7132": {
      "op": "SUB"
    },
    "7133": {
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 84
    },
    "7134": {
      "branch": 129,
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "AND",
      "path": "2"
    },
    "7135": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2A"
    },
    "7138": {
      "branch": 129,
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7139": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7141": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7148": {
      "op": "SHL"
    },
    "7149": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7150": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7153": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7155": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7156": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "ADD",
      "path": "2"
    },
    "7157": {
      "op": "MSTORE"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7160": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7162": {
      "op": "DUP3"
    },
    "7163": {
      "op": "ADD"
    },
    "7164": {
      "op": "MSTORE"
    },
    "7165": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "7198": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7200": {
      "op": "DUP3"
    },
    "7201": {
      "op": "ADD"
    },
    "7202": {
      "op": "MSTORE"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7205": {
      "op": "ADD"
    },
    "7206": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C9"
    },
    "7209": {
      "op": "JUMP"
    },
    "7210": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7211": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8648
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 85
    },
    "7212": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7214": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7216": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7217": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7218": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7219": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C3C"
    },
    "7222": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7223": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7224": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2236"
    },
    "7227": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7228": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7229": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7230": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7231": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7232": {
      "op": "POP"
    },
    "7233": {
      "op": "POP"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7240": {
      "op": "SHL"
    },
    "7241": {
      "op": "SUB"
    },
    "7242": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 86
    },
    "7243": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "AND",
      "path": "2"
    },
    "7244": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7246": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7247": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7248": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7249": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7251": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7252": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7253": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7254": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7256": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7257": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7258": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7259": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7260": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7261": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7262": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7263": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C69"
    },
    "7266": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7267": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7268": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7269": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2236"
    },
    "7272": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7273": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7274": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7275": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7276": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7277": {
      "op": "POP"
    },
    "7278": {
      "op": "POP"
    },
    "7279": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 87,
      "value": "0x40"
    },
    "7281": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7282": {
      "op": "DUP2"
    },
    "7283": {
      "op": "DUP2"
    },
    "7284": {
      "op": "MSTORE"
    },
    "7285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7291": {
      "op": "SHL"
    },
    "7292": {
      "op": "SUB"
    },
    "7293": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7294": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "AND",
      "path": "2"
    },
    "7295": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7296": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7298": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7299": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7332": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7335": {
      "op": "ADD"
    },
    "7336": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7338": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7339": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7340": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7341": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SUB",
      "path": "2"
    },
    "7342": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7343": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7344": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "POP",
      "path": "20"
    },
    "7345": {
      "fn": "CardinalToken.mint",
      "offset": [
        16761,
        16939
      ],
      "op": "POP",
      "path": "20"
    },
    "7346": {
      "fn": "CardinalToken.mint",
      "jump": "o",
      "offset": [
        16761,
        16939
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7347": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7348": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "7350": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7351": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7358": {
      "op": "SHL"
    },
    "7359": {
      "op": "SUB"
    },
    "7360": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 88
    },
    "7361": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7362": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7369": {
      "op": "SHL"
    },
    "7370": {
      "op": "SUB"
    },
    "7371": {
      "op": "NOT"
    },
    "7372": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7373": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "7374": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7375": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "7376": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7377": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7378": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7379": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 89,
      "value": "0x40"
    },
    "7381": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7382": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7383": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "7384": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7385": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7386": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7387": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7388": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "7421": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7422": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7424": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7425": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "7426": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "7427": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "7428": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7429": {
      "fn": "ERC20._burn",
      "offset": [
        9124,
        9700
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7436": {
      "op": "SHL"
    },
    "7437": {
      "op": "SUB"
    },
    "7438": {
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 90
    },
    "7439": {
      "branch": 130,
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "AND",
      "path": "2"
    },
    "7440": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D65"
    },
    "7443": {
      "branch": 130,
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7444": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7446": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7447": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7451": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7453": {
      "op": "SHL"
    },
    "7454": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7455": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7458": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7460": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7461": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "ADD",
      "path": "2"
    },
    "7462": {
      "op": "MSTORE"
    },
    "7463": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7465": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7467": {
      "op": "DUP3"
    },
    "7468": {
      "op": "ADD"
    },
    "7469": {
      "op": "MSTORE"
    },
    "7470": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7505": {
      "op": "DUP3"
    },
    "7506": {
      "op": "ADD"
    },
    "7507": {
      "op": "MSTORE"
    },
    "7508": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "7510": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7512": {
      "op": "SHL"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7515": {
      "op": "DUP3"
    },
    "7516": {
      "op": "ADD"
    },
    "7517": {
      "op": "MSTORE"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7520": {
      "op": "ADD"
    },
    "7521": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C9"
    },
    "7524": {
      "op": "JUMP"
    },
    "7525": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7532": {
      "op": "SHL"
    },
    "7533": {
      "op": "SUB"
    },
    "7534": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7535": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "AND",
      "path": "2"
    },
    "7536": {
      "fn": "ERC20._burn",
      "offset": [
        9337,
        9359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7538": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7539": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7540": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7541": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7543": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7544": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7545": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7546": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7548": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7549": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7550": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7551": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 91
    },
    "7552": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7553": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "LT",
      "path": "2"
    },
    "7554": {
      "branch": 131,
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7555": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DD9"
    },
    "7558": {
      "branch": 131,
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7559": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7561": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7568": {
      "op": "SHL"
    },
    "7569": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7570": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7573": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7575": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7576": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "ADD",
      "path": "2"
    },
    "7577": {
      "op": "MSTORE"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7580": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7582": {
      "op": "DUP3"
    },
    "7583": {
      "op": "ADD"
    },
    "7584": {
      "op": "MSTORE"
    },
    "7585": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "7618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7620": {
      "op": "DUP3"
    },
    "7621": {
      "op": "ADD"
    },
    "7622": {
      "op": "MSTORE"
    },
    "7623": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "7626": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7628": {
      "op": "SHL"
    },
    "7629": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7631": {
      "op": "DUP3"
    },
    "7632": {
      "op": "ADD"
    },
    "7633": {
      "op": "MSTORE"
    },
    "7634": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7636": {
      "op": "ADD"
    },
    "7637": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C9"
    },
    "7640": {
      "op": "JUMP"
    },
    "7641": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7648": {
      "op": "SHL"
    },
    "7649": {
      "op": "SUB"
    },
    "7650": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 92
    },
    "7651": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "AND",
      "path": "2"
    },
    "7652": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7654": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7655": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7656": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7657": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7659": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7660": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7661": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7662": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7664": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7665": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7666": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7667": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7668": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "SUB",
      "path": "2"
    },
    "7669": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7670": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7671": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9571
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 93,
      "value": "0x2"
    },
    "7673": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7674": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7675": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7676": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7677": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7678": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E08"
    },
    "7681": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7682": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7683": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7684": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224E"
    },
    "7687": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7688": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7689": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7690": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7691": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7692": {
      "op": "POP"
    },
    "7693": {
      "op": "POP"
    },
    "7694": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 94,
      "value": "0x40"
    },
    "7696": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7697": {
      "op": "DUP3"
    },
    "7698": {
      "op": "DUP2"
    },
    "7699": {
      "op": "MSTORE"
    },
    "7700": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7702": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7709": {
      "op": "SHL"
    },
    "7710": {
      "op": "SUB"
    },
    "7711": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7712": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "AND",
      "path": "2"
    },
    "7713": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7714": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7747": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7750": {
      "op": "ADD"
    },
    "7751": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7753": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7754": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7755": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7756": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SUB",
      "path": "2"
    },
    "7757": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7758": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7759": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13391,
        13765
      ],
      "op": "POP",
      "path": "20"
    },
    "7760": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "POP",
      "path": "20"
    },
    "7761": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        13298,
        13765
      ],
      "op": "POP",
      "path": "20"
    },
    "7762": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "o",
      "offset": [
        13298,
        13765
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7763": {
      "op": "JUMPDEST"
    },
    "7764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7768": {
      "op": "DUP1"
    },
    "7769": {
      "op": "DUP4"
    },
    "7770": {
      "op": "MSTORE"
    },
    "7771": {
      "op": "DUP4"
    },
    "7772": {
      "op": "MLOAD"
    },
    "7773": {
      "op": "DUP1"
    },
    "7774": {
      "op": "DUP3"
    },
    "7775": {
      "op": "DUP6"
    },
    "7776": {
      "op": "ADD"
    },
    "7777": {
      "op": "MSTORE"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7780": {
      "op": "JUMPDEST"
    },
    "7781": {
      "op": "DUP2"
    },
    "7782": {
      "op": "DUP2"
    },
    "7783": {
      "op": "LT"
    },
    "7784": {
      "op": "ISZERO"
    },
    "7785": {
      "op": "PUSH2",
      "value": "0x1E80"
    },
    "7788": {
      "op": "JUMPI"
    },
    "7789": {
      "op": "DUP6"
    },
    "7790": {
      "op": "DUP2"
    },
    "7791": {
      "op": "ADD"
    },
    "7792": {
      "op": "DUP4"
    },
    "7793": {
      "op": "ADD"
    },
    "7794": {
      "op": "MLOAD"
    },
    "7795": {
      "op": "DUP6"
    },
    "7796": {
      "op": "DUP3"
    },
    "7797": {
      "op": "ADD"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7800": {
      "op": "ADD"
    },
    "7801": {
      "op": "MSTORE"
    },
    "7802": {
      "op": "DUP3"
    },
    "7803": {
      "op": "ADD"
    },
    "7804": {
      "op": "PUSH2",
      "value": "0x1E64"
    },
    "7807": {
      "op": "JUMP"
    },
    "7808": {
      "op": "JUMPDEST"
    },
    "7809": {
      "op": "DUP2"
    },
    "7810": {
      "op": "DUP2"
    },
    "7811": {
      "op": "GT"
    },
    "7812": {
      "op": "ISZERO"
    },
    "7813": {
      "op": "PUSH2",
      "value": "0x1E92"
    },
    "7816": {
      "op": "JUMPI"
    },
    "7817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7821": {
      "op": "DUP4"
    },
    "7822": {
      "op": "DUP8"
    },
    "7823": {
      "op": "ADD"
    },
    "7824": {
      "op": "ADD"
    },
    "7825": {
      "op": "MSTORE"
    },
    "7826": {
      "op": "JUMPDEST"
    },
    "7827": {
      "op": "POP"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7830": {
      "op": "ADD"
    },
    "7831": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7833": {
      "op": "NOT"
    },
    "7834": {
      "op": "AND"
    },
    "7835": {
      "op": "SWAP3"
    },
    "7836": {
      "op": "SWAP1"
    },
    "7837": {
      "op": "SWAP3"
    },
    "7838": {
      "op": "ADD"
    },
    "7839": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7841": {
      "op": "ADD"
    },
    "7842": {
      "op": "SWAP4"
    },
    "7843": {
      "op": "SWAP3"
    },
    "7844": {
      "op": "POP"
    },
    "7845": {
      "op": "POP"
    },
    "7846": {
      "op": "POP"
    },
    "7847": {
      "jump": "o",
      "op": "JUMP"
    },
    "7848": {
      "op": "JUMPDEST"
    },
    "7849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7855": {
      "op": "SHL"
    },
    "7856": {
      "op": "SUB"
    },
    "7857": {
      "op": "DUP2"
    },
    "7858": {
      "op": "AND"
    },
    "7859": {
      "op": "DUP2"
    },
    "7860": {
      "op": "EQ"
    },
    "7861": {
      "op": "PUSH2",
      "value": "0xECD"
    },
    "7864": {
      "op": "JUMPI"
    },
    "7865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7867": {
      "op": "DUP1"
    },
    "7868": {
      "op": "REVERT"
    },
    "7869": {
      "op": "JUMPDEST"
    },
    "7870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7872": {
      "op": "DUP1"
    },
    "7873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7875": {
      "op": "DUP4"
    },
    "7876": {
      "op": "DUP6"
    },
    "7877": {
      "op": "SUB"
    },
    "7878": {
      "op": "SLT"
    },
    "7879": {
      "op": "ISZERO"
    },
    "7880": {
      "op": "PUSH2",
      "value": "0x1ED0"
    },
    "7883": {
      "op": "JUMPI"
    },
    "7884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7886": {
      "op": "DUP1"
    },
    "7887": {
      "op": "REVERT"
    },
    "7888": {
      "op": "JUMPDEST"
    },
    "7889": {
      "op": "DUP3"
    },
    "7890": {
      "op": "CALLDATALOAD"
    },
    "7891": {
      "op": "PUSH2",
      "value": "0x1EDB"
    },
    "7894": {
      "op": "DUP2"
    },
    "7895": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "7898": {
      "jump": "i",
      "op": "JUMP"
    },
    "7899": {
      "op": "JUMPDEST"
    },
    "7900": {
      "op": "SWAP5"
    },
    "7901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7903": {
      "op": "SWAP4"
    },
    "7904": {
      "op": "SWAP1"
    },
    "7905": {
      "op": "SWAP4"
    },
    "7906": {
      "op": "ADD"
    },
    "7907": {
      "op": "CALLDATALOAD"
    },
    "7908": {
      "op": "SWAP4"
    },
    "7909": {
      "op": "POP"
    },
    "7910": {
      "op": "POP"
    },
    "7911": {
      "op": "POP"
    },
    "7912": {
      "jump": "o",
      "op": "JUMP"
    },
    "7913": {
      "op": "JUMPDEST"
    },
    "7914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7916": {
      "op": "DUP1"
    },
    "7917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7919": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7921": {
      "op": "DUP5"
    },
    "7922": {
      "op": "DUP7"
    },
    "7923": {
      "op": "SUB"
    },
    "7924": {
      "op": "SLT"
    },
    "7925": {
      "op": "ISZERO"
    },
    "7926": {
      "op": "PUSH2",
      "value": "0x1EFE"
    },
    "7929": {
      "op": "JUMPI"
    },
    "7930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7932": {
      "op": "DUP1"
    },
    "7933": {
      "op": "REVERT"
    },
    "7934": {
      "op": "JUMPDEST"
    },
    "7935": {
      "op": "DUP4"
    },
    "7936": {
      "op": "CALLDATALOAD"
    },
    "7937": {
      "op": "PUSH2",
      "value": "0x1F09"
    },
    "7940": {
      "op": "DUP2"
    },
    "7941": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "7944": {
      "jump": "i",
      "op": "JUMP"
    },
    "7945": {
      "op": "JUMPDEST"
    },
    "7946": {
      "op": "SWAP3"
    },
    "7947": {
      "op": "POP"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7950": {
      "op": "DUP5"
    },
    "7951": {
      "op": "ADD"
    },
    "7952": {
      "op": "CALLDATALOAD"
    },
    "7953": {
      "op": "PUSH2",
      "value": "0x1F19"
    },
    "7956": {
      "op": "DUP2"
    },
    "7957": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "7960": {
      "jump": "i",
      "op": "JUMP"
    },
    "7961": {
      "op": "JUMPDEST"
    },
    "7962": {
      "op": "SWAP3"
    },
    "7963": {
      "op": "SWAP6"
    },
    "7964": {
      "op": "SWAP3"
    },
    "7965": {
      "op": "SWAP5"
    },
    "7966": {
      "op": "POP"
    },
    "7967": {
      "op": "POP"
    },
    "7968": {
      "op": "POP"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7971": {
      "op": "SWAP2"
    },
    "7972": {
      "op": "SWAP1"
    },
    "7973": {
      "op": "SWAP2"
    },
    "7974": {
      "op": "ADD"
    },
    "7975": {
      "op": "CALLDATALOAD"
    },
    "7976": {
      "op": "SWAP1"
    },
    "7977": {
      "jump": "o",
      "op": "JUMP"
    },
    "7978": {
      "op": "JUMPDEST"
    },
    "7979": {
      "op": "DUP1"
    },
    "7980": {
      "op": "CALLDATALOAD"
    },
    "7981": {
      "op": "DUP1"
    },
    "7982": {
      "op": "ISZERO"
    },
    "7983": {
      "op": "ISZERO"
    },
    "7984": {
      "op": "DUP2"
    },
    "7985": {
      "op": "EQ"
    },
    "7986": {
      "op": "PUSH2",
      "value": "0x1F3A"
    },
    "7989": {
      "op": "JUMPI"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7992": {
      "op": "DUP1"
    },
    "7993": {
      "op": "REVERT"
    },
    "7994": {
      "op": "JUMPDEST"
    },
    "7995": {
      "op": "SWAP2"
    },
    "7996": {
      "op": "SWAP1"
    },
    "7997": {
      "op": "POP"
    },
    "7998": {
      "jump": "o",
      "op": "JUMP"
    },
    "7999": {
      "op": "JUMPDEST"
    },
    "8000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8002": {
      "op": "DUP1"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8005": {
      "op": "DUP4"
    },
    "8006": {
      "op": "DUP6"
    },
    "8007": {
      "op": "SUB"
    },
    "8008": {
      "op": "SLT"
    },
    "8009": {
      "op": "ISZERO"
    },
    "8010": {
      "op": "PUSH2",
      "value": "0x1F52"
    },
    "8013": {
      "op": "JUMPI"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8016": {
      "op": "DUP1"
    },
    "8017": {
      "op": "REVERT"
    },
    "8018": {
      "op": "JUMPDEST"
    },
    "8019": {
      "op": "DUP3"
    },
    "8020": {
      "op": "CALLDATALOAD"
    },
    "8021": {
      "op": "PUSH2",
      "value": "0x1F5D"
    },
    "8024": {
      "op": "DUP2"
    },
    "8025": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "8028": {
      "jump": "i",
      "op": "JUMP"
    },
    "8029": {
      "op": "JUMPDEST"
    },
    "8030": {
      "op": "SWAP2"
    },
    "8031": {
      "op": "POP"
    },
    "8032": {
      "op": "PUSH2",
      "value": "0x1F6B"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8037": {
      "op": "DUP5"
    },
    "8038": {
      "op": "ADD"
    },
    "8039": {
      "op": "PUSH2",
      "value": "0x1F2A"
    },
    "8042": {
      "jump": "i",
      "op": "JUMP"
    },
    "8043": {
      "op": "JUMPDEST"
    },
    "8044": {
      "op": "SWAP1"
    },
    "8045": {
      "op": "POP"
    },
    "8046": {
      "op": "SWAP3"
    },
    "8047": {
      "op": "POP"
    },
    "8048": {
      "op": "SWAP3"
    },
    "8049": {
      "op": "SWAP1"
    },
    "8050": {
      "op": "POP"
    },
    "8051": {
      "jump": "o",
      "op": "JUMP"
    },
    "8052": {
      "op": "JUMPDEST"
    },
    "8053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8057": {
      "op": "DUP3"
    },
    "8058": {
      "op": "DUP5"
    },
    "8059": {
      "op": "SUB"
    },
    "8060": {
      "op": "SLT"
    },
    "8061": {
      "op": "ISZERO"
    },
    "8062": {
      "op": "PUSH2",
      "value": "0x1F86"
    },
    "8065": {
      "op": "JUMPI"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8068": {
      "op": "DUP1"
    },
    "8069": {
      "op": "REVERT"
    },
    "8070": {
      "op": "JUMPDEST"
    },
    "8071": {
      "op": "POP"
    },
    "8072": {
      "op": "CALLDATALOAD"
    },
    "8073": {
      "op": "SWAP2"
    },
    "8074": {
      "op": "SWAP1"
    },
    "8075": {
      "op": "POP"
    },
    "8076": {
      "jump": "o",
      "op": "JUMP"
    },
    "8077": {
      "op": "JUMPDEST"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8082": {
      "op": "DUP3"
    },
    "8083": {
      "op": "DUP5"
    },
    "8084": {
      "op": "SUB"
    },
    "8085": {
      "op": "SLT"
    },
    "8086": {
      "op": "ISZERO"
    },
    "8087": {
      "op": "PUSH2",
      "value": "0x1F9F"
    },
    "8090": {
      "op": "JUMPI"
    },
    "8091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8093": {
      "op": "DUP1"
    },
    "8094": {
      "op": "REVERT"
    },
    "8095": {
      "op": "JUMPDEST"
    },
    "8096": {
      "op": "DUP2"
    },
    "8097": {
      "op": "CALLDATALOAD"
    },
    "8098": {
      "op": "PUSH2",
      "value": "0xBE1"
    },
    "8101": {
      "op": "DUP2"
    },
    "8102": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "8105": {
      "jump": "i",
      "op": "JUMP"
    },
    "8106": {
      "op": "JUMPDEST"
    },
    "8107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8109": {
      "op": "DUP1"
    },
    "8110": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8112": {
      "op": "DUP4"
    },
    "8113": {
      "op": "DUP6"
    },
    "8114": {
      "op": "SUB"
    },
    "8115": {
      "op": "SLT"
    },
    "8116": {
      "op": "ISZERO"
    },
    "8117": {
      "op": "PUSH2",
      "value": "0x1FBD"
    },
    "8120": {
      "op": "JUMPI"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8123": {
      "op": "DUP1"
    },
    "8124": {
      "op": "REVERT"
    },
    "8125": {
      "op": "JUMPDEST"
    },
    "8126": {
      "op": "DUP3"
    },
    "8127": {
      "op": "CALLDATALOAD"
    },
    "8128": {
      "op": "SWAP2"
    },
    "8129": {
      "op": "POP"
    },
    "8130": {
      "op": "PUSH2",
      "value": "0x1F6B"
    },
    "8133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8135": {
      "op": "DUP5"
    },
    "8136": {
      "op": "ADD"
    },
    "8137": {
      "op": "PUSH2",
      "value": "0x1F2A"
    },
    "8140": {
      "jump": "i",
      "op": "JUMP"
    },
    "8141": {
      "op": "JUMPDEST"
    },
    "8142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8144": {
      "op": "DUP1"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8147": {
      "op": "DUP4"
    },
    "8148": {
      "op": "DUP6"
    },
    "8149": {
      "op": "SUB"
    },
    "8150": {
      "op": "SLT"
    },
    "8151": {
      "op": "ISZERO"
    },
    "8152": {
      "op": "PUSH2",
      "value": "0x1FE0"
    },
    "8155": {
      "op": "JUMPI"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8158": {
      "op": "DUP1"
    },
    "8159": {
      "op": "REVERT"
    },
    "8160": {
      "op": "JUMPDEST"
    },
    "8161": {
      "op": "DUP3"
    },
    "8162": {
      "op": "CALLDATALOAD"
    },
    "8163": {
      "op": "PUSH2",
      "value": "0x1FEB"
    },
    "8166": {
      "op": "DUP2"
    },
    "8167": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "8170": {
      "jump": "i",
      "op": "JUMP"
    },
    "8171": {
      "op": "JUMPDEST"
    },
    "8172": {
      "op": "SWAP2"
    },
    "8173": {
      "op": "POP"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8176": {
      "op": "DUP4"
    },
    "8177": {
      "op": "ADD"
    },
    "8178": {
      "op": "CALLDATALOAD"
    },
    "8179": {
      "op": "PUSH2",
      "value": "0x1FFB"
    },
    "8182": {
      "op": "DUP2"
    },
    "8183": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "8186": {
      "jump": "i",
      "op": "JUMP"
    },
    "8187": {
      "op": "JUMPDEST"
    },
    "8188": {
      "op": "DUP1"
    },
    "8189": {
      "op": "SWAP2"
    },
    "8190": {
      "op": "POP"
    },
    "8191": {
      "op": "POP"
    },
    "8192": {
      "op": "SWAP3"
    },
    "8193": {
      "op": "POP"
    },
    "8194": {
      "op": "SWAP3"
    },
    "8195": {
      "op": "SWAP1"
    },
    "8196": {
      "op": "POP"
    },
    "8197": {
      "jump": "o",
      "op": "JUMP"
    },
    "8198": {
      "op": "JUMPDEST"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8201": {
      "op": "DUP2"
    },
    "8202": {
      "op": "DUP2"
    },
    "8203": {
      "op": "SHR"
    },
    "8204": {
      "op": "SWAP1"
    },
    "8205": {
      "op": "DUP3"
    },
    "8206": {
      "op": "AND"
    },
    "8207": {
      "op": "DUP1"
    },
    "8208": {
      "op": "PUSH2",
      "value": "0x201A"
    },
    "8211": {
      "op": "JUMPI"
    },
    "8212": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8214": {
      "op": "DUP3"
    },
    "8215": {
      "op": "AND"
    },
    "8216": {
      "op": "SWAP2"
    },
    "8217": {
      "op": "POP"
    },
    "8218": {
      "op": "JUMPDEST"
    },
    "8219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8221": {
      "op": "DUP3"
    },
    "8222": {
      "op": "LT"
    },
    "8223": {
      "op": "DUP2"
    },
    "8224": {
      "op": "EQ"
    },
    "8225": {
      "op": "ISZERO"
    },
    "8226": {
      "op": "PUSH2",
      "value": "0x203B"
    },
    "8229": {
      "op": "JUMPI"
    },
    "8230": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8235": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8237": {
      "op": "SHL"
    },
    "8238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8240": {
      "op": "MSTORE"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8243": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8245": {
      "op": "MSTORE"
    },
    "8246": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8250": {
      "op": "REVERT"
    },
    "8251": {
      "op": "JUMPDEST"
    },
    "8252": {
      "op": "POP"
    },
    "8253": {
      "op": "SWAP2"
    },
    "8254": {
      "op": "SWAP1"
    },
    "8255": {
      "op": "POP"
    },
    "8256": {
      "jump": "o",
      "op": "JUMP"
    },
    "8257": {
      "op": "JUMPDEST"
    },
    "8258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8260": {
      "op": "DUP1"
    },
    "8261": {
      "op": "DUP3"
    },
    "8262": {
      "op": "MSTORE"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "8265": {
      "op": "SWAP1"
    },
    "8266": {
      "op": "DUP3"
    },
    "8267": {
      "op": "ADD"
    },
    "8268": {
      "op": "MSTORE"
    },
    "8269": {
      "op": "PUSH32",
      "value": "0x596F752068617665206265656E20626C61636B6C69737465642066726F6D2074"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8304": {
      "op": "DUP3"
    },
    "8305": {
      "op": "ADD"
    },
    "8306": {
      "op": "MSTORE"
    },
    "8307": {
      "op": "PUSH32",
      "value": "0x726164696E67207468652043617264696E616C20546F6B656E2E20496620796F"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8342": {
      "op": "DUP3"
    },
    "8343": {
      "op": "ADD"
    },
    "8344": {
      "op": "MSTORE"
    },
    "8345": {
      "op": "PUSH32",
      "value": "0x75207468696E6B207468697320697320616E206572726F722C20706C65617365"
    },
    "8378": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8380": {
      "op": "DUP3"
    },
    "8381": {
      "op": "ADD"
    },
    "8382": {
      "op": "MSTORE"
    },
    "8383": {
      "op": "PUSH32",
      "value": "0x20636F6E74616374207468652043617264696E616C20486F757365207465616D"
    },
    "8416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8418": {
      "op": "DUP3"
    },
    "8419": {
      "op": "ADD"
    },
    "8420": {
      "op": "MSTORE"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8423": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "8425": {
      "op": "SHL"
    },
    "8426": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8428": {
      "op": "DUP3"
    },
    "8429": {
      "op": "ADD"
    },
    "8430": {
      "op": "MSTORE"
    },
    "8431": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8433": {
      "op": "ADD"
    },
    "8434": {
      "op": "SWAP1"
    },
    "8435": {
      "jump": "o",
      "op": "JUMP"
    },
    "8436": {
      "op": "JUMPDEST"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8439": {
      "op": "DUP1"
    },
    "8440": {
      "op": "DUP3"
    },
    "8441": {
      "op": "MSTORE"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "8444": {
      "op": "SWAP1"
    },
    "8445": {
      "op": "DUP3"
    },
    "8446": {
      "op": "ADD"
    },
    "8447": {
      "op": "MSTORE"
    },
    "8448": {
      "op": "PUSH32",
      "value": "0x546865206164647265737320796F752061726520747279696E6720746F207365"
    },
    "8481": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8483": {
      "op": "DUP3"
    },
    "8484": {
      "op": "ADD"
    },
    "8485": {
      "op": "MSTORE"
    },
    "8486": {
      "op": "PUSH32",
      "value": "0x6E642043617264696E616C20546F6B656E7320746F20686173206265656E2062"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8521": {
      "op": "DUP3"
    },
    "8522": {
      "op": "ADD"
    },
    "8523": {
      "op": "MSTORE"
    },
    "8524": {
      "op": "PUSH32",
      "value": "0x6C61636B6C69737465642066726F6D2074726164696E67207468652043617264"
    },
    "8557": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8559": {
      "op": "DUP3"
    },
    "8560": {
      "op": "ADD"
    },
    "8561": {
      "op": "MSTORE"
    },
    "8562": {
      "op": "PUSH32",
      "value": "0x696E616C20546F6B656E2E20496620796F75207468696E6B2074686973206973"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8597": {
      "op": "DUP3"
    },
    "8598": {
      "op": "ADD"
    },
    "8599": {
      "op": "MSTORE"
    },
    "8600": {
      "op": "PUSH32",
      "value": "0x20616E206572726F722C20706C6561736520636F6E7461637420746865204361"
    },
    "8633": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8635": {
      "op": "DUP3"
    },
    "8636": {
      "op": "ADD"
    },
    "8637": {
      "op": "MSTORE"
    },
    "8638": {
      "op": "PUSH18",
      "value": "0x393234B730B6102437BAB9B2903A32B0B697"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "8659": {
      "op": "SHL"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8662": {
      "op": "DUP3"
    },
    "8663": {
      "op": "ADD"
    },
    "8664": {
      "op": "MSTORE"
    },
    "8665": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8668": {
      "op": "ADD"
    },
    "8669": {
      "op": "SWAP1"
    },
    "8670": {
      "jump": "o",
      "op": "JUMP"
    },
    "8671": {
      "op": "JUMPDEST"
    },
    "8672": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8677": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8679": {
      "op": "SHL"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8682": {
      "op": "MSTORE"
    },
    "8683": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8687": {
      "op": "MSTORE"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8692": {
      "op": "REVERT"
    },
    "8693": {
      "op": "JUMPDEST"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8696": {
      "op": "DUP2"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8699": {
      "op": "NOT"
    },
    "8700": {
      "op": "DIV"
    },
    "8701": {
      "op": "DUP4"
    },
    "8702": {
      "op": "GT"
    },
    "8703": {
      "op": "DUP3"
    },
    "8704": {
      "op": "ISZERO"
    },
    "8705": {
      "op": "ISZERO"
    },
    "8706": {
      "op": "AND"
    },
    "8707": {
      "op": "ISZERO"
    },
    "8708": {
      "op": "PUSH2",
      "value": "0x220F"
    },
    "8711": {
      "op": "JUMPI"
    },
    "8712": {
      "op": "PUSH2",
      "value": "0x220F"
    },
    "8715": {
      "op": "PUSH2",
      "value": "0x21DF"
    },
    "8718": {
      "jump": "i",
      "op": "JUMP"
    },
    "8719": {
      "op": "JUMPDEST"
    },
    "8720": {
      "op": "POP"
    },
    "8721": {
      "op": "MUL"
    },
    "8722": {
      "op": "SWAP1"
    },
    "8723": {
      "jump": "o",
      "op": "JUMP"
    },
    "8724": {
      "op": "JUMPDEST"
    },
    "8725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8727": {
      "op": "DUP3"
    },
    "8728": {
      "op": "PUSH2",
      "value": "0x2231"
    },
    "8731": {
      "op": "JUMPI"
    },
    "8732": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8737": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8739": {
      "op": "SHL"
    },
    "8740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8742": {
      "op": "MSTORE"
    },
    "8743": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "8745": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8747": {
      "op": "MSTORE"
    },
    "8748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8752": {
      "op": "REVERT"
    },
    "8753": {
      "op": "JUMPDEST"
    },
    "8754": {
      "op": "POP"
    },
    "8755": {
      "op": "DIV"
    },
    "8756": {
      "op": "SWAP1"
    },
    "8757": {
      "jump": "o",
      "op": "JUMP"
    },
    "8758": {
      "op": "JUMPDEST"
    },
    "8759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8761": {
      "op": "DUP3"
    },
    "8762": {
      "op": "NOT"
    },
    "8763": {
      "op": "DUP3"
    },
    "8764": {
      "op": "GT"
    },
    "8765": {
      "op": "ISZERO"
    },
    "8766": {
      "op": "PUSH2",
      "value": "0x2249"
    },
    "8769": {
      "op": "JUMPI"
    },
    "8770": {
      "op": "PUSH2",
      "value": "0x2249"
    },
    "8773": {
      "op": "PUSH2",
      "value": "0x21DF"
    },
    "8776": {
      "jump": "i",
      "op": "JUMP"
    },
    "8777": {
      "op": "JUMPDEST"
    },
    "8778": {
      "op": "POP"
    },
    "8779": {
      "op": "ADD"
    },
    "8780": {
      "op": "SWAP1"
    },
    "8781": {
      "jump": "o",
      "op": "JUMP"
    },
    "8782": {
      "op": "JUMPDEST"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8785": {
      "op": "DUP3"
    },
    "8786": {
      "op": "DUP3"
    },
    "8787": {
      "op": "LT"
    },
    "8788": {
      "op": "ISZERO"
    },
    "8789": {
      "op": "PUSH2",
      "value": "0x2260"
    },
    "8792": {
      "op": "JUMPI"
    },
    "8793": {
      "op": "PUSH2",
      "value": "0x2260"
    },
    "8796": {
      "op": "PUSH2",
      "value": "0x21DF"
    },
    "8799": {
      "jump": "i",
      "op": "JUMP"
    },
    "8800": {
      "op": "JUMPDEST"
    },
    "8801": {
      "op": "POP"
    },
    "8802": {
      "op": "SUB"
    },
    "8803": {
      "op": "SWAP1"
    },
    "8804": {
      "jump": "o",
      "op": "JUMP"
    },
    "8805": {
      "op": "JUMPDEST"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8808": {
      "op": "DUP1"
    },
    "8809": {
      "op": "DUP3"
    },
    "8810": {
      "op": "MSTORE"
    },
    "8811": {
      "op": "DUP2"
    },
    "8812": {
      "op": "DUP2"
    },
    "8813": {
      "op": "ADD"
    },
    "8814": {
      "op": "MSTORE"
    },
    "8815": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "8848": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8850": {
      "op": "DUP3"
    },
    "8851": {
      "op": "ADD"
    },
    "8852": {
      "op": "MSTORE"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8855": {
      "op": "ADD"
    },
    "8856": {
      "op": "SWAP1"
    },
    "8857": {
      "jump": "o",
      "op": "JUMP"
    },
    "8858": {
      "op": "JUMPDEST"
    },
    "8859": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8864": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8866": {
      "op": "SHL"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8869": {
      "op": "MSTORE"
    },
    "8870": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8872": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8874": {
      "op": "MSTORE"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8879": {
      "op": "REVERT"
    },
    "8880": {
      "op": "JUMPDEST"
    },
    "8881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8885": {
      "op": "DUP3"
    },
    "8886": {
      "op": "DUP5"
    },
    "8887": {
      "op": "SUB"
    },
    "8888": {
      "op": "SLT"
    },
    "8889": {
      "op": "ISZERO"
    },
    "8890": {
      "op": "PUSH2",
      "value": "0x22C2"
    },
    "8893": {
      "op": "JUMPI"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8896": {
      "op": "DUP1"
    },
    "8897": {
      "op": "REVERT"
    },
    "8898": {
      "op": "JUMPDEST"
    },
    "8899": {
      "op": "DUP2"
    },
    "8900": {
      "op": "MLOAD"
    },
    "8901": {
      "op": "PUSH2",
      "value": "0xBE1"
    },
    "8904": {
      "op": "DUP2"
    },
    "8905": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "8908": {
      "jump": "i",
      "op": "JUMP"
    },
    "8909": {
      "op": "JUMPDEST"
    },
    "8910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8914": {
      "op": "DUP3"
    },
    "8915": {
      "op": "ADD"
    },
    "8916": {
      "op": "DUP8"
    },
    "8917": {
      "op": "DUP4"
    },
    "8918": {
      "op": "MSTORE"
    },
    "8919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8921": {
      "op": "DUP8"
    },
    "8922": {
      "op": "DUP2"
    },
    "8923": {
      "op": "DUP6"
    },
    "8924": {
      "op": "ADD"
    },
    "8925": {
      "op": "MSTORE"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8928": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8930": {
      "op": "DUP6"
    },
    "8931": {
      "op": "ADD"
    },
    "8932": {
      "op": "MSTORE"
    },
    "8933": {
      "op": "DUP2"
    },
    "8934": {
      "op": "DUP8"
    },
    "8935": {
      "op": "MLOAD"
    },
    "8936": {
      "op": "DUP1"
    },
    "8937": {
      "op": "DUP5"
    },
    "8938": {
      "op": "MSTORE"
    },
    "8939": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8941": {
      "op": "DUP7"
    },
    "8942": {
      "op": "ADD"
    },
    "8943": {
      "op": "SWAP2"
    },
    "8944": {
      "op": "POP"
    },
    "8945": {
      "op": "DUP3"
    },
    "8946": {
      "op": "DUP10"
    },
    "8947": {
      "op": "ADD"
    },
    "8948": {
      "op": "SWAP4"
    },
    "8949": {
      "op": "POP"
    },
    "8950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8952": {
      "op": "JUMPDEST"
    },
    "8953": {
      "op": "DUP2"
    },
    "8954": {
      "op": "DUP2"
    },
    "8955": {
      "op": "LT"
    },
    "8956": {
      "op": "ISZERO"
    },
    "8957": {
      "op": "PUSH2",
      "value": "0x231D"
    },
    "8960": {
      "op": "JUMPI"
    },
    "8961": {
      "op": "DUP5"
    },
    "8962": {
      "op": "MLOAD"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8969": {
      "op": "SHL"
    },
    "8970": {
      "op": "SUB"
    },
    "8971": {
      "op": "AND"
    },
    "8972": {
      "op": "DUP4"
    },
    "8973": {
      "op": "MSTORE"
    },
    "8974": {
      "op": "SWAP4"
    },
    "8975": {
      "op": "DUP4"
    },
    "8976": {
      "op": "ADD"
    },
    "8977": {
      "op": "SWAP4"
    },
    "8978": {
      "op": "SWAP2"
    },
    "8979": {
      "op": "DUP4"
    },
    "8980": {
      "op": "ADD"
    },
    "8981": {
      "op": "SWAP2"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8984": {
      "op": "ADD"
    },
    "8985": {
      "op": "PUSH2",
      "value": "0x22F8"
    },
    "8988": {
      "op": "JUMP"
    },
    "8989": {
      "op": "JUMPDEST"
    },
    "8990": {
      "op": "POP"
    },
    "8991": {
      "op": "POP"
    },
    "8992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8998": {
      "op": "SHL"
    },
    "8999": {
      "op": "SUB"
    },
    "9000": {
      "op": "SWAP7"
    },
    "9001": {
      "op": "SWAP1"
    },
    "9002": {
      "op": "SWAP7"
    },
    "9003": {
      "op": "AND"
    },
    "9004": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9006": {
      "op": "DUP6"
    },
    "9007": {
      "op": "ADD"
    },
    "9008": {
      "op": "MSTORE"
    },
    "9009": {
      "op": "POP"
    },
    "9010": {
      "op": "POP"
    },
    "9011": {
      "op": "POP"
    },
    "9012": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9014": {
      "op": "ADD"
    },
    "9015": {
      "op": "MSTORE"
    },
    "9016": {
      "op": "SWAP4"
    },
    "9017": {
      "op": "SWAP3"
    },
    "9018": {
      "op": "POP"
    },
    "9019": {
      "op": "POP"
    },
    "9020": {
      "op": "POP"
    },
    "9021": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "33fa908d37e20ea7f32ae5c1c31beac7b85037e9",
  "source": "// SPDX-License-Identifier: MIT\n \npragma solidity >=0.8.0 <0.9.0;\n \nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/Uniswap.sol\";\n\n/**\n * @title Cardinal House Token\n * @dev Token contract for the Cardinal House ecosystem currency\n */\ncontract CardinalToken is ERC20, Ownable {\n\n    // Mapping to exclude some contracts from fees. Transfers are excluded from fees if address in this mapping is recipient or sender.\n    mapping (address => bool) public excludedFromFees;\n\n    // Blacklist mapping to prevent addresses from trading if necessary (i.e. flagged for malicious activity).\n    mapping (address => bool) public blacklist;\n\n    // Mapping to determine which addresses can mint Cardinal Tokens for bridging.\n    mapping (address => bool) public minters;\n\n    // Address of the contract for burning Cardinal Tokens.\n    address public burnWalletAddress;\n\n    // Liquidity wallet address used to hold 30% of the Cardinal Tokens for the liquidity pool.\n    // After these tokens are moved to the DEX, this address will no longer be used.\n    address public liquidityWalletAddress;\n\n    // Address of the Cardinal Token presale contract.\n    address public preSaleAddress;\n\n    // Wallet address used for the Cardinal Token member giveaways.\n    address payable public memberGiveawayWalletAddress;\n\n    // Marketing wallet address used for funding marketing.\n    address payable public marketingWalletAddress;\n\n    // Developer wallet address used for funding the team.\n    address payable public developerWalletAddress;\n\n    // The DEX router address for swapping Cardinal Tokens for Matic.\n    address public uniswapRouterAddress;\n\n    // Member giveaway transaction fee - deployed at 2%.\n    uint256 public memberGiveawayFeePercent = 2;\n\n    // Marketing transaction fee - deployed at 2%.\n    uint256 public marketingFeePercent = 2;\n\n    // Developer team transaction fee - deployed at 1%.\n    uint256 public developerFeePercent = 1;\n\n    // DEX router interface.\n    IUniswapV2Router02 private uniswapRouter;\n\n    // Address of the Matic to Cardinal Token pair on the DEX.\n    address public uniswapPair;\n\n    // Determines how many Cardinal Tokens this contract needs before it swaps for Matic to pay fee wallets.\n    uint256 public contractTokenDivisor = 1000;\n\n    // Events to emit when the transaction fees are updated\n    event memberGiveawayTransactionFeeUpdated(uint256 indexed transactionFeeAmount);\n    event marketingTransactionFeeUpdated(uint256 indexed transactionFeeAmount);\n    event developerTransactionFeeUpdated(uint256 indexed transactionFeeAmount);\n\n    // Initial token distribution:\n    // 35% - Pre-sale\n    // 35% - Liquidity pool (6 month lockup period)\n    // 10% - Marketing\n    // 20% - Developer coins (6 month lockup period)\n    constructor(\n        uint256 initialSupply,\n        address _preSaleAddress, \n        address _burnWalletAddress,\n        address _liquidityWalletAddress,\n        address payable _memberGiveawayWalletAddress,\n        address payable _marketingWalletAddress,\n        address payable _developerWalletAddress,\n        address _uniswapRouterAddress) ERC20(\"CardinalToken\", \"CRNL\") {\n            preSaleAddress = _preSaleAddress;\n            memberGiveawayWalletAddress = _memberGiveawayWalletAddress;\n            burnWalletAddress = _burnWalletAddress;\n            liquidityWalletAddress = _liquidityWalletAddress;\n            marketingWalletAddress = _marketingWalletAddress;\n            developerWalletAddress = _developerWalletAddress;\n            uniswapRouterAddress = _uniswapRouterAddress;\n\n            excludedFromFees[memberGiveawayWalletAddress] = true;\n            excludedFromFees[developerWalletAddress] = true;\n            excludedFromFees[marketingWalletAddress] = true;\n            excludedFromFees[liquidityWalletAddress] = true;\n            excludedFromFees[preSaleAddress] = true;\n\n            _mint(preSaleAddress, ((initialSupply) * 35 / 100));\n            _mint(liquidityWalletAddress, ((initialSupply) * 35 / 100));\n            _mint(marketingWalletAddress, initialSupply / 10);\n            _mint(developerWalletAddress, initialSupply / 5);\n\n            IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(uniswapRouterAddress);\n            uniswapRouter = _uniswapV2Router;\n            _approve(address(this), address(uniswapRouter), initialSupply);\n            uniswapPair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\n            IERC20(uniswapPair).approve(address(uniswapRouter), type(uint256).max);\n    }\n\n    /**\n     * @dev Returns the contract address\n     * @return contract address\n     */\n    function getContractAddress() public view returns (address){\n        return address(this);\n    }\n\n    /**\n    * @dev Adds a user to be excluded from fees.\n    * @param user address of the user to be excluded from fees.\n     */\n    function excludeUserFromFees(address user) public onlyOwner {\n        excludedFromFees[user] = true;\n    }\n\n    /**\n    * @dev Gets the current timestamp, used for testing + verification\n    * @return the the timestamp of the current block\n     */\n    function getCurrentTimestamp() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    /**\n    * @dev Removes a user from the fee exclusion.\n    * @param user address of the user than will now have to pay transaction fees.\n     */\n    function includeUsersInFees(address user) public onlyOwner {\n        excludedFromFees[user] = false;\n    }\n\n    /**\n     * @dev Overrides the BEP20 transfer function to include transaction fees.\n     * @param recipient the recipient of the transfer\n     * @param amount the amount to be transfered\n     * @return bool representing if the transfer was successful\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        // Ensure the sender isn't blacklisted.\n        require(!blacklist[_msgSender()], \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\");\n        // Ensure the recipient isn't blacklisted.\n        require(!blacklist[recipient], \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\");\n\n        // Stops investors from owning more than 2% of the total supply from purchasing Cardinal Tokens from the DEX.\n        if (_msgSender() == uniswapPair && !excludedFromFees[_msgSender()] && !excludedFromFees[recipient]) {\n            require((balanceOf(recipient) + amount) < (totalSupply() / 166), \"You can't have more than 2% of the total Cardinal Token supply after a DEX swap.\");\n        }\n\n        // If the sender or recipient is excluded from fees, perform the default transfer.\n        if (excludedFromFees[_msgSender()] || excludedFromFees[recipient]) {\n            _transfer(_msgSender(), recipient, amount);\n            return true;\n        }\n\n        // Member giveaway transaction fee.\n        uint256 memberGiveawayFee = (amount * memberGiveawayFeePercent) / 100;\n        // Marketing team transaction fee.\n        uint256 marketingFee = (amount * marketingFeePercent) / 100;\n        // Developer team transaction fee.\n        uint256 developerFee = (amount * developerFeePercent) / 100;\n\n        // The total fee to send to the contract address (marketing + development).\n        uint256 contractFee = marketingFee + developerFee;\n \n        // Sends the transaction fees to the giveaway wallet and contract address\n        _transfer(_msgSender(), memberGiveawayWalletAddress, memberGiveawayFee);\n        _transfer(_msgSender(), address(this), contractFee);\n\n        uint256 contractCardinalTokenBalance = balanceOf(address(this));\n\n        if (_msgSender() != uniswapPair) {\n            if (contractCardinalTokenBalance > balanceOf(uniswapPair) / contractTokenDivisor) {\n                swapCardinalTokensForMatic(contractCardinalTokenBalance);\n            }\n                \n            uint256 contractMaticBalance = address(this).balance;\n            if (contractMaticBalance > 0) {\n                sendFeesToWallets(address(this).balance);\n            }\n        }\n \n        // Sends [initial amount] - [fees] to the recipient\n        uint256 valueAfterFees = amount - contractFee - memberGiveawayFee;\n        _transfer(_msgSender(), recipient, valueAfterFees);\n        return true;\n    }\n\n    /**\n     * @dev Overrides the BEP20 transferFrom function to include transaction fees.\n     * @param from the address from where the tokens are coming from\n     * @param to the recipient of the transfer\n     * @param amount the amount to be transfered\n     * @return bool representing if the transfer was successful\n     */\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\n        // Ensure the sender isn't blacklisted.\n        require(!blacklist[_msgSender()], \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\");\n        // Ensure the address where the tokens are coming from isn't blacklisted.\n        require(!blacklist[from], \"The address you're trying to spend the Cardinal Tokens from has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\");\n        // Ensure the recipient isn't blacklisted.\n        require(!blacklist[to], \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\");\n\n        // If the from address or to address is excluded from fees, perform the default transferFrom.\n        if (excludedFromFees[from] || excludedFromFees[to] || excludedFromFees[_msgSender()]) {\n            _spendAllowance(from, _msgSender(), amount);\n            _transfer(from, to, amount);\n            return true;\n        }\n\n        // Member giveaway transaction fee.\n        uint256 memberGiveawayFee = (amount * memberGiveawayFeePercent) / 100;\n        // Marketing team transaction fee.\n        uint256 marketingFee = (amount * marketingFeePercent) / 100;\n        // Developer team transaction fee.\n        uint256 developerFee = (amount * developerFeePercent) / 100;\n\n        // The total fee to send to the contract address (marketing + development).\n        uint256 contractFee = marketingFee + developerFee;\n \n        // Sends the transaction fees to the giveaway wallet and contract address\n        _spendAllowance(from, _msgSender(), amount);\n        _transfer(from, memberGiveawayWalletAddress, memberGiveawayFee);\n        _transfer(from, address(this), contractFee);\n\n        uint256 contractCardinalTokenBalance = balanceOf(address(this));\n\n        if (_msgSender() != uniswapPair) {\n            if (contractCardinalTokenBalance > balanceOf(uniswapPair) / contractTokenDivisor) {\n                swapCardinalTokensForMatic(contractCardinalTokenBalance);\n            }\n                \n            uint256 contractMaticBalance = address(this).balance;\n            if (contractMaticBalance > 0) {\n                sendFeesToWallets(address(this).balance);\n            }\n        }\n \n        // Sends [initial amount] - [fees] to the recipient\n        uint256 valueAfterFees = amount - contractFee - memberGiveawayFee;\n        _transfer(from, to, valueAfterFees);\n        return true;\n    }\n\n    /**\n     * @dev Swaps Cardinal Tokens from transaction fees to Matic.\n     * @param amount the amount of Cardinal Tokens to swap\n     */\n    function swapCardinalTokensForMatic(uint256 amount) private {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = uniswapRouter.WETH();\n        _approve(address(this), address(uniswapRouter), amount);\n        uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            amount,\n            0,\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n\n    /**\n     * @dev Sends Matic to transaction fee wallets after Cardinal Token swaps.\n     * @param amount the amount to be transfered\n     */\n    function sendFeesToWallets(uint256 amount) private {\n        uint256 totalFee = marketingFeePercent + developerFeePercent;\n        marketingWalletAddress.transfer((amount * marketingFeePercent) / totalFee);\n        developerWalletAddress.transfer((amount * developerFeePercent) / totalFee);\n    }\n\n    /**\n     * @dev Sends Matic to transaction fee wallets manually as opposed to happening automatically after a certain level of volume\n     */\n    function disperseFeesManually() public onlyOwner {\n        uint256 contractMaticBalance = address(this).balance;\n        sendFeesToWallets(contractMaticBalance);\n    }\n\n    /**\n     * @dev Swaps all Cardinal Tokens in the contract for Matic and then disperses those funds to the transaction fee wallets.\n     * @param amount the amount of Cardinal Tokens in the contract to swap for Matic\n     * @param useAmount boolean to determine if the amount sent in is swapped for Matic or if the entire contract balance is swapped.\n     */\n    function swapCardinalTokensForMaticManually(uint256 amount, bool useAmount) public onlyOwner {\n        if (useAmount) {\n            swapCardinalTokensForMatic(amount);\n        }\n        else {\n            uint256 contractCardinalTokenBalance = balanceOf(address(this));\n            swapCardinalTokensForMatic(contractCardinalTokenBalance);\n        }\n\n        uint256 contractMaticBalance = address(this).balance;\n        sendFeesToWallets(contractMaticBalance);\n    }\n\n    receive() external payable {}\n\n    /**\n     * @dev Sets the value that determines how many Cardinal Tokens need to be in the contract before it's swapped for Matic.\n     * @param newDivisor the new divisor value to determine the swap threshold\n     */\n    function setContractTokenDivisor(uint256 newDivisor) public onlyOwner {\n        contractTokenDivisor = newDivisor;\n    }\n\n    /**\n    * @dev Updates the blacklist mapping for a given address\n    * @param user the address that is being added or removed from the blacklist\n    * @param blacklisted a boolean that determines if the given address is being added or removed from the blacklist\n    */\n    function updateBlackList(address user, bool blacklisted) public onlyOwner {\n        blacklist[user] = blacklisted;\n    }\n\n    /**\n    * @dev Function to update the member giveaway transaction fee - can't be more than 5 percent\n    * @param newMemberGiveawayTransactionFee the new member giveaway transaction fee\n    */\n    function updateMemberGiveawayTransactionFee(uint256 newMemberGiveawayTransactionFee) public onlyOwner {\n        require(newMemberGiveawayTransactionFee <= 5, \"The member giveaway transaction fee can't be more than 5%.\");\n        memberGiveawayFeePercent = newMemberGiveawayTransactionFee;\n        emit memberGiveawayTransactionFeeUpdated(newMemberGiveawayTransactionFee);\n    }\n\n    /**\n    * @dev Function to update the marketing transaction fee - can't be more than 5 percent\n    * @param newMarketingTransactionFee the new marketing transaction fee\n    */\n    function updateMarketingTransactionFee(uint256 newMarketingTransactionFee) public onlyOwner {\n        require(newMarketingTransactionFee <= 5, \"The marketing transaction fee can't be more than 5%.\");\n        marketingFeePercent = newMarketingTransactionFee;\n        emit marketingTransactionFeeUpdated(newMarketingTransactionFee);\n    }\n\n    /**\n    * @dev Function to update the developer transaction fee - can't be more than 5 percent\n    * @param newDeveloperTransactionFee the new developer transaction fee\n    */\n    function updateDeveloperTransactionFee(uint256 newDeveloperTransactionFee) public onlyOwner {\n        require(newDeveloperTransactionFee <= 5, \"The developer transaction fee can't be more than 5%.\");\n        developerFeePercent = newDeveloperTransactionFee;\n        emit developerTransactionFeeUpdated(newDeveloperTransactionFee);\n    }\n\n    /**\n    * @dev Function to add or remove a Cardinal Token minter\n    * @param user the address that will be added or removed as a minter\n    * @param isMinter boolean representing if the address provided will be added or removed as a minter\n    */\n    function updateMinter(address user, bool isMinter) public onlyOwner {\n        minters[user] = isMinter;\n    }\n\n    /**\n    * @dev Minter only function to mint new Cardinal Tokens for bridging\n    * @param user the address that the tokens will be minted to\n    * @param amount the amount of tokens to be minted to the user\n    */\n    function mint(address user, uint256 amount) public {\n        require(minters[_msgSender()], \"You are not authorized to mint Cardinal Tokens.\");\n        _mint(user, amount);\n    }\n\n    /**\n    * @dev Minter only function to burn Cardinal Tokens for bridging and deflation upon service purchases with the Cardinal Token\n    * @param user the address to burn the tokens from\n    * @param amount the amount of tokens to be burned\n    */\n    function burn(address user, uint256 amount) public {\n        require(minters[_msgSender()], \"You are not authorized to burn Cardinal Tokens.\");\n        _burn(user, amount);\n    }\n}",
  "sourceMap": "318:17060:20:-:0;;;1822:1;1780:43;;1918:1;1881:38;;2019:1;1982:38;;2346:4;2308:42;;2848:1788;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:2;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;;2044:13;;1978:113;;;2044:13;;:5;;:13;:::i;:::-;-1:-1:-1;2067:17:2;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;3239:14:20::1;:32:::0;;-1:-1:-1;;;;;;3239:32:20;;::::1;-1:-1:-1::0;;;;;3239:32:20;;::::1;::::0;;;::::1;::::0;;3285:27:::1;:58:::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;3357:17:::1;:38:::0;;;::::1;::::0;;::::1;;::::0;;3409:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;3471:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;3533:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;3595:20:::1;:44:::0;;;;::::1;::::0;;::::1;;::::0;;;-1:-1:-1;3654:45:20;;;:16:::1;:45;::::0;;;;;:52;;-1:-1:-1;;3654:52:20;;::::1;-1:-1:-1::0;3654:52:20;;::::1;::::0;;;3737:22;;;::::1;3720:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;3798:22;;;::::1;3781:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;3859:22;;;::::1;3842:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;3920:14;;;::::1;3903:32:::0;;;;:39;;;;::::1;;::::0;;;3963:14;;3957:51:::1;::::0;3963:14:::1;4003:3;3980:20;3981:13:::0;3998:2:::1;3980:20;:::i;:::-;:26;;;;:::i;:::-;3957:5;:51::i;:::-;4028:22;::::0;4022:59:::1;::::0;-1:-1:-1;;;;;4028:22:20::1;4076:3;4053:20;4054:13:::0;4071:2:::1;4053:20;:::i;4022:59::-;4101:22;::::0;4095:49:::1;::::0;-1:-1:-1;;;;;4101:22:20::1;4125:18;4141:2;4125:13:::0;:18:::1;:::i;4095:49::-;4164:22;::::0;4158:48:::1;::::0;-1:-1:-1;;;;;4164:22:20::1;4188:17;4204:1;4188:13:::0;:17:::1;:::i;4158:48::-;4278:20;::::0;4313:13:::1;:32:::0;;-1:-1:-1;;;;;;4313:32:20::1;-1:-1:-1::0;;;;;4278:20:20;;::::1;4313:32:::0;;::::1;::::0;;4359:62:::1;4376:4;4278:20:::0;4407:13;4359:8:::1;:62::i;:::-;4467:16;-1:-1:-1::0;;;;;4467:24:20::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4449:56:20::1;;4514:4;4521:16;-1:-1:-1::0;;;;;4521:21:20::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4449:96;::::0;-1:-1:-1;;;;;;4449:96:20::1;::::0;;;;;;-1:-1:-1;;;;;2313:15:40;;;4449:96:20::1;::::0;::::1;2295:34:40::0;2365:15;;2345:18;;;2338:43;2230:18;;4449:96:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4435:11;:110:::0;;-1:-1:-1;;;;;;4435:110:20::1;-1:-1:-1::0;;;;;4435:110:20;;::::1;::::0;;::::1;::::0;;;4595:13:::1;::::0;4559:70:::1;::::0;-1:-1:-1;;;4559:70:20;;4595:13;::::1;4559:70;::::0;::::1;2566:51:40::0;-1:-1:-1;;2633:18:40;;;2626:34;4435:110:20;4559:27:::1;::::0;2539:18:40;;4559:70:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3225:1411;2848:1788:::0;;;;;;;;318:17060;;640:96:11;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8415:389:2:-;-1:-1:-1;;;;;8498:21:2;;8490:65;;;;-1:-1:-1;;;8490:65:2;;3155:2:40;8490:65:2;;;3137:21:40;3194:2;3174:18;;;3167:30;3233:33;3213:18;;;3206:61;3284:18;;8490:65:2;;;;;;;;;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:2;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:2;;3592:25:40;;;-1:-1:-1;;;;;8701:37:2;;;8718:1;;8701:37;;3580:2:40;3565:18;8701:37:2;;;;;;;8415:389;;:::o;10123:370::-;-1:-1:-1;;;;;10254:19:2;;10246:68;;;;-1:-1:-1;;;10246:68:2;;3830:2:40;10246:68:2;;;3812:21:40;3869:2;3849:18;;;3842:30;3908:34;3888:18;;;3881:62;-1:-1:-1;;;3959:18:40;;;3952:34;4003:19;;10246:68:2;3628:400:40;10246:68:2;-1:-1:-1;;;;;10332:21:2;;10324:68;;;;-1:-1:-1;;;10324:68:2;;4235:2:40;10324:68:2;;;4217:21:40;4274:2;4254:18;;;4247:30;4313:34;4293:18;;;4286:62;-1:-1:-1;;;4364:18:40;;;4357:32;4406:19;;10324:68:2;4033:398:40;10324:68:2;-1:-1:-1;;;;;10403:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;3592:25:40;;;10454:32:2;;3565:18:40;10454:32:2;;;;;;;10123:370;;;:::o;318:17060:20:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;318:17060:20;;;-1:-1:-1;318:17060:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:40;-1:-1:-1;;;;;89:31:40;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1145::-;307:6;315;323;331;339;347;355;363;416:3;404:9;395:7;391:23;387:33;384:53;;;433:1;430;423:12;384:53;462:9;456:16;446:26;;515:2;504:9;500:18;494:25;528:31;553:5;528:31;:::i;:::-;628:2;613:18;;607:25;578:5;;-1:-1:-1;641:33:40;607:25;641:33;:::i;:::-;745:2;730:18;;724:25;693:7;;-1:-1:-1;758:33:40;724:25;758:33;:::i;:::-;862:3;847:19;;841:26;810:7;;-1:-1:-1;876:33:40;841:26;876:33;:::i;:::-;980:3;965:19;;959:26;928:7;;-1:-1:-1;994:33:40;959:26;994:33;:::i;:::-;1098:3;1083:19;;1077:26;1046:7;;-1:-1:-1;1112:33:40;1077:26;1112:33;:::i;:::-;1216:3;1201:19;;1195:26;1164:7;;-1:-1:-1;1230:33:40;1195:26;1230:33;:::i;:::-;1282:7;1272:17;;;150:1145;;;;;;;;;;;:::o;1300:127::-;1361:10;1356:3;1352:20;1349:1;1342:31;1392:4;1389:1;1382:15;1416:4;1413:1;1406:15;1432:168;1472:7;1538:1;1534;1530:6;1526:14;1523:1;1520:21;1515:1;1508:9;1501:17;1497:45;1494:71;;;1545:18;;:::i;:::-;-1:-1:-1;1585:9:40;;1432:168::o;1605:217::-;1645:1;1671;1661:132;;1715:10;1710:3;1706:20;1703:1;1696:31;1750:4;1747:1;1740:15;1778:4;1775:1;1768:15;1661:132;-1:-1:-1;1807:9:40;;1605:217::o;1827:251::-;1897:6;1950:2;1938:9;1929:7;1925:23;1921:32;1918:52;;;1966:1;1963;1956:12;1918:52;1998:9;1992:16;2017:31;2042:5;2017:31;:::i;:::-;2067:5;1827:251;-1:-1:-1;;;1827:251:40:o;2671:277::-;2738:6;2791:2;2779:9;2770:7;2766:23;2762:32;2759:52;;;2807:1;2804;2797:12;2759:52;2839:9;2833:16;2892:5;2885:13;2878:21;2871:5;2868:32;2858:60;;2914:1;2911;2904:12;3313:128;3353:3;3384:1;3380:6;3377:1;3374:13;3371:39;;;3390:18;;:::i;:::-;-1:-1:-1;3426:9:40;;3313:128::o;4436:380::-;4515:1;4511:12;;;;4558;;;4579:61;;4633:4;4625:6;4621:17;4611:27;;4579:61;4686:2;4678:6;4675:14;4655:18;4652:38;4649:161;;;4732:10;4727:3;4723:20;4720:1;4713:31;4767:4;4764:1;4757:15;4795:4;4792:1;4785:15;4649:161;;4436:380;;;:::o;:::-;318:17060:20;;;;;;",
  "sourcePath": "contracts/CardinalToken.sol",
  "type": "contract"
}